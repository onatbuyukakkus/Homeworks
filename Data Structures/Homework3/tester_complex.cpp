#include <iostream>
#include <vector>
#include "DynamicPriorityQueue.h"
using namespace std;
void case_1(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 190);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(66748)); //3
    caseQueue.updatePriority(74230, 58125);
    caseQueue.updatePriority(22763, 54456);
    caseQueue.updatePriority(92662, 32379);
    caseQueue.insert(23862,12307);
    caseQueue.insert(88288,70488);
    myResult.push_back(caseQueue.getPriority(23862)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(88288, 61699);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(95040,14619);
    caseQueue.insert(36468,93775);
    caseQueue.insert(57432,94265);
    caseQueue.insert(13441,61067);
    caseQueue.insert(60335,36993);
    caseQueue.insert(65252,49149);
    caseQueue.insert(39283,12538);
    myResult.push_back(caseQueue.getPriority(65252)); //7
    caseQueue.insert(44765,45619);
    caseQueue.updatePriority(44765, 83205);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(74556,79989);
    myResult.push_back(caseQueue.getPriority(60335)); //10
    caseQueue.updatePriority(36468, 44449);
    caseQueue.insert(93022,30706);
    myResult.push_back(caseQueue.getPriority(36468)); //11
    myResult.push_back(caseQueue.getPriority(57432)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(36408,14023);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(36468)); //15
    caseQueue.insert(90410,91297);
    caseQueue.insert(77145,62723);
    caseQueue.insert(24530,9374);
    caseQueue.insert(30215,55084);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(90410, 83717);
    caseQueue.insert(44555,1616);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(44765)); //18
    caseQueue.insert(7321,76968);
    caseQueue.updatePriority(74556, 48751);
    caseQueue.insert(41457,76512);
    caseQueue.updatePriority(13441, 92705);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(48907,63742);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(30215, 9917);
    myResult.push_back(caseQueue.getPriority(65252)); //21
    caseQueue.insert(73246,88523);
    caseQueue.updatePriority(57432, 67589);
    caseQueue.insert(73112,50907);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(48907)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(583,86243);
    caseQueue.insert(46010,98948);
    caseQueue.updatePriority(7321, 24304);
    caseQueue.insert(72417,50969);
    caseQueue.insert(27829,83192);
    caseQueue.updatePriority(77145, 96055);
    caseQueue.insert(85759,67324);
    caseQueue.insert(94694,60233);
    caseQueue.insert(68174,13576);
    caseQueue.insert(15747,29204);
    myResult.push_back(caseQueue.getPriority(46010)); //25
    myResult.push_back(caseQueue.getPriority(85759)); //26
    caseQueue.insert(49268,56807);
    caseQueue.updatePriority(73112, 73526);
    caseQueue.insert(10291,73024);
    caseQueue.updatePriority(73246, 90162);
    myResult.push_back(caseQueue.getPriority(57432)); //27
    myResult.push_back(caseQueue.getPriority(85759)); //28
    caseQueue.insert(14371,75419);
    caseQueue.insert(46555,18759);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(15747, 96955);
    caseQueue.insert(76025,52750);
    caseQueue.insert(30480,2339);
    caseQueue.insert(57881,42567);
    myResult.push_back(caseQueue.getPriority(77145)); //31
    caseQueue.updatePriority(90410, 87203);
    myResult.push_back(caseQueue.getPriority(94694)); //32
    caseQueue.insert(2443,22416);
    caseQueue.updatePriority(65252, 44100);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(76025, 6064);
    caseQueue.updatePriority(14371, 66570);
    caseQueue.insert(77469,80856);
    caseQueue.insert(37704,97477);
    caseQueue.insert(59628,62174);
    caseQueue.updatePriority(583, 66458);
    myResult.push_back(caseQueue.getPriority(65252)); //36
    caseQueue.insert(65324,85486);
    caseQueue.updatePriority(76025, 652);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(15430,43480);
    myResult.push_back(caseQueue.getPriority(48907)); //38
    caseQueue.insert(7841,13782);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(77145)); //40
    caseQueue.insert(7676,80835);
    myResult.push_back(caseQueue.getPriority(44765)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(66985,37806);
    caseQueue.updatePriority(49268, 42072);
    myResult.push_back(caseQueue.getPriority(90410)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(90626,79019);
    caseQueue.insert(97515,60065);
    myResult.push_back(caseQueue.getPriority(15430)); //45
    caseQueue.insert(27456,26061);
    myResult.push_back(caseQueue.getPriority(72417)); //46
    myResult.push_back(caseQueue.getPriority(583)); //47
    myResult.push_back(caseQueue.getPriority(65252)); //48
    caseQueue.insert(44078,68641);
    caseQueue.insert(37997,15106);
    myResult.push_back(caseQueue.getPriority(77469)); //49
    caseQueue.insert(24019,16515);
    caseQueue.updatePriority(7676, 3116);
    caseQueue.insert(37799,71755);
    caseQueue.updatePriority(27829, 32583);
    caseQueue.updatePriority(27829, 74624);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(27165,62322);
    caseQueue.insert(70891,45257);
    myResult.push_back(caseQueue.getPriority(65252)); //51
    myResult.push_back(caseQueue.getPriority(94694)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(73246, 72380);
    caseQueue.updatePriority(13441, 55858);
    myResult.push_back(caseQueue.getPriority(59628)); //54
    caseQueue.insert(27063,45657);
    caseQueue.insert(4234,3077);
    caseQueue.insert(53382,40007);
    myResult.push_back(caseQueue.getPriority(85759)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(85759)); //57
    myResult.push_back(caseQueue.getPriority(13441)); //58
    myResult.push_back(caseQueue.getPriority(48907)); //59
    caseQueue.updatePriority(73246, 45704);
    caseQueue.insert(4141,52334);
    caseQueue.insert(68651,49652);
    caseQueue.insert(6146,59512);
    caseQueue.insert(39239,69523);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(57432)); //61
    myResult.push_back(caseQueue.getPriority(85759)); //62
    caseQueue.updatePriority(27829, 30951);
    myResult.push_back(caseQueue.getPriority(85759)); //63
    caseQueue.insert(71177,52311);
    caseQueue.insert(73608,27324);
    caseQueue.updatePriority(44765, 39208);
    caseQueue.insert(44369,42213);
    caseQueue.insert(44339,5437);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(33079,47227);
    caseQueue.insert(1138,38039);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(10291, 3465);
    caseQueue.insert(91286,33617);
    caseQueue.updatePriority(57432, 38773);
    caseQueue.insert(85126,54933);
    myResult.push_back(caseQueue.getPriority(70891)); //68
    caseQueue.updatePriority(72417, 47027);
    caseQueue.insert(61964,76297);
    caseQueue.insert(25451,79024);
    caseQueue.updatePriority(90410, 52418);
    caseQueue.insert(88127,4975);
    caseQueue.insert(80486,23928);
    myResult.push_back(caseQueue.getPriority(88127)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(14371)); //71
    caseQueue.insert(27517,87018);
    caseQueue.insert(44298,5254);
    myResult.push_back(caseQueue.getPriority(73246)); //72
    myResult.push_back(caseQueue.getPriority(71177)); //73
    myResult.push_back(caseQueue.getPriority(85126)); //74
    caseQueue.insert(95460,82982);
    caseQueue.updatePriority(57432, 64937);
    caseQueue.insert(21249,99941);
    caseQueue.insert(53245,83459);
    static const int resultListArray[] = {-1, -1, -1, 12307, 23862, 88288, 49149, 39283, 95040, 36993, 44449, 94265, 93022, 36408, 44449, 24530, 44555, 83205, 60335, 36468, 49149, 30215, 63742, 74556, 98948, 67324, 67589, 67324, 68174, 46555, 96055, 60233, 30480, 2443, 7321, 44100, 76025, 63742, 7841, 96055, 83205, 57881, 87203, 66985, 43480, 50969, 66458, 44100, 80856, 7676, 44100, 60233, 37997, 62174, 67324, 4234, 67324, 55858, 63742, 24019, 67589, 67324, 67324, 44339, 27456, 73608, 27829, 45257, 4975, 10291, 66570, 45704, 52311, 54933}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(1): Basarili" << endl;
    else cout << "Case(1): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_2(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 132);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(97029)); //1
    caseQueue.insert(37374,22396);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(95958, 90436);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(20717, 74727);
    caseQueue.insert(4149,78412);
    caseQueue.insert(15388,96171);
    caseQueue.updatePriority(15388, 89154);
    caseQueue.updatePriority(4149, 39962);
    myResult.push_back(caseQueue.getPriority(4149)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(15388)); //6
    caseQueue.insert(56421,2112);
    caseQueue.insert(45920,17364);
    caseQueue.insert(76389,94423);
    myResult.push_back(caseQueue.getPriority(76389)); //7
    myResult.push_back(caseQueue.getPriority(76389)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(15388, 94670);
    caseQueue.updatePriority(45920, 69075);
    caseQueue.updatePriority(76389, 93035);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(15388, 96231);
    caseQueue.insert(15658,89251);
    caseQueue.insert(42593,24277);
    myResult.push_back(caseQueue.getPriority(15658)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(15388)); //13
    caseQueue.insert(87644,6449);
    caseQueue.insert(82359,57);
    caseQueue.updatePriority(87644, 22121);
    caseQueue.insert(64953,44967);
    myResult.push_back(caseQueue.getPriority(82359)); //14
    caseQueue.insert(21590,93554);
    caseQueue.insert(86002,77709);
    caseQueue.insert(66787,76897);
    caseQueue.insert(61450,89361);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(15388)); //16
    caseQueue.updatePriority(61450, 51139);
    caseQueue.updatePriority(61450, 96265);
    myResult.push_back(caseQueue.getPriority(76389)); //17
    caseQueue.insert(24765,23467);
    caseQueue.insert(64563,81236);
    caseQueue.updatePriority(64953, 96654);
    caseQueue.updatePriority(24765, 65059);
    caseQueue.insert(37214,34716);
    caseQueue.updatePriority(21590, 6918);
    myResult.push_back(caseQueue.getPriority(61450)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(64953, 43273);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(27722,14179);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(8360,58588);
    caseQueue.updatePriority(66787, 38730);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(15388, 18202);
    caseQueue.insert(8506,80325);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(45651,64297);
    caseQueue.insert(8503,26373);
    caseQueue.insert(40230,80077);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(86002)); //26
    myResult.push_back(caseQueue.getPriority(24765)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(71314,38103);
    caseQueue.updatePriority(40230, 34109);
    myResult.push_back(caseQueue.getPriority(15658)); //29
    myResult.push_back(caseQueue.getPriority(24765)); //30
    caseQueue.updatePriority(24765, 67119);
    caseQueue.insert(47507,73326);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(15658, 18092);
    caseQueue.insert(48951,39146);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(61450, 53646);
    caseQueue.insert(56686,38881);
    myResult.push_back(caseQueue.getPriority(56686)); //36
    caseQueue.updatePriority(8506, 78972);
    myResult.push_back(caseQueue.getPriority(47507)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(24765)); //40
    caseQueue.insert(67619,80516);
    caseQueue.insert(77557,15539);
    caseQueue.insert(72323,70826);
    myResult.push_back(caseQueue.getPriority(64563)); //41
    caseQueue.insert(69944,53909);
    caseQueue.insert(696,64863);
    caseQueue.insert(47844,66272);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(86002)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(8506, 40955);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(28266,90071);
    caseQueue.insert(39936,35526);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(26304,62738);
    caseQueue.updatePriority(28266, 18068);
    myResult.push_back(caseQueue.getPriority(76389)); //47
    caseQueue.updatePriority(696, 8823);
    caseQueue.insert(74305,71308);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(40975,65992);
    caseQueue.insert(8418,85783);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(76389, 64575);
    myResult.push_back(caseQueue.getPriority(24765)); //50
    caseQueue.insert(57438,14409);
    caseQueue.updatePriority(86002, 24819);
    caseQueue.insert(21969,93488);
    caseQueue.insert(56245,59414);
    caseQueue.insert(83205,4756);
    myResult.push_back(caseQueue.getPriority(24765)); //51
    caseQueue.insert(72592,2907);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(47844, 44562);
    caseQueue.updatePriority(76389, 59769);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(43483,90248);
    myResult.push_back(caseQueue.getPriority(72323)); //54
    myResult.push_back(caseQueue.getPriority(74305)); //55
    caseQueue.insert(11622,29981);
    caseQueue.updatePriority(8418, 53106);
    static const int resultListArray[] = {-1, 37374, -1, 39962, 4149, 89154, 94423, 94423, 56421, 45920, 89251, 42593, 96231, 57, 82359, 96231, 93035, 96265, 21590, 87644, 37214, 27722, 66787, 15388, 8503, 77709, 65059, 64953, 89251, 65059, 40230, 15658, 71314, 48951, 8360, 38881, 73326, 56686, 61450, 67119, 81236, 77557, 77709, 69944, 8506, 39936, 93035, 696, 28266, 67119, 67119, 72592, 83205, 70826, 71308}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(2): Basarili" << endl;
    else cout << "Case(2): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_3(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 108);

    vector<int> myResult; 
    caseQueue.insert(14934,57076);
    caseQueue.updatePriority(14934, 16422);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(14098,4808);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(16682, 75247);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(44445,69481);
    caseQueue.insert(94894,49161);
    caseQueue.insert(27300,92503);
    myResult.push_back(caseQueue.getPriority(94894)); //5
    caseQueue.insert(90532,44365);
    myResult.push_back(caseQueue.getPriority(90532)); //6
    caseQueue.updatePriority(94894, 59746);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(11090,3877);
    caseQueue.insert(61376,85230);
    caseQueue.updatePriority(44445, 54738);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(27300)); //10
    caseQueue.insert(62852,16901);
    myResult.push_back(caseQueue.getPriority(61376)); //11
    caseQueue.insert(32016,48195);
    myResult.push_back(caseQueue.getPriority(27300)); //12
    myResult.push_back(caseQueue.getPriority(27300)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(14805,82870);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(94503,3584);
    caseQueue.insert(84558,66450);
    caseQueue.insert(90369,44425);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(78920,53647);
    caseQueue.insert(65380,1567);
    caseQueue.insert(88906,24220);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(44445, 37271);
    myResult.push_back(caseQueue.getPriority(61376)); //18
    myResult.push_back(caseQueue.getPriority(27300)); //19
    caseQueue.updatePriority(61376, 90762);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(84558)); //21
    caseQueue.insert(96400,21040);
    caseQueue.insert(45805,23057);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(61376)); //25
    myResult.push_back(caseQueue.getPriority(90369)); //26
    caseQueue.insert(55626,87741);
    myResult.push_back(caseQueue.getPriority(84558)); //27
    myResult.push_back(caseQueue.getPriority(61376)); //28
    caseQueue.insert(30188,12854);
    caseQueue.insert(89754,35096);
    caseQueue.insert(31011,39285);
    myResult.push_back(caseQueue.getPriority(30188)); //29
    caseQueue.insert(70256,35267);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(83009,91937);
    caseQueue.insert(19407,30328);
    myResult.push_back(caseQueue.getPriority(89754)); //31
    caseQueue.insert(49373,60903);
    caseQueue.updatePriority(70256, 98247);
    caseQueue.insert(89933,81889);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(98315,6389);
    myResult.push_back(caseQueue.getPriority(27300)); //33
    caseQueue.updatePriority(89933, 26241);
    caseQueue.updatePriority(61376, 47750);
    caseQueue.insert(48547,86799);
    caseQueue.updatePriority(27300, 6637);
    caseQueue.updatePriority(70256, 83597);
    caseQueue.insert(63358,37299);
    caseQueue.insert(5952,82438);
    caseQueue.insert(25321,98510);
    caseQueue.updatePriority(90369, 2757);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(20180,32433);
    myResult.push_back(caseQueue.getPriority(83009)); //36
    caseQueue.insert(1251,56535);
    caseQueue.insert(94985,80496);
    myResult.push_back(caseQueue.getPriority(83009)); //37
    caseQueue.insert(55849,76440);
    caseQueue.insert(18498,48068);
    caseQueue.updatePriority(83009, 8095);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(90837,99386);
    caseQueue.insert(15587,40912);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(80002,16586);
    caseQueue.insert(37034,76516);
    caseQueue.insert(402,31738);
    caseQueue.insert(44542,23243);
    myResult.push_back(caseQueue.getPriority(1251)); //42
    caseQueue.insert(701,44098);
    caseQueue.insert(11183,92648);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(68691,79031);
    caseQueue.insert(41358,90523);
    caseQueue.updatePriority(94985, 20386);
    caseQueue.insert(45485,75013);
    caseQueue.insert(20733,32848);
    myResult.push_back(caseQueue.deleteMin()); //44
    static const int resultListArray[] = {14934, 14098, -1, -1, 49161, 44365, 90532, 94894, 11090, 92503, 85230, 92503, 92503, 62852, 32016, 94503, 65380, 85230, 92503, 88906, 66450, 96400, 45805, 44445, 90762, 44425, 66450, 90762, 12854, 30188, 35096, 19407, 92503, 90369, 98315, 91937, 91937, 27300, 83009, 89933, 20180, 56535, 80002, 94985}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(3): Basarili" << endl;
    else cout << "Case(3): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_4(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 204);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(14372)); //1
    caseQueue.insert(94653,47649);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(17728)); //3
    myResult.push_back(caseQueue.getPriority(82862)); //4
    myResult.push_back(caseQueue.getPriority(34086)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(94408,16740);
    caseQueue.insert(24561,35549);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(69228,99916);
    caseQueue.insert(80194,76258);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(69228)); //10
    myResult.push_back(caseQueue.getPriority(80194)); //11
    caseQueue.insert(54474,21565);
    caseQueue.updatePriority(54474, 41441);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(2067,20425);
    caseQueue.insert(16309,78371);
    myResult.push_back(caseQueue.getPriority(80194)); //13
    caseQueue.insert(36439,87473);
    myResult.push_back(caseQueue.getPriority(69228)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(69228, 57613);
    caseQueue.updatePriority(69228, 32728);
    caseQueue.insert(88629,27848);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(3462,96929);
    caseQueue.updatePriority(3462, 59723);
    myResult.push_back(caseQueue.getPriority(3462)); //20
    caseQueue.insert(11495,84199);
    caseQueue.updatePriority(69228, 34389);
    caseQueue.insert(44579,68097);
    caseQueue.insert(87041,69684);
    caseQueue.insert(41597,78302);
    caseQueue.updatePriority(44579, 13910);
    caseQueue.updatePriority(11495, 94405);
    myResult.push_back(caseQueue.getPriority(69228)); //21
    myResult.push_back(caseQueue.getPriority(44579)); //22
    caseQueue.insert(70304,11704);
    caseQueue.insert(66893,53342);
    caseQueue.insert(48199,88419);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(4457,79729);
    caseQueue.insert(52865,41840);
    caseQueue.insert(68487,70865);
    caseQueue.insert(35594,67917);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(4457)); //25
    caseQueue.insert(95605,2208);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(11495, 50939);
    caseQueue.updatePriority(66893, 13133);
    caseQueue.insert(7965,23310);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(69228)); //28
    myResult.push_back(caseQueue.getPriority(52865)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(32588,29477);
    caseQueue.insert(16987,23019);
    caseQueue.insert(19290,39719);
    caseQueue.updatePriority(11495, 65672);
    caseQueue.insert(85532,13074);
    caseQueue.insert(61673,95058);
    caseQueue.insert(28891,2199);
    caseQueue.insert(51632,59565);
    myResult.push_back(caseQueue.getPriority(32588)); //31
    myResult.push_back(caseQueue.getPriority(61673)); //32
    myResult.push_back(caseQueue.getPriority(51632)); //33
    caseQueue.updatePriority(68487, 99306);
    caseQueue.updatePriority(3462, 59584);
    caseQueue.updatePriority(87041, 10290);
    caseQueue.insert(58908,73208);
    caseQueue.insert(13462,70877);
    caseQueue.updatePriority(58908, 15366);
    caseQueue.insert(45106,84896);
    caseQueue.insert(38793,60859);
    caseQueue.updatePriority(85532, 14880);
    caseQueue.updatePriority(85532, 97516);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(4457)); //35
    caseQueue.updatePriority(32588, 64820);
    caseQueue.updatePriority(69228, 47316);
    myResult.push_back(caseQueue.getPriority(35594)); //36
    caseQueue.insert(78279,7550);
    caseQueue.updatePriority(78279, 83408);
    myResult.push_back(caseQueue.getPriority(87041)); //37
    caseQueue.insert(81595,72022);
    caseQueue.insert(35545,74009);
    caseQueue.updatePriority(11495, 62438);
    caseQueue.insert(56252,9806);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(3462)); //40
    caseQueue.insert(80830,64189);
    caseQueue.insert(57558,47944);
    myResult.push_back(caseQueue.getPriority(11495)); //41
    caseQueue.updatePriority(16987, 75400);
    caseQueue.insert(70055,89155);
    caseQueue.insert(20419,21015);
    caseQueue.insert(41457,10269);
    caseQueue.updatePriority(38793, 49275);
    caseQueue.insert(5859,76575);
    caseQueue.insert(9931,4797);
    myResult.push_back(caseQueue.getPriority(32588)); //42
    myResult.push_back(caseQueue.getPriority(9931)); //43
    myResult.push_back(caseQueue.getPriority(81595)); //44
    myResult.push_back(caseQueue.getPriority(81595)); //45
    caseQueue.insert(94664,56026);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(53814,4403);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(57374,59733);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(58908)); //49
    caseQueue.insert(10056,60205);
    caseQueue.insert(65590,16049);
    caseQueue.insert(96119,73611);
    caseQueue.insert(11020,74195);
    caseQueue.updatePriority(94664, 83185);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(61379,41413);
    caseQueue.updatePriority(45106, 38378);
    myResult.push_back(caseQueue.getPriority(35594)); //52
    myResult.push_back(caseQueue.getPriority(52865)); //53
    caseQueue.insert(87544,94710);
    caseQueue.insert(35852,14768);
    caseQueue.insert(2978,66546);
    caseQueue.insert(73350,7771);
    myResult.push_back(caseQueue.getPriority(16987)); //54
    caseQueue.insert(87479,22312);
    caseQueue.insert(90980,31394);
    caseQueue.insert(82379,69839);
    caseQueue.insert(86315,16556);
    caseQueue.insert(7759,36763);
    caseQueue.insert(20579,84630);
    caseQueue.insert(29494,70765);
    caseQueue.insert(80433,23644);
    myResult.push_back(caseQueue.getPriority(94664)); //55
    caseQueue.updatePriority(80433, 42468);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(5859, 88233);
    myResult.push_back(caseQueue.getPriority(61673)); //57
    caseQueue.updatePriority(82379, 13575);
    myResult.push_back(caseQueue.getPriority(61379)); //58
    myResult.push_back(caseQueue.getPriority(5859)); //59
    caseQueue.updatePriority(20579, 3512);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(90980, 46852);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(96119, 18612);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(61673, 61790);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(91227,34752);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(87079,91543);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(18667,86716);
    caseQueue.updatePriority(52865, 53856);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(69098,56684);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(19290, 76657);
    myResult.push_back(caseQueue.getPriority(3462)); //69
    myResult.push_back(caseQueue.getPriority(19290)); //70
    caseQueue.insert(58380,44640);
    caseQueue.insert(19185,86025);
    caseQueue.insert(42518,79135);
    caseQueue.updatePriority(2978, 21839);
    caseQueue.insert(90099,84135);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(11495, 40630);
    caseQueue.insert(53546,25709);
    caseQueue.insert(23704,55201);
    caseQueue.insert(94397,26479);
    caseQueue.insert(3988,43588);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(42518, 30029);
    caseQueue.updatePriority(51632, 50758);
    caseQueue.insert(64354,34758);
    caseQueue.insert(65836,24148);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(42125,91874);
    caseQueue.insert(18878,44897);
    caseQueue.insert(71559,32493);
    caseQueue.updatePriority(61673, 19102);
    caseQueue.updatePriority(61379, 53347);
    myResult.push_back(caseQueue.getPriority(19290)); //75
    caseQueue.updatePriority(70055, 41919);
    myResult.push_back(caseQueue.getPriority(57374)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(58380)); //78
    caseQueue.insert(85062,68215);
    myResult.push_back(caseQueue.getPriority(3988)); //79
    myResult.push_back(caseQueue.getPriority(23704)); //80
    static const int resultListArray[] = {-1, 94653, -1, -1, -1, -1, -1, 94408, 24561, 99916, 76258, 54474, 76258, 99916, 2067, 80194, 16309, 36439, 88629, 59723, 34389, 13910, 70304, 44579, 79729, 95605, 66893, 34389, 41840, 7965, 29477, 95058, 59565, 28891, 79729, 67917, 10290, 56252, 87041, 59584, 62438, 64820, 4797, 72022, 72022, 9931, 53814, 41457, 15366, 58908, 65590, 67917, 41840, 75400, 83185, 73350, 95058, 41413, 88233, 20579, 82379, 35852, 86315, 96119, 20419, 87479, 91227, 7759, 59584, 76657, 2978, 45106, 53546, 65836, 76657, 59733, 61673, 44640, 43588, 55201}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(4): Basarili" << endl;
    else cout << "Case(4): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_5(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 192);

    vector<int> myResult; 
    caseQueue.updatePriority(32770, 29670);
    caseQueue.insert(45390,34376);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(89217,51816);
    caseQueue.updatePriority(89217, 45197);
    caseQueue.insert(29435,22240);
    caseQueue.insert(41492,33014);
    myResult.push_back(caseQueue.getPriority(41492)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(41492, 20216);
    caseQueue.insert(64013,12757);
    caseQueue.insert(1587,46397);
    caseQueue.insert(97931,23895);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(37454,50158);
    caseQueue.updatePriority(1587, 87221);
    caseQueue.insert(32621,54412);
    caseQueue.insert(64385,47562);
    caseQueue.insert(93676,80734);
    caseQueue.insert(44625,44190);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(93676)); //8
    myResult.push_back(caseQueue.getPriority(89217)); //9
    caseQueue.updatePriority(1587, 24280);
    caseQueue.updatePriority(1587, 6647);
    caseQueue.insert(93257,69696);
    caseQueue.insert(35731,79665);
    myResult.push_back(caseQueue.getPriority(93676)); //10
    caseQueue.insert(51399,72206);
    caseQueue.updatePriority(37454, 78991);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(4305,46125);
    myResult.push_back(caseQueue.getPriority(35731)); //12
    myResult.push_back(caseQueue.getPriority(64385)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(51399)); //15
    caseQueue.insert(12950,17920);
    caseQueue.updatePriority(12950, 93165);
    caseQueue.updatePriority(35731, 46550);
    myResult.push_back(caseQueue.getPriority(64385)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(80156,48486);
    myResult.push_back(caseQueue.getPriority(51399)); //20
    caseQueue.updatePriority(93676, 74364);
    caseQueue.updatePriority(93257, 35842);
    caseQueue.insert(19132,96560);
    caseQueue.updatePriority(37454, 1835);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(19132)); //22
    myResult.push_back(caseQueue.getPriority(80156)); //23
    myResult.push_back(caseQueue.getPriority(12950)); //24
    caseQueue.updatePriority(80156, 27929);
    myResult.push_back(caseQueue.getPriority(51399)); //25
    caseQueue.insert(97569,53487);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(97569)); //28
    myResult.push_back(caseQueue.getPriority(12950)); //29
    caseQueue.insert(5269,75200);
    myResult.push_back(caseQueue.getPriority(5269)); //30
    caseQueue.insert(57674,62482);
    myResult.push_back(caseQueue.getPriority(93676)); //31
    caseQueue.insert(80677,86611);
    caseQueue.updatePriority(51399, 53165);
    caseQueue.updatePriority(5269, 6543);
    caseQueue.updatePriority(93676, 67562);
    caseQueue.insert(93964,38029);
    caseQueue.updatePriority(32621, 77738);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(97569)); //33
    caseQueue.updatePriority(51399, 84339);
    myResult.push_back(caseQueue.getPriority(19132)); //34
    caseQueue.insert(3013,36573);
    myResult.push_back(caseQueue.getPriority(32621)); //35
    caseQueue.insert(74461,45578);
    caseQueue.updatePriority(32621, 38193);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(12950)); //37
    caseQueue.updatePriority(93964, 99986);
    myResult.push_back(caseQueue.getPriority(19132)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(62104,39719);
    caseQueue.insert(33581,36814);
    myResult.push_back(caseQueue.getPriority(19132)); //40
    myResult.push_back(caseQueue.getPriority(93676)); //41
    caseQueue.insert(14001,13817);
    myResult.push_back(caseQueue.getPriority(12950)); //42
    caseQueue.insert(24037,10114);
    myResult.push_back(caseQueue.getPriority(12950)); //43
    caseQueue.insert(22979,23911);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(22979)); //46
    caseQueue.insert(31347,4262);
    caseQueue.updatePriority(19132, 12451);
    myResult.push_back(caseQueue.getPriority(93964)); //47
    myResult.push_back(caseQueue.getPriority(12950)); //48
    myResult.push_back(caseQueue.getPriority(51399)); //49
    caseQueue.updatePriority(22979, 3658);
    myResult.push_back(caseQueue.getPriority(19132)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(51399, 65697);
    myResult.push_back(caseQueue.getPriority(19132)); //52
    caseQueue.insert(57831,32067);
    caseQueue.insert(21937,90161);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(11587,39029);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(35009,9896);
    caseQueue.insert(35799,89646);
    myResult.push_back(caseQueue.getPriority(93964)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(67971,65524);
    caseQueue.updatePriority(93964, 73072);
    caseQueue.insert(62800,36636);
    caseQueue.updatePriority(74461, 14751);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(67971)); //61
    myResult.push_back(caseQueue.getPriority(12950)); //62
    caseQueue.insert(79673,9041);
    caseQueue.insert(13289,34504);
    caseQueue.updatePriority(62800, 26821);
    myResult.push_back(caseQueue.getPriority(51399)); //63
    myResult.push_back(caseQueue.getPriority(67971)); //64
    caseQueue.insert(64247,76290);
    caseQueue.updatePriority(51399, 465);
    caseQueue.insert(75077,57121);
    caseQueue.insert(90653,74613);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(86237,82466);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(17220,9013);
    caseQueue.insert(4554,13907);
    myResult.push_back(caseQueue.getPriority(67971)); //67
    caseQueue.updatePriority(12950, 4215);
    myResult.push_back(caseQueue.getPriority(64247)); //68
    caseQueue.updatePriority(13289, 74093);
    caseQueue.insert(14010,77076);
    caseQueue.insert(13418,83528);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(94169,78072);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(93676, 82156);
    caseQueue.updatePriority(21937, 91388);
    caseQueue.insert(40765,29257);
    caseQueue.insert(54125,39362);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(1920,64570);
    caseQueue.updatePriority(90653, 22133);
    myResult.push_back(caseQueue.getPriority(14010)); //72
    caseQueue.updatePriority(54125, 69245);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(63759,67478);
    myResult.push_back(caseQueue.getPriority(40765)); //74
    caseQueue.insert(33363,99845);
    caseQueue.updatePriority(14010, 88451);
    caseQueue.insert(3854,63274);
    caseQueue.updatePriority(93676, 88811);
    caseQueue.insert(44859,57814);
    myResult.push_back(caseQueue.getPriority(62800)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(33363, 14116);
    caseQueue.updatePriority(13289, 94910);
    caseQueue.insert(23138,6937);
    caseQueue.updatePriority(62104, 35368);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(19165,47078);
    caseQueue.updatePriority(33363, 98553);
    caseQueue.insert(14688,2274);
    caseQueue.insert(56433,85432);
    caseQueue.updatePriority(1920, 4199);
    caseQueue.insert(23535,46026);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.updatePriority(23535, 17904);
    myResult.push_back(caseQueue.getPriority(93676)); //79
    caseQueue.insert(81544,31301);
    caseQueue.insert(87940,86178);
    caseQueue.insert(61444,9750);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(7862,6460);
    caseQueue.insert(37353,44898);
    myResult.push_back(caseQueue.getPriority(87940)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.getPriority(97569)); //83
    myResult.push_back(caseQueue.getPriority(93676)); //84
    static const int resultListArray[] = {45390, 33014, 29435, 64013, 41492, 97931, 44625, 80734, 45197, 80734, 1587, 79665, 47562, 89217, 72206, 47562, 4305, 35731, 64385, 72206, 37454, 96560, 48486, 93165, 72206, 80156, 93257, 53487, 93165, 75200, 74364, 5269, 53487, 96560, 77738, 3013, 93165, 96560, 32621, 96560, 67562, 93165, 93165, 24037, 14001, 23911, 99986, 93165, 84339, 12451, 22979, 12451, 31347, 19132, 57831, 99986, 35009, 33581, 11587, 74461, 65524, 93165, 65697, 65524, 51399, 79673, 65524, 76290, 12950, 17220, 4554, 77076, 90653, 29257, 26821, 62800, 23138, 14688, 88811, 1920, 86178, 7862, 53487, 88811}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(5): Basarili" << endl;
    else cout << "Case(5): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_6(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 128);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(88604,76531);
    caseQueue.insert(16549,44749);
    caseQueue.insert(21147,59356);
    caseQueue.insert(74869,64251);
    myResult.push_back(caseQueue.getPriority(88604)); //2
    caseQueue.updatePriority(74869, 36923);
    myResult.push_back(caseQueue.getPriority(74869)); //3
    caseQueue.insert(88399,82477);
    caseQueue.updatePriority(88399, 61645);
    caseQueue.insert(87107,1717);
    caseQueue.insert(95767,60305);
    caseQueue.updatePriority(74869, 92206);
    caseQueue.updatePriority(21147, 21600);
    caseQueue.insert(30732,14721);
    myResult.push_back(caseQueue.getPriority(88399)); //4
    caseQueue.updatePriority(21147, 95726);
    caseQueue.insert(20573,98858);
    myResult.push_back(caseQueue.getPriority(30732)); //5
    caseQueue.insert(53201,73766);
    caseQueue.insert(5331,65281);
    myResult.push_back(caseQueue.getPriority(88604)); //6
    caseQueue.updatePriority(88399, 71918);
    caseQueue.insert(57412,82440);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(9051,63788);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(88604)); //9
    myResult.push_back(caseQueue.getPriority(5331)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(54505,19131);
    caseQueue.insert(18460,82041);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(88399)); //13
    myResult.push_back(caseQueue.getPriority(74869)); //14
    caseQueue.insert(78072,7274);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(88604)); //16
    caseQueue.updatePriority(95767, 12764);
    caseQueue.insert(67658,18252);
    caseQueue.insert(46348,30008);
    caseQueue.insert(22132,45272);
    myResult.push_back(caseQueue.getPriority(57412)); //17
    caseQueue.updatePriority(5331, 75695);
    caseQueue.insert(80136,52132);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(18460, 76006);
    caseQueue.updatePriority(57412, 95911);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(22477,46474);
    caseQueue.insert(67410,28240);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(86638,9110);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(31159,88997);
    caseQueue.updatePriority(31159, 4);
    myResult.push_back(caseQueue.getPriority(21147)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(9051)); //25
    caseQueue.insert(19109,74033);
    caseQueue.insert(79506,46219);
    myResult.push_back(caseQueue.getPriority(22132)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(52909,72048);
    caseQueue.insert(20339,65423);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(65987,67789);
    caseQueue.updatePriority(22477, 32629);
    myResult.push_back(caseQueue.getPriority(5331)); //29
    caseQueue.insert(93670,62342);
    caseQueue.insert(46617,21152);
    myResult.push_back(caseQueue.getPriority(57412)); //30
    caseQueue.insert(28319,1019);
    caseQueue.updatePriority(20573, 73533);
    caseQueue.insert(22502,55692);
    caseQueue.insert(81933,22824);
    caseQueue.insert(32213,93651);
    caseQueue.insert(16311,55951);
    caseQueue.updatePriority(5331, 11555);
    caseQueue.insert(6779,9493);
    myResult.push_back(caseQueue.getPriority(88399)); //31
    caseQueue.insert(36442,15852);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(66962,60162);
    caseQueue.insert(35053,64332);
    caseQueue.insert(94812,52570);
    caseQueue.insert(41220,723);
    caseQueue.insert(66080,64020);
    caseQueue.insert(80491,74529);
    caseQueue.insert(58787,6063);
    caseQueue.insert(9757,63126);
    caseQueue.insert(83328,31880);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(56995,55488);
    caseQueue.insert(25800,55041);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(72543,96655);
    caseQueue.updatePriority(6779, 11556);
    caseQueue.updatePriority(19109, 47130);
    caseQueue.insert(53027,88090);
    caseQueue.updatePriority(36442, 56551);
    caseQueue.insert(34481,17543);
    caseQueue.insert(91602,93512);
    caseQueue.updatePriority(25800, 98383);
    caseQueue.insert(34013,71311);
    caseQueue.updatePriority(83328, 18979);
    caseQueue.insert(49593,78916);
    caseQueue.updatePriority(9051, 52620);
    caseQueue.insert(61956,61477);
    myResult.push_back(caseQueue.getPriority(49593)); //35
    caseQueue.insert(30722,18892);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(26913,23155);
    caseQueue.updatePriority(22502, 18940);
    caseQueue.updatePriority(53027, 56415);
    caseQueue.insert(80509,9324);
    myResult.push_back(caseQueue.getPriority(56995)); //37
    caseQueue.insert(51979,70246);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(56995, 74425);
    caseQueue.insert(98842,32918);
    caseQueue.updatePriority(34481, 18594);
    caseQueue.insert(8161,76947);
    caseQueue.updatePriority(6779, 92500);
    myResult.push_back(caseQueue.getPriority(66962)); //39
    caseQueue.updatePriority(22502, 23663);
    myResult.push_back(caseQueue.getPriority(49593)); //40
    static const int resultListArray[] = {-1, 76531, 36923, 61645, 14721, 76531, 87107, 30732, 76531, 65281, 16549, 54505, 71918, 92206, 78072, 76531, 82440, 95767, 67658, 67410, 86638, 95726, 31159, 46348, 63788, 45272, 22132, 79506, 75695, 95911, 71918, 28319, 41220, 58787, 78916, 5331, 55488, 80509, 60162, 78916}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(6): Basarili" << endl;
    else cout << "Case(6): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_7(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 106);

    vector<int> myResult; 
    caseQueue.updatePriority(67096, 67150);
    myResult.push_back(caseQueue.getPriority(44891)); //1
    caseQueue.insert(62902,7706);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(69160,50139);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(16986, 36912);
    caseQueue.insert(53315,28239);
    caseQueue.insert(73083,79764);
    caseQueue.insert(52728,28544);
    myResult.push_back(caseQueue.getPriority(52728)); //4
    caseQueue.insert(22104,1608);
    myResult.push_back(caseQueue.getPriority(53315)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(92050,72423);
    caseQueue.insert(38361,35516);
    caseQueue.insert(53583,39476);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(38361)); //8
    caseQueue.updatePriority(92050, 45594);
    caseQueue.insert(98012,29963);
    caseQueue.insert(93994,85194);
    caseQueue.insert(87992,98787);
    caseQueue.insert(97707,16052);
    myResult.push_back(caseQueue.getPriority(98012)); //9
    myResult.push_back(caseQueue.getPriority(93994)); //10
    caseQueue.updatePriority(73083, 96798);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(87992)); //12
    caseQueue.insert(76327,8881);
    myResult.push_back(caseQueue.getPriority(73083)); //13
    caseQueue.insert(59451,18601);
    caseQueue.insert(95095,15880);
    caseQueue.insert(71737,27515);
    caseQueue.updatePriority(59451, 69310);
    caseQueue.insert(26092,55468);
    caseQueue.insert(39348,21974);
    caseQueue.updatePriority(93994, 97323);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(39348)); //15
    caseQueue.updatePriority(87992, 8607);
    caseQueue.insert(96299,43688);
    caseQueue.insert(55250,19131);
    caseQueue.insert(32921,86599);
    caseQueue.insert(87252,1470);
    caseQueue.insert(92563,65196);
    caseQueue.insert(872,60781);
    myResult.push_back(caseQueue.getPriority(98012)); //16
    caseQueue.updatePriority(55250, 28029);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(36424,49461);
    caseQueue.updatePriority(93994, 59651);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(52728, 97479);
    caseQueue.updatePriority(55250, 96401);
    caseQueue.insert(6030,15119);
    caseQueue.insert(98098,82154);
    caseQueue.insert(57230,48181);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(52872,52136);
    myResult.push_back(caseQueue.getPriority(55250)); //20
    caseQueue.insert(8328,59207);
    caseQueue.insert(94527,30486);
    caseQueue.updatePriority(98098, 92545);
    caseQueue.updatePriority(98098, 71893);
    myResult.push_back(caseQueue.getPriority(59451)); //21
    myResult.push_back(caseQueue.getPriority(36424)); //22
    caseQueue.insert(89218,41162);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(55250)); //24
    caseQueue.insert(35287,68457);
    myResult.push_back(caseQueue.getPriority(71737)); //25
    caseQueue.updatePriority(98098, 985);
    caseQueue.insert(1092,99290);
    myResult.push_back(caseQueue.getPriority(92563)); //26
    caseQueue.updatePriority(1092, 84332);
    caseQueue.updatePriority(52728, 59228);
    caseQueue.updatePriority(93994, 65521);
    caseQueue.updatePriority(98012, 8812);
    caseQueue.insert(4954,10200);
    myResult.push_back(caseQueue.getPriority(26092)); //27
    caseQueue.updatePriority(53583, 41201);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(27988,97178);
    myResult.push_back(caseQueue.getPriority(26092)); //29
    caseQueue.insert(70576,62540);
    caseQueue.insert(19944,67526);
    caseQueue.insert(92070,9120);
    caseQueue.insert(50982,2183);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(17375,70183);
    caseQueue.insert(99700,88175);
    caseQueue.insert(76437,17830);
    caseQueue.updatePriority(36424, 70275);
    caseQueue.insert(71124,65186);
    caseQueue.updatePriority(872, 16231);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(23807,29534);
    caseQueue.updatePriority(92050, 98331);
    caseQueue.insert(50188,62332);
    caseQueue.insert(7493,14137);
    caseQueue.updatePriority(73083, 84027);
    caseQueue.insert(76943,76386);
    caseQueue.insert(69972,98161);
    myResult.push_back(caseQueue.getPriority(92050)); //33
    static const int resultListArray[] = {-1, 62902, 69160, 28544, 28239, 22104, 53315, 35516, 29963, 85194, 97707, 98787, 96798, 76327, 21974, 29963, 87252, 87992, 6030, 96401, 69310, 49461, 95095, 96401, 27515, 65196, 55468, 98098, 55468, 50982, 98012, 92070, 98331}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(7): Basarili" << endl;
    else cout << "Case(7): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_8(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 105);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(88060, 11919);
    caseQueue.insert(55890,53048);
    caseQueue.insert(51014,86626);
    myResult.push_back(caseQueue.getPriority(51014)); //4
    caseQueue.insert(5178,90340);
    caseQueue.insert(91875,96002);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(51014, 62370);
    caseQueue.insert(6684,8072);
    caseQueue.insert(88783,98691);
    caseQueue.insert(29112,86296);
    caseQueue.insert(6278,98408);
    caseQueue.insert(65308,5556);
    caseQueue.updatePriority(65308, 43524);
    caseQueue.updatePriority(51014, 9902);
    caseQueue.insert(70080,40216);
    myResult.push_back(caseQueue.getPriority(51014)); //6
    myResult.push_back(caseQueue.getPriority(29112)); //7
    caseQueue.insert(38795,62430);
    caseQueue.insert(90910,21904);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(29112)); //9
    caseQueue.insert(80304,5299);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(34151,91017);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(6278)); //12
    caseQueue.updatePriority(29112, 37747);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(38795)); //14
    caseQueue.updatePriority(65308, 63196);
    myResult.push_back(caseQueue.getPriority(91875)); //15
    myResult.push_back(caseQueue.getPriority(6278)); //16
    caseQueue.insert(36835,85352);
    caseQueue.updatePriority(70080, 33681);
    myResult.push_back(caseQueue.getPriority(29112)); //17
    myResult.push_back(caseQueue.getPriority(70080)); //18
    myResult.push_back(caseQueue.getPriority(88783)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(65308)); //22
    caseQueue.insert(37087,14595);
    myResult.push_back(caseQueue.getPriority(65308)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(38795)); //25
    myResult.push_back(caseQueue.getPriority(38795)); //26
    caseQueue.insert(20472,21509);
    myResult.push_back(caseQueue.getPriority(91875)); //27
    caseQueue.updatePriority(5178, 7376);
    myResult.push_back(caseQueue.getPriority(5178)); //28
    caseQueue.insert(98051,48800);
    caseQueue.updatePriority(88783, 13935);
    caseQueue.insert(72451,29074);
    myResult.push_back(caseQueue.getPriority(65308)); //29
    caseQueue.insert(57579,2965);
    caseQueue.insert(52789,95906);
    caseQueue.updatePriority(98051, 51662);
    caseQueue.updatePriority(38795, 42921);
    myResult.push_back(caseQueue.getPriority(72451)); //30
    caseQueue.insert(81591,5322);
    caseQueue.updatePriority(38795, 3562);
    caseQueue.updatePriority(91875, 67112);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(65308, 98258);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(72451, 86382);
    caseQueue.insert(32169,9317);
    caseQueue.updatePriority(34151, 6469);
    caseQueue.insert(93566,71684);
    caseQueue.insert(26776,16198);
    caseQueue.updatePriority(65308, 37962);
    caseQueue.insert(38232,94646);
    caseQueue.updatePriority(36835, 28431);
    myResult.push_back(caseQueue.getPriority(98051)); //34
    caseQueue.insert(50017,86517);
    caseQueue.insert(72286,75491);
    caseQueue.insert(92549,70028);
    myResult.push_back(caseQueue.getPriority(98051)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(20472, 97813);
    caseQueue.insert(67755,91569);
    caseQueue.updatePriority(52789, 86567);
    caseQueue.insert(41694,64581);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(20472)); //38
    caseQueue.insert(35886,28959);
    myResult.push_back(caseQueue.getPriority(91875)); //39
    caseQueue.insert(56394,81349);
    caseQueue.updatePriority(52789, 19607);
    caseQueue.insert(26552,4406);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(21186,13964);
    caseQueue.insert(45068,74639);
    caseQueue.insert(2165,35340);
    myResult.push_back(caseQueue.getPriority(93566)); //42
    caseQueue.updatePriority(36835, 66803);
    caseQueue.updatePriority(92549, 17261);
    myResult.push_back(caseQueue.getPriority(98051)); //43
    myResult.push_back(caseQueue.getPriority(41694)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    static const int resultListArray[] = {-1, -1, -1, 86626, 55890, 9902, 86296, 6684, 86296, 80304, 51014, 98408, 90910, 62430, 96002, 98408, 37747, 33681, 98691, 70080, 29112, 63196, 63196, 37087, 62430, 62430, 96002, 7376, 63196, 29074, 57579, 38795, 81591, 51662, 51662, 34151, 5178, 97813, 67112, 26552, 32169, 71684, 51662, 64581, 88783}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(8): Basarili" << endl;
    else cout << "Case(8): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_9(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 200);

    vector<int> myResult; 
    caseQueue.insert(31519,50698);
    myResult.push_back(caseQueue.getPriority(31519)); //1
    caseQueue.updatePriority(31519, 90830);
    myResult.push_back(caseQueue.getPriority(31519)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(22082,92555);
    caseQueue.updatePriority(22082, 43652);
    myResult.push_back(caseQueue.getPriority(22082)); //4
    myResult.push_back(caseQueue.getPriority(22082)); //5
    myResult.push_back(caseQueue.getPriority(22082)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(84504,66630);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(34733)); //11
    caseQueue.insert(7050,93170);
    caseQueue.insert(44717,57755);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(26584,93066);
    caseQueue.insert(84028,52157);
    caseQueue.insert(77217,6571);
    caseQueue.updatePriority(7050, 37497);
    caseQueue.updatePriority(77217, 15382);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(26584)); //14
    caseQueue.insert(65942,47055);
    caseQueue.insert(24632,9804);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(87116,34894);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(15133,30025);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(58818,58885);
    caseQueue.updatePriority(65942, 70145);
    myResult.push_back(caseQueue.getPriority(84028)); //19
    myResult.push_back(caseQueue.getPriority(26584)); //20
    myResult.push_back(caseQueue.getPriority(65942)); //21
    caseQueue.insert(82333,32595);
    caseQueue.updatePriority(65942, 69879);
    caseQueue.insert(15152,67494);
    caseQueue.insert(34307,69200);
    myResult.push_back(caseQueue.getPriority(58818)); //22
    caseQueue.insert(8773,28256);
    caseQueue.insert(76281,83843);
    caseQueue.insert(6719,38207);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(82333)); //24
    caseQueue.updatePriority(76281, 92648);
    myResult.push_back(caseQueue.getPriority(6719)); //25
    myResult.push_back(caseQueue.getPriority(34307)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(6719, 30882);
    caseQueue.updatePriority(34307, 28645);
    caseQueue.insert(12586,5829);
    myResult.push_back(caseQueue.getPriority(65942)); //28
    myResult.push_back(caseQueue.getPriority(15152)); //29
    myResult.push_back(caseQueue.getPriority(12586)); //30
    myResult.push_back(caseQueue.getPriority(65942)); //31
    caseQueue.insert(33639,26825);
    caseQueue.insert(96103,68645);
    myResult.push_back(caseQueue.getPriority(34307)); //32
    caseQueue.insert(22413,46274);
    caseQueue.insert(30979,16892);
    myResult.push_back(caseQueue.getPriority(84028)); //33
    caseQueue.insert(19868,42906);
    caseQueue.updatePriority(6719, 61482);
    myResult.push_back(caseQueue.getPriority(65942)); //34
    caseQueue.updatePriority(15152, 28038);
    caseQueue.updatePriority(65942, 51237);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(46321,26377);
    myResult.push_back(caseQueue.getPriority(84028)); //36
    caseQueue.updatePriority(84028, 16361);
    myResult.push_back(caseQueue.getPriority(30979)); //37
    caseQueue.insert(45903,87823);
    myResult.push_back(caseQueue.getPriority(46321)); //38
    caseQueue.insert(20728,38232);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(15152)); //40
    caseQueue.insert(89173,66394);
    caseQueue.insert(74982,46944);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(44675,50295);
    caseQueue.insert(53591,17991);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(50790,391);
    caseQueue.insert(4615,9026);
    caseQueue.updatePriority(50790, 61733);
    caseQueue.insert(30298,98801);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(44675, 30048);
    myResult.push_back(caseQueue.getPriority(65942)); //44
    caseQueue.insert(78457,93476);
    myResult.push_back(caseQueue.getPriority(34307)); //45
    caseQueue.insert(11216,29097);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(26584)); //47
    caseQueue.updatePriority(11216, 52131);
    caseQueue.insert(5117,74218);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(5117)); //50
    caseQueue.insert(52002,91964);
    caseQueue.updatePriority(65942, 13038);
    myResult.push_back(caseQueue.getPriority(26584)); //51
    myResult.push_back(caseQueue.getPriority(44675)); //52
    myResult.push_back(caseQueue.getPriority(5117)); //53
    myResult.push_back(caseQueue.getPriority(44675)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(34307)); //56
    caseQueue.updatePriority(22413, 29925);
    myResult.push_back(caseQueue.getPriority(89173)); //57
    caseQueue.insert(48671,38896);
    myResult.push_back(caseQueue.getPriority(6719)); //58
    myResult.push_back(caseQueue.getPriority(58818)); //59
    myResult.push_back(caseQueue.getPriority(96103)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(36505,48921);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(45903)); //63
    myResult.push_back(caseQueue.getPriority(26584)); //64
    myResult.push_back(caseQueue.getPriority(26584)); //65
    caseQueue.insert(53066,38768);
    myResult.push_back(caseQueue.getPriority(53066)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(4638,72816);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(26584)); //69
    caseQueue.insert(69444,1507);
    caseQueue.insert(55733,3299);
    myResult.push_back(caseQueue.getPriority(78457)); //70
    caseQueue.insert(94070,95178);
    caseQueue.insert(47521,34911);
    myResult.push_back(caseQueue.getPriority(5117)); //71
    caseQueue.insert(13489,37365);
    myResult.push_back(caseQueue.getPriority(47521)); //72
    caseQueue.insert(51304,82538);
    caseQueue.insert(96992,2615);
    caseQueue.insert(73269,52726);
    caseQueue.insert(10634,76757);
    caseQueue.insert(95383,64697);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(52974,20608);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(29397,32046);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(18633,47207);
    caseQueue.insert(33400,26897);
    caseQueue.updatePriority(73269, 71238);
    myResult.push_back(caseQueue.getPriority(58818)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(87216,98400);
    caseQueue.insert(97753,65802);
    caseQueue.insert(73876,68716);
    myResult.push_back(caseQueue.getPriority(10634)); //80
    caseQueue.insert(82973,29265);
    caseQueue.insert(13056,78468);
    myResult.push_back(caseQueue.getPriority(19868)); //81
    caseQueue.updatePriority(30298, 3310);
    caseQueue.insert(36582,96997);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(63777,76363);
    caseQueue.updatePriority(87216, 89819);
    caseQueue.updatePriority(63777, 37611);
    caseQueue.updatePriority(74982, 49912);
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(90758,5493);
    caseQueue.insert(23265,89070);
    caseQueue.updatePriority(5117, 81058);
    myResult.push_back(caseQueue.getPriority(73876)); //86
    caseQueue.updatePriority(51304, 24753);
    myResult.push_back(caseQueue.deleteMin()); //87
    myResult.push_back(caseQueue.getPriority(63777)); //88
    caseQueue.insert(84333,26545);
    caseQueue.insert(89406,41457);
    caseQueue.insert(53852,41719);
    myResult.push_back(caseQueue.getPriority(87216)); //89
    caseQueue.insert(45051,40145);
    caseQueue.insert(81612,76971);
    caseQueue.insert(36210,28797);
    caseQueue.insert(347,19177);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.updatePriority(95383, 60810);
    caseQueue.updatePriority(26584, 64075);
    caseQueue.updatePriority(6719, 13694);
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(53245,67631);
    caseQueue.updatePriority(45051, 52689);
    caseQueue.insert(32356,64028);
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    myResult.push_back(caseQueue.getPriority(73269)); //94
    caseQueue.updatePriority(73269, 39091);
    myResult.push_back(caseQueue.deleteMin()); //95
    static const int resultListArray[] = {50698, 90830, 31519, 43652, 43652, 43652, 22082, -1, 84504, -1, -1, 44717, 77217, 93066, 24632, 87116, 15133, 7050, 52157, 93066, 70145, 58885, 8773, 32595, 38207, 69200, 82333, 69879, 67494, 5829, 69879, 28645, 52157, 69879, 12586, 52157, 16892, 26377, 84028, 28038, 30979, 53591, 4615, 51237, 28645, 46321, 93066, 33639, 15152, 74218, 93066, 30048, 74218, 30048, 65942, 28645, 66394, 61482, 58885, 68645, 34307, 22413, 87823, 93066, 93066, 38768, 44675, 20728, 93066, 93476, 74218, 34911, 69444, 96992, 55733, 52974, 29397, 58885, 33400, 76757, 42906, 30298, 82973, 47521, 13489, 68716, 90758, 37611, 89819, 347, 6719, 51304, 84333, 71238, 36210}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(9): Basarili" << endl;
    else cout << "Case(9): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_10(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 148);

    vector<int> myResult; 
    caseQueue.insert(23004,82451);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(15070, 77937);
    caseQueue.insert(84551,41948);
    caseQueue.updatePriority(84551, 36577);
    myResult.push_back(caseQueue.getPriority(84551)); //2
    caseQueue.updatePriority(84551, 93850);
    caseQueue.insert(49230,34495);
    caseQueue.insert(95626,2581);
    myResult.push_back(caseQueue.getPriority(84551)); //3
    myResult.push_back(caseQueue.getPriority(49230)); //4
    caseQueue.insert(18706,41839);
    caseQueue.updatePriority(95626, 28113);
    caseQueue.updatePriority(18706, 29178);
    caseQueue.updatePriority(49230, 99708);
    caseQueue.insert(12817,22582);
    caseQueue.updatePriority(84551, 28632);
    caseQueue.insert(17073,12222);
    myResult.push_back(caseQueue.getPriority(84551)); //5
    caseQueue.updatePriority(49230, 77981);
    caseQueue.insert(45513,74494);
    caseQueue.insert(20080,38785);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(18706)); //9
    caseQueue.updatePriority(20080, 13843);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(45513, 49640);
    caseQueue.updatePriority(49230, 41370);
    caseQueue.insert(78220,75760);
    caseQueue.insert(80440,84125);
    caseQueue.insert(59565,89551);
    caseQueue.insert(81894,98836);
    caseQueue.insert(54763,64723);
    myResult.push_back(caseQueue.getPriority(78220)); //11
    caseQueue.updatePriority(18706, 77374);
    myResult.push_back(caseQueue.getPriority(18706)); //12
    myResult.push_back(caseQueue.getPriority(45513)); //13
    caseQueue.updatePriority(18706, 33367);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(89559,87003);
    myResult.push_back(caseQueue.getPriority(89559)); //15
    caseQueue.updatePriority(78220, 94148);
    caseQueue.insert(792,50819);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(82721,36362);
    caseQueue.updatePriority(78220, 48631);
    caseQueue.insert(23228,17670);
    caseQueue.insert(57546,80368);
    caseQueue.insert(83949,41714);
    myResult.push_back(caseQueue.getPriority(792)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(792, 61306);
    myResult.push_back(caseQueue.getPriority(80440)); //21
    myResult.push_back(caseQueue.getPriority(792)); //22
    myResult.push_back(caseQueue.getPriority(82721)); //23
    caseQueue.insert(72784,52782);
    caseQueue.updatePriority(81894, 67374);
    caseQueue.insert(27902,52157);
    caseQueue.insert(37740,53519);
    myResult.push_back(caseQueue.getPriority(57546)); //24
    caseQueue.insert(99055,49697);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(74215,79545);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(87945,23642);
    myResult.push_back(caseQueue.getPriority(57546)); //28
    caseQueue.insert(70289,69919);
    caseQueue.insert(21647,647);
    myResult.push_back(caseQueue.getPriority(792)); //29
    myResult.push_back(caseQueue.getPriority(59565)); //30
    caseQueue.insert(81362,32004);
    caseQueue.updatePriority(70289, 29411);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(9507,63264);
    caseQueue.insert(85132,76511);
    caseQueue.insert(91507,28867);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(85132, 35259);
    myResult.push_back(caseQueue.getPriority(9507)); //34
    myResult.push_back(caseQueue.getPriority(57546)); //35
    caseQueue.insert(41196,54251);
    caseQueue.insert(77090,49935);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(56191,90422);
    myResult.push_back(caseQueue.getPriority(54763)); //37
    myResult.push_back(caseQueue.getPriority(59565)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(16654,72134);
    caseQueue.insert(70630,53767);
    caseQueue.insert(46946,41307);
    caseQueue.insert(34769,56002);
    caseQueue.insert(63574,84423);
    caseQueue.insert(96439,53229);
    caseQueue.insert(12109,71599);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(72784)); //41
    caseQueue.insert(67387,24665);
    caseQueue.insert(53052,90367);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(34769)); //44
    myResult.push_back(caseQueue.getPriority(80440)); //45
    myResult.push_back(caseQueue.getPriority(9507)); //46
    caseQueue.insert(27506,9322);
    caseQueue.updatePriority(81894, 12180);
    caseQueue.updatePriority(81894, 56219);
    caseQueue.updatePriority(37740, 409);
    caseQueue.updatePriority(37740, 34833);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(46064,38819);
    caseQueue.insert(52265,63629);
    myResult.push_back(caseQueue.getPriority(89559)); //48
    myResult.push_back(caseQueue.getPriority(89559)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(41196, 21706);
    caseQueue.insert(27186,44793);
    caseQueue.insert(42238,74327);
    myResult.push_back(caseQueue.getPriority(46064)); //51
    caseQueue.insert(86027,25985);
    caseQueue.insert(64031,14952);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(52265)); //53
    caseQueue.updatePriority(81894, 98602);
    caseQueue.insert(90505,51343);
    caseQueue.updatePriority(72784, 1103);
    myResult.push_back(caseQueue.getPriority(27186)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(80440)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(12194,2133);
    caseQueue.insert(61864,490);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(27902, 74973);
    myResult.push_back(caseQueue.getPriority(56191)); //59
    caseQueue.updatePriority(96439, 160);
    caseQueue.insert(59306,2396);
    caseQueue.insert(71016,88066);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(75656,73577);
    caseQueue.insert(46569,3420);
    myResult.push_back(caseQueue.getPriority(9507)); //61
    caseQueue.insert(10509,11883);
    static const int resultListArray[] = {23004, 36577, 93850, 34495, 28632, 17073, 12817, 95626, 29178, 20080, 75760, 77374, 49640, 84551, 87003, 18706, 49230, 45513, 50819, 23228, 84125, 61306, 36362, 80368, 82721, 83949, 78220, 80368, 61306, 89551, 21647, 87945, 91507, 63264, 80368, 70289, 64723, 89551, 81362, 85132, 52782, 67387, 46946, 56002, 84125, 63264, 27506, 87003, 87003, 37740, 38819, 64031, 63629, 44793, 72784, 84125, 41196, 61864, 90422, 96439, 63264}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(10): Basarili" << endl;
    else cout << "Case(10): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_11(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 245);

    vector<int> myResult; 
    caseQueue.insert(20273,53635);
    caseQueue.updatePriority(20273, 38132);
    caseQueue.insert(45167,65741);
    myResult.push_back(caseQueue.getPriority(20273)); //1
    caseQueue.insert(91633,88345);
    caseQueue.insert(85279,53967);
    myResult.push_back(caseQueue.getPriority(85279)); //2
    caseQueue.insert(67807,17087);
    caseQueue.insert(93960,11615);
    caseQueue.insert(48793,9692);
    caseQueue.insert(80644,19141);
    caseQueue.insert(55142,64962);
    caseQueue.insert(24613,67399);
    caseQueue.updatePriority(24613, 79257);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(93960)); //4
    myResult.push_back(caseQueue.getPriority(93960)); //5
    caseQueue.insert(38846,68080);
    caseQueue.insert(93734,83590);
    myResult.push_back(caseQueue.getPriority(24613)); //6
    caseQueue.insert(95641,96217);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(58151,21848);
    caseQueue.insert(63852,71356);
    myResult.push_back(caseQueue.getPriority(95641)); //8
    myResult.push_back(caseQueue.getPriority(93734)); //9
    caseQueue.updatePriority(24613, 21650);
    myResult.push_back(caseQueue.getPriority(63852)); //10
    myResult.push_back(caseQueue.getPriority(45167)); //11
    caseQueue.insert(12113,14963);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(75353,35553);
    caseQueue.insert(47763,96283);
    caseQueue.insert(30522,86490);
    caseQueue.updatePriority(38846, 2524);
    caseQueue.insert(15797,99942);
    caseQueue.insert(67185,27502);
    myResult.push_back(caseQueue.getPriority(20273)); //13
    caseQueue.insert(68562,4366);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(63852)); //15
    caseQueue.insert(98341,72310);
    caseQueue.insert(98154,38390);
    caseQueue.updatePriority(67807, 23051);
    caseQueue.updatePriority(67807, 84182);
    caseQueue.updatePriority(30522, 17614);
    caseQueue.insert(38555,70360);
    caseQueue.updatePriority(98341, 54494);
    caseQueue.insert(48463,90720);
    caseQueue.insert(82548,61643);
    caseQueue.insert(35891,96015);
    caseQueue.insert(11427,15163);
    caseQueue.insert(83263,54077);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(47211,51388);
    caseQueue.insert(6823,88423);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(98075,22759);
    caseQueue.insert(79227,18156);
    myResult.push_back(caseQueue.getPriority(58151)); //18
    myResult.push_back(caseQueue.getPriority(47211)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(57706,57767);
    myResult.push_back(caseQueue.getPriority(91633)); //21
    caseQueue.updatePriority(91633, 49746);
    caseQueue.updatePriority(67185, 70179);
    caseQueue.insert(9456,52319);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(53827,28424);
    caseQueue.insert(85611,89310);
    caseQueue.insert(56420,95293);
    caseQueue.insert(24122,16294);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(47763)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(58151)); //26
    myResult.push_back(caseQueue.getPriority(95641)); //27
    caseQueue.insert(17098,65596);
    caseQueue.updatePriority(57706, 54694);
    myResult.push_back(caseQueue.getPriority(85279)); //28
    caseQueue.insert(79861,1732);
    caseQueue.updatePriority(45167, 20839);
    caseQueue.insert(91984,13301);
    caseQueue.insert(52289,69491);
    caseQueue.insert(6706,67215);
    caseQueue.insert(28591,97697);
    caseQueue.insert(64385,34375);
    myResult.push_back(caseQueue.getPriority(85279)); //29
    caseQueue.insert(21971,19819);
    caseQueue.insert(33106,33972);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(75250,506);
    caseQueue.insert(59918,69475);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(30792,66013);
    myResult.push_back(caseQueue.getPriority(28591)); //32
    caseQueue.insert(86560,30214);
    caseQueue.insert(27113,27544);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(57706)); //34
    myResult.push_back(caseQueue.getPriority(6706)); //35
    caseQueue.updatePriority(24613, 10652);
    myResult.push_back(caseQueue.getPriority(17098)); //36
    caseQueue.insert(73796,62228);
    caseQueue.insert(1616,74869);
    caseQueue.insert(174,85250);
    myResult.push_back(caseQueue.getPriority(91633)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(59918, 86081);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(57981,14858);
    caseQueue.insert(80238,96210);
    caseQueue.insert(8266,88666);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(59536,32611);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(8266)); //46
    caseQueue.updatePriority(80238, 79914);
    myResult.push_back(caseQueue.getPriority(95641)); //47
    caseQueue.insert(52171,82200);
    caseQueue.insert(37377,43078);
    caseQueue.insert(79991,38693);
    caseQueue.insert(28589,39186);
    caseQueue.insert(9558,46654);
    myResult.push_back(caseQueue.getPriority(30792)); //48
    myResult.push_back(caseQueue.getPriority(35891)); //49
    caseQueue.updatePriority(59536, 37968);
    myResult.push_back(caseQueue.getPriority(30792)); //50
    caseQueue.insert(57246,53466);
    caseQueue.insert(73241,68006);
    caseQueue.insert(18686,51206);
    caseQueue.insert(42191,70842);
    caseQueue.updatePriority(73796, 19439);
    caseQueue.insert(6253,95371);
    caseQueue.insert(4428,44795);
    caseQueue.insert(79416,32769);
    caseQueue.insert(70024,22783);
    caseQueue.insert(90937,47346);
    myResult.push_back(caseQueue.getPriority(57246)); //51
    caseQueue.updatePriority(18686, 34468);
    myResult.push_back(caseQueue.getPriority(83263)); //52
    caseQueue.insert(45113,40333);
    caseQueue.insert(7015,97363);
    caseQueue.insert(78926,25841);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(98684,19795);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(71052,58143);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(6706, 79838);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(98341, 97140);
    myResult.push_back(caseQueue.getPriority(9558)); //59
    myResult.push_back(caseQueue.getPriority(28591)); //60
    caseQueue.insert(61073,75430);
    myResult.push_back(caseQueue.getPriority(67185)); //61
    caseQueue.insert(93536,14637);
    caseQueue.insert(54677,71618);
    myResult.push_back(caseQueue.getPriority(47211)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(39194,78803);
    myResult.push_back(caseQueue.getPriority(35891)); //65
    caseQueue.insert(21699,75160);
    myResult.push_back(caseQueue.getPriority(57706)); //66
    myResult.push_back(caseQueue.getPriority(9558)); //67
    caseQueue.updatePriority(6823, 89153);
    myResult.push_back(caseQueue.getPriority(67807)); //68
    caseQueue.insert(4929,45400);
    myResult.push_back(caseQueue.getPriority(174)); //69
    caseQueue.insert(67061,82733);
    caseQueue.insert(46307,82002);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(44281,84007);
    caseQueue.insert(63148,6305);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(84784,36005);
    caseQueue.updatePriority(47763, 86507);
    caseQueue.insert(77671,21235);
    caseQueue.updatePriority(42191, 4832);
    caseQueue.insert(41011,14363);
    caseQueue.insert(45656,79756);
    caseQueue.insert(68194,14396);
    caseQueue.updatePriority(90937, 1123);
    myResult.push_back(caseQueue.getPriority(98154)); //73
    myResult.push_back(caseQueue.getPriority(6823)); //74
    caseQueue.insert(6471,79259);
    caseQueue.updatePriority(7015, 25630);
    caseQueue.insert(57008,96170);
    myResult.push_back(caseQueue.getPriority(47211)); //75
    caseQueue.updatePriority(6253, 4068);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(50407,29354);
    caseQueue.updatePriority(85611, 34634);
    caseQueue.insert(15468,22790);
    myResult.push_back(caseQueue.getPriority(9558)); //78
    myResult.push_back(caseQueue.getPriority(79991)); //79
    caseQueue.updatePriority(35891, 77651);
    myResult.push_back(caseQueue.getPriority(47763)); //80
    caseQueue.insert(35062,84041);
    myResult.push_back(caseQueue.getPriority(6823)); //81
    caseQueue.updatePriority(47211, 23700);
    caseQueue.updatePriority(21699, 54647);
    caseQueue.insert(58989,57623);
    caseQueue.insert(25916,20301);
    caseQueue.insert(64374,91326);
    caseQueue.insert(98362,93335);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(89987,66202);
    caseQueue.insert(36742,50006);
    myResult.push_back(caseQueue.getPriority(4428)); //83
    myResult.push_back(caseQueue.getPriority(80238)); //84
    caseQueue.insert(424,26084);
    caseQueue.insert(77906,73891);
    caseQueue.insert(65610,48669);
    caseQueue.insert(4436,94024);
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(16107,44022);
    caseQueue.updatePriority(89987, 88228);
    myResult.push_back(caseQueue.getPriority(85611)); //86
    caseQueue.insert(47222,55914);
    myResult.push_back(caseQueue.getPriority(15468)); //87
    caseQueue.insert(71510,57937);
    caseQueue.insert(70986,64419);
    myResult.push_back(caseQueue.getPriority(67061)); //88
    caseQueue.insert(50419,66214);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.updatePriority(4428, 26916);
    myResult.push_back(caseQueue.getPriority(61073)); //90
    myResult.push_back(caseQueue.getPriority(54677)); //91
    myResult.push_back(caseQueue.getPriority(59918)); //92
    caseQueue.insert(54754,48892);
    caseQueue.insert(65121,19374);
    caseQueue.updatePriority(50419, 40794);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(23026,33220);
    caseQueue.updatePriority(4428, 33146);
    static const int resultListArray[] = {38132, 53967, 48793, 11615, 11615, 79257, 93960, 96217, 83590, 71356, 65741, 12113, 38132, 38846, 71356, 68562, 11427, 21848, 51388, 30522, 88345, 79227, 24122, 96283, 80644, 21848, 96217, 53967, 53967, 79861, 75250, 97697, 91984, 54694, 67215, 65596, 49746, 24613, 21971, 45167, 58151, 57981, 98075, 27113, 53827, 88666, 96217, 66013, 96015, 66013, 53466, 54077, 73796, 98684, 70024, 78926, 86560, 79416, 46654, 97697, 70179, 51388, 93536, 33106, 96015, 54694, 46654, 84182, 85250, 64385, 63148, 18686, 38390, 89153, 51388, 90937, 6253, 46654, 38693, 86507, 89153, 42191, 44795, 79914, 41011, 34634, 22790, 82733, 68194, 75430, 71618, 86081, 65121}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(11): Basarili" << endl;
    else cout << "Case(11): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_12(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 155);

    vector<int> myResult; 
    caseQueue.insert(37253,22121);
    caseQueue.insert(11856,51144);
    caseQueue.updatePriority(11856, 23543);
    caseQueue.insert(77068,34931);
    caseQueue.insert(80171,26129);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(77068, 11145);
    caseQueue.insert(85613,20229);
    caseQueue.insert(49119,43238);
    caseQueue.insert(57470,71926);
    caseQueue.insert(29525,14236);
    caseQueue.insert(97356,26942);
    myResult.push_back(caseQueue.getPriority(80171)); //2
    caseQueue.insert(17950,80733);
    myResult.push_back(caseQueue.getPriority(49119)); //3
    caseQueue.insert(4997,26714);
    caseQueue.insert(66659,12253);
    caseQueue.insert(9375,39513);
    myResult.push_back(caseQueue.getPriority(49119)); //4
    myResult.push_back(caseQueue.getPriority(4997)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(80171)); //7
    caseQueue.insert(54520,40070);
    myResult.push_back(caseQueue.getPriority(97356)); //8
    caseQueue.insert(27102,59778);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(5189,10463);
    caseQueue.insert(1877,91558);
    myResult.push_back(caseQueue.getPriority(54520)); //10
    caseQueue.insert(65781,39886);
    myResult.push_back(caseQueue.getPriority(97356)); //11
    caseQueue.insert(58144,98873);
    caseQueue.insert(50610,34060);
    myResult.push_back(caseQueue.getPriority(11856)); //12
    myResult.push_back(caseQueue.getPriority(27102)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(62486,95102);
    caseQueue.insert(43211,75306);
    caseQueue.insert(63520,70754);
    caseQueue.insert(32243,3082);
    myResult.push_back(caseQueue.getPriority(32243)); //15
    caseQueue.updatePriority(9375, 91367);
    caseQueue.insert(57057,42974);
    caseQueue.insert(96720,93781);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(57057, 59085);
    caseQueue.insert(80555,41419);
    caseQueue.updatePriority(63520, 93949);
    caseQueue.insert(80328,28965);
    caseQueue.updatePriority(50610, 3776);
    caseQueue.insert(87372,24318);
    caseQueue.insert(65604,29717);
    caseQueue.insert(9055,11860);
    caseQueue.updatePriority(65781, 58291);
    caseQueue.insert(76361,56947);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(81134,14549);
    myResult.push_back(caseQueue.getPriority(54520)); //19
    myResult.push_back(caseQueue.getPriority(9375)); //20
    caseQueue.insert(22243,91640);
    caseQueue.updatePriority(1877, 58128);
    caseQueue.updatePriority(80555, 25848);
    caseQueue.insert(82738,37394);
    caseQueue.insert(8143,75460);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(23938,23639);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(1877)); //24
    caseQueue.insert(36119,76552);
    caseQueue.insert(79654,1741);
    myResult.push_back(caseQueue.getPriority(65781)); //25
    myResult.push_back(caseQueue.getPriority(23938)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(54567,95005);
    myResult.push_back(caseQueue.getPriority(76361)); //29
    caseQueue.insert(84646,45555);
    caseQueue.updatePriority(9375, 54805);
    caseQueue.insert(72255,38330);
    caseQueue.insert(20534,23232);
    caseQueue.updatePriority(96720, 70726);
    caseQueue.insert(60507,35491);
    caseQueue.insert(98473,48786);
    myResult.push_back(caseQueue.getPriority(72255)); //30
    caseQueue.insert(19518,1945);
    myResult.push_back(caseQueue.getPriority(80555)); //31
    caseQueue.insert(60005,45322);
    caseQueue.insert(87091,69716);
    caseQueue.insert(10697,8955);
    myResult.push_back(caseQueue.getPriority(87091)); //32
    caseQueue.insert(90507,21202);
    caseQueue.insert(46998,57172);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(80555, 67970);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(29899,79227);
    caseQueue.updatePriority(8143, 6549);
    caseQueue.insert(41104,48378);
    caseQueue.insert(22223,25958);
    caseQueue.insert(6299,1287);
    caseQueue.updatePriority(6299, 15420);
    caseQueue.updatePriority(8143, 64015);
    caseQueue.insert(28646,9981);
    caseQueue.insert(89251,78120);
    caseQueue.insert(522,69380);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(50351,2727);
    myResult.push_back(caseQueue.getPriority(84646)); //37
    caseQueue.insert(82325,91692);
    myResult.push_back(caseQueue.getPriority(20534)); //38
    caseQueue.updatePriority(1877, 45704);
    caseQueue.insert(48211,81572);
    caseQueue.insert(43795,37169);
    caseQueue.insert(91256,83175);
    caseQueue.insert(66545,10062);
    caseQueue.updatePriority(4997, 31670);
    myResult.push_back(caseQueue.getPriority(65781)); //39
    myResult.push_back(caseQueue.getPriority(8143)); //40
    myResult.push_back(caseQueue.getPriority(90507)); //41
    myResult.push_back(caseQueue.getPriority(66545)); //42
    myResult.push_back(caseQueue.getPriority(89251)); //43
    caseQueue.insert(95412,95070);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(88470,69943);
    caseQueue.insert(34446,37568);
    caseQueue.updatePriority(88470, 12678);
    caseQueue.updatePriority(62486, 81443);
    caseQueue.insert(67137,76961);
    caseQueue.updatePriority(87091, 59369);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(41104, 57793);
    caseQueue.insert(80038,71074);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(43211)); //47
    myResult.push_back(caseQueue.getPriority(57470)); //48
    caseQueue.insert(80911,44755);
    caseQueue.updatePriority(54520, 27800);
    caseQueue.insert(22874,29764);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(54520, 91985);
    caseQueue.insert(23631,33882);
    caseQueue.insert(73485,87751);
    caseQueue.updatePriority(63520, 89292);
    caseQueue.updatePriority(91256, 49772);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(73485)); //51
    myResult.push_back(caseQueue.getPriority(73485)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(27102)); //54
    caseQueue.updatePriority(36119, 76167);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(78851,235);
    static const int resultListArray[] = {37253, 26129, 43238, 43238, 26714, 77068, 26129, 26942, 66659, 40070, 26942, 23543, 59778, 5189, 3082, 32243, 29525, 50610, 40070, 91367, 9055, 81134, 85613, 58128, 58291, 23639, 79654, 11856, 56947, 38330, 25848, 69716, 19518, 10697, 28646, 6299, 45555, 23232, 58291, 64015, 21202, 10062, 78120, 50351, 66545, 88470, 75306, 71926, 90507, 20534, 87751, 87751, 23938, 59778, 87372}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(12): Basarili" << endl;
    else cout << "Case(12): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_13(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 165);

    vector<int> myResult; 
    caseQueue.updatePriority(37751, 70057);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(84728, 39662);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(64066)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(3881)); //10
    caseQueue.insert(66156,61224);
    myResult.push_back(caseQueue.getPriority(66156)); //11
    myResult.push_back(caseQueue.getPriority(66156)); //12
    caseQueue.updatePriority(66156, 17062);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(31077,69228);
    myResult.push_back(caseQueue.getPriority(31077)); //15
    caseQueue.insert(34004,57096);
    caseQueue.updatePriority(31077, 76265);
    caseQueue.insert(20366,89560);
    caseQueue.insert(90780,38761);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(20366, 96839);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(18405,39403);
    caseQueue.insert(94839,26217);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(31707,44067);
    myResult.push_back(caseQueue.getPriority(18405)); //20
    caseQueue.updatePriority(20366, 69179);
    caseQueue.insert(6164,64366);
    myResult.push_back(caseQueue.getPriority(31707)); //21
    caseQueue.insert(72352,57057);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(6164)); //24
    caseQueue.insert(46889,88433);
    caseQueue.updatePriority(6164, 47037);
    caseQueue.insert(41097,36885);
    myResult.push_back(caseQueue.getPriority(20366)); //25
    myResult.push_back(caseQueue.getPriority(20366)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(72352)); //28
    myResult.push_back(caseQueue.getPriority(46889)); //29
    caseQueue.updatePriority(6164, 29882);
    caseQueue.insert(4419,40857);
    caseQueue.updatePriority(4419, 88366);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(72352)); //31
    caseQueue.updatePriority(46889, 67507);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(4419, 35439);
    myResult.push_back(caseQueue.getPriority(4419)); //34
    caseQueue.insert(32865,96635);
    caseQueue.updatePriority(20366, 35292);
    caseQueue.insert(2900,61935);
    caseQueue.insert(49737,22181);
    caseQueue.insert(41168,9289);
    myResult.push_back(caseQueue.getPriority(4419)); //35
    myResult.push_back(caseQueue.getPriority(41168)); //36
    caseQueue.updatePriority(32865, 36354);
    caseQueue.insert(50418,86329);
    caseQueue.insert(30333,23477);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(20366)); //38
    caseQueue.insert(69392,93868);
    caseQueue.insert(46040,43606);
    myResult.push_back(caseQueue.getPriority(32865)); //39
    caseQueue.updatePriority(69392, 15570);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(2900, 38129);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(67886,90715);
    caseQueue.updatePriority(4419, 50904);
    caseQueue.insert(71792,22190);
    caseQueue.insert(44067,39634);
    myResult.push_back(caseQueue.getPriority(44067)); //42
    caseQueue.insert(1280,8569);
    caseQueue.updatePriority(20366, 25593);
    myResult.push_back(caseQueue.getPriority(67886)); //43
    caseQueue.insert(1091,12372);
    caseQueue.insert(83344,11495);
    caseQueue.insert(56999,48129);
    caseQueue.updatePriority(83344, 59725);
    caseQueue.insert(67650,96875);
    myResult.push_back(caseQueue.getPriority(1280)); //44
    myResult.push_back(caseQueue.getPriority(44067)); //45
    caseQueue.insert(32825,80325);
    caseQueue.updatePriority(44067, 84683);
    myResult.push_back(caseQueue.getPriority(50418)); //46
    caseQueue.insert(13375,45044);
    caseQueue.insert(49692,74977);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(20366, 10234);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(22461,43797);
    caseQueue.updatePriority(32865, 26504);
    caseQueue.insert(32912,10141);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(32865)); //50
    caseQueue.insert(9361,72225);
    caseQueue.insert(96457,95980);
    caseQueue.insert(58650,80018);
    caseQueue.updatePriority(32865, 86583);
    caseQueue.updatePriority(30333, 61929);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(4419, 18759);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(54495,83464);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(64145,29254);
    myResult.push_back(caseQueue.getPriority(67886)); //56
    caseQueue.insert(68218,85959);
    caseQueue.insert(3898,32846);
    caseQueue.insert(66585,66348);
    myResult.push_back(caseQueue.getPriority(30333)); //57
    caseQueue.updatePriority(49692, 29074);
    caseQueue.insert(61991,97515);
    caseQueue.updatePriority(9361, 63019);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(32825)); //59
    caseQueue.insert(7277,86209);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(24663,97778);
    caseQueue.insert(26194,10988);
    caseQueue.insert(57615,33406);
    myResult.push_back(caseQueue.getPriority(57615)); //61
    caseQueue.insert(11347,64916);
    caseQueue.updatePriority(24663, 92672);
    myResult.push_back(caseQueue.getPriority(32865)); //62
    caseQueue.updatePriority(54495, 66422);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(7277)); //65
    myResult.push_back(caseQueue.getPriority(67886)); //66
    caseQueue.insert(74938,94595);
    myResult.push_back(caseQueue.getPriority(22461)); //67
    caseQueue.insert(3621,4516);
    caseQueue.insert(88799,21362);
    myResult.push_back(caseQueue.getPriority(67886)); //68
    caseQueue.insert(8185,10660);
    caseQueue.insert(7635,39015);
    myResult.push_back(caseQueue.getPriority(54495)); //69
    myResult.push_back(caseQueue.getPriority(7277)); //70
    caseQueue.insert(72369,95094);
    caseQueue.insert(5462,76553);
    caseQueue.updatePriority(5462, 62890);
    caseQueue.insert(78225,39853);
    caseQueue.updatePriority(3621, 81827);
    caseQueue.insert(6444,91084);
    caseQueue.updatePriority(88799, 78910);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(15622,62100);
    caseQueue.insert(54188,88100);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(97628,67735);
    caseQueue.updatePriority(30333, 65655);
    caseQueue.insert(8668,58040);
    static const int resultListArray[] = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61224, 61224, 66156, -1, 69228, 90780, 34004, 31077, 94839, 39403, 44067, 18405, 31707, 64366, 69179, 69179, 41097, 57057, 88433, 6164, 57057, 72352, 46889, 35439, 35439, 9289, 41168, 35292, 36354, 69392, 49737, 39634, 90715, 8569, 39634, 86329, 1280, 20366, 32912, 26504, 1091, 4419, 71792, 2900, 46040, 90715, 61929, 49692, 80325, 64145, 33406, 86583, 26194, 3898, 86209, 90715, 43797, 90715, 66422, 86209, 8185, 57615}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(13): Basarili" << endl;
    else cout << "Case(13): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_14(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 204);

    vector<int> myResult; 
    caseQueue.updatePriority(3154, 33406);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(96936,27164);
    caseQueue.updatePriority(96936, 65926);
    myResult.push_back(caseQueue.getPriority(96936)); //2
    myResult.push_back(caseQueue.getPriority(96936)); //3
    myResult.push_back(caseQueue.getPriority(96936)); //4
    caseQueue.insert(90545,66454);
    myResult.push_back(caseQueue.getPriority(90545)); //5
    caseQueue.insert(24519,90021);
    caseQueue.updatePriority(96936, 13556);
    caseQueue.updatePriority(96936, 27600);
    caseQueue.insert(33770,30759);
    caseQueue.insert(92145,47472);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(92145, 38955);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(92145)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(24519)); //10
    caseQueue.insert(62511,48714);
    myResult.push_back(caseQueue.getPriority(90545)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(68016,85087);
    myResult.push_back(caseQueue.getPriority(90545)); //13
    caseQueue.insert(38941,98879);
    myResult.push_back(caseQueue.getPriority(24519)); //14
    myResult.push_back(caseQueue.getPriority(90545)); //15
    caseQueue.updatePriority(90545, 11487);
    caseQueue.insert(11578,23163);
    caseQueue.updatePriority(38941, 32409);
    myResult.push_back(caseQueue.getPriority(24519)); //16
    caseQueue.insert(91642,21300);
    caseQueue.updatePriority(24519, 44453);
    caseQueue.updatePriority(11578, 81021);
    caseQueue.updatePriority(11578, 55052);
    caseQueue.insert(13882,12838);
    caseQueue.insert(97690,11846);
    caseQueue.insert(7779,80568);
    caseQueue.insert(77530,51157);
    caseQueue.insert(25915,68114);
    caseQueue.insert(23888,71168);
    myResult.push_back(caseQueue.getPriority(68016)); //17
    caseQueue.insert(58068,69097);
    myResult.push_back(caseQueue.getPriority(25915)); //18
    myResult.push_back(caseQueue.getPriority(91642)); //19
    caseQueue.updatePriority(90545, 31222);
    myResult.push_back(caseQueue.getPriority(90545)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(58068)); //24
    caseQueue.insert(15946,16702);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(11578)); //26
    caseQueue.insert(8675,67364);
    caseQueue.insert(78180,41610);
    caseQueue.updatePriority(90545, 5927);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(60147,54640);
    myResult.push_back(caseQueue.getPriority(68016)); //28
    caseQueue.insert(32595,29762);
    myResult.push_back(caseQueue.getPriority(24519)); //29
    myResult.push_back(caseQueue.getPriority(58068)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(39578,80347);
    caseQueue.insert(22154,33029);
    myResult.push_back(caseQueue.getPriority(77530)); //32
    caseQueue.insert(41421,21777);
    myResult.push_back(caseQueue.getPriority(7779)); //33
    myResult.push_back(caseQueue.getPriority(24519)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(70954,93165);
    caseQueue.insert(47338,6468);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(97349,7706);
    myResult.push_back(caseQueue.getPriority(8675)); //38
    caseQueue.updatePriority(60147, 42891);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(24519, 80500);
    caseQueue.updatePriority(39578, 49998);
    caseQueue.updatePriority(77530, 58368);
    caseQueue.insert(42983,11364);
    caseQueue.insert(86352,13377);
    myResult.push_back(caseQueue.getPriority(70954)); //40
    myResult.push_back(caseQueue.getPriority(68016)); //41
    caseQueue.insert(36672,76468);
    caseQueue.updatePriority(39578, 88813);
    caseQueue.insert(5784,5738);
    caseQueue.insert(83648,5384);
    caseQueue.insert(75315,55266);
    caseQueue.updatePriority(86352, 79132);
    myResult.push_back(caseQueue.getPriority(58068)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(42983, 40264);
    caseQueue.insert(78688,7345);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(58318,49943);
    myResult.push_back(caseQueue.getPriority(58318)); //45
    myResult.push_back(caseQueue.getPriority(8675)); //46
    caseQueue.insert(90084,82929);
    caseQueue.updatePriority(86352, 65842);
    myResult.push_back(caseQueue.getPriority(68016)); //47
    caseQueue.insert(30688,22634);
    caseQueue.insert(53580,57069);
    myResult.push_back(caseQueue.getPriority(11578)); //48
    myResult.push_back(caseQueue.getPriority(90084)); //49
    myResult.push_back(caseQueue.getPriority(75315)); //50
    caseQueue.insert(47732,87720);
    myResult.push_back(caseQueue.getPriority(90084)); //51
    myResult.push_back(caseQueue.getPriority(7779)); //52
    caseQueue.insert(21086,31204);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(7779, 14350);
    caseQueue.updatePriority(8675, 68261);
    caseQueue.updatePriority(36672, 84955);
    caseQueue.insert(53329,77422);
    caseQueue.insert(82212,65158);
    caseQueue.insert(68316,72235);
    myResult.push_back(caseQueue.getPriority(53329)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(93214,88571);
    caseQueue.insert(57504,13565);
    caseQueue.insert(12203,42069);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(21343,19104);
    caseQueue.updatePriority(70954, 91491);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(91665,46071);
    myResult.push_back(caseQueue.getPriority(22154)); //59
    myResult.push_back(caseQueue.getPriority(60147)); //60
    caseQueue.updatePriority(53329, 37564);
    myResult.push_back(caseQueue.getPriority(22154)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(11578)); //63
    caseQueue.insert(96029,55321);
    caseQueue.insert(57617,31894);
    caseQueue.insert(38917,23477);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(53580, 69057);
    caseQueue.insert(23255,42608);
    caseQueue.insert(92887,72099);
    caseQueue.insert(64049,9305);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(70954)); //67
    caseQueue.updatePriority(39578, 7700);
    caseQueue.insert(53049,62502);
    caseQueue.updatePriority(47732, 93784);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(18345,91045);
    caseQueue.updatePriority(53580, 8740);
    caseQueue.insert(22833,70961);
    caseQueue.insert(70719,72590);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(42983, 14599);
    myResult.push_back(caseQueue.getPriority(78180)); //70
    caseQueue.updatePriority(68316, 87522);
    caseQueue.updatePriority(42983, 82279);
    caseQueue.insert(93435,15476);
    caseQueue.updatePriority(23888, 90003);
    caseQueue.updatePriority(23255, 63859);
    caseQueue.updatePriority(22154, 83553);
    caseQueue.updatePriority(68016, 94040);
    caseQueue.updatePriority(11578, 46621);
    caseQueue.updatePriority(22833, 68663);
    myResult.push_back(caseQueue.getPriority(11578)); //71
    caseQueue.updatePriority(60147, 40065);
    caseQueue.insert(15064,83932);
    caseQueue.insert(62100,25246);
    caseQueue.updatePriority(86352, 80861);
    caseQueue.updatePriority(68316, 59762);
    caseQueue.updatePriority(36672, 56727);
    caseQueue.updatePriority(36672, 59593);
    caseQueue.insert(38932,92985);
    caseQueue.insert(26179,37408);
    myResult.push_back(caseQueue.getPriority(15064)); //72
    caseQueue.insert(63095,56694);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(15588,78809);
    caseQueue.insert(82766,20483);
    caseQueue.insert(7276,78774);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(11578)); //75
    caseQueue.insert(53506,50886);
    myResult.push_back(caseQueue.getPriority(78180)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(71887,54660);
    caseQueue.insert(6702,17238);
    caseQueue.insert(17731,74349);
    myResult.push_back(caseQueue.getPriority(75315)); //79
    caseQueue.insert(64296,52707);
    caseQueue.updatePriority(63095, 52485);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.updatePriority(18345, 56407);
    myResult.push_back(caseQueue.getPriority(15064)); //81
    caseQueue.insert(92767,89112);
    caseQueue.insert(39396,61438);
    caseQueue.insert(96667,61079);
    caseQueue.insert(11135,22677);
    myResult.push_back(caseQueue.getPriority(75315)); //82
    static const int resultListArray[] = {-1, 65926, 65926, 65926, 66454, 96936, 33770, 38955, 92145, 90021, 66454, 62511, 66454, 90021, 66454, 90021, 85087, 68114, 21300, 31222, 97690, 13882, 91642, 69097, 15946, 55052, 90545, 85087, 44453, 69097, 32595, 51157, 80568, 44453, 41421, 38941, 47338, 67364, 97349, 93165, 85087, 69097, 83648, 5784, 49943, 67364, 85087, 55052, 82929, 55266, 82929, 80568, 78688, 30688, 77422, 7779, 57504, 21343, 33029, 42891, 33029, 21086, 55052, 38917, 57617, 64049, 91491, 39578, 53580, 41610, 46621, 83932, 93435, 82766, 46621, 41610, 62100, 26179, 55266, 6702, 83932, 55266}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(14): Basarili" << endl;
    else cout << "Case(14): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_15(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 243);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(2337)); //1
    caseQueue.insert(1399,22965);
    caseQueue.insert(8431,22054);
    caseQueue.updatePriority(8431, 62188);
    caseQueue.updatePriority(1399, 50679);
    myResult.push_back(caseQueue.getPriority(1399)); //2
    caseQueue.updatePriority(8431, 94026);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(73593,46654);
    caseQueue.updatePriority(73593, 38480);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(41452,4696);
    caseQueue.insert(28047,31235);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(79068,23262);
    myResult.push_back(caseQueue.getPriority(28047)); //7
    caseQueue.insert(47192,92188);
    caseQueue.updatePriority(28047, 16757);
    caseQueue.insert(73703,68758);
    caseQueue.insert(93741,18668);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(87272,85624);
    caseQueue.insert(91258,73842);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(91258, 75577);
    caseQueue.insert(90671,91642);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(76533,74879);
    caseQueue.insert(90852,77995);
    caseQueue.updatePriority(47192, 54575);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(4651,90050);
    caseQueue.updatePriority(90671, 46527);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(90852)); //15
    caseQueue.insert(64543,40061);
    caseQueue.insert(47833,41658);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(27578,94332);
    myResult.push_back(caseQueue.getPriority(90852)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(27578, 26273);
    caseQueue.insert(23675,35874);
    caseQueue.updatePriority(87272, 63608);
    caseQueue.insert(55226,60537);
    caseQueue.insert(38546,23120);
    myResult.push_back(caseQueue.getPriority(38546)); //20
    caseQueue.insert(89227,52568);
    caseQueue.updatePriority(55226, 38316);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(85250,76886);
    caseQueue.insert(37878,81842);
    caseQueue.insert(4098,56183);
    caseQueue.updatePriority(27578, 91848);
    caseQueue.updatePriority(23675, 3133);
    caseQueue.insert(6535,42695);
    caseQueue.updatePriority(89227, 73602);
    myResult.push_back(caseQueue.getPriority(4651)); //22
    caseQueue.insert(50183,40678);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(94771,50823);
    caseQueue.updatePriority(4098, 90187);
    caseQueue.insert(51650,49183);
    caseQueue.updatePriority(89227, 93651);
    caseQueue.insert(42871,53786);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(61532,80066);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(99356,52568);
    caseQueue.insert(34164,89381);
    caseQueue.insert(4000,96569);
    caseQueue.insert(53040,22929);
    caseQueue.insert(75346,18797);
    caseQueue.insert(31620,94835);
    caseQueue.updatePriority(99356, 61907);
    caseQueue.insert(28439,60201);
    caseQueue.insert(85818,36302);
    caseQueue.insert(82984,14545);
    myResult.push_back(caseQueue.getPriority(85818)); //27
    caseQueue.insert(80266,88573);
    caseQueue.insert(17101,58351);
    caseQueue.updatePriority(31620, 73382);
    myResult.push_back(caseQueue.getPriority(42871)); //28
    caseQueue.insert(58691,18925);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(61532, 14915);
    myResult.push_back(caseQueue.getPriority(53040)); //30
    caseQueue.insert(77472,13205);
    caseQueue.insert(56692,14483);
    caseQueue.insert(80025,25320);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(75346)); //32
    caseQueue.updatePriority(80266, 769);
    myResult.push_back(caseQueue.getPriority(37878)); //33
    caseQueue.updatePriority(90852, 9097);
    caseQueue.insert(6022,2833);
    caseQueue.insert(27515,48132);
    caseQueue.updatePriority(94771, 61404);
    caseQueue.insert(37275,3230);
    caseQueue.insert(65462,46929);
    caseQueue.updatePriority(37275, 6102);
    caseQueue.updatePriority(27578, 1784);
    caseQueue.insert(21929,28458);
    caseQueue.insert(64327,80508);
    caseQueue.insert(38056,76253);
    caseQueue.insert(95246,76383);
    caseQueue.insert(54489,71022);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(27578)); //35
    myResult.push_back(caseQueue.getPriority(89227)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(35548,61083);
    caseQueue.insert(46812,82157);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(42942,53275);
    caseQueue.insert(58884,14288);
    caseQueue.insert(87762,65565);
    myResult.push_back(caseQueue.getPriority(42871)); //39
    myResult.push_back(caseQueue.getPriority(85250)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(85818, 91915);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(42942, 95832);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(9166,54920);
    caseQueue.updatePriority(4651, 55434);
    caseQueue.insert(41177,85357);
    caseQueue.updatePriority(9166, 37315);
    myResult.push_back(caseQueue.getPriority(99356)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(94334,45758);
    myResult.push_back(caseQueue.getPriority(87762)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(54489, 55014);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(23818,48735);
    caseQueue.updatePriority(99356, 31676);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(68433,55329);
    caseQueue.insert(75556,65554);
    caseQueue.insert(74065,87382);
    myResult.push_back(caseQueue.getPriority(94334)); //51
    caseQueue.insert(38080,73907);
    myResult.push_back(caseQueue.getPriority(27515)); //52
    caseQueue.updatePriority(85818, 87698);
    caseQueue.insert(30556,12994);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(99811,41261);
    caseQueue.updatePriority(68433, 21730);
    caseQueue.updatePriority(42871, 79437);
    caseQueue.insert(33152,27670);
    caseQueue.insert(75965,52315);
    myResult.push_back(caseQueue.getPriority(85818)); //54
    myResult.push_back(caseQueue.getPriority(80025)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(50132,65978);
    myResult.push_back(caseQueue.getPriority(46812)); //57
    caseQueue.insert(47765,96068);
    caseQueue.insert(78821,14240);
    caseQueue.insert(30584,39446);
    caseQueue.insert(92477,53636);
    caseQueue.updatePriority(38056, 56429);
    myResult.push_back(caseQueue.getPriority(35548)); //58
    caseQueue.updatePriority(4098, 26628);
    caseQueue.updatePriority(78821, 74520);
    myResult.push_back(caseQueue.getPriority(4651)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(53396,74684);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(33152)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(85818, 85916);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(92477, 5096);
    caseQueue.insert(55368,33425);
    myResult.push_back(caseQueue.getPriority(46812)); //65
    caseQueue.insert(69410,47550);
    caseQueue.insert(90190,25208);
    myResult.push_back(caseQueue.getPriority(17101)); //66
    myResult.push_back(caseQueue.getPriority(28439)); //67
    caseQueue.insert(18982,19064);
    caseQueue.insert(30978,16179);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(54489, 57380);
    caseQueue.insert(40228,75372);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(30584, 43141);
    myResult.push_back(caseQueue.getPriority(38080)); //70
    caseQueue.insert(37050,31326);
    caseQueue.insert(99509,26554);
    caseQueue.updatePriority(30584, 97639);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(31257,80245);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(55368)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(90809,45204);
    caseQueue.updatePriority(31257, 10179);
    myResult.push_back(caseQueue.getPriority(90809)); //75
    myResult.push_back(caseQueue.getPriority(42942)); //76
    caseQueue.insert(49808,82939);
    caseQueue.insert(5092,3238);
    caseQueue.updatePriority(5092, 60722);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(36873,86158);
    caseQueue.updatePriority(85250, 18578);
    caseQueue.updatePriority(42871, 73695);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.updatePriority(51650, 73466);
    caseQueue.insert(21348,8430);
    caseQueue.insert(75454,35399);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(40228, 96330);
    caseQueue.updatePriority(53396, 77533);
    caseQueue.insert(52346,60319);
    caseQueue.insert(93229,72163);
    myResult.push_back(caseQueue.getPriority(94334)); //80
    caseQueue.insert(97791,46892);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(54489, 18508);
    caseQueue.updatePriority(93229, 41659);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.getPriority(94334)); //83
    caseQueue.insert(48765,54969);
    myResult.push_back(caseQueue.getPriority(75454)); //84
    caseQueue.updatePriority(31620, 34026);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.getPriority(28439)); //86
    caseQueue.insert(77998,56001);
    caseQueue.insert(99330,51719);
    caseQueue.insert(91460,95023);
    caseQueue.insert(42688,99817);
    caseQueue.insert(8126,80800);
    caseQueue.updatePriority(4651, 60012);
    caseQueue.updatePriority(99330, 29750);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(46675,16685);
    static const int resultListArray[] = {-1, 50679, 1399, 8431, 73593, 41452, 31235, 28047, 93741, 79068, 73703, 91258, 47192, 90671, 77995, 64543, 47833, 77995, 76533, 23120, 38546, 90050, 23675, 55226, 50183, 6535, 36302, 53786, 82984, 22929, 77472, 18797, 81842, 80266, 1784, 93651, 27578, 6022, 53786, 76886, 37275, 90852, 58884, 56692, 61907, 61532, 65565, 75346, 58691, 53040, 45758, 48132, 30556, 87698, 25320, 68433, 82157, 61083, 55434, 80025, 4098, 27670, 33152, 21929, 82157, 58351, 60201, 92477, 30978, 73907, 18982, 90190, 33425, 99509, 45204, 95832, 31257, 85250, 21348, 45758, 37050, 54489, 45758, 35399, 99356, 60201, 99330}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(15): Basarili" << endl;
    else cout << "Case(15): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_16(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 222);

    vector<int> myResult; 
    caseQueue.insert(46748,268);
    caseQueue.insert(35999,32921);
    myResult.push_back(caseQueue.getPriority(46748)); //1
    caseQueue.insert(26545,7459);
    caseQueue.insert(99204,49994);
    caseQueue.insert(87475,68891);
    myResult.push_back(caseQueue.getPriority(46748)); //2
    myResult.push_back(caseQueue.getPriority(26545)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(92576,83971);
    caseQueue.insert(82443,65994);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(35999)); //6
    caseQueue.insert(25253,5584);
    myResult.push_back(caseQueue.getPriority(99204)); //7
    caseQueue.updatePriority(25253, 46447);
    caseQueue.insert(89136,92432);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(82443)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(32022,85522);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(41646,87967);
    caseQueue.insert(53011,8020);
    caseQueue.insert(58262,5042);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(9398,55805);
    myResult.push_back(caseQueue.getPriority(32022)); //14
    caseQueue.insert(13951,45097);
    caseQueue.insert(50116,92116);
    caseQueue.insert(98255,10632);
    caseQueue.insert(51410,7079);
    myResult.push_back(caseQueue.getPriority(32022)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(75624,18644);
    caseQueue.updatePriority(50116, 30667);
    myResult.push_back(caseQueue.getPriority(41646)); //17
    caseQueue.updatePriority(89136, 24669);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(77166,29660);
    caseQueue.updatePriority(50116, 3467);
    caseQueue.insert(23145,64711);
    caseQueue.insert(65791,75641);
    caseQueue.insert(21639,26754);
    myResult.push_back(caseQueue.getPriority(32022)); //20
    myResult.push_back(caseQueue.getPriority(65791)); //21
    caseQueue.insert(3105,18948);
    caseQueue.insert(66628,4648);
    myResult.push_back(caseQueue.getPriority(87475)); //22
    myResult.push_back(caseQueue.getPriority(77166)); //23
    myResult.push_back(caseQueue.getPriority(66628)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(72883,22689);
    caseQueue.updatePriority(9398, 5352);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(73265,71981);
    myResult.push_back(caseQueue.getPriority(21639)); //28
    myResult.push_back(caseQueue.getPriority(77166)); //29
    myResult.push_back(caseQueue.getPriority(72883)); //30
    caseQueue.updatePriority(65791, 89058);
    myResult.push_back(caseQueue.getPriority(13951)); //31
    myResult.push_back(caseQueue.getPriority(13951)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(71060,15819);
    caseQueue.updatePriority(72883, 37995);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(41646)); //36
    caseQueue.insert(64826,47126);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(41646, 20549);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(87475)); //39
    caseQueue.insert(15604,37155);
    caseQueue.updatePriority(73265, 67020);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(15455,85814);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(64826)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(72883, 74028);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(64826, 70181);
    caseQueue.insert(31306,20644);
    caseQueue.insert(28354,91205);
    caseQueue.insert(26017,59634);
    caseQueue.insert(45523,75141);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(26017)); //46
    caseQueue.insert(72279,35267);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(52558,75803);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(87475)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(15455, 25626);
    caseQueue.updatePriority(92576, 74660);
    caseQueue.insert(336,91444);
    caseQueue.updatePriority(87475, 34728);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(64826)); //53
    myResult.push_back(caseQueue.getPriority(52558)); //54
    caseQueue.updatePriority(73265, 34579);
    caseQueue.insert(79105,2363);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(336, 67666);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(79645,64765);
    caseQueue.insert(39292,87862);
    caseQueue.insert(27713,87602);
    caseQueue.insert(74649,85403);
    caseQueue.insert(96189,41875);
    myResult.push_back(caseQueue.getPriority(65791)); //57
    caseQueue.insert(58677,24619);
    caseQueue.insert(14847,19745);
    caseQueue.updatePriority(65791, 96582);
    caseQueue.updatePriority(58677, 97132);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(28354, 17648);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(27434,33141);
    caseQueue.insert(81503,44855);
    myResult.push_back(caseQueue.getPriority(81503)); //62
    caseQueue.updatePriority(27434, 24627);
    myResult.push_back(caseQueue.getPriority(45523)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(32022, 13853);
    caseQueue.updatePriority(336, 95557);
    caseQueue.updatePriority(72883, 24007);
    myResult.push_back(caseQueue.getPriority(74649)); //65
    caseQueue.insert(30393,21632);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(90971,32370);
    caseQueue.insert(72519,48542);
    caseQueue.insert(89471,35937);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(45523)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(92576)); //72
    caseQueue.insert(85885,77978);
    caseQueue.updatePriority(85885, 91424);
    myResult.push_back(caseQueue.getPriority(72519)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(39292)); //75
    caseQueue.insert(52122,42819);
    caseQueue.insert(47287,93898);
    caseQueue.insert(51039,32475);
    myResult.push_back(caseQueue.getPriority(52122)); //76
    myResult.push_back(caseQueue.getPriority(92576)); //77
    myResult.push_back(caseQueue.getPriority(51039)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(27713)); //80
    myResult.push_back(caseQueue.getPriority(336)); //81
    myResult.push_back(caseQueue.getPriority(72519)); //82
    caseQueue.insert(43179,787);
    caseQueue.insert(12228,66256);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(60541,92792);
    caseQueue.insert(93733,18542);
    caseQueue.insert(769,67916);
    caseQueue.insert(59824,93146);
    caseQueue.updatePriority(769, 93375);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(58677)); //85
    myResult.push_back(caseQueue.getPriority(85885)); //86
    caseQueue.insert(1467,70392);
    myResult.push_back(caseQueue.getPriority(1467)); //87
    myResult.push_back(caseQueue.getPriority(74649)); //88
    myResult.push_back(caseQueue.getPriority(60541)); //89
    caseQueue.updatePriority(64826, 97251);
    myResult.push_back(caseQueue.deleteMin()); //90
    myResult.push_back(caseQueue.getPriority(1467)); //91
    caseQueue.updatePriority(64826, 44049);
    caseQueue.updatePriority(59824, 2306);
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.getPriority(39292)); //93
    caseQueue.updatePriority(47287, 3863);
    myResult.push_back(caseQueue.getPriority(85885)); //94
    caseQueue.insert(97185,2408);
    caseQueue.updatePriority(52558, 99738);
    myResult.push_back(caseQueue.getPriority(65791)); //95
    caseQueue.insert(42040,75925);
    caseQueue.insert(35868,50161);
    caseQueue.insert(56525,74288);
    caseQueue.insert(90203,34605);
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.getPriority(45523)); //97
    caseQueue.updatePriority(52558, 59860);
    myResult.push_back(caseQueue.deleteMin()); //98
    myResult.push_back(caseQueue.deleteMin()); //99
    myResult.push_back(caseQueue.deleteMin()); //100
    caseQueue.insert(4198,16564);
    caseQueue.insert(75521,64809);
    caseQueue.updatePriority(336, 14196);
    myResult.push_back(caseQueue.getPriority(12228)); //101
    myResult.push_back(caseQueue.deleteMin()); //102
    caseQueue.updatePriority(42040, 50855);
    caseQueue.insert(37867,34797);
    caseQueue.updatePriority(42040, 43846);
    myResult.push_back(caseQueue.getPriority(92576)); //103
    caseQueue.updatePriority(1467, 90398);
    myResult.push_back(caseQueue.deleteMin()); //104
    myResult.push_back(caseQueue.deleteMin()); //105
    caseQueue.insert(32961,25021);
    caseQueue.updatePriority(58677, 86333);
    caseQueue.insert(49406,97230);
    caseQueue.insert(10390,34410);
    myResult.push_back(caseQueue.getPriority(45523)); //106
    caseQueue.insert(96496,40234);
    myResult.push_back(caseQueue.deleteMin()); //107
    caseQueue.updatePriority(56525, 47451);
    caseQueue.updatePriority(56525, 50815);
    caseQueue.insert(18181,10525);
    caseQueue.insert(6216,48291);
    static const int resultListArray[] = {268, 268, 7459, 46748, 26545, 32921, 49994, 35999, 25253, 65994, 99204, 82443, 58262, 85522, 85522, 51410, 87967, 53011, 98255, 85522, 75641, 68891, 29660, 4648, 50116, 66628, 9398, 26754, 29660, 22689, 45097, 45097, 75624, 3105, 71060, 87967, 89136, 41646, 68891, 21639, 77166, 47126, 15604, 13951, 31306, 59634, 72279, 26017, 68891, 23145, 15455, 87475, 70181, 75803, 79105, 73265, 89058, 14847, 96189, 28354, 79645, 44855, 75141, 27434, 85403, 32022, 30393, 72883, 75141, 90971, 89471, 74660, 48542, 81503, 87862, 42819, 74660, 32475, 51039, 87602, 95557, 48542, 43179, 93733, 97132, 91424, 70392, 85403, 92792, 52122, 70392, 59824, 87862, 91424, 96582, 97185, 75141, 47287, 90203, 64826, 66256, 336, 74660, 4198, 37867, 75141, 32961}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(16): Basarili" << endl;
    else cout << "Case(16): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_17(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 224);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(95399, 90951);
    caseQueue.insert(63124,48405);
    caseQueue.updatePriority(63124, 48152);
    caseQueue.insert(61184,77782);
    caseQueue.insert(39567,89758);
    caseQueue.insert(49127,12340);
    caseQueue.insert(24165,53711);
    caseQueue.insert(83414,97336);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(94356,86438);
    caseQueue.insert(94881,96967);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(39567, 64336);
    caseQueue.updatePriority(39567, 98808);
    caseQueue.updatePriority(39567, 80426);
    caseQueue.updatePriority(24165, 66923);
    myResult.push_back(caseQueue.getPriority(94356)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(46174,65244);
    caseQueue.updatePriority(94881, 24245);
    caseQueue.updatePriority(39567, 37312);
    myResult.push_back(caseQueue.getPriority(94881)); //6
    caseQueue.updatePriority(94356, 56211);
    myResult.push_back(caseQueue.getPriority(83414)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(83414)); //10
    caseQueue.insert(53863,22259);
    caseQueue.insert(42009,6976);
    caseQueue.insert(34688,60973);
    caseQueue.updatePriority(94356, 67769);
    caseQueue.insert(39510,54496);
    caseQueue.insert(39745,73586);
    myResult.push_back(caseQueue.getPriority(46174)); //11
    caseQueue.updatePriority(94356, 38913);
    caseQueue.updatePriority(46174, 13953);
    myResult.push_back(caseQueue.getPriority(39745)); //12
    caseQueue.insert(32602,45544);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(83414)); //14
    caseQueue.insert(19929,78488);
    caseQueue.insert(26696,71084);
    caseQueue.insert(81345,20383);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(51315,60134);
    caseQueue.insert(8055,36257);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(17294,57529);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(34688)); //19
    myResult.push_back(caseQueue.getPriority(61184)); //20
    caseQueue.insert(31873,23167);
    caseQueue.insert(91966,95273);
    caseQueue.insert(72579,94155);
    myResult.push_back(caseQueue.getPriority(83414)); //21
    myResult.push_back(caseQueue.getPriority(83414)); //22
    caseQueue.insert(4457,57696);
    caseQueue.insert(26570,55922);
    myResult.push_back(caseQueue.getPriority(94356)); //23
    caseQueue.updatePriority(61184, 48335);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(13977,37904);
    caseQueue.insert(10112,40078);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(84368,70715);
    caseQueue.updatePriority(51315, 74401);
    myResult.push_back(caseQueue.getPriority(39510)); //27
    caseQueue.insert(81560,68935);
    caseQueue.insert(12094,24298);
    caseQueue.insert(83716,24595);
    caseQueue.insert(37953,86874);
    myResult.push_back(caseQueue.getPriority(17294)); //28
    caseQueue.insert(17028,56718);
    myResult.push_back(caseQueue.getPriority(91966)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(26696, 8679);
    caseQueue.updatePriority(10112, 5274);
    caseQueue.insert(52264,61320);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(61184, 86977);
    myResult.push_back(caseQueue.getPriority(52264)); //33
    caseQueue.insert(27417,27804);
    myResult.push_back(caseQueue.getPriority(17028)); //34
    caseQueue.insert(36950,87808);
    myResult.push_back(caseQueue.getPriority(84368)); //35
    myResult.push_back(caseQueue.getPriority(51315)); //36
    caseQueue.insert(15509,53495);
    myResult.push_back(caseQueue.getPriority(4457)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(34056,92539);
    myResult.push_back(caseQueue.getPriority(34688)); //39
    caseQueue.insert(21685,79684);
    caseQueue.updatePriority(4457, 46467);
    caseQueue.insert(84326,39957);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(12248,43087);
    caseQueue.insert(30159,94654);
    caseQueue.insert(41183,42960);
    caseQueue.insert(90642,68258);
    myResult.push_back(caseQueue.getPriority(41183)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(81560)); //43
    caseQueue.insert(82077,61248);
    myResult.push_back(caseQueue.getPriority(39510)); //44
    caseQueue.insert(89084,79388);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(35457,19384);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(52264)); //47
    caseQueue.insert(35174,95960);
    caseQueue.insert(35048,24892);
    caseQueue.insert(73565,43338);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(32602, 81635);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(26570, 91242);
    myResult.push_back(caseQueue.getPriority(21685)); //50
    caseQueue.insert(91471,68757);
    myResult.push_back(caseQueue.getPriority(73565)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(2735,62514);
    caseQueue.insert(74006,87223);
    caseQueue.insert(44596,22448);
    caseQueue.updatePriority(82077, 67161);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(36950, 93591);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(35174)); //55
    caseQueue.insert(44438,47989);
    caseQueue.insert(42461,82966);
    caseQueue.updatePriority(81560, 45705);
    caseQueue.updatePriority(35174, 19985);
    caseQueue.insert(59566,97745);
    caseQueue.insert(51719,90701);
    caseQueue.insert(50578,10694);
    caseQueue.insert(44594,80352);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(41143,64114);
    caseQueue.updatePriority(44594, 48354);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(52007,22356);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(9638,17072);
    caseQueue.updatePriority(34688, 34400);
    myResult.push_back(caseQueue.getPriority(19929)); //59
    caseQueue.updatePriority(44438, 35402);
    caseQueue.updatePriority(91471, 65615);
    caseQueue.insert(90387,37662);
    caseQueue.updatePriority(32602, 1764);
    myResult.push_back(caseQueue.getPriority(51315)); //60
    myResult.push_back(caseQueue.getPriority(17028)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(23662,22545);
    caseQueue.insert(36182,61354);
    caseQueue.insert(2355,49968);
    caseQueue.updatePriority(21685, 61620);
    caseQueue.insert(16007,91644);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(51315)); //65
    caseQueue.insert(4593,40804);
    caseQueue.insert(45776,6264);
    caseQueue.insert(36165,89841);
    myResult.push_back(caseQueue.getPriority(26570)); //66
    caseQueue.updatePriority(36182, 56253);
    caseQueue.insert(24971,68968);
    myResult.push_back(caseQueue.getPriority(36950)); //67
    caseQueue.insert(88113,78034);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(51990,58770);
    caseQueue.insert(3597,26069);
    caseQueue.insert(52766,60535);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(77394,35262);
    caseQueue.updatePriority(16007, 65736);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(13074,63251);
    caseQueue.insert(52857,7900);
    caseQueue.updatePriority(84368, 25931);
    myResult.push_back(caseQueue.getPriority(61184)); //73
    caseQueue.insert(15903,21192);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(66413,37994);
    caseQueue.insert(67009,46152);
    caseQueue.insert(23790,82939);
    caseQueue.updatePriority(19929, 21191);
    caseQueue.insert(21507,19657);
    caseQueue.updatePriority(90387, 26805);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(34056)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(90387)); //80
    caseQueue.insert(25483,83138);
    caseQueue.insert(39381,32249);
    caseQueue.updatePriority(82077, 73597);
    myResult.push_back(caseQueue.getPriority(34056)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(17294, 10728);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(83831,68717);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(2735)); //85
    caseQueue.updatePriority(81560, 65599);
    caseQueue.insert(96724,43724);
    caseQueue.updatePriority(81560, 24141);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.updatePriority(36165, 82003);
    myResult.push_back(caseQueue.deleteMin()); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    myResult.push_back(caseQueue.getPriority(37953)); //89
    myResult.push_back(caseQueue.deleteMin()); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    myResult.push_back(caseQueue.getPriority(51990)); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(18614,79599);
    caseQueue.updatePriority(2735, 12378);
    static const int resultListArray[] = {-1, 49127, 63124, 86438, 24165, 24245, 97336, 94881, 39567, 97336, 65244, 73586, 42009, 97336, 46174, 81345, 53863, 8055, 60973, 77782, 97336, 97336, 38913, 31873, 94356, 13977, 54496, 57529, 95273, 12094, 10112, 26696, 61320, 56718, 70715, 74401, 57696, 83716, 60973, 27417, 42960, 84326, 68935, 54496, 41183, 35457, 61320, 35048, 12248, 79684, 43338, 73565, 44596, 4457, 95960, 50578, 35174, 52007, 78488, 74401, 56718, 32602, 9638, 23662, 74401, 91242, 93591, 45776, 34688, 44438, 3597, 77394, 86977, 52857, 21507, 19929, 15903, 92539, 84368, 26805, 92539, 90387, 17294, 39381, 62514, 81560, 66413, 4593, 86874, 96724, 67009, 58770, 44594}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(17): Basarili" << endl;
    else cout << "Case(17): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_18(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 149);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(30509)); //2
    caseQueue.insert(14579,56140);
    myResult.push_back(caseQueue.getPriority(14579)); //3
    caseQueue.updatePriority(14579, 90491);
    myResult.push_back(caseQueue.getPriority(14579)); //4
    caseQueue.updatePriority(14579, 61180);
    caseQueue.insert(58809,7077);
    myResult.push_back(caseQueue.getPriority(58809)); //5
    myResult.push_back(caseQueue.getPriority(58809)); //6
    caseQueue.updatePriority(58809, 58785);
    caseQueue.insert(35441,79798);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(93419,52178);
    caseQueue.updatePriority(35441, 16875);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(93419, 33123);
    myResult.push_back(caseQueue.getPriority(14579)); //9
    caseQueue.insert(45109,13851);
    myResult.push_back(caseQueue.getPriority(93419)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(44723,13811);
    caseQueue.updatePriority(14579, 55184);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(64650,47082);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(34931, 97035);
    myResult.push_back(caseQueue.getPriority(5796)); //16
    caseQueue.insert(36434,67698);
    caseQueue.updatePriority(36434, 54189);
    myResult.push_back(caseQueue.getPriority(36434)); //17
    caseQueue.updatePriority(36434, 48756);
    myResult.push_back(caseQueue.getPriority(36434)); //18
    caseQueue.updatePriority(36434, 91105);
    caseQueue.insert(35411,87);
    caseQueue.updatePriority(35411, 28795);
    caseQueue.insert(28419,74122);
    myResult.push_back(caseQueue.getPriority(36434)); //19
    caseQueue.updatePriority(28419, 78497);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(28419)); //21
    caseQueue.insert(75029,73221);
    caseQueue.insert(5681,39779);
    caseQueue.updatePriority(5681, 74396);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(28419, 64427);
    caseQueue.insert(6258,85279);
    caseQueue.insert(45527,73081);
    caseQueue.insert(94408,35841);
    caseQueue.insert(31519,31281);
    caseQueue.insert(92840,45112);
    caseQueue.insert(30703,4924);
    caseQueue.updatePriority(45527, 20849);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(627,20401);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(50716,16187);
    myResult.push_back(caseQueue.getPriority(36434)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(92840, 27550);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(34500,44412);
    caseQueue.updatePriority(36434, 73196);
    caseQueue.updatePriority(36434, 32144);
    myResult.push_back(caseQueue.getPriority(6258)); //29
    caseQueue.updatePriority(31519, 14312);
    caseQueue.insert(99875,65864);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(36013,82734);
    myResult.push_back(caseQueue.getPriority(6258)); //32
    caseQueue.updatePriority(36434, 8181);
    caseQueue.insert(9737,45214);
    caseQueue.updatePriority(99875, 17830);
    caseQueue.insert(57449,46050);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(34500, 15760);
    myResult.push_back(caseQueue.getPriority(34500)); //35
    caseQueue.insert(73085,59929);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(94408, 17677);
    caseQueue.insert(66685,43478);
    myResult.push_back(caseQueue.getPriority(94408)); //37
    myResult.push_back(caseQueue.getPriority(57449)); //38
    caseQueue.updatePriority(73085, 79835);
    myResult.push_back(caseQueue.getPriority(94408)); //39
    caseQueue.insert(46255,19561);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(46632,75354);
    caseQueue.insert(25856,5180);
    caseQueue.insert(16315,74089);
    caseQueue.updatePriority(46255, 71455);
    caseQueue.insert(86901,39994);
    myResult.push_back(caseQueue.getPriority(25856)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(17953,41882);
    caseQueue.insert(76458,75178);
    caseQueue.insert(9030,98795);
    caseQueue.insert(6223,43929);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(8630,75852);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(32903,57581);
    caseQueue.updatePriority(9030, 67363);
    caseQueue.insert(40809,9803);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(72803,3025);
    caseQueue.updatePriority(6258, 75871);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(6258)); //48
    caseQueue.insert(39940,69923);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(41189,20753);
    caseQueue.insert(99118,30698);
    caseQueue.insert(32035,14904);
    caseQueue.updatePriority(99118, 38756);
    caseQueue.insert(40586,85346);
    caseQueue.insert(57401,5196);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(73085, 76821);
    caseQueue.insert(37771,45142);
    myResult.push_back(caseQueue.getPriority(37771)); //51
    caseQueue.insert(73968,64857);
    caseQueue.insert(21019,39976);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(9737, 51291);
    caseQueue.updatePriority(32903, 59918);
    myResult.push_back(caseQueue.getPriority(73968)); //53
    myResult.push_back(caseQueue.getPriority(37771)); //54
    caseQueue.updatePriority(21019, 62261);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(86346,27644);
    caseQueue.updatePriority(57449, 51147);
    caseQueue.insert(90651,37310);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(28419)); //57
    caseQueue.insert(77557,47236);
    myResult.push_back(caseQueue.getPriority(28419)); //58
    caseQueue.insert(49059,58921);
    caseQueue.updatePriority(8630, 40875);
    caseQueue.insert(39008,2210);
    caseQueue.insert(61176,79275);
    caseQueue.insert(52981,42205);
    myResult.push_back(caseQueue.deleteMin()); //59
    static const int resultListArray[] = {-1, -1, 56140, 90491, 7077, 7077, 58809, 35441, 61180, 33123, 45109, 44723, 93419, 64650, 14579, -1, 54189, 48756, 91105, 35411, 78497, 75029, 5681, 30703, 627, 91105, 50716, 45527, 85279, 31519, 92840, 85279, 36434, 99875, 15760, 34500, 17677, 46050, 17677, 94408, 5180, 25856, 86901, 17953, 66685, 40809, 72803, 75871, 6223, 57401, 45142, 32035, 64857, 45142, 41189, 86346, 64427, 64427, 39008}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(18): Basarili" << endl;
    else cout << "Case(18): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_19(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 207);

    vector<int> myResult; 
    caseQueue.updatePriority(31757, 26936);
    caseQueue.insert(52120,43317);
    caseQueue.insert(87503,3732);
    myResult.push_back(caseQueue.getPriority(87503)); //1
    caseQueue.insert(13394,13119);
    myResult.push_back(caseQueue.getPriority(87503)); //2
    myResult.push_back(caseQueue.getPriority(87503)); //3
    myResult.push_back(caseQueue.getPriority(87503)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(13394)); //6
    caseQueue.updatePriority(13394, 88544);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(36903,47724);
    caseQueue.insert(76114,91659);
    caseQueue.insert(81135,55195);
    caseQueue.insert(74379,2226);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(50606,90942);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(78415,79422);
    caseQueue.insert(52198,10640);
    caseQueue.insert(3028,96054);
    myResult.push_back(caseQueue.getPriority(13394)); //11
    caseQueue.insert(90394,8470);
    caseQueue.insert(96775,86870);
    caseQueue.insert(81985,37269);
    caseQueue.insert(9915,15236);
    myResult.push_back(caseQueue.getPriority(90394)); //12
    myResult.push_back(caseQueue.getPriority(13394)); //13
    myResult.push_back(caseQueue.getPriority(52198)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(3028, 90343);
    caseQueue.insert(91780,79575);
    caseQueue.insert(14973,78672);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(3028, 83089);
    caseQueue.insert(64206,37781);
    caseQueue.insert(30589,57749);
    myResult.push_back(caseQueue.getPriority(91780)); //17
    myResult.push_back(caseQueue.getPriority(50606)); //18
    caseQueue.updatePriority(96775, 32727);
    caseQueue.updatePriority(50606, 58432);
    caseQueue.insert(82398,3545);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(2611,90294);
    caseQueue.updatePriority(91780, 3368);
    myResult.push_back(caseQueue.getPriority(50606)); //22
    caseQueue.insert(78828,35429);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(78828)); //24
    caseQueue.insert(20044,70408);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(3642,44598);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(10290,38123);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(85037,29441);
    caseQueue.insert(62020,23820);
    caseQueue.insert(49075,44478);
    caseQueue.insert(98482,90400);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(26142,30706);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(3696,70023);
    myResult.push_back(caseQueue.getPriority(50606)); //30
    caseQueue.insert(99639,68324);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(83125,80779);
    caseQueue.insert(91922,93125);
    caseQueue.updatePriority(2611, 79185);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(48553,21852);
    caseQueue.insert(70874,31753);
    caseQueue.updatePriority(70874, 58204);
    caseQueue.insert(9738,68421);
    caseQueue.updatePriority(30589, 77895);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(9738)); //34
    caseQueue.updatePriority(20044, 64376);
    caseQueue.insert(44297,12834);
    caseQueue.insert(37688,38195);
    caseQueue.updatePriority(3028, 29047);
    caseQueue.updatePriority(9738, 28026);
    caseQueue.updatePriority(50606, 74141);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(50606, 6443);
    caseQueue.insert(45047,57354);
    myResult.push_back(caseQueue.getPriority(3696)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(99639)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(69216,51101);
    caseQueue.insert(26768,62668);
    caseQueue.updatePriority(83125, 93907);
    caseQueue.insert(86925,18329);
    myResult.push_back(caseQueue.getPriority(37688)); //40
    caseQueue.insert(6793,55322);
    caseQueue.insert(24205,82233);
    caseQueue.insert(98707,24450);
    caseQueue.insert(19171,30283);
    myResult.push_back(caseQueue.getPriority(76114)); //41
    caseQueue.updatePriority(98482, 22736);
    caseQueue.updatePriority(14973, 13583);
    caseQueue.updatePriority(37688, 54274);
    caseQueue.insert(65006,45478);
    caseQueue.insert(31432,92809);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(13151,20070);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(88634,71766);
    caseQueue.updatePriority(3696, 95961);
    caseQueue.insert(61982,20644);
    caseQueue.insert(15564,8334);
    myResult.push_back(caseQueue.getPriority(69216)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(13741,77357);
    caseQueue.insert(38345,8607);
    caseQueue.updatePriority(3028, 34827);
    myResult.push_back(caseQueue.getPriority(13394)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(99639)); //48
    caseQueue.insert(87964,50843);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(13394, 79397);
    myResult.push_back(caseQueue.getPriority(61982)); //50
    caseQueue.updatePriority(91922, 5029);
    myResult.push_back(caseQueue.getPriority(98707)); //51
    caseQueue.insert(89489,51128);
    caseQueue.insert(63245,29490);
    caseQueue.updatePriority(91922, 192);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(21244,91336);
    myResult.push_back(caseQueue.getPriority(26768)); //54
    caseQueue.insert(45004,3856);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(21947,62635);
    myResult.push_back(caseQueue.getPriority(83125)); //57
    myResult.push_back(caseQueue.getPriority(3642)); //58
    caseQueue.insert(11052,65348);
    caseQueue.updatePriority(6793, 90070);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(3696, 5374);
    myResult.push_back(caseQueue.getPriority(3028)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(13394, 91114);
    myResult.push_back(caseQueue.getPriority(65006)); //62
    caseQueue.insert(98086,42865);
    caseQueue.insert(24429,67425);
    caseQueue.insert(98870,47422);
    caseQueue.insert(9110,15270);
    caseQueue.insert(22554,61748);
    caseQueue.updatePriority(31432, 65888);
    caseQueue.updatePriority(98870, 864);
    caseQueue.insert(4196,28705);
    caseQueue.updatePriority(87964, 38431);
    caseQueue.insert(23763,98);
    caseQueue.insert(55200,39067);
    caseQueue.updatePriority(24205, 30628);
    caseQueue.updatePriority(26768, 519);
    caseQueue.insert(68456,86870);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(19171, 65310);
    myResult.push_back(caseQueue.getPriority(6793)); //65
    caseQueue.updatePriority(76114, 14064);
    caseQueue.insert(90112,57211);
    caseQueue.updatePriority(13741, 25121);
    caseQueue.updatePriority(13394, 64443);
    caseQueue.updatePriority(21947, 62271);
    caseQueue.insert(98431,55914);
    caseQueue.updatePriority(83125, 3311);
    caseQueue.insert(42463,30868);
    caseQueue.insert(80917,79930);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(41307,35984);
    caseQueue.updatePriority(9110, 10972);
    caseQueue.insert(17773,3584);
    caseQueue.insert(74334,27463);
    caseQueue.insert(18574,47028);
    caseQueue.insert(87346,61551);
    caseQueue.insert(1177,55537);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(30589, 4172);
    caseQueue.insert(76931,74819);
    caseQueue.updatePriority(24205, 61230);
    caseQueue.insert(28691,88962);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(63245, 94429);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(11052)); //71
    caseQueue.updatePriority(63245, 21730);
    caseQueue.updatePriority(49075, 60953);
    caseQueue.insert(9464,53411);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(90112, 94699);
    myResult.push_back(caseQueue.getPriority(69216)); //73
    myResult.push_back(caseQueue.getPriority(74334)); //74
    caseQueue.insert(78406,7555);
    caseQueue.insert(88178,71037);
    caseQueue.insert(95374,75396);
    myResult.push_back(caseQueue.deleteMin()); //75
    static const int resultListArray[] = {3732, 3732, 3732, 3732, 87503, 13119, 52120, 74379, 36903, 81135, 88544, 8470, 88544, 10640, 90394, 52198, 79575, 90942, 82398, 9915, 96775, 58432, 91780, 35429, 78828, 81985, 64206, 62020, 85037, 58432, 26142, 10290, 48553, 68421, 44297, 70023, 50606, 68324, 9738, 38195, 91659, 14973, 86925, 51101, 15564, 88544, 38345, 68324, 13151, 20644, 24450, 91922, 61982, 62668, 45004, 98482, 93907, 44598, 98707, 34827, 3696, 45478, 23763, 26768, 90070, 98870, 83125, 17773, 30589, 9110, 65348, 76114, 51101, 27463, 78406}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(19): Basarili" << endl;
    else cout << "Case(19): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_20(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 143);

    vector<int> myResult; 
    caseQueue.insert(49953,34689);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(60041)); //2
    caseQueue.insert(57788,29499);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(69212, 30771);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(30847,46927);
    caseQueue.insert(54787,32940);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(34922,53060);
    caseQueue.updatePriority(34922, 8701);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(30847, 41371);
    caseQueue.updatePriority(30847, 19400);
    caseQueue.insert(90494,82388);
    caseQueue.updatePriority(30847, 74441);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(90494, 87034);
    caseQueue.insert(35071,50359);
    caseQueue.insert(30093,20940);
    caseQueue.insert(1726,57332);
    caseQueue.insert(7429,76115);
    caseQueue.updatePriority(35071, 55504);
    caseQueue.insert(60410,51235);
    caseQueue.insert(59772,15983);
    caseQueue.insert(69429,5689);
    caseQueue.updatePriority(35071, 36082);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(99327,658);
    caseQueue.updatePriority(99327, 70747);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(35071, 42764);
    caseQueue.insert(65237,82813);
    caseQueue.insert(9766,20454);
    caseQueue.insert(49269,96831);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(63030,26526);
    myResult.push_back(caseQueue.getPriority(1726)); //12
    caseQueue.updatePriority(65237, 61333);
    myResult.push_back(caseQueue.getPriority(60410)); //13
    caseQueue.updatePriority(99327, 61364);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(65237)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(7429, 84345);
    caseQueue.updatePriority(1726, 6049);
    caseQueue.insert(87255,63587);
    caseQueue.insert(94691,98493);
    caseQueue.updatePriority(60410, 91850);
    myResult.push_back(caseQueue.getPriority(90494)); //17
    caseQueue.insert(75927,99488);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(65237, 84500);
    caseQueue.updatePriority(49269, 43657);
    caseQueue.insert(71931,77551);
    caseQueue.insert(37713,37595);
    caseQueue.updatePriority(71931, 782);
    caseQueue.updatePriority(94691, 68178);
    myResult.push_back(caseQueue.getPriority(87255)); //19
    caseQueue.insert(58482,76488);
    caseQueue.insert(3567,48213);
    caseQueue.insert(89688,72098);
    caseQueue.updatePriority(99327, 91247);
    caseQueue.insert(12715,86471);
    caseQueue.updatePriority(99327, 90274);
    myResult.push_back(caseQueue.getPriority(90494)); //20
    caseQueue.insert(5692,94599);
    caseQueue.insert(7316,95700);
    myResult.push_back(caseQueue.getPriority(5692)); //21
    myResult.push_back(caseQueue.getPriority(65237)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(42238,20108);
    caseQueue.insert(23034,2672);
    caseQueue.insert(86549,60705);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(75927)); //25
    caseQueue.insert(55940,32806);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(7316)); //27
    caseQueue.updatePriority(49269, 51697);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(42166,16719);
    caseQueue.insert(237,53689);
    myResult.push_back(caseQueue.getPriority(75927)); //29
    caseQueue.insert(78204,77637);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(30733,36734);
    caseQueue.insert(53481,81029);
    caseQueue.updatePriority(5692, 14107);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(30714,87544);
    caseQueue.updatePriority(30714, 62740);
    caseQueue.insert(66126,65479);
    caseQueue.insert(46401,56807);
    myResult.push_back(caseQueue.getPriority(30733)); //33
    caseQueue.insert(57834,46305);
    myResult.push_back(caseQueue.getPriority(58482)); //34
    caseQueue.insert(64632,55055);
    caseQueue.updatePriority(64632, 65964);
    myResult.push_back(caseQueue.getPriority(78204)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(3567, 63016);
    caseQueue.insert(30161,82596);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(66258,80892);
    caseQueue.updatePriority(53481, 55814);
    caseQueue.insert(65857,22121);
    myResult.push_back(caseQueue.getPriority(64632)); //38
    myResult.push_back(caseQueue.getPriority(60410)); //39
    caseQueue.insert(13104,10736);
    caseQueue.insert(26137,58612);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(24770,21547);
    caseQueue.insert(97041,58449);
    caseQueue.updatePriority(65857, 78943);
    caseQueue.insert(98689,70311);
    caseQueue.updatePriority(49269, 44637);
    caseQueue.updatePriority(86549, 1522);
    caseQueue.insert(10507,67713);
    caseQueue.insert(51396,14995);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(79558,54689);
    caseQueue.updatePriority(66258, 6803);
    caseQueue.insert(45971,84843);
    myResult.push_back(caseQueue.getPriority(90494)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(7316, 9232);
    caseQueue.insert(29732,19690);
    caseQueue.updatePriority(78204, 87431);
    caseQueue.updatePriority(30714, 96395);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(94194,53021);
    myResult.push_back(caseQueue.getPriority(75927)); //46
    caseQueue.insert(14665,70280);
    caseQueue.insert(24300,15012);
    myResult.push_back(caseQueue.getPriority(26137)); //47
    caseQueue.insert(26346,79409);
    myResult.push_back(caseQueue.getPriority(53481)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    static const int resultListArray[] = {49953, -1, 57788, -1, 54787, 34922, 30847, 69429, 59772, 30093, 9766, 57332, 51235, 63030, 61333, 35071, 87034, 1726, 63587, 87034, 94599, 84500, 71931, 23034, 99488, 42238, 95700, 55940, 99488, 42166, 37713, 5692, 36734, 76488, 77637, 30733, 57834, 65964, 91850, 13104, 86549, 51396, 87034, 66258, 7316, 99488, 58612, 55814, 24300}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(20): Basarili" << endl;
    else cout << "Case(20): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_21(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 144);

    vector<int> myResult; 
    caseQueue.insert(92996,5351);
    caseQueue.insert(10796,64935);
    caseQueue.updatePriority(10796, 17599);
    myResult.push_back(caseQueue.getPriority(92996)); //1
    caseQueue.insert(11259,52212);
    myResult.push_back(caseQueue.getPriority(11259)); //2
    caseQueue.updatePriority(92996, 44460);
    caseQueue.insert(79929,71448);
    myResult.push_back(caseQueue.getPriority(11259)); //3
    caseQueue.updatePriority(11259, 54172);
    caseQueue.updatePriority(10796, 75300);
    myResult.push_back(caseQueue.getPriority(10796)); //4
    caseQueue.insert(78933,15);
    myResult.push_back(caseQueue.getPriority(79929)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(11259, 34778);
    myResult.push_back(caseQueue.getPriority(10796)); //7
    caseQueue.insert(19537,32085);
    caseQueue.insert(17125,43670);
    caseQueue.updatePriority(79929, 63881);
    caseQueue.insert(30528,90237);
    caseQueue.insert(42709,21186);
    caseQueue.updatePriority(19537, 20239);
    myResult.push_back(caseQueue.getPriority(19537)); //8
    caseQueue.updatePriority(17125, 87911);
    myResult.push_back(caseQueue.getPriority(11259)); //9
    caseQueue.insert(95709,13863);
    caseQueue.insert(62608,64952);
    caseQueue.insert(29871,95668);
    caseQueue.insert(934,88921);
    caseQueue.insert(16729,89448);
    caseQueue.updatePriority(79929, 87103);
    myResult.push_back(caseQueue.getPriority(92996)); //10
    caseQueue.updatePriority(62608, 89931);
    caseQueue.insert(42758,21068);
    caseQueue.updatePriority(42758, 36402);
    caseQueue.updatePriority(95709, 15713);
    caseQueue.insert(2047,95793);
    caseQueue.updatePriority(29871, 12655);
    myResult.push_back(caseQueue.getPriority(42758)); //11
    caseQueue.insert(56350,35414);
    caseQueue.updatePriority(56350, 81900);
    caseQueue.insert(26984,79887);
    caseQueue.insert(931,97881);
    caseQueue.insert(25746,40994);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(73402,16633);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(26984)); //16
    caseQueue.insert(61990,97603);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(21538,12080);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(11259)); //19
    caseQueue.updatePriority(79929, 80446);
    caseQueue.insert(42782,42062);
    caseQueue.insert(42873,2394);
    caseQueue.insert(76197,2362);
    caseQueue.insert(16573,68464);
    myResult.push_back(caseQueue.getPriority(26984)); //20
    caseQueue.insert(18221,34416);
    caseQueue.updatePriority(76197, 16744);
    caseQueue.updatePriority(79929, 75398);
    myResult.push_back(caseQueue.getPriority(2047)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(76197)); //23
    myResult.push_back(caseQueue.getPriority(42782)); //24
    myResult.push_back(caseQueue.getPriority(11259)); //25
    caseQueue.insert(42563,47439);
    caseQueue.updatePriority(931, 89778);
    caseQueue.insert(89008,11434);
    caseQueue.updatePriority(42782, 20418);
    caseQueue.updatePriority(42563, 23370);
    caseQueue.insert(78366,56753);
    caseQueue.updatePriority(42563, 90334);
    caseQueue.insert(18357,79714);
    myResult.push_back(caseQueue.getPriority(934)); //26
    myResult.push_back(caseQueue.getPriority(10796)); //27
    caseQueue.insert(72437,88542);
    caseQueue.insert(42776,29580);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(3385,15577);
    caseQueue.updatePriority(26984, 24240);
    caseQueue.insert(53875,33423);
    myResult.push_back(caseQueue.getPriority(26984)); //30
    myResult.push_back(caseQueue.getPriority(18357)); //31
    caseQueue.insert(88289,78917);
    caseQueue.insert(98815,48453);
    caseQueue.updatePriority(42782, 86417);
    myResult.push_back(caseQueue.getPriority(30528)); //32
    caseQueue.updatePriority(3385, 65604);
    caseQueue.updatePriority(79929, 92959);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(79311,11847);
    caseQueue.updatePriority(98815, 29791);
    myResult.push_back(caseQueue.getPriority(56350)); //34
    caseQueue.insert(63666,28432);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(92996, 10436);
    caseQueue.insert(92915,46306);
    caseQueue.insert(32248,43349);
    caseQueue.updatePriority(18357, 20825);
    caseQueue.insert(40432,85548);
    myResult.push_back(caseQueue.getPriority(16573)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(92233,40244);
    caseQueue.insert(88532,89850);
    caseQueue.insert(33581,48610);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(61990, 12561);
    caseQueue.insert(23149,36807);
    caseQueue.updatePriority(11259, 18615);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(16729, 21000);
    caseQueue.updatePriority(931, 7248);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(91654,94987);
    caseQueue.insert(85331,59660);
    caseQueue.updatePriority(32248, 78814);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(16248,24757);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(92915)); //46
    caseQueue.insert(77383,29059);
    caseQueue.updatePriority(85331, 75042);
    caseQueue.insert(78967,44081);
    myResult.push_back(caseQueue.getPriority(42758)); //47
    caseQueue.insert(19438,52577);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(77383, 66464);
    myResult.push_back(caseQueue.getPriority(17125)); //49
    myResult.push_back(caseQueue.getPriority(2047)); //50
    caseQueue.insert(29635,31728);
    caseQueue.insert(33582,36513);
    caseQueue.insert(60568,2129);
    caseQueue.insert(96293,92761);
    myResult.push_back(caseQueue.getPriority(23149)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    static const int resultListArray[] = {5351, 52212, 52212, 75300, 71448, 78933, 75300, 20239, 34778, 44460, 36402, 29871, 95709, 19537, 73402, 79887, 42709, 21538, 34778, 79887, 95793, 42873, 16744, 42062, 34778, 88921, 75300, 89008, 76197, 24240, 79714, 90237, 26984, 81900, 79311, 63666, 68464, 92996, 18357, 42776, 98815, 61990, 931, 11259, 16729, 46306, 36402, 16248, 87911, 95793, 36807, 60568}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(21): Basarili" << endl;
    else cout << "Case(21): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_22(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 214);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(30277, 36439);
    myResult.push_back(caseQueue.getPriority(85899)); //4
    myResult.push_back(caseQueue.getPriority(39650)); //5
    caseQueue.insert(11311,51863);
    caseQueue.insert(12242,18847);
    caseQueue.insert(28847,89049);
    caseQueue.insert(68438,48624);
    myResult.push_back(caseQueue.getPriority(11311)); //6
    caseQueue.insert(77709,63124);
    caseQueue.insert(95352,63961);
    caseQueue.insert(4033,84744);
    myResult.push_back(caseQueue.getPriority(4033)); //7
    myResult.push_back(caseQueue.getPriority(11311)); //8
    caseQueue.updatePriority(12242, 87129);
    caseQueue.insert(71374,46465);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(28847, 43615);
    caseQueue.insert(58281,21393);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(95352)); //11
    caseQueue.updatePriority(11311, 53965);
    caseQueue.insert(51427,40173);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(61154,30437);
    caseQueue.updatePriority(11311, 83912);
    myResult.push_back(caseQueue.getPriority(4033)); //13
    caseQueue.insert(29207,52078);
    myResult.push_back(caseQueue.getPriority(11311)); //14
    caseQueue.insert(52929,22386);
    caseQueue.insert(5821,97948);
    caseQueue.insert(3890,75662);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(94537,34500);
    caseQueue.insert(4746,60786);
    caseQueue.updatePriority(11311, 82982);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(68438)); //18
    myResult.push_back(caseQueue.getPriority(29207)); //19
    caseQueue.insert(62953,38072);
    caseQueue.updatePriority(11311, 25417);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(4746)); //21
    caseQueue.updatePriority(68438, 81111);
    caseQueue.insert(37346,1724);
    caseQueue.updatePriority(68438, 81849);
    caseQueue.updatePriority(68438, 49509);
    caseQueue.insert(83504,92185);
    caseQueue.insert(56584,73569);
    caseQueue.updatePriority(3890, 95725);
    caseQueue.insert(16531,53981);
    caseQueue.insert(65467,58422);
    caseQueue.updatePriority(56584, 12905);
    caseQueue.updatePriority(77709, 67779);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(3890)); //23
    caseQueue.insert(83120,80190);
    caseQueue.insert(93672,42560);
    caseQueue.insert(8395,56037);
    myResult.push_back(caseQueue.getPriority(93672)); //24
    caseQueue.insert(11666,74931);
    caseQueue.insert(84146,69951);
    caseQueue.insert(59086,4469);
    caseQueue.insert(17848,76719);
    myResult.push_back(caseQueue.getPriority(77709)); //25
    caseQueue.updatePriority(77709, 47498);
    caseQueue.insert(83487,61390);
    myResult.push_back(caseQueue.getPriority(8395)); //26
    caseQueue.insert(82743,1045);
    caseQueue.insert(51272,48956);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(29207, 96211);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(77709, 84219);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(62870,7909);
    myResult.push_back(caseQueue.getPriority(8395)); //32
    caseQueue.insert(80333,19751);
    caseQueue.insert(50576,35038);
    caseQueue.updatePriority(65467, 23338);
    myResult.push_back(caseQueue.getPriority(16531)); //33
    myResult.push_back(caseQueue.getPriority(12242)); //34
    caseQueue.updatePriority(83504, 89690);
    caseQueue.updatePriority(50576, 3644);
    myResult.push_back(caseQueue.getPriority(95352)); //35
    caseQueue.updatePriority(12242, 80985);
    caseQueue.insert(75551,69549);
    caseQueue.insert(34035,61908);
    caseQueue.insert(67523,71412);
    caseQueue.updatePriority(28847, 38803);
    caseQueue.insert(96523,893);
    caseQueue.insert(39295,65219);
    caseQueue.insert(14776,75439);
    caseQueue.updatePriority(8395, 51059);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(57162,92296);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(51272)); //38
    caseQueue.insert(47380,50988);
    caseQueue.insert(45496,72934);
    caseQueue.insert(54220,65907);
    caseQueue.updatePriority(16531, 6579);
    caseQueue.updatePriority(75551, 19886);
    myResult.push_back(caseQueue.getPriority(34035)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(52919,99782);
    caseQueue.updatePriority(83487, 68403);
    caseQueue.insert(5089,65072);
    caseQueue.updatePriority(3890, 56199);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(40785,18960);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(54220)); //44
    caseQueue.insert(50000,22339);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(28847, 40228);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(34035, 20697);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(52919)); //48
    caseQueue.insert(16631,80956);
    caseQueue.insert(76449,66764);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(57162)); //51
    myResult.push_back(caseQueue.getPriority(77709)); //52
    caseQueue.updatePriority(83487, 62696);
    caseQueue.insert(2265,25707);
    caseQueue.insert(13887,4961);
    caseQueue.insert(58244,20191);
    caseQueue.insert(76665,68019);
    caseQueue.updatePriority(4746, 42742);
    caseQueue.updatePriority(5089, 85654);
    caseQueue.insert(29583,16657);
    myResult.push_back(caseQueue.getPriority(3890)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(51958,33520);
    caseQueue.insert(25378,97501);
    myResult.push_back(caseQueue.getPriority(51958)); //55
    caseQueue.updatePriority(14776, 39121);
    caseQueue.updatePriority(83120, 29639);
    caseQueue.updatePriority(14776, 56902);
    caseQueue.insert(71494,70976);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(11776,99848);
    myResult.push_back(caseQueue.getPriority(76449)); //57
    caseQueue.updatePriority(12242, 2662);
    caseQueue.updatePriority(71494, 36034);
    caseQueue.insert(2394,40010);
    caseQueue.updatePriority(2265, 13935);
    caseQueue.updatePriority(68438, 6875);
    caseQueue.updatePriority(11666, 93903);
    caseQueue.insert(79424,29010);
    caseQueue.updatePriority(79424, 96751);
    caseQueue.updatePriority(71494, 98967);
    caseQueue.updatePriority(84146, 51581);
    caseQueue.insert(96277,94641);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(40447,13248);
    caseQueue.insert(45580,16447);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(52919)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(11776)); //63
    myResult.push_back(caseQueue.getPriority(47380)); //64
    caseQueue.insert(25516,75507);
    caseQueue.insert(89994,76827);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(25516, 6639);
    caseQueue.insert(82116,4185);
    caseQueue.updatePriority(82116, 79877);
    caseQueue.updatePriority(83487, 43706);
    caseQueue.insert(75647,78088);
    caseQueue.insert(11827,22573);
    caseQueue.updatePriority(77709, 26600);
    myResult.push_back(caseQueue.getPriority(76449)); //66
    myResult.push_back(caseQueue.getPriority(51958)); //67
    myResult.push_back(caseQueue.getPriority(5089)); //68
    caseQueue.insert(13897,30303);
    caseQueue.insert(85413,9257);
    caseQueue.insert(93059,58314);
    caseQueue.insert(19845,42383);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(35964,67463);
    caseQueue.updatePriority(58244, 99489);
    caseQueue.insert(18576,3325);
    caseQueue.updatePriority(19845, 98299);
    caseQueue.updatePriority(3890, 87614);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(45496, 64114);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(89461,47544);
    caseQueue.insert(31331,34159);
    caseQueue.updatePriority(31331, 52740);
    caseQueue.insert(13546,87960);
    myResult.push_back(caseQueue.getPriority(54220)); //73
    caseQueue.insert(49614,15928);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.updatePriority(76665, 58763);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(3890, 6134);
    caseQueue.insert(90585,21390);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(5089)); //77
    myResult.push_back(caseQueue.getPriority(67523)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    static const int resultListArray[] = {-1, -1, -1, -1, -1, 51863, 84744, 51863, 71374, 58281, 63961, 51427, 84744, 83912, 52929, 61154, 94537, 48624, 52078, 11311, 60786, 37346, 95725, 42560, 67779, 56037, 82743, 59086, 56584, 62953, 93672, 56037, 53981, 87129, 63961, 96523, 50576, 48956, 61908, 16531, 62870, 80333, 40785, 65907, 75551, 50000, 34035, 99782, 65467, 28847, 92296, 84219, 56199, 13887, 33520, 29583, 66764, 12242, 68438, 99782, 40447, 2265, 99848, 50988, 45580, 66764, 33520, 85654, 25516, 85413, 18576, 11827, 65907, 49614, 77709, 3890, 85654, 71412, 90585}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(22): Basarili" << endl;
    else cout << "Case(22): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_23(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 176);

    vector<int> myResult; 
    caseQueue.insert(42874,37210);
    myResult.push_back(caseQueue.getPriority(42874)); //1
    caseQueue.insert(47820,82456);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(25260,32701);
    caseQueue.updatePriority(47820, 75808);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(14356, 9931);
    myResult.push_back(caseQueue.getPriority(76289)); //5
    caseQueue.updatePriority(30237, 50939);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(16336,99600);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(22573)); //8
    caseQueue.updatePriority(92710, 82629);
    caseQueue.insert(34652,61862);
    caseQueue.insert(74205,63405);
    caseQueue.insert(83358,54380);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(74205)); //10
    myResult.push_back(caseQueue.getPriority(74205)); //11
    caseQueue.insert(64523,80533);
    caseQueue.updatePriority(74205, 13865);
    caseQueue.insert(5942,24857);
    caseQueue.updatePriority(5942, 42612);
    caseQueue.updatePriority(5942, 33534);
    caseQueue.updatePriority(74205, 73844);
    caseQueue.updatePriority(34652, 77695);
    caseQueue.insert(77022,96431);
    caseQueue.updatePriority(74205, 20564);
    caseQueue.updatePriority(77022, 7415);
    myResult.push_back(caseQueue.getPriority(34652)); //12
    myResult.push_back(caseQueue.getPriority(34652)); //13
    caseQueue.insert(30637,90769);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(74205, 89054);
    caseQueue.updatePriority(74205, 56696);
    caseQueue.updatePriority(64523, 38933);
    caseQueue.insert(43531,56954);
    caseQueue.insert(59476,92070);
    myResult.push_back(caseQueue.getPriority(43531)); //15
    caseQueue.insert(36531,51148);
    myResult.push_back(caseQueue.getPriority(34652)); //16
    caseQueue.insert(66174,42755);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(74205, 30774);
    caseQueue.updatePriority(64523, 96918);
    caseQueue.updatePriority(74205, 16601);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(91234,39094);
    caseQueue.updatePriority(64523, 55633);
    caseQueue.insert(28827,55567);
    myResult.push_back(caseQueue.getPriority(36531)); //19
    myResult.push_back(caseQueue.getPriority(66174)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(16118,25331);
    caseQueue.insert(29154,85200);
    myResult.push_back(caseQueue.getPriority(34652)); //22
    caseQueue.updatePriority(59476, 7831);
    caseQueue.insert(51486,69601);
    caseQueue.updatePriority(36531, 99700);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(76173,57943);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(28827)); //25
    myResult.push_back(caseQueue.getPriority(43531)); //26
    caseQueue.updatePriority(34652, 81159);
    caseQueue.insert(99569,54676);
    caseQueue.updatePriority(28827, 62539);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(64523, 24578);
    caseQueue.updatePriority(29154, 89140);
    caseQueue.updatePriority(43531, 72446);
    caseQueue.insert(81649,63797);
    caseQueue.updatePriority(43531, 61557);
    caseQueue.insert(1739,64569);
    caseQueue.insert(21500,95433);
    caseQueue.insert(6281,77096);
    caseQueue.updatePriority(34652, 45905);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(65858,22525);
    caseQueue.insert(41345,68851);
    myResult.push_back(caseQueue.getPriority(1739)); //30
    caseQueue.insert(24556,64266);
    caseQueue.insert(64034,73718);
    myResult.push_back(caseQueue.getPriority(51486)); //31
    caseQueue.insert(86876,7486);
    caseQueue.updatePriority(65858, 76241);
    caseQueue.insert(91559,4320);
    caseQueue.updatePriority(1739, 78341);
    myResult.push_back(caseQueue.getPriority(91559)); //32
    caseQueue.insert(46399,91369);
    caseQueue.insert(833,64823);
    caseQueue.insert(68465,88248);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(34530,85983);
    caseQueue.insert(53770,56249);
    caseQueue.updatePriority(81649, 38724);
    caseQueue.insert(31926,99165);
    caseQueue.insert(68513,78790);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(36531)); //35
    myResult.push_back(caseQueue.getPriority(1739)); //36
    caseQueue.updatePriority(36531, 89652);
    caseQueue.updatePriority(68465, 14129);
    caseQueue.insert(66865,11629);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(36531, 3723);
    caseQueue.updatePriority(43531, 4017);
    caseQueue.insert(63105,78585);
    caseQueue.updatePriority(1739, 3031);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(68513, 2451);
    caseQueue.insert(31786,92737);
    caseQueue.updatePriority(30637, 72860);
    myResult.push_back(caseQueue.getPriority(68513)); //40
    caseQueue.updatePriority(76173, 96811);
    caseQueue.insert(94591,436);
    caseQueue.insert(83726,75723);
    caseQueue.updatePriority(36531, 65098);
    myResult.push_back(caseQueue.getPriority(24556)); //41
    caseQueue.updatePriority(21500, 99978);
    myResult.push_back(caseQueue.getPriority(51486)); //42
    caseQueue.updatePriority(83726, 3367);
    myResult.push_back(caseQueue.getPriority(6281)); //43
    caseQueue.insert(31513,69647);
    myResult.push_back(caseQueue.getPriority(34530)); //44
    caseQueue.updatePriority(6281, 45131);
    caseQueue.insert(76217,22165);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(68513, 54794);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(34530, 76826);
    caseQueue.insert(499,80210);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(77482,61609);
    myResult.push_back(caseQueue.getPriority(53770)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(22559,62579);
    caseQueue.insert(3341,29039);
    myResult.push_back(caseQueue.getPriority(99569)); //50
    myResult.push_back(caseQueue.getPriority(499)); //51
    myResult.push_back(caseQueue.getPriority(64034)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(90377,3369);
    myResult.push_back(caseQueue.getPriority(41345)); //54
    caseQueue.insert(75156,45723);
    caseQueue.insert(11137,54135);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(7468,68368);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(24556, 62031);
    caseQueue.updatePriority(833, 21216);
    caseQueue.insert(6025,46853);
    caseQueue.updatePriority(24556, 68166);
    caseQueue.insert(24598,52650);
    caseQueue.insert(45569,30178);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(93229,25850);
    caseQueue.insert(73376,27653);
    myResult.push_back(caseQueue.getPriority(64034)); //60
    caseQueue.insert(74353,67723);
    myResult.push_back(caseQueue.getPriority(21500)); //61
    caseQueue.updatePriority(46399, 96048);
    caseQueue.updatePriority(51486, 90588);
    caseQueue.insert(81919,7972);
    caseQueue.insert(96234,6022);
    caseQueue.updatePriority(63105, 48577);
    caseQueue.updatePriority(22559, 34874);
    caseQueue.insert(29012,50245);
    caseQueue.insert(36151,35406);
    static const int resultListArray[] = {37210, 42874, 25260, 47820, -1, -1, 16336, -1, 83358, 63405, 63405, 77695, 77695, 77022, 56954, 77695, 5942, 74205, 51148, 42755, 91234, 77695, 59476, 16118, 55567, 56954, 66174, 64523, 34652, 64569, 69601, 4320, 91559, 86876, 99700, 78341, 66865, 68465, 1739, 2451, 64266, 69601, 77096, 85983, 94591, 83726, 43531, 56249, 76217, 54676, 80210, 73718, 3341, 68851, 90377, 81649, 6281, 833, 45569, 73718, 99978}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(23): Basarili" << endl;
    else cout << "Case(23): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_24(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 186);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(43466,56343);
    myResult.push_back(caseQueue.getPriority(43466)); //2
    caseQueue.insert(72150,56779);
    caseQueue.insert(89825,94602);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(45691,5793);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(79143,29465);
    myResult.push_back(caseQueue.getPriority(79143)); //5
    caseQueue.insert(43943,67159);
    myResult.push_back(caseQueue.getPriority(79143)); //6
    caseQueue.updatePriority(43943, 97411);
    caseQueue.updatePriority(89825, 30966);
    caseQueue.insert(64850,34968);
    caseQueue.insert(60944,45669);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(43943, 19803);
    caseQueue.insert(82351,4591);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(60944, 7299);
    myResult.push_back(caseQueue.getPriority(72150)); //10
    caseQueue.updatePriority(43943, 57906);
    myResult.push_back(caseQueue.getPriority(72150)); //11
    caseQueue.updatePriority(60944, 47598);
    caseQueue.insert(30448,83810);
    caseQueue.insert(12219,28608);
    caseQueue.insert(82931,74223);
    caseQueue.updatePriority(43943, 26403);
    caseQueue.insert(68446,79789);
    caseQueue.insert(5664,19421);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(64850)); //13
    caseQueue.insert(81389,81986);
    caseQueue.insert(15740,3398);
    caseQueue.updatePriority(82931, 7002);
    caseQueue.insert(58840,22560);
    caseQueue.insert(32059,71044);
    caseQueue.updatePriority(15740, 12843);
    caseQueue.insert(48950,58114);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(15740)); //15
    caseQueue.updatePriority(30448, 27678);
    myResult.push_back(caseQueue.getPriority(32059)); //16
    caseQueue.updatePriority(64850, 10486);
    caseQueue.insert(6004,22028);
    caseQueue.insert(41562,90390);
    caseQueue.insert(74598,36856);
    caseQueue.insert(26740,49449);
    myResult.push_back(caseQueue.getPriority(72150)); //17
    caseQueue.insert(19474,99053);
    caseQueue.insert(47502,79045);
    myResult.push_back(caseQueue.getPriority(72150)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(30448)); //20
    myResult.push_back(caseQueue.getPriority(19474)); //21
    caseQueue.insert(54335,14241);
    caseQueue.insert(70594,52965);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(68651,24808);
    caseQueue.updatePriority(72150, 56785);
    caseQueue.insert(91590,84089);
    caseQueue.insert(39230,40625);
    myResult.push_back(caseQueue.getPriority(81389)); //23
    caseQueue.updatePriority(32059, 10196);
    caseQueue.insert(67082,80029);
    caseQueue.insert(79431,40985);
    caseQueue.insert(96173,16605);
    caseQueue.insert(6026,27416);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(70594)); //25
    caseQueue.updatePriority(79431, 57406);
    myResult.push_back(caseQueue.getPriority(6026)); //26
    myResult.push_back(caseQueue.getPriority(79431)); //27
    caseQueue.insert(44116,34947);
    caseQueue.updatePriority(43943, 83548);
    caseQueue.updatePriority(48950, 71294);
    caseQueue.insert(2492,81625);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(35435,99291);
    caseQueue.insert(56127,61907);
    caseQueue.updatePriority(68446, 7611);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(6026)); //30
    myResult.push_back(caseQueue.getPriority(48950)); //31
    caseQueue.insert(94115,68020);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(48950)); //33
    caseQueue.updatePriority(2492, 40863);
    caseQueue.insert(66398,31151);
    myResult.push_back(caseQueue.getPriority(56127)); //34
    caseQueue.insert(22235,99002);
    myResult.push_back(caseQueue.getPriority(30448)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(6367,87490);
    myResult.push_back(caseQueue.getPriority(81389)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(41562, 42552);
    caseQueue.updatePriority(2492, 70495);
    myResult.push_back(caseQueue.getPriority(35435)); //39
    myResult.push_back(caseQueue.getPriority(26740)); //40
    caseQueue.updatePriority(43943, 23428);
    caseQueue.insert(44481,64214);
    caseQueue.insert(82489,49150);
    myResult.push_back(caseQueue.getPriority(72150)); //41
    caseQueue.updatePriority(6026, 88678);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(91590)); //43
    caseQueue.insert(32674,64736);
    myResult.push_back(caseQueue.getPriority(81389)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(63678,75131);
    caseQueue.updatePriority(44481, 61146);
    caseQueue.insert(19665,29133);
    caseQueue.updatePriority(94115, 87362);
    caseQueue.insert(70733,86601);
    myResult.push_back(caseQueue.getPriority(19474)); //46
    myResult.push_back(caseQueue.getPriority(67082)); //47
    caseQueue.updatePriority(44116, 93569);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(35951,23082);
    caseQueue.insert(38107,95437);
    caseQueue.updatePriority(19474, 42018);
    myResult.push_back(caseQueue.getPriority(70733)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(5654,86255);
    caseQueue.updatePriority(19665, 55920);
    caseQueue.insert(33486,1208);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(63678, 49395);
    myResult.push_back(caseQueue.getPriority(94115)); //52
    caseQueue.insert(6139,85104);
    caseQueue.insert(1504,67304);
    myResult.push_back(caseQueue.getPriority(44481)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(72150)); //55
    caseQueue.insert(42332,56180);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(47502, 64149);
    caseQueue.insert(5103,66493);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(49817,48372);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(97394,45312);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(81389, 74605);
    caseQueue.updatePriority(19665, 81011);
    myResult.push_back(caseQueue.getPriority(70733)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(81389)); //62
    myResult.push_back(caseQueue.getPriority(5654)); //63
    caseQueue.updatePriority(47502, 44294);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(22232,61540);
    caseQueue.insert(21808,11397);
    caseQueue.insert(89702,56549);
    caseQueue.insert(26315,85452);
    caseQueue.updatePriority(44481, 23869);
    caseQueue.insert(35656,63461);
    caseQueue.insert(84920,94420);
    caseQueue.updatePriority(1504, 89125);
    caseQueue.insert(55297,91444);
    caseQueue.insert(11596,53149);
    caseQueue.updatePriority(6026, 21547);
    myResult.push_back(caseQueue.getPriority(6139)); //66
    caseQueue.updatePriority(21808, 58927);
    myResult.push_back(caseQueue.getPriority(63678)); //67
    caseQueue.updatePriority(44481, 55291);
    caseQueue.insert(99833,95387);
    myResult.push_back(caseQueue.getPriority(60944)); //68
    caseQueue.updatePriority(81389, 31575);
    myResult.push_back(caseQueue.getPriority(49817)); //69
    caseQueue.insert(25650,80756);
    myResult.push_back(caseQueue.getPriority(49817)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(87485,34401);
    caseQueue.insert(39020,95597);
    caseQueue.insert(75461,38509);
    caseQueue.updatePriority(91590, 81217);
    caseQueue.insert(99859,49547);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(21808, 18993);
    myResult.push_back(caseQueue.deleteMin()); //74
    static const int resultListArray[] = {-1, 56343, 43466, 45691, 29465, 29465, 79143, 89825, 82351, 56779, 56779, 5664, 34968, 82931, 12843, 71044, 56779, 56779, 64850, 27678, 99053, 15740, 81986, 32059, 52965, 27416, 57406, 54335, 68446, 27416, 71294, 96173, 71294, 61907, 27678, 6004, 81986, 58840, 99291, 49449, 56785, 43943, 84089, 81986, 68651, 99053, 80029, 30448, 86601, 35951, 33486, 87362, 61146, 12219, 56785, 66398, 74598, 39230, 19474, 86601, 41562, 74605, 86255, 47502, 97394, 85104, 49395, 47598, 48372, 48372, 6026, 81389, 87485, 21808}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(24): Basarili" << endl;
    else cout << "Case(24): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_25(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 196);

    vector<int> myResult; 
    caseQueue.insert(63857,17981);
    caseQueue.insert(89725,49100);
    caseQueue.updatePriority(89725, 75434);
    caseQueue.insert(22212,29273);
    caseQueue.updatePriority(89725, 41634);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(45567,74152);
    caseQueue.updatePriority(45567, 7226);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(80478,2964);
    caseQueue.insert(71671,25554);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(71671)); //5
    caseQueue.insert(35908,52689);
    caseQueue.updatePriority(89725, 57329);
    caseQueue.insert(14804,76959);
    caseQueue.insert(17689,32019);
    caseQueue.insert(3327,22146);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(71671)); //7
    caseQueue.insert(4926,213);
    caseQueue.updatePriority(89725, 50824);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(35908)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(79951,60850);
    caseQueue.updatePriority(89725, 3830);
    caseQueue.insert(34884,88037);
    caseQueue.insert(60993,95392);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(79951, 60331);
    myResult.push_back(caseQueue.getPriority(79951)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(12731,40014);
    caseQueue.updatePriority(14804, 31336);
    caseQueue.insert(51307,50956);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(60993)); //15
    caseQueue.updatePriority(51307, 10221);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(79951)); //18
    caseQueue.insert(87909,91451);
    myResult.push_back(caseQueue.getPriority(35908)); //19
    caseQueue.updatePriority(87909, 70579);
    caseQueue.insert(14388,65412);
    caseQueue.insert(84545,53881);
    myResult.push_back(caseQueue.getPriority(60993)); //20
    caseQueue.insert(48066,67249);
    caseQueue.insert(80540,32130);
    myResult.push_back(caseQueue.getPriority(80540)); //21
    caseQueue.updatePriority(87909, 76177);
    caseQueue.insert(29980,33446);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(75337,89921);
    caseQueue.insert(88445,65695);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(34844,29604);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(34884)); //27
    caseQueue.insert(40652,35239);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(76729,98218);
    myResult.push_back(caseQueue.getPriority(79951)); //29
    caseQueue.insert(54670,28355);
    myResult.push_back(caseQueue.getPriority(87909)); //30
    caseQueue.updatePriority(87909, 87310);
    caseQueue.updatePriority(34884, 34867);
    myResult.push_back(caseQueue.getPriority(14388)); //31
    caseQueue.insert(31702,55072);
    caseQueue.updatePriority(60993, 38306);
    caseQueue.insert(30849,69029);
    myResult.push_back(caseQueue.getPriority(54670)); //32
    caseQueue.insert(66344,85652);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(75337)); //34
    myResult.push_back(caseQueue.getPriority(76729)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(1019,45721);
    caseQueue.insert(84888,38351);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(66344, 318);
    caseQueue.insert(9331,39024);
    caseQueue.insert(78066,43430);
    myResult.push_back(caseQueue.getPriority(88445)); //38
    myResult.push_back(caseQueue.getPriority(88445)); //39
    caseQueue.insert(19794,92109);
    caseQueue.insert(83658,99225);
    caseQueue.updatePriority(1019, 61681);
    caseQueue.updatePriority(75337, 41305);
    caseQueue.insert(8744,46810);
    caseQueue.insert(85725,17034);
    caseQueue.updatePriority(66344, 93572);
    caseQueue.insert(14103,40587);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(30616,25823);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(18890,5020);
    caseQueue.insert(96408,94947);
    caseQueue.insert(46484,21814);
    caseQueue.updatePriority(14103, 24296);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(17410,69352);
    caseQueue.insert(6380,69383);
    caseQueue.updatePriority(87909, 97780);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(8744)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(17410)); //48
    caseQueue.updatePriority(96408, 70778);
    caseQueue.updatePriority(17410, 88209);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(6380, 10098);
    myResult.push_back(caseQueue.getPriority(19794)); //50
    caseQueue.insert(30895,4684);
    caseQueue.insert(73735,98117);
    caseQueue.insert(21396,75988);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(83353,95082);
    myResult.push_back(caseQueue.getPriority(83353)); //52
    caseQueue.updatePriority(66344, 3335);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(88445)); //54
    myResult.push_back(caseQueue.getPriority(17410)); //55
    caseQueue.insert(37242,83634);
    caseQueue.insert(19221,60843);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(18802,87048);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(19794, 48247);
    caseQueue.insert(97172,49936);
    caseQueue.updatePriority(17410, 93536);
    caseQueue.updatePriority(97172, 87867);
    caseQueue.insert(80218,5036);
    myResult.push_back(caseQueue.getPriority(97172)); //60
    myResult.push_back(caseQueue.getPriority(96408)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(49376,86102);
    caseQueue.updatePriority(96408, 60629);
    myResult.push_back(caseQueue.getPriority(21396)); //63
    caseQueue.updatePriority(97172, 2801);
    caseQueue.insert(88948,48192);
    caseQueue.updatePriority(49376, 54184);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(87244,92711);
    caseQueue.insert(3882,89344);
    caseQueue.insert(14195,73962);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(43135,3042);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(48066, 61484);
    myResult.push_back(caseQueue.getPriority(87244)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(5850,59728);
    myResult.push_back(caseQueue.getPriority(83658)); //71
    caseQueue.updatePriority(48066, 53471);
    caseQueue.insert(18602,24483);
    myResult.push_back(caseQueue.getPriority(18802)); //72
    myResult.push_back(caseQueue.getPriority(18802)); //73
    caseQueue.insert(32701,1201);
    caseQueue.insert(3710,44193);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(42560,43143);
    caseQueue.insert(15280,4171);
    caseQueue.insert(98087,23310);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(48066)); //77
    caseQueue.updatePriority(48066, 63021);
    caseQueue.insert(54252,58454);
    caseQueue.insert(13162,25582);
    caseQueue.insert(24534,2458);
    caseQueue.insert(99923,17231);
    myResult.push_back(caseQueue.getPriority(24534)); //78
    caseQueue.insert(27571,26848);
    caseQueue.updatePriority(27571, 17623);
    caseQueue.updatePriority(30849, 13661);
    caseQueue.insert(87941,22200);
    caseQueue.insert(47824,8624);
    myResult.push_back(caseQueue.getPriority(1019)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(77857,30017);
    caseQueue.updatePriority(88445, 92729);
    caseQueue.insert(53772,43177);
    caseQueue.insert(52888,58032);
    myResult.push_back(caseQueue.getPriority(83353)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    static const int resultListArray[] = {63857, 22212, 45567, 80478, 25554, 3327, 25554, 4926, 52689, 71671, 89725, 60331, 17689, 14804, 95392, 51307, 12731, 60331, 52689, 95392, 32130, 80540, 29980, 35908, 84545, 34844, 88037, 40652, 60331, 76177, 65412, 28355, 54670, 89921, 98218, 34884, 60993, 65695, 65695, 85725, 30616, 84888, 18890, 46484, 46810, 14103, 9331, 69352, 75337, 92109, 30895, 95082, 66344, 65695, 88209, 6380, 78066, 8744, 31702, 87867, 70778, 80218, 75988, 97172, 88948, 19794, 43135, 92711, 49376, 79951, 99225, 87048, 87048, 32701, 15280, 98087, 53471, 2458, 61681, 24534, 95082, 47824}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(25): Basarili" << endl;
    else cout << "Case(25): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_26(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 104);

    vector<int> myResult; 
    caseQueue.updatePriority(19958, 12823);
    myResult.push_back(caseQueue.getPriority(8556)); //1
    caseQueue.insert(79940,88442);
    caseQueue.insert(73559,79146);
    caseQueue.insert(47741,27475);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(23292,1620);
    myResult.push_back(caseQueue.getPriority(23292)); //4
    myResult.push_back(caseQueue.getPriority(79940)); //5
    caseQueue.insert(5054,16602);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(12461)); //9
    caseQueue.updatePriority(97386, 73500);
    caseQueue.insert(98460,60087);
    caseQueue.updatePriority(98460, 42690);
    caseQueue.insert(34768,4539);
    caseQueue.insert(24783,94722);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(98460)); //11
    caseQueue.insert(17351,67263);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(92129,96157);
    caseQueue.insert(80397,28755);
    caseQueue.insert(66048,21791);
    myResult.push_back(caseQueue.getPriority(24783)); //14
    caseQueue.updatePriority(80397, 44576);
    caseQueue.insert(11514,3860);
    myResult.push_back(caseQueue.getPriority(80397)); //15
    myResult.push_back(caseQueue.getPriority(11514)); //16
    caseQueue.insert(87285,84269);
    caseQueue.insert(10002,82753);
    caseQueue.insert(58139,46253);
    caseQueue.updatePriority(66048, 37885);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(92129, 41572);
    caseQueue.insert(76751,16710);
    myResult.push_back(caseQueue.getPriority(80397)); //19
    myResult.push_back(caseQueue.getPriority(80397)); //20
    myResult.push_back(caseQueue.getPriority(80397)); //21
    caseQueue.insert(32042,15485);
    caseQueue.insert(70424,36619);
    caseQueue.insert(46463,80910);
    myResult.push_back(caseQueue.getPriority(10002)); //22
    caseQueue.insert(83878,84675);
    caseQueue.insert(97371,97008);
    myResult.push_back(caseQueue.getPriority(58139)); //23
    caseQueue.updatePriority(80397, 44519);
    caseQueue.insert(86843,46316);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(38547,99796);
    caseQueue.insert(17806,30739);
    caseQueue.updatePriority(97371, 16849);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(69448,57026);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(25227,50111);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(24783, 40173);
    caseQueue.updatePriority(83878, 28511);
    caseQueue.insert(26378,96213);
    caseQueue.updatePriority(83878, 99987);
    caseQueue.updatePriority(69448, 36192);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(10002, 94031);
    myResult.push_back(caseQueue.getPriority(10002)); //31
    caseQueue.insert(50575,80343);
    caseQueue.insert(72702,31071);
    myResult.push_back(caseQueue.getPriority(83878)); //32
    myResult.push_back(caseQueue.getPriority(26378)); //33
    caseQueue.insert(77468,64134);
    caseQueue.updatePriority(92129, 76675);
    caseQueue.updatePriority(92129, 13275);
    caseQueue.insert(45332,50774);
    caseQueue.insert(18019,80634);
    caseQueue.insert(73085,38935);
    myResult.push_back(caseQueue.getPriority(45332)); //34
    myResult.push_back(caseQueue.getPriority(18019)); //35
    myResult.push_back(caseQueue.getPriority(18019)); //36
    myResult.push_back(caseQueue.getPriority(25227)); //37
    caseQueue.insert(5887,78884);
    caseQueue.updatePriority(46463, 57249);
    caseQueue.insert(68737,49057);
    caseQueue.insert(7051,44067);
    myResult.push_back(caseQueue.getPriority(26378)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(46463)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(77468, 75209);
    caseQueue.insert(41062,34239);
    caseQueue.insert(5659,52735);
    caseQueue.insert(48851,27894);
    caseQueue.updatePriority(5659, 31198);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(46463, 54949);
    caseQueue.insert(86497,82541);
    caseQueue.insert(45298,43738);
    static const int resultListArray[] = {-1, 47741, 73559, 1620, 88442, 23292, 5054, 79940, -1, 34768, 42690, 98460, 17351, 94722, 44576, 3860, 11514, 66048, 44576, 44576, 44576, 82753, 46253, 32042, 76751, 97371, 17806, 70424, 69448, 24783, 94031, 99987, 96213, 50774, 80634, 80634, 50111, 96213, 92129, 57249, 72702, 73085, 48851}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(26): Basarili" << endl;
    else cout << "Case(26): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_27(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 248);

    vector<int> myResult; 
    caseQueue.updatePriority(41454, 67275);
    caseQueue.updatePriority(79676, 27724);
    caseQueue.updatePriority(26617, 79220);
    caseQueue.insert(61254,7716);
    caseQueue.updatePriority(61254, 19859);
    caseQueue.insert(2179,57132);
    caseQueue.insert(24612,83238);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(99029,20030);
    myResult.push_back(caseQueue.getPriority(24612)); //3
    caseQueue.updatePriority(99029, 11435);
    caseQueue.updatePriority(99029, 43156);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(24612, 71025);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(73254,42313);
    myResult.push_back(caseQueue.getPriority(73254)); //8
    myResult.push_back(caseQueue.getPriority(73254)); //9
    myResult.push_back(caseQueue.getPriority(73254)); //10
    caseQueue.updatePriority(73254, 92677);
    caseQueue.insert(42377,27516);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(73254, 59497);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(30582, 15212);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(55577,98163);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(82605,23489);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(98916, 47868);
    caseQueue.insert(78620,24806);
    myResult.push_back(caseQueue.getPriority(78620)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(5705,80685);
    caseQueue.insert(62525,31979);
    caseQueue.insert(35435,55457);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(2896,11283);
    caseQueue.insert(12495,56606);
    caseQueue.updatePriority(5705, 35130);
    caseQueue.insert(80775,11321);
    caseQueue.updatePriority(12495, 69727);
    caseQueue.insert(3169,73236);
    caseQueue.insert(62368,83716);
    caseQueue.updatePriority(80775, 87893);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(5705, 34599);
    caseQueue.updatePriority(3169, 8170);
    caseQueue.insert(9245,58809);
    caseQueue.insert(85215,35906);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(6427,10669);
    caseQueue.insert(87796,20810);
    myResult.push_back(caseQueue.getPriority(80775)); //25
    myResult.push_back(caseQueue.getPriority(6427)); //26
    caseQueue.insert(7815,75535);
    caseQueue.updatePriority(62368, 3710);
    myResult.push_back(caseQueue.getPriority(87796)); //27
    caseQueue.updatePriority(7815, 38792);
    caseQueue.insert(51066,97608);
    myResult.push_back(caseQueue.getPriority(80775)); //28
    caseQueue.insert(66379,52765);
    myResult.push_back(caseQueue.getPriority(51066)); //29
    caseQueue.updatePriority(80775, 94765);
    caseQueue.insert(17229,86159);
    caseQueue.insert(45485,84172);
    myResult.push_back(caseQueue.getPriority(7815)); //30
    caseQueue.insert(24973,68954);
    caseQueue.insert(8088,96777);
    caseQueue.insert(63253,54684);
    myResult.push_back(caseQueue.getPriority(45485)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(55814,66836);
    caseQueue.updatePriority(87796, 25123);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(55814)); //35
    caseQueue.insert(69207,32161);
    myResult.push_back(caseQueue.getPriority(85215)); //36
    caseQueue.insert(73343,473);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(94161,70769);
    myResult.push_back(caseQueue.getPriority(51066)); //39
    caseQueue.insert(20176,70372);
    caseQueue.insert(78606,77966);
    caseQueue.updatePriority(85215, 28952);
    caseQueue.updatePriority(12495, 2841);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(20176)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(24973, 28457);
    myResult.push_back(caseQueue.getPriority(20176)); //46
    caseQueue.insert(16403,46808);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(85422,79039);
    myResult.push_back(caseQueue.getPriority(20176)); //48
    myResult.push_back(caseQueue.getPriority(78606)); //49
    caseQueue.insert(14030,87943);
    myResult.push_back(caseQueue.getPriority(55814)); //50
    caseQueue.insert(27890,39622);
    caseQueue.insert(28125,59171);
    myResult.push_back(caseQueue.getPriority(80775)); //51
    caseQueue.insert(31141,89989);
    caseQueue.updatePriority(78606, 33389);
    caseQueue.updatePriority(17229, 91943);
    myResult.push_back(caseQueue.getPriority(9245)); //52
    caseQueue.updatePriority(51066, 49860);
    caseQueue.updatePriority(63253, 44792);
    caseQueue.insert(76265,93598);
    myResult.push_back(caseQueue.getPriority(27890)); //53
    caseQueue.insert(15024,41542);
    myResult.push_back(caseQueue.getPriority(14030)); //54
    caseQueue.insert(51307,24679);
    caseQueue.updatePriority(63253, 62060);
    caseQueue.insert(50029,27832);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(79290,64044);
    caseQueue.insert(77393,63039);
    caseQueue.insert(58821,79583);
    caseQueue.insert(75884,68644);
    caseQueue.updatePriority(31141, 90974);
    caseQueue.insert(92963,1329);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(78606)); //57
    myResult.push_back(caseQueue.getPriority(16403)); //58
    caseQueue.insert(95385,80131);
    caseQueue.insert(68301,20476);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(75884, 31339);
    myResult.push_back(caseQueue.getPriority(63253)); //61
    caseQueue.insert(70994,24941);
    myResult.push_back(caseQueue.getPriority(31141)); //62
    caseQueue.insert(4995,43964);
    caseQueue.insert(7074,78818);
    caseQueue.insert(25878,74568);
    caseQueue.updatePriority(63253, 22907);
    myResult.push_back(caseQueue.getPriority(70994)); //63
    myResult.push_back(caseQueue.getPriority(63253)); //64
    caseQueue.updatePriority(58821, 96707);
    caseQueue.insert(86195,26611);
    caseQueue.insert(76789,42695);
    caseQueue.insert(77890,33781);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(28125)); //67
    caseQueue.insert(87909,91032);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(17229, 59314);
    myResult.push_back(caseQueue.getPriority(28125)); //69
    caseQueue.insert(5426,41649);
    caseQueue.insert(25238,76566);
    caseQueue.updatePriority(25238, 30210);
    myResult.push_back(caseQueue.getPriority(75884)); //70
    caseQueue.insert(91205,38425);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(79290, 5441);
    myResult.push_back(caseQueue.getPriority(76265)); //72
    caseQueue.insert(18289,18720);
    caseQueue.insert(80179,17120);
    myResult.push_back(caseQueue.getPriority(79290)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(14030)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(42985,40914);
    caseQueue.insert(79974,74155);
    caseQueue.insert(78824,28609);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(14030)); //78
    caseQueue.insert(82805,93417);
    caseQueue.insert(68349,37565);
    myResult.push_back(caseQueue.getPriority(7074)); //79
    myResult.push_back(caseQueue.getPriority(42985)); //80
    caseQueue.insert(466,82516);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(55814, 71701);
    caseQueue.insert(17272,89431);
    caseQueue.updatePriority(25878, 84943);
    caseQueue.insert(90487,30828);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(64606,8073);
    caseQueue.updatePriority(80775, 9453);
    caseQueue.updatePriority(27890, 9858);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(28555,16261);
    myResult.push_back(caseQueue.getPriority(466)); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(37882,71881);
    myResult.push_back(caseQueue.getPriority(87909)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(53805,67879);
    caseQueue.insert(47300,92726);
    caseQueue.insert(80815,98273);
    caseQueue.insert(28831,6609);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(74364,24019);
    caseQueue.insert(66452,36424);
    caseQueue.insert(6327,90626);
    caseQueue.insert(96442,90085);
    myResult.push_back(caseQueue.getPriority(25878)); //91
    caseQueue.updatePriority(51066, 11163);
    caseQueue.insert(33490,96552);
    caseQueue.insert(11996,30598);
    myResult.push_back(caseQueue.getPriority(94161)); //92
    caseQueue.updatePriority(47300, 98659);
    myResult.push_back(caseQueue.getPriority(28125)); //93
    caseQueue.insert(36603,71839);
    caseQueue.updatePriority(8088, 84438);
    caseQueue.insert(75676,17915);
    caseQueue.insert(56613,96448);
    caseQueue.updatePriority(6327, 17941);
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.insert(98340,24335);
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    caseQueue.insert(83364,77844);
    caseQueue.updatePriority(82805, 473);
    caseQueue.insert(8135,30149);
    caseQueue.insert(55603,64224);
    caseQueue.updatePriority(8088, 26307);
    caseQueue.updatePriority(31141, 14400);
    myResult.push_back(caseQueue.deleteMin()); //98
    myResult.push_back(caseQueue.deleteMin()); //99
    myResult.push_back(caseQueue.deleteMin()); //100
    caseQueue.insert(79918,32386);
    caseQueue.insert(55824,69904);
    caseQueue.updatePriority(42985, 49497);
    caseQueue.insert(3208,8588);
    myResult.push_back(caseQueue.getPriority(76789)); //101
    myResult.push_back(caseQueue.deleteMin()); //102
    myResult.push_back(caseQueue.getPriority(8135)); //103
    myResult.push_back(caseQueue.getPriority(95385)); //104
    myResult.push_back(caseQueue.getPriority(7074)); //105
    static const int resultListArray[] = {61254, 2179, 83238, 99029, 24612, -1, -1, 42313, 42313, 42313, 42377, 73254, -1, -1, -1, 55577, 82605, -1, 24806, 78620, 62525, 35435, 2896, 3169, 87893, 10669, 20810, 87893, 97608, 38792, 84172, 62368, 6427, 87796, 66836, 35906, 73343, 69207, 97608, 12495, 85215, 70372, 5705, 7815, 66379, 70372, 24973, 70372, 77966, 66836, 94765, 58809, 39622, 87943, 51307, 92963, 33389, 46808, 68301, 50029, 62060, 90974, 24941, 22907, 63253, 70994, 59171, 86195, 59171, 31339, 25238, 93598, 5441, 79290, 87943, 80179, 18289, 87943, 78818, 40914, 78824, 90487, 64606, 80775, 27890, 82516, 28555, 91032, 75884, 28831, 84943, 70769, 59171, 51066, 75676, 6327, 74364, 82805, 31141, 98340, 42695, 3208, 30149, 80131, 78818}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(27): Basarili" << endl;
    else cout << "Case(27): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_28(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 198);

    vector<int> myResult; 
    caseQueue.updatePriority(57369, 82086);
    myResult.push_back(caseQueue.getPriority(2513)); //1
    caseQueue.insert(25795,94909);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(45478,30368);
    caseQueue.insert(47578,13192);
    caseQueue.insert(42478,4899);
    caseQueue.insert(92466,86134);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(45646,96363);
    caseQueue.insert(33777,32299);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(62108,5947);
    caseQueue.updatePriority(45646, 5953);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(45478, 9857);
    caseQueue.insert(58525,54671);
    caseQueue.insert(13842,55356);
    caseQueue.insert(693,83678);
    caseQueue.updatePriority(58525, 59257);
    caseQueue.updatePriority(92466, 82546);
    caseQueue.updatePriority(92466, 97305);
    caseQueue.updatePriority(13842, 32184);
    caseQueue.insert(39934,75756);
    caseQueue.updatePriority(693, 92514);
    myResult.push_back(caseQueue.getPriority(45478)); //6
    myResult.push_back(caseQueue.getPriority(13842)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(13842)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(92466)); //11
    myResult.push_back(caseQueue.getPriority(39934)); //12
    myResult.push_back(caseQueue.getPriority(58525)); //13
    caseQueue.insert(20691,14643);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(13842)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(39934)); //17
    myResult.push_back(caseQueue.getPriority(33777)); //18
    myResult.push_back(caseQueue.getPriority(92466)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(693)); //21
    caseQueue.insert(31788,13097);
    caseQueue.insert(30216,24039);
    caseQueue.insert(88600,58250);
    caseQueue.updatePriority(31788, 48090);
    caseQueue.insert(55021,56625);
    caseQueue.insert(49100,16711);
    caseQueue.insert(68446,17048);
    caseQueue.updatePriority(31788, 38099);
    caseQueue.insert(55453,29402);
    caseQueue.insert(75355,39632);
    myResult.push_back(caseQueue.getPriority(39934)); //22
    caseQueue.insert(90154,4674);
    caseQueue.insert(79151,91779);
    caseQueue.updatePriority(30216, 36846);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(30216, 65072);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(79151, 42330);
    caseQueue.insert(94729,68655);
    myResult.push_back(caseQueue.getPriority(39934)); //25
    caseQueue.updatePriority(79151, 8326);
    caseQueue.insert(23024,63197);
    caseQueue.insert(69748,60484);
    caseQueue.insert(9969,59339);
    caseQueue.insert(47789,24186);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(80180,80374);
    caseQueue.insert(48683,69013);
    caseQueue.updatePriority(94729, 37918);
    caseQueue.updatePriority(92466, 74501);
    caseQueue.insert(33994,42106);
    caseQueue.updatePriority(75355, 82979);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(23024)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(71889,5985);
    caseQueue.insert(69685,418);
    caseQueue.insert(37714,85861);
    caseQueue.updatePriority(33994, 509);
    caseQueue.insert(11550,23378);
    caseQueue.insert(18722,81195);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(30705,53872);
    caseQueue.updatePriority(48683, 80841);
    caseQueue.insert(33438,24079);
    myResult.push_back(caseQueue.getPriority(80180)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(55021, 19963);
    caseQueue.insert(6631,76896);
    caseQueue.updatePriority(37714, 70038);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(82469,33223);
    caseQueue.insert(71100,39375);
    caseQueue.insert(56474,68723);
    caseQueue.insert(60316,26075);
    myResult.push_back(caseQueue.getPriority(23024)); //38
    myResult.push_back(caseQueue.getPriority(30216)); //39
    caseQueue.insert(32979,31457);
    caseQueue.updatePriority(58525, 28968);
    caseQueue.insert(37366,54330);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(22613,83596);
    caseQueue.insert(44117,52409);
    caseQueue.insert(77243,60051);
    caseQueue.insert(13879,33301);
    caseQueue.insert(32846,17320);
    caseQueue.insert(76555,54717);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(18722, 18888);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(76555)); //43
    caseQueue.insert(16561,19896);
    caseQueue.insert(27991,58443);
    myResult.push_back(caseQueue.getPriority(75355)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(75355)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(37567,75723);
    caseQueue.insert(64570,74798);
    myResult.push_back(caseQueue.getPriority(693)); //49
    caseQueue.insert(77542,70308);
    myResult.push_back(caseQueue.getPriority(80180)); //50
    caseQueue.updatePriority(92466, 6990);
    caseQueue.updatePriority(92466, 5216);
    caseQueue.insert(68038,16141);
    caseQueue.insert(6760,31741);
    caseQueue.insert(20121,87224);
    myResult.push_back(caseQueue.getPriority(37714)); //51
    caseQueue.insert(78052,64739);
    caseQueue.insert(23225,68405);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(31547,1025);
    caseQueue.insert(22552,40440);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(693)); //54
    caseQueue.insert(92886,72176);
    caseQueue.insert(35242,65481);
    caseQueue.updatePriority(75355, 23178);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(76555)); //56
    myResult.push_back(caseQueue.getPriority(30216)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(77243)); //59
    caseQueue.insert(48306,94262);
    caseQueue.insert(94765,62354);
    myResult.push_back(caseQueue.getPriority(693)); //60
    caseQueue.insert(27943,71100);
    caseQueue.insert(15446,68751);
    caseQueue.insert(84039,95280);
    caseQueue.updatePriority(71100, 56749);
    caseQueue.insert(41655,31975);
    caseQueue.updatePriority(20121, 23379);
    caseQueue.insert(83115,52183);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(59861,62945);
    caseQueue.updatePriority(76555, 93584);
    caseQueue.insert(719,68767);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(719)); //63
    caseQueue.updatePriority(693, 75880);
    myResult.push_back(caseQueue.getPriority(9969)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(27943)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(95688,49911);
    caseQueue.insert(50856,32919);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(7735,29567);
    myResult.push_back(caseQueue.getPriority(30705)); //69
    caseQueue.insert(62819,86056);
    caseQueue.insert(25333,78986);
    caseQueue.insert(69713,50120);
    caseQueue.updatePriority(77542, 60504);
    caseQueue.updatePriority(44117, 24468);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(69748, 66484);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(63590,30861);
    myResult.push_back(caseQueue.getPriority(719)); //72
    myResult.push_back(caseQueue.getPriority(22613)); //73
    myResult.push_back(caseQueue.getPriority(693)); //74
    caseQueue.updatePriority(6631, 22838);
    caseQueue.updatePriority(30216, 54940);
    caseQueue.insert(34932,77484);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(27991, 85110);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(23225)); //78
    caseQueue.updatePriority(64570, 38250);
    caseQueue.insert(64425,42233);
    static const int resultListArray[] = {-1, 25795, 42478, 47578, 62108, 9857, 32184, 45646, 32184, 45478, 97305, 75756, 59257, 20691, 32184, 13842, 75756, 32299, 97305, 33777, 92514, 75756, 90154, 49100, 75756, 79151, 68446, 47789, 63197, 55453, 69685, 80374, 33994, 71889, 11550, 55021, 33438, 63197, 65072, 60316, 32846, 18722, 54717, 82979, 16561, 58525, 82979, 32979, 92514, 80374, 70038, 92466, 31547, 92514, 68038, 54717, 65072, 75355, 60051, 92514, 20121, 6760, 68767, 59339, 41655, 71100, 82469, 50856, 53872, 44117, 7735, 68767, 83596, 75880, 6631, 63590, 13879, 68405}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(28): Basarili" << endl;
    else cout << "Case(28): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_29(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 135);

    vector<int> myResult; 
    caseQueue.insert(73620,88115);
    caseQueue.insert(67231,48936);
    myResult.push_back(caseQueue.getPriority(67231)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(73620)); //3
    myResult.push_back(caseQueue.getPriority(73620)); //4
    myResult.push_back(caseQueue.getPriority(73620)); //5
    caseQueue.insert(99334,80133);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(73620)); //7
    myResult.push_back(caseQueue.getPriority(73620)); //8
    caseQueue.updatePriority(73620, 94125);
    caseQueue.insert(48683,57521);
    caseQueue.insert(25624,3649);
    caseQueue.updatePriority(48683, 82503);
    caseQueue.updatePriority(48683, 2415);
    myResult.push_back(caseQueue.getPriority(25624)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(24571,82665);
    caseQueue.updatePriority(73620, 41173);
    caseQueue.insert(80603,97770);
    caseQueue.insert(82278,65030);
    myResult.push_back(caseQueue.getPriority(80603)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(20993,39438);
    myResult.push_back(caseQueue.getPriority(24571)); //14
    caseQueue.insert(48842,23243);
    myResult.push_back(caseQueue.getPriority(24571)); //15
    caseQueue.updatePriority(24571, 52928);
    myResult.push_back(caseQueue.getPriority(24571)); //16
    caseQueue.insert(32659,71597);
    caseQueue.insert(64486,33406);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(51614,89646);
    caseQueue.updatePriority(64486, 72445);
    caseQueue.updatePriority(64486, 38499);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(82278, 3783);
    caseQueue.updatePriority(51614, 49915);
    caseQueue.insert(16970,380);
    caseQueue.insert(38370,92592);
    myResult.push_back(caseQueue.getPriority(82278)); //19
    myResult.push_back(caseQueue.getPriority(16970)); //20
    caseQueue.insert(4799,24297);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(32659, 62666);
    caseQueue.insert(79844,36307);
    caseQueue.updatePriority(82278, 87908);
    myResult.push_back(caseQueue.getPriority(51614)); //22
    myResult.push_back(caseQueue.getPriority(38370)); //23
    myResult.push_back(caseQueue.getPriority(79844)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(38370, 91399);
    myResult.push_back(caseQueue.getPriority(38370)); //26
    myResult.push_back(caseQueue.getPriority(32659)); //27
    myResult.push_back(caseQueue.getPriority(32659)); //28
    caseQueue.insert(54051,98071);
    caseQueue.updatePriority(54051, 63348);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(33772,99221);
    caseQueue.insert(25388,57826);
    caseQueue.updatePriority(51614, 19867);
    myResult.push_back(caseQueue.getPriority(33772)); //31
    myResult.push_back(caseQueue.getPriority(32659)); //32
    caseQueue.insert(24109,20311);
    caseQueue.updatePriority(24109, 10542);
    caseQueue.updatePriority(51614, 6463);
    caseQueue.updatePriority(24109, 42948);
    caseQueue.insert(12507,21629);
    myResult.push_back(caseQueue.getPriority(32659)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(54051, 66279);
    caseQueue.insert(93946,32113);
    caseQueue.updatePriority(54051, 38753);
    caseQueue.insert(88582,35019);
    myResult.push_back(caseQueue.getPriority(33772)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(33772, 1732);
    myResult.push_back(caseQueue.getPriority(80603)); //40
    caseQueue.insert(63263,79080);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(63263)); //42
    myResult.push_back(caseQueue.getPriority(54051)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(40954,70608);
    myResult.push_back(caseQueue.getPriority(54051)); //45
    caseQueue.insert(90346,54015);
    caseQueue.insert(37084,42316);
    caseQueue.insert(25053,22239);
    caseQueue.updatePriority(90346, 36366);
    caseQueue.updatePriority(82278, 82311);
    caseQueue.insert(13645,18067);
    caseQueue.updatePriority(25388, 36704);
    caseQueue.insert(13266,71426);
    myResult.push_back(caseQueue.getPriority(40954)); //46
    caseQueue.updatePriority(40954, 54428);
    caseQueue.insert(13597,8957);
    myResult.push_back(caseQueue.getPriority(40954)); //47
    myResult.push_back(caseQueue.getPriority(13645)); //48
    myResult.push_back(caseQueue.getPriority(32659)); //49
    caseQueue.insert(83109,75016);
    myResult.push_back(caseQueue.getPriority(25053)); //50
    myResult.push_back(caseQueue.getPriority(82278)); //51
    myResult.push_back(caseQueue.getPriority(80603)); //52
    caseQueue.insert(15595,99063);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(13266, 21433);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(25388)); //56
    caseQueue.insert(61090,76115);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(32659, 37196);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(80603)); //59
    caseQueue.insert(53512,96340);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(63263, 33935);
    caseQueue.insert(94934,53254);
    caseQueue.updatePriority(53512, 82875);
    caseQueue.insert(87580,95617);
    myResult.push_back(caseQueue.getPriority(94934)); //61
    caseQueue.updatePriority(94934, 59583);
    myResult.push_back(caseQueue.getPriority(94934)); //62
    caseQueue.insert(15507,13618);
    caseQueue.updatePriority(32659, 74667);
    myResult.push_back(caseQueue.getPriority(53512)); //63
    caseQueue.insert(49862,93172);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(80603)); //65
    static const int resultListArray[] = {48936, 67231, 88115, 88115, 88115, 99334, 88115, 88115, 3649, 48683, 25624, 97770, 73620, 82665, 82665, 52928, 48842, 64486, 3783, 380, 16970, 49915, 92592, 36307, 4799, 91399, 62666, 62666, 79844, 20993, 99221, 62666, 62666, 51614, 12507, 24109, 24571, 99221, 93946, 97770, 33772, 79080, 38753, 88582, 38753, 70608, 54428, 18067, 62666, 22239, 82311, 97770, 13597, 13645, 13266, 36704, 25053, 90346, 97770, 25388, 53254, 59583, 82875, 15507, 97770}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(29): Basarili" << endl;
    else cout << "Case(29): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_30(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 147);

    vector<int> myResult; 
    caseQueue.insert(94108,11609);
    caseQueue.insert(68506,48360);
    caseQueue.insert(95261,60862);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(68506, 33101);
    caseQueue.insert(94444,32655);
    myResult.push_back(caseQueue.getPriority(95261)); //2
    caseQueue.insert(93541,26455);
    caseQueue.updatePriority(93541, 83654);
    caseQueue.insert(11709,4155);
    caseQueue.insert(91684,58354);
    caseQueue.insert(99213,4726);
    myResult.push_back(caseQueue.getPriority(95261)); //3
    caseQueue.insert(98848,40649);
    caseQueue.updatePriority(98848, 29868);
    caseQueue.updatePriority(94444, 70707);
    myResult.push_back(caseQueue.getPriority(98848)); //4
    caseQueue.updatePriority(99213, 32558);
    caseQueue.insert(39469,60941);
    caseQueue.insert(39639,39679);
    caseQueue.insert(39331,6488);
    caseQueue.insert(87926,36595);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(29512,48386);
    myResult.push_back(caseQueue.getPriority(93541)); //6
    caseQueue.insert(8791,49750);
    caseQueue.insert(33157,42265);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(29512, 57685);
    myResult.push_back(caseQueue.getPriority(98848)); //8
    caseQueue.insert(24759,39290);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(67495,47226);
    caseQueue.insert(53812,42194);
    caseQueue.updatePriority(39639, 99124);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(33041,53156);
    caseQueue.insert(74033,3696);
    myResult.push_back(caseQueue.getPriority(95261)); //13
    myResult.push_back(caseQueue.getPriority(67495)); //14
    caseQueue.insert(7600,41545);
    myResult.push_back(caseQueue.getPriority(94444)); //15
    caseQueue.insert(52265,84461);
    caseQueue.updatePriority(33157, 38002);
    caseQueue.insert(90114,55506);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(86126,10245);
    caseQueue.updatePriority(39639, 20916);
    caseQueue.updatePriority(33041, 8780);
    caseQueue.insert(84753,67977);
    caseQueue.insert(95880,60200);
    myResult.push_back(caseQueue.getPriority(90114)); //17
    caseQueue.insert(20233,57355);
    caseQueue.insert(27717,47406);
    caseQueue.insert(32970,85666);
    caseQueue.insert(94841,9048);
    myResult.push_back(caseQueue.getPriority(94841)); //18
    caseQueue.insert(1465,12721);
    myResult.push_back(caseQueue.getPriority(39469)); //19
    caseQueue.updatePriority(95261, 85704);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(27717)); //21
    caseQueue.updatePriority(29512, 35671);
    myResult.push_back(caseQueue.getPriority(24759)); //22
    caseQueue.insert(29427,86933);
    myResult.push_back(caseQueue.getPriority(91684)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(52265)); //25
    caseQueue.insert(63615,48681);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(59412,61845);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(17363,90371);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(66791,91344);
    caseQueue.insert(22718,55667);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(22718)); //31
    caseQueue.insert(45685,8164);
    myResult.push_back(caseQueue.getPriority(24759)); //32
    caseQueue.updatePriority(66791, 73349);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(84753)); //34
    myResult.push_back(caseQueue.getPriority(90114)); //35
    caseQueue.insert(97943,97740);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(90114, 68072);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(61725,47431);
    caseQueue.updatePriority(20233, 78605);
    caseQueue.updatePriority(61725, 7076);
    myResult.push_back(caseQueue.getPriority(20233)); //38
    caseQueue.insert(26994,14486);
    myResult.push_back(caseQueue.getPriority(93541)); //39
    caseQueue.insert(46035,95339);
    caseQueue.updatePriority(52265, 31141);
    caseQueue.updatePriority(95880, 32655);
    caseQueue.updatePriority(22718, 53066);
    caseQueue.insert(29445,42590);
    caseQueue.insert(74943,98339);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(25664,26423);
    caseQueue.insert(95914,48482);
    caseQueue.updatePriority(95914, 77702);
    caseQueue.insert(52250,84711);
    caseQueue.updatePriority(20233, 93238);
    caseQueue.updatePriority(17363, 36482);
    caseQueue.insert(90088,30248);
    caseQueue.updatePriority(52250, 2856);
    caseQueue.insert(33148,91051);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(25664)); //43
    myResult.push_back(caseQueue.getPriority(20233)); //44
    caseQueue.insert(1404,60679);
    caseQueue.updatePriority(46035, 15288);
    caseQueue.insert(8865,13751);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(40597,34243);
    caseQueue.updatePriority(67495, 65213);
    caseQueue.insert(91478,35863);
    caseQueue.insert(71985,82551);
    caseQueue.insert(1132,25084);
    caseQueue.insert(10527,35728);
    myResult.push_back(caseQueue.getPriority(27717)); //46
    caseQueue.insert(44978,90022);
    caseQueue.insert(75409,60486);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(59412)); //48
    caseQueue.updatePriority(59412, 81353);
    myResult.push_back(caseQueue.getPriority(32970)); //49
    caseQueue.updatePriority(59412, 15908);
    caseQueue.insert(49723,99899);
    caseQueue.insert(67228,6662);
    myResult.push_back(caseQueue.getPriority(27717)); //50
    caseQueue.insert(38948,84107);
    caseQueue.insert(94471,94288);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(95626,73616);
    caseQueue.insert(34706,4901);
    caseQueue.insert(91462,64750);
    myResult.push_back(caseQueue.getPriority(63615)); //52
    caseQueue.insert(86220,25030);
    caseQueue.insert(90652,69373);
    static const int resultListArray[] = {94108, 60862, 60862, 29868, 11709, 83654, 39331, 29868, 98848, 99213, 68506, 87926, 60862, 47226, 70707, 74033, 55506, 9048, 60941, 33041, 47406, 39290, 58354, 94841, 84461, 86126, 1465, 39639, 29512, 33157, 55667, 39290, 45685, 67977, 55506, 24759, 7600, 78605, 83654, 61725, 26994, 52250, 26423, 93238, 8865, 47406, 46035, 61845, 85666, 47406, 67228, 48681}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(30): Basarili" << endl;
    else cout << "Case(30): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_31(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 243);

    vector<int> myResult; 
    caseQueue.updatePriority(51077, 21374);
    caseQueue.insert(47457,76505);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(29768, 91562);
    caseQueue.insert(5584,98691);
    myResult.push_back(caseQueue.getPriority(5584)); //2
    caseQueue.insert(99269,48220);
    caseQueue.insert(92140,60354);
    caseQueue.insert(15310,61249);
    caseQueue.updatePriority(99269, 15043);
    caseQueue.insert(63014,74282);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(63039,56903);
    caseQueue.updatePriority(15310, 76958);
    myResult.push_back(caseQueue.getPriority(5584)); //5
    caseQueue.insert(39487,3811);
    caseQueue.insert(72828,97943);
    caseQueue.insert(25341,3097);
    caseQueue.insert(82215,55851);
    caseQueue.insert(14757,17929);
    caseQueue.insert(96293,74263);
    myResult.push_back(caseQueue.getPriority(14757)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(12040,44411);
    myResult.push_back(caseQueue.getPriority(96293)); //8
    caseQueue.insert(12557,56851);
    myResult.push_back(caseQueue.getPriority(39487)); //9
    caseQueue.updatePriority(12557, 25184);
    caseQueue.insert(23203,3498);
    caseQueue.insert(55507,67094);
    caseQueue.insert(67418,95935);
    caseQueue.updatePriority(15310, 24378);
    caseQueue.insert(77489,69450);
    caseQueue.updatePriority(63014, 53935);
    caseQueue.insert(86436,47739);
    caseQueue.insert(37617,27610);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(11706,32505);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(9913,73451);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(55507)); //14
    caseQueue.insert(19196,40546);
    caseQueue.updatePriority(37617, 19302);
    caseQueue.insert(69852,35695);
    myResult.push_back(caseQueue.getPriority(96293)); //15
    caseQueue.insert(68621,51604);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(14462,76148);
    caseQueue.insert(87276,88994);
    caseQueue.insert(88575,24207);
    caseQueue.insert(23250,87164);
    myResult.push_back(caseQueue.getPriority(12040)); //17
    caseQueue.updatePriority(67418, 13244);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(63014, 80899);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(96293)); //20
    caseQueue.insert(38707,90101);
    caseQueue.insert(10654,17187);
    myResult.push_back(caseQueue.getPriority(55507)); //21
    myResult.push_back(caseQueue.getPriority(69852)); //22
    caseQueue.insert(75679,57748);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(63014, 22874);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(63088,70740);
    caseQueue.insert(78523,32022);
    myResult.push_back(caseQueue.getPriority(68621)); //25
    caseQueue.insert(48019,55581);
    caseQueue.insert(17299,6462);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(19196)); //27
    myResult.push_back(caseQueue.getPriority(5584)); //28
    caseQueue.insert(1292,31017);
    caseQueue.updatePriority(48019, 90459);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(76538,40527);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(54750,2483);
    caseQueue.updatePriority(63088, 5640);
    caseQueue.updatePriority(9913, 23387);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(33650,39299);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(9913)); //33
    caseQueue.insert(43519,68473);
    caseQueue.insert(55454,97054);
    myResult.push_back(caseQueue.getPriority(77489)); //34
    caseQueue.insert(13197,89427);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(59130,41435);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(55507)); //38
    caseQueue.insert(10376,63838);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(82215, 59072);
    caseQueue.insert(7880,95382);
    myResult.push_back(caseQueue.getPriority(82215)); //40
    myResult.push_back(caseQueue.getPriority(13197)); //41
    caseQueue.insert(74899,97322);
    caseQueue.insert(84636,76502);
    caseQueue.insert(24510,40957);
    caseQueue.insert(91718,58957);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(63039)); //43
    myResult.push_back(caseQueue.getPriority(23250)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(12501,31666);
    caseQueue.insert(47597,52921);
    caseQueue.insert(94409,79624);
    caseQueue.insert(40904,61745);
    myResult.push_back(caseQueue.getPriority(82215)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(47597)); //48
    myResult.push_back(caseQueue.getPriority(48019)); //49
    caseQueue.updatePriority(63039, 75447);
    caseQueue.insert(81177,23599);
    myResult.push_back(caseQueue.getPriority(19196)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(84636)); //53
    myResult.push_back(caseQueue.getPriority(77489)); //54
    caseQueue.updatePriority(84636, 29474);
    caseQueue.updatePriority(96293, 11839);
    myResult.push_back(caseQueue.getPriority(87276)); //55
    caseQueue.insert(77047,48313);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(68621, 52225);
    caseQueue.insert(4258,91706);
    caseQueue.insert(25032,99598);
    caseQueue.insert(38345,9580);
    myResult.push_back(caseQueue.getPriority(63039)); //57
    caseQueue.insert(63196,61747);
    caseQueue.insert(20770,63317);
    caseQueue.updatePriority(86436, 56612);
    caseQueue.insert(21482,95318);
    myResult.push_back(caseQueue.getPriority(59130)); //58
    caseQueue.insert(31010,45803);
    caseQueue.insert(32131,75160);
    caseQueue.updatePriority(75679, 91245);
    caseQueue.insert(62022,96781);
    caseQueue.updatePriority(63039, 20447);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(71279,95929);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(68621, 43946);
    caseQueue.insert(75292,82516);
    myResult.push_back(caseQueue.getPriority(77047)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(86436)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(91718, 79382);
    myResult.push_back(caseQueue.getPriority(62022)); //65
    caseQueue.updatePriority(68621, 50805);
    myResult.push_back(caseQueue.getPriority(94409)); //66
    caseQueue.insert(12833,40332);
    caseQueue.insert(40329,94267);
    caseQueue.updatePriority(31010, 30881);
    myResult.push_back(caseQueue.getPriority(47597)); //67
    myResult.push_back(caseQueue.getPriority(72828)); //68
    caseQueue.insert(39800,97989);
    myResult.push_back(caseQueue.getPriority(43519)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(43519, 69884);
    caseQueue.insert(47244,58188);
    myResult.push_back(caseQueue.getPriority(62022)); //71
    myResult.push_back(caseQueue.getPriority(87276)); //72
    myResult.push_back(caseQueue.getPriority(71279)); //73
    myResult.push_back(caseQueue.getPriority(39800)); //74
    caseQueue.insert(47296,11809);
    caseQueue.insert(26602,16043);
    caseQueue.insert(23291,14650);
    caseQueue.insert(90588,9149);
    caseQueue.insert(8475,71576);
    caseQueue.insert(61899,81429);
    myResult.push_back(caseQueue.getPriority(47296)); //75
    caseQueue.insert(53617,7619);
    myResult.push_back(caseQueue.getPriority(59130)); //76
    caseQueue.insert(23662,55787);
    caseQueue.insert(70924,83902);
    caseQueue.insert(1159,81062);
    myResult.push_back(caseQueue.getPriority(77047)); //77
    caseQueue.insert(43220,24734);
    caseQueue.updatePriority(21482, 51800);
    caseQueue.insert(86009,87127);
    caseQueue.updatePriority(14462, 95040);
    caseQueue.updatePriority(63196, 95187);
    myResult.push_back(caseQueue.getPriority(12040)); //78
    caseQueue.updatePriority(72828, 31766);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(1159, 65813);
    caseQueue.insert(93275,31678);
    caseQueue.insert(38469,68584);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(55352,829);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(68180,60275);
    caseQueue.insert(19679,97918);
    caseQueue.updatePriority(48019, 79110);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(34293,3614);
    caseQueue.updatePriority(12040, 65668);
    myResult.push_back(caseQueue.getPriority(14462)); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(59130)); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(12799,3897);
    caseQueue.insert(5975,92952);
    caseQueue.insert(78403,71536);
    caseQueue.insert(5159,16423);
    caseQueue.updatePriority(86009, 90330);
    caseQueue.insert(53032,94381);
    caseQueue.insert(94533,78717);
    caseQueue.updatePriority(23250, 72380);
    myResult.push_back(caseQueue.getPriority(23662)); //89
    myResult.push_back(caseQueue.deleteMin()); //90
    myResult.push_back(caseQueue.getPriority(93275)); //91
    caseQueue.updatePriority(32131, 17493);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(57538,25893);
    caseQueue.insert(68806,6005);
    caseQueue.updatePriority(13197, 61060);
    caseQueue.updatePriority(47244, 98003);
    caseQueue.updatePriority(43519, 85120);
    caseQueue.insert(332,76798);
    myResult.push_back(caseQueue.getPriority(94533)); //93
    caseQueue.insert(37480,787);
    caseQueue.insert(49273,3730);
    caseQueue.insert(63653,82571);
    myResult.push_back(caseQueue.deleteMin()); //94
    myResult.push_back(caseQueue.getPriority(47244)); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    caseQueue.updatePriority(20770, 98487);
    myResult.push_back(caseQueue.deleteMin()); //98
    myResult.push_back(caseQueue.getPriority(12833)); //99
    caseQueue.insert(31503,8087);
    static const int resultListArray[] = {47457, 98691, 99269, 92140, 98691, 17929, 25341, 74263, 3811, 23203, 39487, 14757, 15310, 67094, 74263, 37617, 44411, 67418, 88575, 74263, 67094, 35695, 10654, 63014, 51604, 17299, 40546, 98691, 12557, 1292, 54750, 63088, 23387, 69450, 9913, 78523, 11706, 67094, 69852, 59072, 89427, 33650, 56903, 87164, 76538, 59072, 12501, 52921, 90459, 40546, 81177, 19196, 76502, 69450, 88994, 96293, 75447, 41435, 38345, 63039, 48313, 84636, 56612, 24510, 96781, 79624, 52921, 97943, 68473, 31010, 96781, 88994, 95929, 97989, 11809, 41435, 48313, 44411, 53617, 90588, 55352, 47296, 23291, 95040, 34293, 26602, 41435, 43220, 55787, 12799, 31678, 5159, 78717, 37480, 98003, 49273, 68806, 32131, 40332}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(31): Basarili" << endl;
    else cout << "Case(31): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_32(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 217);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(30613)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(85573,938);
    myResult.push_back(caseQueue.getPriority(85573)); //3
    caseQueue.insert(4574,88042);
    myResult.push_back(caseQueue.getPriority(85573)); //4
    myResult.push_back(caseQueue.getPriority(4574)); //5
    caseQueue.insert(59071,22184);
    myResult.push_back(caseQueue.getPriority(59071)); //6
    caseQueue.insert(15687,89066);
    myResult.push_back(caseQueue.getPriority(15687)); //7
    caseQueue.insert(84975,95381);
    caseQueue.insert(4683,96955);
    caseQueue.insert(16229,55558);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(59071, 59541);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(4683, 66870);
    caseQueue.insert(79076,80441);
    caseQueue.insert(52290,55158);
    myResult.push_back(caseQueue.getPriority(79076)); //10
    myResult.push_back(caseQueue.getPriority(15687)); //11
    caseQueue.insert(82009,63969);
    caseQueue.insert(12358,31565);
    caseQueue.insert(11632,46710);
    caseQueue.insert(10310,87279);
    caseQueue.updatePriority(84975, 90852);
    caseQueue.updatePriority(82009, 50597);
    myResult.push_back(caseQueue.getPriority(4683)); //12
    myResult.push_back(caseQueue.getPriority(12358)); //13
    caseQueue.insert(53461,36673);
    myResult.push_back(caseQueue.getPriority(53461)); //14
    caseQueue.insert(53141,90798);
    caseQueue.insert(33850,23810);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(70602,29741);
    myResult.push_back(caseQueue.getPriority(79076)); //16
    caseQueue.insert(19581,84221);
    caseQueue.insert(97361,77206);
    myResult.push_back(caseQueue.getPriority(53461)); //17
    caseQueue.updatePriority(97361, 92455);
    caseQueue.insert(67708,14311);
    caseQueue.insert(56342,36700);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(82009, 52404);
    caseQueue.insert(81374,89203);
    caseQueue.updatePriority(59071, 70784);
    caseQueue.updatePriority(79076, 52282);
    myResult.push_back(caseQueue.getPriority(10310)); //19
    caseQueue.insert(2151,94198);
    caseQueue.insert(76667,45043);
    caseQueue.insert(73273,26562);
    myResult.push_back(caseQueue.getPriority(70602)); //20
    caseQueue.insert(7375,88626);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(80679,85074);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(53461)); //23
    caseQueue.insert(56481,49306);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(67775,2578);
    myResult.push_back(caseQueue.getPriority(79076)); //27
    caseQueue.insert(51024,97690);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(86575,91464);
    caseQueue.updatePriority(86575, 24973);
    myResult.push_back(caseQueue.getPriority(97361)); //32
    myResult.push_back(caseQueue.getPriority(2151)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(91124,1791);
    caseQueue.insert(14250,33757);
    caseQueue.insert(29340,90334);
    caseQueue.insert(20219,91270);
    caseQueue.insert(3230,93886);
    caseQueue.insert(39451,55741);
    myResult.push_back(caseQueue.getPriority(4574)); //36
    caseQueue.insert(11254,67225);
    caseQueue.insert(55942,53580);
    caseQueue.insert(23783,76316);
    caseQueue.insert(96756,458);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(10310)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(59071, 86582);
    caseQueue.insert(32451,8243);
    caseQueue.updatePriority(29340, 23227);
    caseQueue.insert(83049,66769);
    caseQueue.insert(17788,1281);
    caseQueue.updatePriority(23783, 140);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(4307,85821);
    caseQueue.insert(68193,7214);
    caseQueue.insert(73292,2694);
    myResult.push_back(caseQueue.getPriority(14250)); //41
    caseQueue.insert(91099,59311);
    caseQueue.insert(44634,92675);
    caseQueue.insert(53730,52887);
    caseQueue.updatePriority(14250, 38425);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(47768,44195);
    caseQueue.updatePriority(39451, 59275);
    caseQueue.updatePriority(3230, 63227);
    myResult.push_back(caseQueue.getPriority(10310)); //44
    myResult.push_back(caseQueue.getPriority(55942)); //45
    caseQueue.insert(56904,57379);
    caseQueue.insert(5585,85084);
    myResult.push_back(caseQueue.getPriority(44634)); //46
    caseQueue.updatePriority(4683, 64883);
    myResult.push_back(caseQueue.getPriority(97361)); //47
    caseQueue.insert(93826,9576);
    myResult.push_back(caseQueue.getPriority(4307)); //48
    caseQueue.insert(88381,13038);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(29340)); //50
    caseQueue.insert(76434,10662);
    caseQueue.insert(16116,30264);
    myResult.push_back(caseQueue.getPriority(80679)); //51
    caseQueue.insert(52555,2592);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(7375, 89932);
    caseQueue.insert(85775,39613);
    caseQueue.insert(24237,27218);
    caseQueue.updatePriority(51024, 97621);
    myResult.push_back(caseQueue.getPriority(97361)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(85775, 70964);
    caseQueue.updatePriority(4683, 38957);
    caseQueue.updatePriority(15687, 31253);
    caseQueue.insert(87855,41645);
    caseQueue.insert(40844,54711);
    caseQueue.insert(23059,32903);
    caseQueue.insert(14970,71103);
    myResult.push_back(caseQueue.getPriority(23059)); //55
    caseQueue.insert(28868,48940);
    caseQueue.updatePriority(24237, 56495);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(79335,92794);
    myResult.push_back(caseQueue.getPriority(29340)); //57
    caseQueue.insert(94508,27835);
    myResult.push_back(caseQueue.getPriority(4307)); //58
    caseQueue.insert(46755,34682);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(40779,34398);
    caseQueue.updatePriority(20219, 50055);
    myResult.push_back(caseQueue.getPriority(79335)); //60
    caseQueue.insert(46844,75742);
    myResult.push_back(caseQueue.getPriority(81374)); //61
    caseQueue.insert(9603,69826);
    caseQueue.insert(13473,647);
    caseQueue.insert(32782,6049);
    caseQueue.updatePriority(82009, 57853);
    caseQueue.updatePriority(44634, 30957);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(83119,54402);
    myResult.push_back(caseQueue.getPriority(24237)); //63
    caseQueue.insert(72579,5909);
    caseQueue.updatePriority(80679, 42393);
    caseQueue.updatePriority(4683, 59296);
    caseQueue.updatePriority(3230, 79085);
    myResult.push_back(caseQueue.getPriority(53141)); //64
    caseQueue.insert(34105,99580);
    caseQueue.insert(38416,75521);
    myResult.push_back(caseQueue.getPriority(72579)); //65
    caseQueue.insert(59467,4779);
    myResult.push_back(caseQueue.getPriority(85775)); //66
    caseQueue.insert(88632,77558);
    caseQueue.updatePriority(29340, 61924);
    myResult.push_back(caseQueue.getPriority(4683)); //67
    myResult.push_back(caseQueue.getPriority(10310)); //68
    myResult.push_back(caseQueue.getPriority(53141)); //69
    myResult.push_back(caseQueue.getPriority(84975)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(67574,19852);
    caseQueue.insert(43663,5373);
    caseQueue.insert(49454,67454);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(83119)); //73
    caseQueue.updatePriority(46844, 88018);
    caseQueue.updatePriority(3230, 62150);
    caseQueue.updatePriority(97361, 59446);
    caseQueue.updatePriority(59071, 56544);
    caseQueue.insert(26701,3256);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(39451)); //75
    caseQueue.insert(84637,4539);
    myResult.push_back(caseQueue.getPriority(84975)); //76
    myResult.push_back(caseQueue.getPriority(72579)); //77
    caseQueue.insert(73738,80377);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(82009)); //79
    caseQueue.insert(47196,40657);
    caseQueue.insert(21876,93343);
    caseQueue.insert(19568,66138);
    caseQueue.insert(87476,39169);
    myResult.push_back(caseQueue.getPriority(52290)); //80
    caseQueue.updatePriority(94508, 98283);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(94507,16980);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.getPriority(91099)); //84
    caseQueue.insert(17847,17653);
    myResult.push_back(caseQueue.getPriority(15687)); //85
    caseQueue.insert(7714,93141);
    caseQueue.insert(11096,6265);
    caseQueue.updatePriority(59071, 16341);
    caseQueue.insert(5043,45856);
    caseQueue.updatePriority(4574, 11731);
    caseQueue.insert(80576,74474);
    caseQueue.updatePriority(17847, 6573);
    static const int resultListArray[] = {-1, -1, 938, 938, 88042, 22184, 89066, 85573, 16229, 80441, 89066, 66870, 31565, 36673, 33850, 80441, 36673, 67708, 87279, 29741, 73273, 70602, 36673, 12358, 53461, 56342, 52282, 67775, 76667, 11632, 56481, 92455, 94198, 86575, 79076, 88042, 96756, 87279, 91124, 23783, 33757, 17788, 73292, 87279, 53580, 92675, 92455, 85821, 68193, 23227, 85074, 52555, 92455, 32451, 32903, 93826, 23227, 85821, 76434, 92794, 89203, 13473, 56495, 90798, 5909, 70964, 59296, 87279, 90798, 90852, 59467, 43663, 54402, 26701, 59275, 90852, 5909, 84637, 57853, 55158, 72579, 32782, 88381, 59311, 31253}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(32): Basarili" << endl;
    else cout << "Case(32): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_33(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 136);

    vector<int> myResult; 
    caseQueue.insert(89764,23072);
    myResult.push_back(caseQueue.getPriority(89764)); //1
    myResult.push_back(caseQueue.getPriority(89764)); //2
    caseQueue.insert(88453,28979);
    myResult.push_back(caseQueue.getPriority(88453)); //3
    caseQueue.updatePriority(89764, 88463);
    caseQueue.insert(14468,21277);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(88453, 35124);
    myResult.push_back(caseQueue.getPriority(88453)); //5
    caseQueue.insert(14878,72243);
    caseQueue.insert(91022,62588);
    caseQueue.insert(66610,62631);
    caseQueue.insert(67334,86004);
    myResult.push_back(caseQueue.getPriority(88453)); //6
    myResult.push_back(caseQueue.getPriority(66610)); //7
    caseQueue.insert(38378,69457);
    myResult.push_back(caseQueue.getPriority(38378)); //8
    caseQueue.insert(96886,2889);
    caseQueue.insert(10674,50305);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(88404,916);
    caseQueue.insert(34468,8123);
    caseQueue.insert(36836,35090);
    caseQueue.insert(90744,18044);
    caseQueue.updatePriority(88404, 94546);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(73109,44582);
    myResult.push_back(caseQueue.getPriority(38378)); //12
    caseQueue.insert(906,70743);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(66745,96250);
    caseQueue.insert(82436,382);
    caseQueue.insert(84553,86112);
    myResult.push_back(caseQueue.getPriority(14878)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(34723,88888);
    caseQueue.insert(2357,20249);
    caseQueue.insert(67567,9094);
    caseQueue.updatePriority(84553, 9485);
    caseQueue.updatePriority(73109, 41209);
    myResult.push_back(caseQueue.getPriority(66745)); //16
    caseQueue.updatePriority(10674, 84717);
    caseQueue.updatePriority(88404, 62957);
    myResult.push_back(caseQueue.getPriority(91022)); //17
    myResult.push_back(caseQueue.getPriority(10674)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(84553)); //20
    caseQueue.insert(67282,48580);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(69175,86139);
    myResult.push_back(caseQueue.getPriority(10674)); //22
    caseQueue.insert(85073,72715);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(8439,8304);
    caseQueue.insert(93711,75925);
    caseQueue.insert(61519,51221);
    myResult.push_back(caseQueue.getPriority(67282)); //24
    caseQueue.insert(90815,37830);
    caseQueue.insert(15026,74013);
    caseQueue.updatePriority(88404, 72716);
    myResult.push_back(caseQueue.getPriority(906)); //25
    caseQueue.updatePriority(34723, 32734);
    myResult.push_back(caseQueue.getPriority(8439)); //26
    caseQueue.insert(53403,10219);
    caseQueue.insert(52106,30545);
    myResult.push_back(caseQueue.getPriority(38378)); //27
    myResult.push_back(caseQueue.getPriority(67334)); //28
    caseQueue.insert(33947,3848);
    caseQueue.updatePriority(67334, 5082);
    caseQueue.insert(84310,2283);
    myResult.push_back(caseQueue.getPriority(8439)); //29
    caseQueue.insert(42847,74155);
    caseQueue.updatePriority(66745, 71957);
    caseQueue.updatePriority(66745, 1599);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(94409,5574);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(92268,32653);
    caseQueue.updatePriority(69175, 80159);
    caseQueue.updatePriority(61519, 42577);
    caseQueue.updatePriority(90815, 90734);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(85073, 13508);
    caseQueue.insert(88781,2188);
    caseQueue.insert(93465,13881);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(83281,45225);
    myResult.push_back(caseQueue.getPriority(53403)); //36
    caseQueue.insert(38478,47183);
    caseQueue.insert(70564,48982);
    myResult.push_back(caseQueue.getPriority(52106)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(58914,83426);
    caseQueue.updatePriority(88404, 79687);
    caseQueue.insert(47686,99350);
    caseQueue.insert(97662,49262);
    caseQueue.insert(97360,52342);
    caseQueue.updatePriority(92268, 45832);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(7039,80798);
    myResult.push_back(caseQueue.getPriority(88453)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(59386,26214);
    caseQueue.insert(69839,47827);
    myResult.push_back(caseQueue.getPriority(83281)); //46
    myResult.push_back(caseQueue.getPriority(66610)); //47
    myResult.push_back(caseQueue.getPriority(42847)); //48
    caseQueue.updatePriority(38478, 70084);
    caseQueue.updatePriority(42847, 91647);
    caseQueue.insert(83592,43538);
    caseQueue.insert(41841,49553);
    caseQueue.updatePriority(70564, 84783);
    caseQueue.updatePriority(93711, 68449);
    caseQueue.insert(23860,98141);
    myResult.push_back(caseQueue.getPriority(61519)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(37749,89950);
    caseQueue.insert(44767,16682);
    myResult.push_back(caseQueue.getPriority(83281)); //51
    caseQueue.insert(72968,86864);
    caseQueue.updatePriority(90815, 18123);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(83281)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(90723,14783);
    caseQueue.updatePriority(69839, 9135);
    caseQueue.updatePriority(72968, 3413);
    myResult.push_back(caseQueue.getPriority(97360)); //55
    static const int resultListArray[] = {23072, 23072, 28979, 14468, 35124, 35124, 62631, 69457, 96886, 34468, 90744, 69457, 36836, 72243, 82436, 96250, 62588, 84717, 67567, 9485, 84553, 84717, 2357, 48580, 70743, 8304, 69457, 86004, 8304, 66745, 84310, 33947, 67334, 88781, 94409, 10219, 30545, 8439, 53403, 85073, 93465, 52106, 34723, 35124, 88453, 45225, 62631, 74155, 42577, 59386, 45225, 44767, 45225, 90815, 52342}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(33): Basarili" << endl;
    else cout << "Case(33): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_34(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 164);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(64635)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(95240,4938);
    caseQueue.updatePriority(95240, 61087);
    myResult.push_back(caseQueue.getPriority(95240)); //4
    caseQueue.insert(11381,84565);
    caseQueue.insert(75018,69610);
    caseQueue.updatePriority(95240, 54828);
    caseQueue.insert(7232,84666);
    caseQueue.insert(47249,69982);
    caseQueue.insert(67565,12677);
    caseQueue.insert(57750,5131);
    caseQueue.updatePriority(95240, 68763);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(43458,48591);
    caseQueue.updatePriority(75018, 68102);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(34500,18045);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(11381)); //9
    caseQueue.insert(82280,71061);
    myResult.push_back(caseQueue.getPriority(7232)); //10
    caseQueue.insert(74619,63415);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(22748,70706);
    myResult.push_back(caseQueue.getPriority(47249)); //13
    caseQueue.updatePriority(47249, 85695);
    caseQueue.insert(52494,58807);
    caseQueue.insert(76221,9345);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(82280)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(47249)); //17
    caseQueue.insert(85308,21273);
    caseQueue.insert(66048,10025);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(47249, 10236);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(18045,36328);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(11381, 82745);
    myResult.push_back(caseQueue.getPriority(11381)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(31490,55795);
    caseQueue.updatePriority(31490, 12555);
    caseQueue.insert(82766,74235);
    caseQueue.insert(72424,80038);
    caseQueue.updatePriority(82280, 96558);
    caseQueue.updatePriority(82766, 41766);
    caseQueue.updatePriority(22748, 40186);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(22748)); //25
    myResult.push_back(caseQueue.getPriority(82766)); //26
    myResult.push_back(caseQueue.getPriority(11381)); //27
    myResult.push_back(caseQueue.getPriority(11381)); //28
    caseQueue.insert(70957,327);
    caseQueue.updatePriority(72424, 61906);
    caseQueue.updatePriority(82766, 84593);
    myResult.push_back(caseQueue.getPriority(7232)); //29
    myResult.push_back(caseQueue.getPriority(70957)); //30
    caseQueue.insert(31160,62016);
    caseQueue.insert(87988,35178);
    caseQueue.updatePriority(82766, 60683);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(72424, 99859);
    caseQueue.insert(93530,11617);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(12806,88567);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(31160, 11251);
    caseQueue.insert(31685,2732);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(41717,17821);
    caseQueue.insert(93858,4858);
    caseQueue.insert(16655,31642);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(39913,23932);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(82280, 1595);
    caseQueue.insert(97108,53459);
    caseQueue.insert(24926,79877);
    caseQueue.updatePriority(97108, 72649);
    caseQueue.updatePriority(11381, 12237);
    caseQueue.insert(60813,22308);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(7232, 42946);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(16433,39505);
    caseQueue.updatePriority(24926, 6266);
    caseQueue.insert(85302,73431);
    myResult.push_back(caseQueue.getPriority(41717)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(4783,63008);
    caseQueue.updatePriority(60813, 35960);
    caseQueue.insert(79069,85096);
    caseQueue.insert(75063,27150);
    myResult.push_back(caseQueue.getPriority(60813)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(72424, 33620);
    caseQueue.updatePriority(39913, 15285);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(72462,54158);
    myResult.push_back(caseQueue.getPriority(7232)); //47
    caseQueue.insert(87247,90504);
    caseQueue.updatePriority(7232, 61860);
    caseQueue.insert(13007,79682);
    myResult.push_back(caseQueue.getPriority(82766)); //48
    caseQueue.updatePriority(16433, 12543);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(84524,31791);
    caseQueue.updatePriority(4783, 92030);
    caseQueue.updatePriority(13007, 98125);
    caseQueue.insert(864,82663);
    caseQueue.insert(3467,98177);
    myResult.push_back(caseQueue.getPriority(4783)); //51
    myResult.push_back(caseQueue.getPriority(13007)); //52
    caseQueue.updatePriority(12806, 28870);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(864, 67378);
    caseQueue.updatePriority(84524, 13459);
    caseQueue.updatePriority(72462, 37034);
    myResult.push_back(caseQueue.getPriority(60813)); //54
    caseQueue.updatePriority(84524, 85221);
    caseQueue.updatePriority(3467, 37156);
    caseQueue.updatePriority(3467, 52509);
    caseQueue.insert(49884,87893);
    caseQueue.updatePriority(84524, 28244);
    caseQueue.insert(16112,77717);
    caseQueue.updatePriority(84524, 33755);
    caseQueue.insert(63528,18295);
    caseQueue.updatePriority(7232, 11109);
    caseQueue.insert(8851,30877);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(39874,34437);
    myResult.push_back(caseQueue.getPriority(60813)); //56
    myResult.push_back(caseQueue.getPriority(72462)); //57
    caseQueue.insert(9908,28761);
    myResult.push_back(caseQueue.getPriority(84524)); //58
    myResult.push_back(caseQueue.getPriority(39874)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(47731,40692);
    caseQueue.insert(45585,55427);
    myResult.push_back(caseQueue.getPriority(9908)); //61
    caseQueue.insert(82854,63740);
    caseQueue.insert(65168,28787);
    myResult.push_back(caseQueue.getPriority(97108)); //62
    caseQueue.updatePriority(39874, 66293);
    caseQueue.insert(95865,43121);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(82854, 81318);
    caseQueue.updatePriority(16112, 49421);
    myResult.push_back(caseQueue.getPriority(47731)); //64
    myResult.push_back(caseQueue.getPriority(79069)); //65
    myResult.push_back(caseQueue.getPriority(13007)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(32443,630);
    static const int resultListArray[] = {-1, -1, -1, 61087, 57750, 67565, 34500, 43458, 84565, 84666, 74619, 75018, 69982, 76221, 71061, 52494, 85695, 66048, 47249, 85308, 18045, 82745, 95240, 31490, 40186, 41766, 82745, 82745, 84666, 327, 70957, 87988, 93530, 22748, 31685, 93858, 31160, 82280, 11381, 17821, 24926, 35960, 41717, 39913, 75063, 16655, 42946, 60683, 16433, 72424, 92030, 98125, 12806, 35960, 7232, 35960, 37034, 33755, 34437, 63528, 28761, 72649, 9908, 40692, 85096, 98125, 65168}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(34): Basarili" << endl;
    else cout << "Case(34): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_35(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 169);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(36260, 41183);
    caseQueue.insert(28700,33931);
    myResult.push_back(caseQueue.getPriority(28700)); //4
    caseQueue.insert(77003,82728);
    myResult.push_back(caseQueue.getPriority(77003)); //5
    myResult.push_back(caseQueue.getPriority(28700)); //6
    caseQueue.insert(97110,27556);
    caseQueue.insert(13154,31505);
    caseQueue.insert(42120,8893);
    caseQueue.insert(95919,49666);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(88840,72688);
    caseQueue.updatePriority(88840, 69289);
    caseQueue.updatePriority(13154, 57091);
    caseQueue.updatePriority(88840, 83434);
    caseQueue.insert(45749,71172);
    caseQueue.insert(28835,62841);
    caseQueue.updatePriority(77003, 94886);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(13154)); //10
    myResult.push_back(caseQueue.getPriority(77003)); //11
    caseQueue.updatePriority(95919, 97670);
    caseQueue.insert(83729,85476);
    caseQueue.insert(43975,84414);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(88840, 97233);
    myResult.push_back(caseQueue.getPriority(95919)); //14
    caseQueue.updatePriority(83729, 26408);
    caseQueue.insert(9713,80481);
    myResult.push_back(caseQueue.getPriority(9713)); //15
    caseQueue.insert(74987,48351);
    caseQueue.insert(22228,1614);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(83452,52490);
    caseQueue.insert(16720,18269);
    myResult.push_back(caseQueue.getPriority(88840)); //17
    myResult.push_back(caseQueue.getPriority(83729)); //18
    caseQueue.insert(71583,73639);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(13255,84709);
    myResult.push_back(caseQueue.getPriority(43975)); //20
    caseQueue.insert(46610,4475);
    caseQueue.updatePriority(46610, 79981);
    caseQueue.insert(61776,21135);
    myResult.push_back(caseQueue.getPriority(43975)); //21
    caseQueue.insert(6493,92356);
    caseQueue.insert(95664,75194);
    caseQueue.insert(80386,16256);
    caseQueue.updatePriority(43975, 62065);
    caseQueue.updatePriority(95664, 79058);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(71583)); //23
    caseQueue.insert(73331,71031);
    caseQueue.insert(53819,69629);
    caseQueue.updatePriority(6493, 20510);
    caseQueue.insert(28323,33322);
    caseQueue.insert(12381,72997);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(74987, 91620);
    myResult.push_back(caseQueue.getPriority(95664)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(43975, 14471);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(95664, 17794);
    myResult.push_back(caseQueue.getPriority(95664)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(95919, 68792);
    caseQueue.updatePriority(12381, 5731);
    myResult.push_back(caseQueue.getPriority(83452)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(278,81939);
    caseQueue.insert(72916,9325);
    caseQueue.insert(1488,40614);
    myResult.push_back(caseQueue.getPriority(74987)); //34
    caseQueue.insert(6770,56358);
    caseQueue.updatePriority(77003, 21813);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(9713)); //36
    caseQueue.updatePriority(53819, 25256);
    caseQueue.insert(86769,21566);
    caseQueue.insert(29995,58699);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(62291,16456);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(45749, 73072);
    caseQueue.insert(42545,72749);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(95919)); //42
    myResult.push_back(caseQueue.getPriority(29995)); //43
    caseQueue.insert(45737,65086);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(71583)); //45
    caseQueue.insert(87051,79975);
    caseQueue.insert(9567,74824);
    caseQueue.insert(80801,19329);
    myResult.push_back(caseQueue.getPriority(88840)); //46
    caseQueue.insert(55211,402);
    caseQueue.insert(62680,46642);
    myResult.push_back(caseQueue.getPriority(13255)); //47
    caseQueue.insert(10773,60129);
    myResult.push_back(caseQueue.getPriority(10773)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(98593,24903);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(73331, 193);
    caseQueue.insert(25362,52172);
    caseQueue.insert(54863,3329);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(57502,52978);
    myResult.push_back(caseQueue.getPriority(71583)); //53
    myResult.push_back(caseQueue.getPriority(10773)); //54
    caseQueue.insert(59538,42201);
    caseQueue.insert(63298,16791);
    myResult.push_back(caseQueue.getPriority(45737)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(32294,29238);
    caseQueue.insert(99154,49902);
    caseQueue.insert(96580,90475);
    caseQueue.updatePriority(25362, 76223);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(39560,20744);
    caseQueue.updatePriority(9567, 21117);
    caseQueue.insert(35824,26004);
    caseQueue.insert(4107,82964);
    myResult.push_back(caseQueue.getPriority(6770)); //59
    caseQueue.insert(22065,63462);
    caseQueue.updatePriority(29995, 45058);
    caseQueue.updatePriority(71583, 97536);
    myResult.push_back(caseQueue.getPriority(62680)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(13255)); //62
    caseQueue.insert(59201,41473);
    caseQueue.insert(3816,54283);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(9713)); //64
    caseQueue.insert(53085,83036);
    caseQueue.insert(79059,71157);
    caseQueue.updatePriority(99154, 36606);
    caseQueue.insert(76418,59098);
    caseQueue.insert(38602,58389);
    caseQueue.insert(40652,29037);
    myResult.push_back(caseQueue.getPriority(62680)); //65
    myResult.push_back(caseQueue.getPriority(22065)); //66
    myResult.push_back(caseQueue.getPriority(3816)); //67
    caseQueue.insert(13039,78748);
    caseQueue.insert(79345,60727);
    caseQueue.insert(46498,94977);
    caseQueue.insert(8172,88244);
    caseQueue.updatePriority(22065, 82144);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(9713)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(96577,77496);
    caseQueue.insert(31703,2743);
    caseQueue.insert(39511,43385);
    myResult.push_back(caseQueue.getPriority(53085)); //72
    caseQueue.insert(55524,7901);
    static const int resultListArray[] = {-1, -1, -1, 33931, 82728, 33931, 42120, 97110, 28700, 57091, 94886, 13154, 28835, 97670, 80481, 22228, 97233, 26408, 16720, 84414, 84414, 80386, 73639, 6493, 61776, 79058, 83729, 43975, 17794, 95664, 52490, 12381, 28323, 91620, 72916, 80481, 86769, 62291, 77003, 53819, 1488, 68792, 58699, 83452, 73639, 97233, 84709, 60129, 55211, 80801, 98593, 73331, 73639, 60129, 65086, 54863, 63298, 32294, 56358, 46642, 39560, 84709, 9567, 80481, 46642, 63462, 54283, 35824, 80481, 40652, 99154, 83036}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(35): Basarili" << endl;
    else cout << "Case(35): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_36(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 181);

    vector<int> myResult; 
    caseQueue.insert(13324,25807);
    caseQueue.updatePriority(13324, 93116);
    caseQueue.insert(71210,37426);
    caseQueue.insert(37775,6993);
    caseQueue.insert(48584,68044);
    myResult.push_back(caseQueue.getPriority(71210)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(71210, 68424);
    caseQueue.insert(65028,55410);
    caseQueue.updatePriority(48584, 15736);
    caseQueue.insert(91253,86484);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(13324, 17321);
    caseQueue.insert(11287,90150);
    caseQueue.insert(37146,8202);
    myResult.push_back(caseQueue.getPriority(37146)); //4
    caseQueue.insert(69157,28);
    caseQueue.insert(75258,9735);
    caseQueue.insert(18526,99055);
    caseQueue.insert(75007,61338);
    caseQueue.updatePriority(18526, 2057);
    caseQueue.insert(48505,67740);
    myResult.push_back(caseQueue.getPriority(48505)); //5
    myResult.push_back(caseQueue.getPriority(69157)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(48505)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(80491,93987);
    caseQueue.insert(75032,8517);
    caseQueue.insert(1705,29770);
    myResult.push_back(caseQueue.getPriority(80491)); //10
    caseQueue.insert(81926,83557);
    myResult.push_back(caseQueue.getPriority(75258)); //11
    myResult.push_back(caseQueue.getPriority(13324)); //12
    caseQueue.insert(21633,91559);
    caseQueue.updatePriority(91253, 84947);
    caseQueue.insert(76234,51348);
    caseQueue.insert(24388,13346);
    caseQueue.updatePriority(65028, 48244);
    myResult.push_back(caseQueue.getPriority(81926)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(5810,35376);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(48505, 48650);
    myResult.push_back(caseQueue.getPriority(75007)); //16
    caseQueue.updatePriority(24388, 42155);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(7991,85417);
    myResult.push_back(caseQueue.getPriority(91253)); //18
    myResult.push_back(caseQueue.getPriority(75007)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(48505, 16431);
    myResult.push_back(caseQueue.getPriority(80491)); //21
    caseQueue.insert(49744,30871);
    caseQueue.updatePriority(49744, 34102);
    caseQueue.updatePriority(5810, 72751);
    caseQueue.updatePriority(7991, 69180);
    caseQueue.updatePriority(21633, 15874);
    myResult.push_back(caseQueue.getPriority(21633)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(1705)); //24
    caseQueue.updatePriority(1705, 67213);
    myResult.push_back(caseQueue.getPriority(80491)); //25
    caseQueue.updatePriority(5810, 87952);
    myResult.push_back(caseQueue.getPriority(1705)); //26
    caseQueue.insert(39103,50551);
    myResult.push_back(caseQueue.getPriority(24388)); //27
    caseQueue.insert(28860,16762);
    myResult.push_back(caseQueue.getPriority(49744)); //28
    caseQueue.insert(85100,75498);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(75007)); //32
    myResult.push_back(caseQueue.getPriority(1705)); //33
    myResult.push_back(caseQueue.getPriority(80491)); //34
    caseQueue.insert(52369,43675);
    caseQueue.insert(70386,4154);
    caseQueue.updatePriority(5810, 7430);
    caseQueue.insert(12828,73844);
    caseQueue.insert(64250,40814);
    caseQueue.insert(77379,85129);
    myResult.push_back(caseQueue.getPriority(12828)); //35
    caseQueue.updatePriority(91253, 33842);
    caseQueue.insert(84002,99882);
    caseQueue.insert(21730,3627);
    myResult.push_back(caseQueue.getPriority(76234)); //36
    caseQueue.insert(13130,14322);
    caseQueue.updatePriority(75007, 97507);
    caseQueue.updatePriority(7991, 51811);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(1705)); //38
    caseQueue.insert(9434,69951);
    caseQueue.insert(16099,17311);
    caseQueue.insert(57335,71993);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(8621,87895);
    myResult.push_back(caseQueue.getPriority(91253)); //41
    myResult.push_back(caseQueue.getPriority(1705)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(33316,9910);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(85100)); //45
    myResult.push_back(caseQueue.getPriority(76234)); //46
    caseQueue.updatePriority(16099, 7243);
    caseQueue.insert(29974,9856);
    myResult.push_back(caseQueue.getPriority(8621)); //47
    caseQueue.insert(53163,21430);
    caseQueue.updatePriority(29974, 95694);
    myResult.push_back(caseQueue.getPriority(53163)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(76234, 35474);
    myResult.push_back(caseQueue.getPriority(12828)); //51
    caseQueue.insert(25613,42219);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(52369, 62907);
    myResult.push_back(caseQueue.getPriority(8621)); //53
    caseQueue.insert(13264,10505);
    myResult.push_back(caseQueue.getPriority(57335)); //54
    myResult.push_back(caseQueue.getPriority(29974)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(75007, 80447);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(11287)); //58
    myResult.push_back(caseQueue.getPriority(29974)); //59
    caseQueue.updatePriority(81926, 65504);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(41493,86025);
    caseQueue.updatePriority(12828, 69563);
    myResult.push_back(caseQueue.getPriority(85100)); //61
    caseQueue.insert(14762,41041);
    caseQueue.insert(26052,36915);
    caseQueue.insert(93666,16035);
    caseQueue.updatePriority(29974, 16647);
    caseQueue.insert(35687,54919);
    caseQueue.insert(2227,37265);
    caseQueue.insert(33787,99149);
    caseQueue.insert(37236,81232);
    caseQueue.updatePriority(81926, 45149);
    myResult.push_back(caseQueue.getPriority(81926)); //62
    myResult.push_back(caseQueue.getPriority(93666)); //63
    myResult.push_back(caseQueue.getPriority(85100)); //64
    caseQueue.insert(46049,67398);
    myResult.push_back(caseQueue.getPriority(25613)); //65
    caseQueue.insert(6074,65761);
    caseQueue.updatePriority(9434, 95287);
    caseQueue.insert(28817,35897);
    myResult.push_back(caseQueue.getPriority(85100)); //66
    caseQueue.insert(48937,4593);
    caseQueue.insert(46560,98923);
    caseQueue.updatePriority(11287, 96159);
    caseQueue.insert(31672,70966);
    caseQueue.insert(71925,20796);
    myResult.push_back(caseQueue.getPriority(93666)); //67
    caseQueue.insert(85217,24030);
    caseQueue.insert(72667,7647);
    caseQueue.insert(22946,70314);
    caseQueue.insert(88895,46819);
    caseQueue.updatePriority(71210, 16294);
    caseQueue.updatePriority(88895, 93817);
    caseQueue.insert(45183,75991);
    myResult.push_back(caseQueue.getPriority(65028)); //68
    myResult.push_back(caseQueue.getPriority(24388)); //69
    caseQueue.insert(14737,94395);
    caseQueue.insert(26668,93423);
    caseQueue.updatePriority(52369, 95950);
    caseQueue.insert(65838,7824);
    myResult.push_back(caseQueue.getPriority(22946)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(46049)); //72
    caseQueue.updatePriority(71210, 17148);
    caseQueue.insert(14362,69121);
    caseQueue.insert(38694,3951);
    caseQueue.insert(7450,22900);
    caseQueue.updatePriority(41493, 17801);
    caseQueue.insert(12324,99830);
    caseQueue.updatePriority(85217, 8182);
    caseQueue.updatePriority(31672, 26037);
    caseQueue.insert(51975,93242);
    static const int resultListArray[] = {37426, 37775, 48584, 8202, 67740, 28, 69157, 67740, 18526, 93987, 9735, 17321, 83557, 37146, 75032, 61338, 75258, 84947, 61338, 13324, 93987, 15874, 21633, 29770, 93987, 67213, 42155, 34102, 48505, 28860, 49744, 61338, 67213, 93987, 73844, 51348, 21730, 67213, 70386, 5810, 33842, 67213, 13130, 33316, 75498, 51348, 87895, 21430, 16099, 53163, 73844, 91253, 87895, 71993, 95694, 13264, 76234, 90150, 95694, 64250, 75498, 45149, 16035, 75498, 42219, 75498, 16035, 48244, 42155, 70314, 48937, 67398}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(36): Basarili" << endl;
    else cout << "Case(36): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_37(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 156);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(68982)); //2
    caseQueue.insert(84793,41950);
    caseQueue.updatePriority(84793, 11793);
    caseQueue.insert(75773,8785);
    caseQueue.insert(61969,94137);
    caseQueue.insert(36503,47187);
    caseQueue.updatePriority(75773, 71544);
    caseQueue.insert(96427,73646);
    caseQueue.insert(37303,24667);
    caseQueue.insert(9929,48736);
    caseQueue.updatePriority(75773, 42986);
    caseQueue.updatePriority(37303, 78014);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(36503)); //5
    myResult.push_back(caseQueue.getPriority(36503)); //6
    caseQueue.insert(56332,27947);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(53272,13025);
    caseQueue.insert(45925,52477);
    myResult.push_back(caseQueue.getPriority(96427)); //8
    caseQueue.insert(13610,55695);
    myResult.push_back(caseQueue.getPriority(37303)); //9
    caseQueue.insert(1646,92967);
    caseQueue.insert(54171,82507);
    myResult.push_back(caseQueue.getPriority(61969)); //10
    caseQueue.updatePriority(36503, 49922);
    caseQueue.updatePriority(1646, 58587);
    myResult.push_back(caseQueue.getPriority(1646)); //11
    myResult.push_back(caseQueue.getPriority(45925)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(37303)); //14
    myResult.push_back(caseQueue.getPriority(13610)); //15
    myResult.push_back(caseQueue.getPriority(1646)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(69093,45273);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(54171)); //23
    caseQueue.insert(33115,47254);
    myResult.push_back(caseQueue.getPriority(33115)); //24
    caseQueue.insert(54206,93305);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(32464,50666);
    myResult.push_back(caseQueue.getPriority(54206)); //27
    caseQueue.insert(87139,86273);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(71554,96061);
    caseQueue.updatePriority(54171, 74883);
    myResult.push_back(caseQueue.getPriority(71554)); //29
    caseQueue.insert(47725,1348);
    myResult.push_back(caseQueue.getPriority(47725)); //30
    caseQueue.insert(99930,80837);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(61969)); //32
    caseQueue.insert(53699,99197);
    caseQueue.updatePriority(54171, 82631);
    myResult.push_back(caseQueue.getPriority(37303)); //33
    caseQueue.insert(97470,12334);
    caseQueue.updatePriority(97470, 74890);
    caseQueue.updatePriority(71554, 12673);
    caseQueue.insert(52683,48932);
    caseQueue.insert(31835,23589);
    myResult.push_back(caseQueue.getPriority(87139)); //34
    caseQueue.insert(90448,59580);
    caseQueue.updatePriority(97470, 65424);
    caseQueue.insert(80353,40204);
    myResult.push_back(caseQueue.getPriority(87139)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(87693,59248);
    caseQueue.insert(74893,98119);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(23106,73060);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(87693, 77909);
    caseQueue.insert(50375,14454);
    myResult.push_back(caseQueue.getPriority(90448)); //39
    caseQueue.insert(4489,44215);
    myResult.push_back(caseQueue.getPriority(87139)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(99930)); //43
    caseQueue.insert(47750,90936);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(4743,41079);
    myResult.push_back(caseQueue.getPriority(4743)); //45
    caseQueue.updatePriority(90448, 17201);
    caseQueue.insert(68792,47538);
    myResult.push_back(caseQueue.getPriority(54206)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(94448,16616);
    caseQueue.insert(15458,77783);
    caseQueue.insert(92110,27177);
    caseQueue.insert(30911,90843);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(61969, 60237);
    caseQueue.updatePriority(23106, 46687);
    caseQueue.insert(2830,22464);
    caseQueue.insert(75453,37159);
    myResult.push_back(caseQueue.getPriority(92110)); //50
    caseQueue.updatePriority(2830, 15089);
    caseQueue.insert(74881,24755);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(30911)); //52
    caseQueue.insert(57298,69613);
    caseQueue.insert(35627,75354);
    caseQueue.updatePriority(57298, 57599);
    caseQueue.insert(24198,99432);
    caseQueue.insert(25991,77648);
    caseQueue.insert(69648,24161);
    caseQueue.insert(80995,58097);
    myResult.push_back(caseQueue.getPriority(74893)); //53
    caseQueue.insert(21411,13195);
    caseQueue.insert(1998,87774);
    caseQueue.updatePriority(23106, 4975);
    caseQueue.updatePriority(23106, 91871);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(72442,87625);
    caseQueue.insert(79628,34299);
    caseQueue.insert(34720,38109);
    caseQueue.insert(57775,458);
    caseQueue.insert(93093,11519);
    caseQueue.insert(14508,26678);
    caseQueue.insert(31369,91557);
    caseQueue.insert(85363,18767);
    caseQueue.insert(92694,30586);
    myResult.push_back(caseQueue.getPriority(74893)); //55
    caseQueue.insert(10328,56706);
    caseQueue.insert(27660,99682);
    caseQueue.updatePriority(57775, 81865);
    caseQueue.insert(11870,94387);
    caseQueue.insert(15947,6957);
    caseQueue.insert(273,34352);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(92694)); //58
    myResult.push_back(caseQueue.getPriority(24198)); //59
    caseQueue.insert(372,73535);
    caseQueue.updatePriority(372, 28626);
    caseQueue.insert(32608,10280);
    caseQueue.insert(24291,23768);
    caseQueue.insert(15895,91098);
    myResult.push_back(caseQueue.getPriority(72442)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(76507,62393);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(99930, 47473);
    myResult.push_back(caseQueue.getPriority(57298)); //63
    caseQueue.insert(16281,54040);
    caseQueue.updatePriority(72442, 18612);
    static const int resultListArray[] = {-1, -1, 84793, 75773, 47187, 47187, 56332, 73646, 78014, 94137, 58587, 52477, 53272, 78014, 55695, 58587, 9929, 36503, 45925, 13610, 1646, 69093, 82507, 47254, 33115, 96427, 93305, 32464, 96061, 1348, 47725, 94137, 78014, 86273, 86273, 71554, 31835, 80353, 59580, 86273, 50375, 4489, 80837, 52683, 41079, 93305, 90448, 4743, 94448, 27177, 2830, 90843, 98119, 21411, 98119, 15947, 93093, 30586, 99432, 87625, 32608, 85363, 57599}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(37): Basarili" << endl;
    else cout << "Case(37): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_38(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 228);

    vector<int> myResult; 
    caseQueue.insert(46844,17972);
    caseQueue.insert(29598,8772);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(76991,8740);
    caseQueue.updatePriority(76991, 71009);
    myResult.push_back(caseQueue.getPriority(76991)); //4
    caseQueue.insert(11198,56936);
    caseQueue.insert(8738,75655);
    caseQueue.insert(85687,66731);
    caseQueue.insert(14682,27049);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(8738)); //6
    caseQueue.insert(13090,13471);
    caseQueue.insert(75241,13069);
    caseQueue.insert(87000,38285);
    myResult.push_back(caseQueue.getPriority(13090)); //7
    caseQueue.insert(78565,2050);
    myResult.push_back(caseQueue.getPriority(78565)); //8
    myResult.push_back(caseQueue.getPriority(87000)); //9
    caseQueue.updatePriority(85687, 7628);
    caseQueue.updatePriority(85687, 92688);
    caseQueue.insert(90189,8178);
    myResult.push_back(caseQueue.getPriority(85687)); //10
    myResult.push_back(caseQueue.getPriority(13090)); //11
    caseQueue.insert(60320,86043);
    myResult.push_back(caseQueue.getPriority(78565)); //12
    caseQueue.insert(85961,23092);
    caseQueue.updatePriority(90189, 37359);
    myResult.push_back(caseQueue.getPriority(85961)); //13
    caseQueue.insert(42026,91396);
    myResult.push_back(caseQueue.getPriority(90189)); //14
    caseQueue.updatePriority(85687, 53658);
    caseQueue.updatePriority(8738, 50316);
    caseQueue.insert(90257,78920);
    caseQueue.insert(70186,27356);
    caseQueue.insert(50585,5694);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(40385,79268);
    myResult.push_back(caseQueue.getPriority(75241)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(35431,34139);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(70186)); //19
    myResult.push_back(caseQueue.getPriority(90257)); //20
    caseQueue.updatePriority(11198, 21516);
    caseQueue.updatePriority(8738, 21459);
    caseQueue.insert(18220,87127);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(84456,62180);
    myResult.push_back(caseQueue.getPriority(84456)); //22
    caseQueue.updatePriority(60320, 88237);
    myResult.push_back(caseQueue.getPriority(18220)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(87000)); //25
    myResult.push_back(caseQueue.getPriority(42026)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(18220)); //30
    myResult.push_back(caseQueue.getPriority(18220)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(90262,32516);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(84456)); //34
    caseQueue.insert(40361,8);
    caseQueue.updatePriority(18220, 68618);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(47378,27777);
    caseQueue.updatePriority(47378, 67694);
    caseQueue.insert(95327,31371);
    myResult.push_back(caseQueue.getPriority(47378)); //36
    myResult.push_back(caseQueue.getPriority(84456)); //37
    caseQueue.updatePriority(90189, 99837);
    caseQueue.insert(43441,54988);
    caseQueue.updatePriority(84456, 89278);
    caseQueue.insert(72942,46489);
    caseQueue.insert(87655,44829);
    caseQueue.updatePriority(87655, 23906);
    caseQueue.insert(72981,46997);
    caseQueue.insert(854,10698);
    caseQueue.insert(37025,6238);
    caseQueue.insert(30610,62326);
    myResult.push_back(caseQueue.getPriority(90257)); //38
    caseQueue.insert(47346,81931);
    caseQueue.insert(55761,85168);
    caseQueue.insert(15681,25871);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(55761, 8827);
    caseQueue.insert(79124,26425);
    caseQueue.insert(11760,46718);
    caseQueue.insert(55869,60571);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(67732,57281);
    caseQueue.insert(87260,44790);
    caseQueue.updatePriority(76991, 97138);
    caseQueue.insert(31530,67183);
    caseQueue.insert(2194,7952);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(40385)); //42
    caseQueue.insert(823,40092);
    caseQueue.insert(51535,90341);
    caseQueue.insert(3528,25441);
    myResult.push_back(caseQueue.getPriority(84456)); //43
    caseQueue.updatePriority(90257, 4820);
    caseQueue.updatePriority(47346, 88446);
    caseQueue.insert(64275,46003);
    caseQueue.insert(47359,24323);
    caseQueue.insert(94721,95331);
    caseQueue.insert(16953,10762);
    myResult.push_back(caseQueue.getPriority(30610)); //44
    caseQueue.insert(96945,52555);
    caseQueue.insert(76662,73496);
    caseQueue.insert(71480,8922);
    caseQueue.insert(84772,55260);
    myResult.push_back(caseQueue.getPriority(95327)); //45
    myResult.push_back(caseQueue.getPriority(90189)); //46
    caseQueue.updatePriority(79124, 85159);
    caseQueue.insert(77761,73792);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(91504,78046);
    myResult.push_back(caseQueue.getPriority(854)); //48
    caseQueue.insert(93456,17515);
    caseQueue.insert(40998,29343);
    caseQueue.insert(85831,44092);
    caseQueue.insert(38913,53268);
    caseQueue.updatePriority(84456, 57043);
    caseQueue.insert(70778,40864);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(64275)); //50
    caseQueue.updatePriority(40385, 9158);
    caseQueue.insert(52280,74503);
    myResult.push_back(caseQueue.getPriority(94721)); //51
    myResult.push_back(caseQueue.getPriority(16953)); //52
    caseQueue.updatePriority(47378, 58533);
    myResult.push_back(caseQueue.getPriority(84772)); //53
    caseQueue.insert(12901,84106);
    caseQueue.insert(68249,47831);
    caseQueue.insert(79969,89660);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(83918,93427);
    myResult.push_back(caseQueue.getPriority(11760)); //55
    caseQueue.insert(48326,5506);
    myResult.push_back(caseQueue.getPriority(87000)); //56
    caseQueue.insert(39110,97824);
    caseQueue.insert(33289,89103);
    myResult.push_back(caseQueue.getPriority(94721)); //57
    caseQueue.insert(93190,54350);
    myResult.push_back(caseQueue.getPriority(55869)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(47359)); //60
    caseQueue.insert(93192,89463);
    caseQueue.insert(22506,77449);
    caseQueue.insert(48359,87385);
    myResult.push_back(caseQueue.getPriority(33289)); //61
    caseQueue.insert(33301,25813);
    myResult.push_back(caseQueue.getPriority(87260)); //62
    caseQueue.insert(28927,33478);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(33301)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(30610, 30286);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(42026)); //67
    caseQueue.insert(72206,58448);
    myResult.push_back(caseQueue.getPriority(79969)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(38913, 72369);
    caseQueue.insert(72836,22955);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(72942, 71597);
    caseQueue.insert(11019,66018);
    caseQueue.insert(15610,92946);
    myResult.push_back(caseQueue.getPriority(93192)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(84082,25293);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(72942, 97573);
    myResult.push_back(caseQueue.getPriority(87000)); //74
    caseQueue.insert(8159,99072);
    myResult.push_back(caseQueue.getPriority(15681)); //75
    caseQueue.insert(36851,59399);
    caseQueue.insert(48692,7102);
    caseQueue.updatePriority(48359, 79279);
    caseQueue.updatePriority(48692, 74022);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(66011,82854);
    caseQueue.insert(17695,47363);
    caseQueue.insert(59474,33);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(91504, 25787);
    myResult.push_back(caseQueue.getPriority(66011)); //80
    caseQueue.updatePriority(51535, 9243);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(87522,88230);
    caseQueue.updatePriority(43441, 34191);
    caseQueue.updatePriority(43441, 2188);
    caseQueue.insert(47631,51764);
    caseQueue.updatePriority(36851, 73555);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(8159, 75182);
    myResult.push_back(caseQueue.getPriority(87522)); //84
    caseQueue.insert(83936,34052);
    myResult.push_back(caseQueue.getPriority(77761)); //85
    caseQueue.insert(92195,53360);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(49414,67548);
    caseQueue.updatePriority(28927, 41763);
    caseQueue.insert(16569,81614);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(84934,50176);
    caseQueue.updatePriority(31530, 74280);
    myResult.push_back(caseQueue.getPriority(36851)); //88
    caseQueue.updatePriority(84934, 34621);
    caseQueue.insert(71932,47683);
    caseQueue.insert(73166,17280);
    caseQueue.insert(26347,76522);
    caseQueue.insert(63057,90884);
    caseQueue.insert(49082,38648);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.updatePriority(87000, 61951);
    caseQueue.updatePriority(77761, 70629);
    caseQueue.insert(20798,91054);
    caseQueue.insert(21146,86864);
    static const int resultListArray[] = {29598, 46844, -1, 71009, 14682, 75655, 13471, 2050, 38285, 92688, 13471, 2050, 23092, 37359, 78565, 13069, 50585, 75241, 27356, 78920, 13090, 62180, 87127, 8738, 38285, 91396, 11198, 85961, 70186, 87127, 87127, 35431, 90262, 62180, 40361, 67694, 62180, 78920, 37025, 55761, 2194, 79268, 89278, 62326, 31371, 99837, 90257, 10698, 71480, 46003, 95331, 10762, 55260, 40385, 46718, 38285, 95331, 60571, 48326, 24323, 89103, 44790, 854, 25813, 16953, 93456, 91396, 89660, 87655, 72836, 89463, 47359, 84082, 38285, 25871, 3528, 33301, 59474, 15681, 82854, 51535, 43441, 91504, 88230, 73792, 40998, 30610, 73555, 73166}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(38): Basarili" << endl;
    else cout << "Case(38): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_39(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 177);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(57351, 67279);
    caseQueue.insert(34423,59477);
    caseQueue.updatePriority(34423, 36513);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(50990,3135);
    caseQueue.insert(37728,39611);
    caseQueue.updatePriority(50990, 82245);
    caseQueue.insert(12725,95027);
    caseQueue.insert(43350,11026);
    myResult.push_back(caseQueue.getPriority(37728)); //3
    caseQueue.insert(7479,61342);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(31538,73607);
    myResult.push_back(caseQueue.getPriority(50990)); //5
    myResult.push_back(caseQueue.getPriority(31538)); //6
    caseQueue.insert(69974,54963);
    caseQueue.insert(55264,44578);
    caseQueue.updatePriority(50990, 74446);
    caseQueue.insert(56896,82230);
    caseQueue.updatePriority(55264, 29609);
    caseQueue.insert(18476,69276);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(18476, 91815);
    caseQueue.insert(98348,31855);
    caseQueue.insert(18792,43571);
    myResult.push_back(caseQueue.getPriority(31538)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(50990)); //10
    myResult.push_back(caseQueue.getPriority(50990)); //11
    myResult.push_back(caseQueue.getPriority(69974)); //12
    myResult.push_back(caseQueue.getPriority(31538)); //13
    caseQueue.insert(48002,52070);
    caseQueue.insert(82906,5703);
    myResult.push_back(caseQueue.getPriority(31538)); //14
    myResult.push_back(caseQueue.getPriority(7479)); //15
    myResult.push_back(caseQueue.getPriority(82906)); //16
    caseQueue.insert(70904,40497);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(18476, 89794);
    caseQueue.insert(71138,55053);
    caseQueue.insert(31682,32023);
    myResult.push_back(caseQueue.getPriority(56896)); //18
    caseQueue.insert(98879,40216);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(98879)); //20
    caseQueue.insert(51583,60749);
    caseQueue.updatePriority(70904, 80059);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(50990, 28748);
    caseQueue.insert(39595,71427);
    caseQueue.insert(98973,36942);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(31538, 3437);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(48002)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(60652,5138);
    caseQueue.updatePriority(60652, 34662);
    myResult.push_back(caseQueue.getPriority(18476)); //26
    myResult.push_back(caseQueue.getPriority(18792)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(51583)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(69974)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(56896, 49197);
    caseQueue.updatePriority(39595, 3284);
    myResult.push_back(caseQueue.getPriority(51583)); //33
    caseQueue.insert(2866,26272);
    myResult.push_back(caseQueue.getPriority(18476)); //34
    caseQueue.insert(76937,41653);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(7820,92011);
    caseQueue.updatePriority(48002, 92832);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(71138)); //37
    caseQueue.insert(7298,25272);
    caseQueue.insert(35149,99079);
    myResult.push_back(caseQueue.getPriority(51583)); //38
    myResult.push_back(caseQueue.getPriority(71138)); //39
    caseQueue.updatePriority(69974, 77851);
    caseQueue.updatePriority(71138, 1076);
    caseQueue.insert(49859,77193);
    myResult.push_back(caseQueue.getPriority(71138)); //40
    myResult.push_back(caseQueue.getPriority(35149)); //41
    caseQueue.updatePriority(49859, 10722);
    caseQueue.insert(69586,58894);
    caseQueue.insert(70158,58035);
    caseQueue.insert(20118,27568);
    caseQueue.insert(90865,32659);
    caseQueue.insert(87753,29228);
    caseQueue.insert(83733,58203);
    myResult.push_back(caseQueue.getPriority(70158)); //42
    caseQueue.insert(14371,96601);
    caseQueue.insert(88779,29276);
    caseQueue.insert(59870,39085);
    caseQueue.updatePriority(69586, 44882);
    caseQueue.updatePriority(35149, 83212);
    caseQueue.insert(85826,2948);
    caseQueue.insert(4245,12523);
    caseQueue.insert(74142,23019);
    myResult.push_back(caseQueue.getPriority(76937)); //43
    myResult.push_back(caseQueue.getPriority(49859)); //44
    caseQueue.insert(92182,84998);
    myResult.push_back(caseQueue.getPriority(35149)); //45
    caseQueue.updatePriority(18476, 29120);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(34841,62615);
    caseQueue.insert(21806,64853);
    caseQueue.insert(9551,19942);
    myResult.push_back(caseQueue.getPriority(70158)); //47
    caseQueue.updatePriority(14371, 22693);
    myResult.push_back(caseQueue.getPriority(92182)); //48
    myResult.push_back(caseQueue.getPriority(87753)); //49
    caseQueue.insert(50811,39080);
    caseQueue.insert(1147,98953);
    caseQueue.insert(62892,75139);
    caseQueue.updatePriority(14371, 15501);
    caseQueue.insert(10249,14678);
    caseQueue.insert(23574,70664);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(86603,90155);
    caseQueue.insert(4160,62648);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(59870)); //52
    caseQueue.insert(45166,36583);
    caseQueue.insert(19047,57643);
    caseQueue.insert(95273,80720);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(24277,55760);
    caseQueue.insert(21481,63906);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(95433,47690);
    caseQueue.updatePriority(21481, 21050);
    myResult.push_back(caseQueue.getPriority(7479)); //55
    caseQueue.updatePriority(20118, 66489);
    myResult.push_back(caseQueue.getPriority(51583)); //56
    caseQueue.insert(75867,65313);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(53806,4116);
    caseQueue.insert(2908,53160);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(23574, 80620);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(35149)); //62
    caseQueue.updatePriority(86603, 76554);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(2908)); //64
    caseQueue.insert(10661,28544);
    myResult.push_back(caseQueue.getPriority(48002)); //65
    caseQueue.insert(60832,76918);
    caseQueue.insert(23603,25882);
    myResult.push_back(caseQueue.getPriority(59870)); //66
    caseQueue.insert(640,90259);
    caseQueue.updatePriority(12725, 50679);
    caseQueue.insert(65682,29923);
    caseQueue.insert(37596,45655);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(19047, 94725);
    myResult.push_back(caseQueue.getPriority(12725)); //68
    caseQueue.insert(71100,29742);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(35149)); //70
    myResult.push_back(caseQueue.getPriority(7820)); //71
    caseQueue.updatePriority(640, 88115);
    caseQueue.insert(5775,2855);
    caseQueue.insert(73420,69900);
    caseQueue.insert(24737,88705);
    caseQueue.insert(92209,30881);
    caseQueue.updatePriority(95433, 81573);
    myResult.push_back(caseQueue.getPriority(59870)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(1849,59183);
    caseQueue.updatePriority(21806, 71529);
    static const int resultListArray[] = {-1, 34423, 39611, 43350, 82245, 73607, 55264, 73607, 98348, 74446, 74446, 54963, 73607, 73607, 61342, 5703, 82906, 82230, 31682, 40216, 37728, 50990, 31538, 52070, 98973, 89794, 43571, 60652, 60749, 98879, 54963, 18792, 60749, 89794, 39595, 2866, 55053, 60749, 55053, 1076, 99079, 58035, 41653, 10722, 83212, 71138, 58035, 84998, 29228, 85826, 49859, 39085, 4245, 10249, 61342, 60749, 14371, 53806, 9551, 21481, 74142, 83212, 7298, 53160, 92832, 39085, 23603, 50679, 10661, 83212, 92011, 39085, 5775}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(39): Basarili" << endl;
    else cout << "Case(39): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_40(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 247);

    vector<int> myResult; 
    caseQueue.insert(67312,56171);
    caseQueue.updatePriority(67312, 74537);
    caseQueue.insert(4646,75057);
    caseQueue.insert(94109,7536);
    caseQueue.insert(53505,28130);
    caseQueue.insert(47701,91394);
    caseQueue.updatePriority(94109, 84857);
    myResult.push_back(caseQueue.getPriority(67312)); //1
    caseQueue.updatePriority(94109, 32975);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(47701)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(47701)); //6
    caseQueue.updatePriority(47701, 51120);
    myResult.push_back(caseQueue.getPriority(4646)); //7
    caseQueue.updatePriority(47701, 30614);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(30752,32627);
    caseQueue.insert(1752,29758);
    caseQueue.updatePriority(1752, 28751);
    myResult.push_back(caseQueue.getPriority(1752)); //9
    caseQueue.updatePriority(1752, 22344);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(30752)); //11
    caseQueue.insert(55814,83289);
    myResult.push_back(caseQueue.getPriority(55814)); //12
    caseQueue.insert(13010,55023);
    caseQueue.insert(70473,34292);
    caseQueue.insert(56,23343);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(30351,86993);
    caseQueue.insert(9642,47856);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(75342,78473);
    caseQueue.insert(61322,97380);
    caseQueue.insert(53011,74147);
    caseQueue.insert(28668,37828);
    caseQueue.insert(24031,47882);
    caseQueue.updatePriority(61322, 80585);
    myResult.push_back(caseQueue.getPriority(4646)); //15
    caseQueue.insert(97463,9163);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(24031)); //18
    caseQueue.updatePriority(55814, 307);
    caseQueue.insert(82886,88909);
    caseQueue.updatePriority(30351, 85059);
    caseQueue.insert(37158,78514);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(30351, 1960);
    caseQueue.insert(74974,29264);
    myResult.push_back(caseQueue.getPriority(9642)); //21
    caseQueue.insert(33024,2052);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(24031)); //24
    caseQueue.updatePriority(75342, 24852);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(28591,7441);
    caseQueue.updatePriority(4646, 17135);
    myResult.push_back(caseQueue.getPriority(13010)); //26
    myResult.push_back(caseQueue.getPriority(37158)); //27
    myResult.push_back(caseQueue.getPriority(28591)); //28
    caseQueue.updatePriority(82886, 54544);
    myResult.push_back(caseQueue.getPriority(74974)); //29
    caseQueue.updatePriority(28591, 30413);
    myResult.push_back(caseQueue.getPriority(82886)); //30
    myResult.push_back(caseQueue.getPriority(61322)); //31
    caseQueue.insert(64199,85565);
    myResult.push_back(caseQueue.getPriority(74974)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(63236,49598);
    caseQueue.insert(20133,3012);
    myResult.push_back(caseQueue.getPriority(74974)); //34
    myResult.push_back(caseQueue.getPriority(53011)); //35
    caseQueue.insert(14282,17547);
    myResult.push_back(caseQueue.getPriority(64199)); //36
    caseQueue.insert(70785,63983);
    caseQueue.insert(65011,74642);
    caseQueue.insert(56330,83585);
    caseQueue.updatePriority(24031, 37155);
    caseQueue.updatePriority(24031, 36290);
    caseQueue.insert(99506,46884);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(70785, 31119);
    caseQueue.updatePriority(99506, 42994);
    caseQueue.insert(44291,51119);
    caseQueue.insert(62424,14218);
    caseQueue.updatePriority(65011, 10548);
    myResult.push_back(caseQueue.getPriority(13010)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(99046,55873);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(99046, 24696);
    myResult.push_back(caseQueue.getPriority(63236)); //41
    myResult.push_back(caseQueue.getPriority(56330)); //42
    caseQueue.updatePriority(37158, 29951);
    caseQueue.updatePriority(61322, 13970);
    caseQueue.insert(207,6972);
    caseQueue.insert(97604,19589);
    caseQueue.insert(31516,24104);
    caseQueue.insert(19761,34370);
    myResult.push_back(caseQueue.getPriority(28591)); //43
    myResult.push_back(caseQueue.getPriority(61322)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(30185,19874);
    caseQueue.insert(55781,19802);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(14149,31557);
    caseQueue.insert(6422,64677);
    caseQueue.insert(65088,51467);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(24145,69341);
    myResult.push_back(caseQueue.getPriority(64199)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(24145, 115);
    myResult.push_back(caseQueue.getPriority(44291)); //53
    caseQueue.insert(13465,10669);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(90721,45630);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(65088, 55090);
    caseQueue.insert(2926,49953);
    myResult.push_back(caseQueue.getPriority(13010)); //56
    caseQueue.updatePriority(37158, 13166);
    myResult.push_back(caseQueue.getPriority(63236)); //57
    myResult.push_back(caseQueue.getPriority(2926)); //58
    caseQueue.insert(28573,70694);
    myResult.push_back(caseQueue.getPriority(90721)); //59
    caseQueue.updatePriority(19761, 72041);
    myResult.push_back(caseQueue.getPriority(6422)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(70054,1103);
    myResult.push_back(caseQueue.getPriority(19761)); //62
    caseQueue.updatePriority(56330, 87969);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(94532,72764);
    myResult.push_back(caseQueue.getPriority(82886)); //64
    caseQueue.updatePriority(70785, 86807);
    myResult.push_back(caseQueue.getPriority(6422)); //65
    myResult.push_back(caseQueue.getPriority(99506)); //66
    myResult.push_back(caseQueue.getPriority(70785)); //67
    myResult.push_back(caseQueue.getPriority(82886)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(64199, 39266);
    myResult.push_back(caseQueue.getPriority(64199)); //70
    caseQueue.insert(94360,85290);
    caseQueue.updatePriority(6422, 79610);
    caseQueue.updatePriority(9642, 92044);
    caseQueue.insert(88635,52042);
    caseQueue.insert(11086,53259);
    caseQueue.insert(13852,97606);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(94360)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(11086, 34594);
    myResult.push_back(caseQueue.getPriority(65088)); //74
    caseQueue.updatePriority(88635, 26193);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(65088)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(47183,13939);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(9327,24341);
    myResult.push_back(caseQueue.getPriority(94532)); //80
    caseQueue.insert(39226,44947);
    caseQueue.insert(58412,67776);
    caseQueue.insert(54977,55518);
    caseQueue.insert(78970,36058);
    myResult.push_back(caseQueue.getPriority(13852)); //81
    caseQueue.insert(11909,24326);
    caseQueue.insert(69303,24946);
    myResult.push_back(caseQueue.getPriority(94532)); //82
    myResult.push_back(caseQueue.getPriority(13010)); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(94360)); //85
    caseQueue.updatePriority(9327, 68441);
    myResult.push_back(caseQueue.getPriority(13852)); //86
    caseQueue.insert(11442,14164);
    caseQueue.updatePriority(9642, 82740);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(34291,49781);
    caseQueue.updatePriority(39226, 60796);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(76833,55201);
    caseQueue.insert(8226,5461);
    caseQueue.insert(72384,76428);
    myResult.push_back(caseQueue.getPriority(56330)); //89
    caseQueue.insert(24510,64657);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(41986,84877);
    caseQueue.updatePriority(28573, 76276);
    caseQueue.insert(77086,88368);
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(80984,25851);
    caseQueue.updatePriority(76833, 92324);
    caseQueue.insert(99388,79777);
    caseQueue.updatePriority(39226, 64398);
    caseQueue.insert(5076,62287);
    caseQueue.insert(18340,75872);
    caseQueue.updatePriority(80984, 45307);
    myResult.push_back(caseQueue.getPriority(9642)); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    myResult.push_back(caseQueue.getPriority(76833)); //94
    caseQueue.insert(30880,964);
    caseQueue.insert(48412,43840);
    caseQueue.insert(764,36303);
    caseQueue.updatePriority(64199, 5795);
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.getPriority(6422)); //96
    caseQueue.updatePriority(44291, 2011);
    myResult.push_back(caseQueue.getPriority(9327)); //97
    myResult.push_back(caseQueue.getPriority(80984)); //98
    myResult.push_back(caseQueue.getPriority(63236)); //99
    caseQueue.updatePriority(41986, 63961);
    caseQueue.insert(78161,73901);
    caseQueue.insert(42802,58218);
    caseQueue.insert(95718,66371);
    caseQueue.insert(67122,65625);
    caseQueue.insert(63496,40443);
    myResult.push_back(caseQueue.deleteMin()); //100
    caseQueue.insert(6745,37035);
    caseQueue.insert(65746,75238);
    myResult.push_back(caseQueue.getPriority(78161)); //101
    caseQueue.insert(31844,97069);
    caseQueue.insert(49565,25209);
    caseQueue.updatePriority(64199, 26786);
    caseQueue.updatePriority(13010, 88037);
    myResult.push_back(caseQueue.getPriority(28573)); //102
    caseQueue.insert(7704,9066);
    caseQueue.insert(93553,12597);
    caseQueue.insert(95766,821);
    caseQueue.updatePriority(5076, 43601);
    myResult.push_back(caseQueue.getPriority(19761)); //103
    myResult.push_back(caseQueue.deleteMin()); //104
    caseQueue.updatePriority(2926, 36978);
    caseQueue.insert(33467,93429);
    caseQueue.insert(57571,8668);
    caseQueue.insert(95765,62276);
    caseQueue.insert(73296,25601);
    caseQueue.updatePriority(90721, 40635);
    static const int resultListArray[] = {74537, 53505, 94109, 91394, 67312, 91394, 75057, 47701, 28751, 1752, 32627, 83289, 56, 30752, 75057, 97463, 70473, 47882, 55814, 28668, 47856, 30351, 33024, 47882, 75342, 55023, 78514, 7441, 29264, 54544, 80585, 29264, 4646, 29264, 74147, 85565, 20133, 55023, 65011, 62424, 49598, 83585, 30413, 13970, 207, 61322, 14282, 97604, 85565, 55781, 30185, 31516, 51119, 24145, 13465, 55023, 49598, 49953, 45630, 64677, 37158, 72041, 70054, 54544, 64677, 42994, 86807, 54544, 99046, 39266, 74974, 85290, 28591, 55090, 88635, 55090, 14149, 11086, 47183, 72764, 97606, 72764, 55023, 11909, 85290, 97606, 11442, 69303, 87969, 8226, 78970, 82740, 24031, 92324, 30880, 79610, 68441, 45307, 49598, 44291, 73901, 76276, 72041, 95766}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(40): Basarili" << endl;
    else cout << "Case(40): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_41(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 105);

    vector<int> myResult; 
    caseQueue.insert(44982,12454);
    myResult.push_back(caseQueue.getPriority(44982)); //1
    myResult.push_back(caseQueue.getPriority(44982)); //2
    myResult.push_back(caseQueue.getPriority(44982)); //3
    caseQueue.insert(18845,53604);
    caseQueue.insert(60158,24952);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(18845)); //6
    myResult.push_back(caseQueue.getPriority(18845)); //7
    caseQueue.insert(98174,67294);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(62927,33692);
    caseQueue.insert(7992,32322);
    caseQueue.insert(44447,20783);
    caseQueue.updatePriority(62927, 37017);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(14241,53100);
    caseQueue.updatePriority(7992, 14390);
    caseQueue.updatePriority(62927, 88760);
    caseQueue.insert(11795,31045);
    caseQueue.insert(49601,8522);
    caseQueue.insert(51616,68410);
    caseQueue.insert(7019,8604);
    caseQueue.insert(28597,20608);
    caseQueue.insert(3862,42660);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(62927, 28339);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(106,34492);
    myResult.push_back(caseQueue.getPriority(106)); //12
    caseQueue.updatePriority(11795, 43316);
    myResult.push_back(caseQueue.getPriority(3862)); //13
    caseQueue.insert(38488,52795);
    myResult.push_back(caseQueue.getPriority(11795)); //14
    caseQueue.updatePriority(62927, 37080);
    caseQueue.insert(78413,17571);
    caseQueue.insert(1879,15238);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(91454,64571);
    caseQueue.insert(51250,56120);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(47101,44441);
    myResult.push_back(caseQueue.getPriority(98174)); //17
    caseQueue.insert(72000,43948);
    caseQueue.insert(32174,25488);
    caseQueue.updatePriority(78413, 82724);
    caseQueue.insert(48547,46831);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(48547)); //19
    caseQueue.insert(5706,48337);
    myResult.push_back(caseQueue.getPriority(51250)); //20
    caseQueue.insert(51893,45917);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(26627,38655);
    myResult.push_back(caseQueue.getPriority(14241)); //22
    caseQueue.updatePriority(5706, 66644);
    caseQueue.insert(52897,77622);
    caseQueue.insert(80086,35138);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(3862)); //24
    caseQueue.insert(74631,54758);
    myResult.push_back(caseQueue.getPriority(47101)); //25
    caseQueue.insert(66907,88334);
    caseQueue.insert(28431,94598);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(62927)); //27
    caseQueue.insert(23465,7540);
    myResult.push_back(caseQueue.getPriority(11795)); //28
    caseQueue.insert(51862,19130);
    caseQueue.insert(3789,23376);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(26627)); //30
    myResult.push_back(caseQueue.getPriority(74631)); //31
    caseQueue.updatePriority(52897, 76521);
    caseQueue.updatePriority(5706, 90431);
    myResult.push_back(caseQueue.getPriority(74631)); //32
    myResult.push_back(caseQueue.getPriority(74631)); //33
    caseQueue.insert(32672,93808);
    caseQueue.insert(98592,32656);
    caseQueue.insert(83967,24413);
    caseQueue.insert(81082,44817);
    myResult.push_back(caseQueue.getPriority(83967)); //34
    caseQueue.insert(45855,76573);
    caseQueue.insert(3294,52231);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(60137,40039);
    myResult.push_back(caseQueue.getPriority(66907)); //36
    caseQueue.insert(1141,56323);
    caseQueue.updatePriority(60137, 86136);
    caseQueue.updatePriority(38488, 85634);
    caseQueue.insert(38115,23827);
    caseQueue.insert(65276,1541);
    myResult.push_back(caseQueue.getPriority(3862)); //37
    caseQueue.insert(84646,31413);
    caseQueue.insert(4088,58785);
    caseQueue.insert(68791,74376);
    caseQueue.insert(2189,52739);
    myResult.push_back(caseQueue.getPriority(74631)); //38
    caseQueue.insert(75445,52369);
    caseQueue.insert(25401,54025);
    myResult.push_back(caseQueue.getPriority(84646)); //39
    caseQueue.updatePriority(68791, 75856);
    caseQueue.updatePriority(62927, 12017);
    caseQueue.insert(88619,24167);
    static const int resultListArray[] = {12454, 12454, 12454, 44982, 60158, 53604, 53604, 18845, 44447, 49601, 7019, 34492, 42660, 43316, 7992, 1879, 67294, 28597, 46831, 56120, 32174, 53100, 106, 42660, 44441, 80086, 37080, 43316, 23465, 38655, 54758, 54758, 54758, 24413, 51862, 88334, 42660, 54758, 31413}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(41): Basarili" << endl;
    else cout << "Case(41): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_42(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 104);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(5549,67297);
    caseQueue.insert(2624,15494);
    myResult.push_back(caseQueue.getPriority(2624)); //2
    myResult.push_back(caseQueue.getPriority(2624)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(5549, 3038);
    caseQueue.insert(48239,29062);
    caseQueue.insert(19866,1113);
    caseQueue.updatePriority(5549, 41415);
    caseQueue.insert(49307,38945);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(48239, 73693);
    caseQueue.updatePriority(5549, 71843);
    caseQueue.insert(13340,55480);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(23445,12100);
    myResult.push_back(caseQueue.getPriority(5549)); //7
    myResult.push_back(caseQueue.getPriority(48239)); //8
    myResult.push_back(caseQueue.getPriority(23445)); //9
    caseQueue.insert(99160,27992);
    myResult.push_back(caseQueue.getPriority(99160)); //10
    caseQueue.updatePriority(23445, 83409);
    caseQueue.updatePriority(23445, 26033);
    myResult.push_back(caseQueue.getPriority(23445)); //11
    caseQueue.insert(94577,43217);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(94577, 81854);
    myResult.push_back(caseQueue.getPriority(48239)); //13
    myResult.push_back(caseQueue.getPriority(48239)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(48239, 41532);
    caseQueue.insert(99914,85231);
    caseQueue.insert(38589,56100);
    caseQueue.updatePriority(5549, 17571);
    caseQueue.insert(4033,11796);
    caseQueue.insert(70673,71984);
    caseQueue.insert(58694,30584);
    caseQueue.insert(15429,9252);
    caseQueue.insert(63258,97854);
    myResult.push_back(caseQueue.getPriority(48239)); //16
    caseQueue.insert(43572,16707);
    caseQueue.insert(45013,71534);
    caseQueue.insert(20254,73804);
    caseQueue.insert(39367,6183);
    caseQueue.updatePriority(15429, 6000);
    myResult.push_back(caseQueue.getPriority(94577)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(94577, 12499);
    caseQueue.updatePriority(38589, 74334);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(10652,6179);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(87141,57028);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(87141)); //23
    caseQueue.insert(68604,48107);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(70673, 7750);
    caseQueue.insert(84325,63376);
    myResult.push_back(caseQueue.getPriority(70673)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(17387,29110);
    myResult.push_back(caseQueue.getPriority(20254)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(45013, 27065);
    myResult.push_back(caseQueue.getPriority(13340)); //31
    caseQueue.insert(37073,27453);
    caseQueue.insert(42971,74161);
    myResult.push_back(caseQueue.getPriority(63258)); //32
    caseQueue.insert(53217,44417);
    caseQueue.insert(70717,6647);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(20254, 47258);
    myResult.push_back(caseQueue.getPriority(37073)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(74185,82068);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(15316,4166);
    caseQueue.insert(1676,82607);
    caseQueue.insert(31374,11909);
    caseQueue.updatePriority(15316, 13422);
    caseQueue.insert(4856,34105);
    caseQueue.insert(8449,98094);
    caseQueue.updatePriority(42971, 65932);
    caseQueue.updatePriority(48239, 99622);
    caseQueue.updatePriority(38589, 56775);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(84325)); //38
    caseQueue.insert(83093,10428);
    caseQueue.insert(9466,78893);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(12284,38481);
    myResult.push_back(caseQueue.getPriority(53217)); //40
    caseQueue.insert(72845,62543);
    caseQueue.insert(53276,49969);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(4856, 30921);
    myResult.push_back(caseQueue.getPriority(74185)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(42971)); //44
    static const int resultListArray[] = {-1, 15494, 15494, 2624, 19866, 49307, 71843, 73693, 12100, 27992, 26033, 23445, 73693, 73693, 99160, 41532, 81854, 15429, 39367, 4033, 10652, 94577, 57028, 43572, 5549, 58694, 7750, 70673, 73804, 17387, 55480, 97854, 70717, 27453, 45013, 37073, 31374, 63376, 83093, 44417, 15316, 82068, 4856, 65932}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(42): Basarili" << endl;
    else cout << "Case(42): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_43(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 224);

    vector<int> myResult; 
    caseQueue.updatePriority(33776, 45806);
    caseQueue.insert(55266,386);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(16409,12523);
    caseQueue.insert(49652,34450);
    caseQueue.insert(57627,71003);
    caseQueue.insert(55870,88049);
    caseQueue.insert(76892,28448);
    caseQueue.insert(71318,24258);
    caseQueue.insert(30106,90068);
    caseQueue.insert(63351,23548);
    caseQueue.updatePriority(49652, 41999);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(25339,26290);
    caseQueue.updatePriority(55870, 78080);
    myResult.push_back(caseQueue.getPriority(49652)); //4
    caseQueue.insert(2803,1066);
    myResult.push_back(caseQueue.getPriority(76892)); //5
    caseQueue.updatePriority(2803, 35244);
    caseQueue.insert(81921,54492);
    caseQueue.updatePriority(81921, 5322);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(2803, 54496);
    myResult.push_back(caseQueue.getPriority(49652)); //8
    myResult.push_back(caseQueue.getPriority(25339)); //9
    caseQueue.insert(87946,8418);
    caseQueue.insert(26581,263);
    caseQueue.insert(41602,45871);
    caseQueue.insert(35592,42589);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(2237,67723);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(18367,20504);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(34025,85894);
    caseQueue.insert(68379,70830);
    caseQueue.insert(25440,32975);
    myResult.push_back(caseQueue.getPriority(30106)); //15
    caseQueue.insert(7728,790);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(55870)); //17
    myResult.push_back(caseQueue.getPriority(2237)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(18522,9001);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(35592)); //21
    myResult.push_back(caseQueue.getPriority(2237)); //22
    caseQueue.insert(25305,92549);
    caseQueue.insert(5001,68499);
    caseQueue.insert(47445,76744);
    caseQueue.insert(36711,61036);
    caseQueue.insert(29654,23763);
    myResult.push_back(caseQueue.getPriority(29654)); //23
    caseQueue.updatePriority(34025, 41124);
    caseQueue.updatePriority(2237, 62557);
    caseQueue.insert(7573,36923);
    caseQueue.updatePriority(41602, 28124);
    myResult.push_back(caseQueue.getPriority(25440)); //24
    caseQueue.updatePriority(29654, 23093);
    caseQueue.updatePriority(5001, 79259);
    caseQueue.updatePriority(25305, 53471);
    caseQueue.insert(22130,3337);
    caseQueue.insert(83232,49350);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(57627, 9187);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(11303,36869);
    myResult.push_back(caseQueue.getPriority(34025)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(2803, 82027);
    myResult.push_back(caseQueue.getPriority(25440)); //30
    myResult.push_back(caseQueue.getPriority(47445)); //31
    caseQueue.insert(49383,54279);
    caseQueue.updatePriority(2237, 10338);
    myResult.push_back(caseQueue.getPriority(47445)); //32
    myResult.push_back(caseQueue.getPriority(35592)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(31311,10392);
    myResult.push_back(caseQueue.getPriority(49652)); //35
    caseQueue.insert(14494,99461);
    caseQueue.insert(88918,75380);
    caseQueue.insert(2708,36825);
    caseQueue.updatePriority(30106, 63230);
    myResult.push_back(caseQueue.getPriority(2803)); //36
    caseQueue.insert(87023,73185);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(47445)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(3153,3437);
    caseQueue.insert(26813,12743);
    caseQueue.insert(58414,88719);
    caseQueue.insert(3624,13756);
    caseQueue.insert(20126,22690);
    caseQueue.updatePriority(14494, 57035);
    caseQueue.insert(37835,95484);
    caseQueue.updatePriority(2708, 43994);
    myResult.push_back(caseQueue.getPriority(87023)); //40
    caseQueue.insert(30478,31167);
    caseQueue.insert(39271,77858);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(83232)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(47445, 49886);
    myResult.push_back(caseQueue.getPriority(34025)); //46
    caseQueue.insert(40873,69664);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(55870)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(35592)); //50
    caseQueue.insert(50354,61837);
    myResult.push_back(caseQueue.getPriority(25305)); //51
    myResult.push_back(caseQueue.getPriority(87023)); //52
    caseQueue.insert(49363,41573);
    myResult.push_back(caseQueue.getPriority(36711)); //53
    myResult.push_back(caseQueue.getPriority(50354)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(5527,46431);
    caseQueue.updatePriority(35592, 6799);
    caseQueue.insert(7838,95154);
    caseQueue.updatePriority(47445, 15842);
    caseQueue.insert(23577,48633);
    caseQueue.insert(69965,15157);
    caseQueue.insert(81116,65793);
    caseQueue.insert(14013,22567);
    caseQueue.insert(88159,29139);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(55870, 28490);
    caseQueue.insert(59525,32656);
    caseQueue.insert(24875,1776);
    caseQueue.updatePriority(37835, 16238);
    caseQueue.updatePriority(49652, 41351);
    myResult.push_back(caseQueue.getPriority(49652)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(83232)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(47445, 23543);
    caseQueue.insert(13096,63573);
    myResult.push_back(caseQueue.getPriority(30106)); //62
    caseQueue.insert(79725,60453);
    caseQueue.insert(3808,76275);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(1923,17490);
    caseQueue.insert(389,2354);
    caseQueue.insert(21977,31052);
    myResult.push_back(caseQueue.getPriority(389)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(74555,92237);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(81116)); //68
    caseQueue.insert(50762,854);
    caseQueue.insert(47686,37927);
    caseQueue.insert(63497,44167);
    caseQueue.insert(13861,91847);
    caseQueue.insert(29476,82590);
    caseQueue.insert(36136,6835);
    caseQueue.insert(57698,14199);
    caseQueue.updatePriority(81116, 50107);
    caseQueue.insert(11715,78880);
    caseQueue.insert(73144,16366);
    caseQueue.updatePriority(2803, 26720);
    caseQueue.updatePriority(36136, 69536);
    caseQueue.updatePriority(58414, 21885);
    caseQueue.insert(71660,59256);
    caseQueue.updatePriority(79725, 46692);
    caseQueue.updatePriority(87023, 3584);
    caseQueue.insert(67357,77011);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(76335,32023);
    caseQueue.insert(49427,30773);
    caseQueue.insert(85288,80293);
    caseQueue.insert(4431,28959);
    caseQueue.updatePriority(47445, 85012);
    caseQueue.insert(76297,68426);
    caseQueue.updatePriority(49383, 51565);
    caseQueue.insert(84488,49215);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(39271, 29143);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(36711)); //73
    caseQueue.insert(51057,61440);
    caseQueue.insert(88184,4058);
    caseQueue.insert(92893,78657);
    caseQueue.insert(48818,44441);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(59525, 74288);
    caseQueue.insert(72659,8555);
    caseQueue.insert(54875,36755);
    caseQueue.insert(76855,15603);
    caseQueue.insert(24063,73784);
    caseQueue.updatePriority(23577, 29524);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(39653,23476);
    myResult.push_back(caseQueue.getPriority(11715)); //77
    caseQueue.insert(26177,87274);
    caseQueue.insert(46113,77488);
    caseQueue.insert(49172,60919);
    myResult.push_back(caseQueue.getPriority(21977)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(36136, 73579);
    caseQueue.updatePriority(59525, 74719);
    caseQueue.updatePriority(51057, 6502);
    caseQueue.insert(53164,66045);
    caseQueue.insert(12145,65472);
    caseQueue.insert(77758,99776);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.getPriority(81116)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.getPriority(3808)); //83
    caseQueue.updatePriority(5001, 29317);
    caseQueue.insert(97611,92983);
    caseQueue.insert(57953,79341);
    caseQueue.updatePriority(81116, 1762);
    caseQueue.insert(14934,47769);
    static const int resultListArray[] = {55266, -1, 16409, 41999, 28448, 81921, 63351, 41999, 26290, 26581, 87946, 18367, 71318, 25339, 90068, 7728, 78080, 67723, 76892, 18522, 42589, 67723, 23763, 32975, 22130, 57627, 41124, 29654, 41602, 32975, 76744, 76744, 42589, 2237, 41999, 82027, 31311, 76744, 25440, 73185, 3153, 26813, 49350, 3624, 20126, 41124, 30478, 78080, 11303, 42589, 53471, 73185, 61036, 61837, 7573, 34025, 35592, 41351, 24875, 49350, 69965, 63230, 37835, 2354, 389, 1923, 14013, 65793, 50762, 87023, 57698, 73144, 61036, 88184, 58414, 72659, 78880, 31052, 76855, 51057, 50107, 39653, 76275}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(43): Basarili" << endl;
    else cout << "Case(43): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_44(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 130);

    vector<int> myResult; 
    caseQueue.updatePriority(5165, 13894);
    myResult.push_back(caseQueue.getPriority(23250)); //1
    myResult.push_back(caseQueue.getPriority(72010)); //2
    caseQueue.insert(54444,60765);
    caseQueue.insert(36691,67578);
    caseQueue.updatePriority(54444, 88432);
    myResult.push_back(caseQueue.getPriority(36691)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(37571,96406);
    myResult.push_back(caseQueue.getPriority(37571)); //5
    caseQueue.insert(32996,79997);
    caseQueue.updatePriority(54444, 28366);
    caseQueue.insert(46254,53570);
    myResult.push_back(caseQueue.getPriority(54444)); //6
    caseQueue.insert(99280,64449);
    caseQueue.insert(95544,98515);
    caseQueue.insert(25113,81587);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(25113, 9249);
    caseQueue.insert(99565,1400);
    caseQueue.updatePriority(99565, 53105);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(30756,46485);
    myResult.push_back(caseQueue.getPriority(46254)); //9
    myResult.push_back(caseQueue.getPriority(99280)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(37571)); //12
    caseQueue.insert(35643,17401);
    caseQueue.insert(39750,43987);
    myResult.push_back(caseQueue.getPriority(35643)); //13
    caseQueue.insert(4600,91360);
    myResult.push_back(caseQueue.getPriority(35643)); //14
    caseQueue.insert(49143,21817);
    myResult.push_back(caseQueue.getPriority(99565)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(32529,19918);
    caseQueue.insert(77825,85410);
    caseQueue.insert(48389,87071);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(77825, 42838);
    myResult.push_back(caseQueue.getPriority(37571)); //18
    caseQueue.updatePriority(95544, 86167);
    caseQueue.insert(85460,37364);
    caseQueue.insert(15420,28175);
    myResult.push_back(caseQueue.getPriority(15420)); //19
    caseQueue.insert(39631,81525);
    myResult.push_back(caseQueue.getPriority(85460)); //20
    caseQueue.updatePriority(99280, 86431);
    caseQueue.insert(7308,82527);
    caseQueue.updatePriority(46254, 9757);
    caseQueue.updatePriority(95544, 9122);
    caseQueue.insert(25090,73712);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(82324,39311);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(48389, 96079);
    caseQueue.insert(78996,3241);
    caseQueue.updatePriority(85460, 69137);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(77825)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(39631)); //27
    caseQueue.updatePriority(4600, 78445);
    caseQueue.insert(69704,46217);
    caseQueue.insert(21960,70529);
    myResult.push_back(caseQueue.getPriority(39631)); //28
    caseQueue.updatePriority(39631, 47079);
    caseQueue.insert(84518,38409);
    myResult.push_back(caseQueue.getPriority(77825)); //29
    myResult.push_back(caseQueue.getPriority(99565)); //30
    caseQueue.updatePriority(4600, 75820);
    caseQueue.insert(93603,19698);
    caseQueue.insert(14627,33689);
    caseQueue.updatePriority(77825, 96908);
    caseQueue.insert(55091,27741);
    caseQueue.updatePriority(85460, 83473);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(3521,61509);
    caseQueue.insert(74025,15942);
    caseQueue.insert(33241,39219);
    caseQueue.insert(39198,69464);
    myResult.push_back(caseQueue.getPriority(39750)); //33
    caseQueue.updatePriority(82324, 44514);
    caseQueue.insert(64711,56925);
    caseQueue.insert(77952,60223);
    caseQueue.insert(28517,32980);
    myResult.push_back(caseQueue.getPriority(4600)); //34
    myResult.push_back(caseQueue.getPriority(4600)); //35
    caseQueue.insert(82278,17591);
    caseQueue.insert(34306,2261);
    caseQueue.updatePriority(28517, 75740);
    myResult.push_back(caseQueue.getPriority(69704)); //36
    caseQueue.insert(80345,35116);
    caseQueue.insert(61439,99582);
    caseQueue.insert(37012,36763);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(1284,98838);
    caseQueue.insert(62799,21593);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(77952, 3193);
    caseQueue.updatePriority(25090, 2374);
    caseQueue.insert(30356,6113);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(4600)); //40
    caseQueue.insert(21987,22692);
    caseQueue.insert(30138,4782);
    caseQueue.updatePriority(80345, 97808);
    caseQueue.insert(96193,55616);
    caseQueue.updatePriority(77952, 39556);
    caseQueue.updatePriority(77952, 81989);
    myResult.push_back(caseQueue.getPriority(37012)); //41
    caseQueue.updatePriority(84518, 9343);
    myResult.push_back(caseQueue.getPriority(39198)); //42
    caseQueue.insert(42271,65032);
    caseQueue.updatePriority(99565, 18800);
    myResult.push_back(caseQueue.getPriority(69704)); //43
    caseQueue.insert(68749,34935);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(36902,69042);
    caseQueue.insert(42797,17133);
    caseQueue.insert(72022,92617);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(58644,15696);
    caseQueue.insert(57486,81479);
    myResult.push_back(caseQueue.getPriority(80345)); //47
    caseQueue.updatePriority(4600, 44529);
    caseQueue.insert(27035,22887);
    static const int resultListArray[] = {-1, -1, 67578, 36691, 96406, 28366, 54444, 25113, 53570, 64449, 30756, 96406, 17401, 17401, 53105, 35643, 32529, 96406, 28175, 37364, 95544, 46254, 78996, 42838, 49143, 15420, 81525, 81525, 42838, 53105, 93603, 55091, 43987, 75820, 75820, 46217, 34306, 74025, 25090, 75820, 36763, 69464, 46217, 30138, 30356, 84518, 97808}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(44): Basarili" << endl;
    else cout << "Case(44): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_45(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 230);

    vector<int> myResult; 
    caseQueue.insert(49906,34052);
    caseQueue.insert(92857,94383);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(63852,63516);
    caseQueue.insert(30767,75657);
    caseQueue.insert(37477,64450);
    caseQueue.insert(4933,61209);
    caseQueue.insert(37177,16919);
    caseQueue.updatePriority(63852, 46231);
    caseQueue.insert(34781,91234);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(43412,71409);
    caseQueue.insert(68666,33925);
    caseQueue.insert(23415,25015);
    caseQueue.insert(79578,8607);
    caseQueue.insert(38336,61976);
    caseQueue.insert(62531,72863);
    myResult.push_back(caseQueue.getPriority(37477)); //4
    myResult.push_back(caseQueue.getPriority(38336)); //5
    caseQueue.insert(48611,68520);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(57095,50013);
    caseQueue.insert(11515,91019);
    caseQueue.insert(34069,60478);
    caseQueue.updatePriority(11515, 78931);
    caseQueue.updatePriority(37477, 97756);
    caseQueue.insert(23172,74970);
    caseQueue.updatePriority(23415, 40758);
    caseQueue.updatePriority(68666, 80419);
    myResult.push_back(caseQueue.getPriority(43412)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(46016,96866);
    caseQueue.insert(92577,56934);
    caseQueue.insert(25610,75956);
    caseQueue.insert(78205,59733);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(38336, 68828);
    caseQueue.updatePriority(78205, 93970);
    caseQueue.updatePriority(43412, 63177);
    caseQueue.insert(10060,65593);
    myResult.push_back(caseQueue.getPriority(68666)); //10
    caseQueue.insert(49288,24758);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(23172, 65118);
    caseQueue.insert(34915,59479);
    caseQueue.insert(97111,93946);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(25610, 94273);
    caseQueue.insert(49539,81684);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(49539, 53072);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(37477, 29502);
    caseQueue.insert(57856,38561);
    caseQueue.updatePriority(57856, 74891);
    caseQueue.insert(95939,80189);
    caseQueue.insert(53452,98660);
    caseQueue.insert(87406,81655);
    caseQueue.updatePriority(23172, 97750);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(76266,44028);
    caseQueue.updatePriority(48611, 75695);
    caseQueue.updatePriority(30767, 55342);
    caseQueue.insert(78501,82257);
    caseQueue.insert(87227,19524);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(70441,78972);
    caseQueue.insert(39571,39893);
    caseQueue.insert(50214,53863);
    caseQueue.updatePriority(78501, 86632);
    caseQueue.insert(98941,15866);
    caseQueue.updatePriority(98941, 73565);
    caseQueue.updatePriority(78205, 2773);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(13431,75636);
    myResult.push_back(caseQueue.getPriority(48611)); //20
    caseQueue.updatePriority(4933, 4448);
    caseQueue.updatePriority(46016, 73192);
    myResult.push_back(caseQueue.getPriority(43412)); //21
    caseQueue.insert(82910,22074);
    caseQueue.updatePriority(57856, 33502);
    caseQueue.updatePriority(34781, 55956);
    caseQueue.insert(61543,74710);
    caseQueue.insert(88754,41837);
    caseQueue.insert(27308,11385);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(6820,41285);
    caseQueue.insert(24746,27479);
    myResult.push_back(caseQueue.getPriority(98941)); //23
    myResult.push_back(caseQueue.getPriority(98941)); //24
    caseQueue.updatePriority(95939, 66378);
    caseQueue.insert(17153,21743);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(51141,3006);
    caseQueue.updatePriority(51141, 65269);
    caseQueue.updatePriority(76266, 37388);
    caseQueue.updatePriority(57856, 85716);
    caseQueue.updatePriority(53452, 92030);
    caseQueue.insert(62701,48897);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(95939, 88544);
    caseQueue.updatePriority(68666, 5801);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(62701, 65699);
    caseQueue.insert(6440,27075);
    myResult.push_back(caseQueue.getPriority(57856)); //30
    caseQueue.insert(42722,4673);
    caseQueue.updatePriority(42722, 3075);
    caseQueue.updatePriority(6440, 23439);
    caseQueue.insert(25542,27205);
    myResult.push_back(caseQueue.getPriority(42722)); //31
    myResult.push_back(caseQueue.getPriority(10060)); //32
    caseQueue.insert(10966,19591);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(53820,79451);
    caseQueue.insert(70186,20818);
    caseQueue.insert(17269,79632);
    caseQueue.updatePriority(57856, 31072);
    myResult.push_back(caseQueue.getPriority(46016)); //34
    caseQueue.updatePriority(38336, 14621);
    caseQueue.updatePriority(25542, 36076);
    caseQueue.insert(43283,11358);
    caseQueue.insert(94481,14192);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(69887,82721);
    caseQueue.insert(17716,11477);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(23867,55786);
    caseQueue.insert(93273,61269);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(96051,82064);
    caseQueue.insert(70333,99559);
    caseQueue.insert(88934,46177);
    caseQueue.updatePriority(88934, 63253);
    caseQueue.insert(15494,129);
    caseQueue.updatePriority(88934, 90041);
    caseQueue.insert(95812,45070);
    caseQueue.insert(30222,53226);
    myResult.push_back(caseQueue.getPriority(96051)); //38
    myResult.push_back(caseQueue.getPriority(92857)); //39
    myResult.push_back(caseQueue.getPriority(70333)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(40129,31269);
    caseQueue.updatePriority(25542, 86391);
    myResult.push_back(caseQueue.getPriority(98941)); //42
    caseQueue.insert(52756,34581);
    caseQueue.insert(99173,42778);
    caseQueue.insert(5667,16791);
    caseQueue.insert(47269,15559);
    caseQueue.insert(87017,87240);
    caseQueue.insert(71602,34258);
    myResult.push_back(caseQueue.getPriority(50214)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(86854,26817);
    caseQueue.insert(96363,18660);
    caseQueue.insert(42470,15931);
    caseQueue.insert(92620,66105);
    caseQueue.updatePriority(25542, 48383);
    caseQueue.updatePriority(97111, 89462);
    caseQueue.insert(50953,45025);
    caseQueue.updatePriority(62531, 13593);
    myResult.push_back(caseQueue.getPriority(61543)); //45
    caseQueue.insert(70183,18000);
    caseQueue.insert(95695,73284);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(10966)); //47
    caseQueue.insert(20263,30043);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(89834,17928);
    caseQueue.insert(47772,41871);
    caseQueue.insert(61433,47432);
    caseQueue.updatePriority(62701, 11006);
    caseQueue.insert(58862,34275);
    caseQueue.insert(60096,24061);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(5667, 30852);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(23867)); //51
    caseQueue.insert(31997,29492);
    caseQueue.insert(27386,79619);
    caseQueue.updatePriority(70333, 60180);
    myResult.push_back(caseQueue.getPriority(53820)); //52
    caseQueue.insert(98420,75653);
    caseQueue.insert(92409,84379);
    myResult.push_back(caseQueue.getPriority(53452)); //53
    caseQueue.insert(11715,87169);
    myResult.push_back(caseQueue.getPriority(11715)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(95695, 23282);
    caseQueue.insert(84673,64216);
    myResult.push_back(caseQueue.getPriority(78501)); //56
    caseQueue.insert(92320,62614);
    caseQueue.updatePriority(98420, 2611);
    caseQueue.insert(17665,94982);
    caseQueue.updatePriority(70333, 86359);
    caseQueue.insert(32547,72178);
    myResult.push_back(caseQueue.getPriority(32547)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(41795,480);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(93273, 34056);
    caseQueue.insert(52663,23981);
    myResult.push_back(caseQueue.getPriority(20263)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(23562,6328);
    caseQueue.insert(11555,57419);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(98941)); //66
    caseQueue.insert(10234,23155);
    myResult.push_back(caseQueue.getPriority(30767)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(56119,62920);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(37028,83540);
    myResult.push_back(caseQueue.getPriority(70441)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(32547, 76862);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(30767)); //73
    caseQueue.insert(45467,7972);
    myResult.push_back(caseQueue.getPriority(37028)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    static const int resultListArray[] = {49906, 37177, 63852, 64450, 61976, 79578, 71409, 23415, 57095, 80419, 49288, 92577, 34915, 49539, 34069, 37477, 87227, 78205, 39571, 75695, 63177, 4933, 73565, 73565, 27308, 17153, 82910, 24746, 68666, 85716, 3075, 65593, 42722, 73192, 43283, 17716, 94481, 82064, 94383, 99559, 15494, 73565, 53863, 38336, 74710, 62531, 19591, 47269, 62701, 42470, 55786, 79451, 92030, 87169, 89834, 86632, 72178, 98420, 70183, 96363, 41795, 10966, 30043, 70186, 23562, 73565, 55342, 10234, 95695, 78972, 6440, 52663, 55342, 83540, 45467}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(45): Basarili" << endl;
    else cout << "Case(45): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_46(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 157);

    vector<int> myResult; 
    caseQueue.updatePriority(61642, 49126);
    caseQueue.updatePriority(3872, 7337);
    myResult.push_back(caseQueue.getPriority(60930)); //1
    caseQueue.updatePriority(52588, 9496);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(34787)); //3
    caseQueue.updatePriority(54507, 28798);
    myResult.push_back(caseQueue.getPriority(64596)); //4
    caseQueue.insert(67262,86507);
    caseQueue.insert(82279,5570);
    caseQueue.updatePriority(67262, 94370);
    caseQueue.insert(65677,24638);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(43068,32979);
    caseQueue.insert(95585,8907);
    caseQueue.updatePriority(65677, 28787);
    caseQueue.insert(17659,49819);
    myResult.push_back(caseQueue.getPriority(65677)); //6
    myResult.push_back(caseQueue.getPriority(95585)); //7
    caseQueue.insert(65558,57080);
    caseQueue.insert(13841,69096);
    caseQueue.updatePriority(43068, 44421);
    caseQueue.insert(48260,27522);
    caseQueue.insert(44113,72964);
    caseQueue.updatePriority(17659, 11211);
    caseQueue.insert(13004,14232);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(67262)); //9
    caseQueue.insert(52367,63539);
    caseQueue.updatePriority(48260, 5443);
    caseQueue.insert(84389,47734);
    caseQueue.insert(45501,60766);
    caseQueue.insert(46711,43772);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(7014,24639);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(21065,80575);
    myResult.push_back(caseQueue.getPriority(65558)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(65677)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(45501)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(28464,71275);
    caseQueue.insert(79931,43514);
    caseQueue.insert(89274,92554);
    caseQueue.insert(41175,19562);
    caseQueue.updatePriority(52367, 61522);
    myResult.push_back(caseQueue.getPriority(13841)); //20
    myResult.push_back(caseQueue.getPriority(41175)); //21
    caseQueue.insert(85685,27222);
    caseQueue.updatePriority(44113, 68362);
    caseQueue.updatePriority(89274, 25611);
    caseQueue.insert(57698,36487);
    caseQueue.insert(7330,4318);
    myResult.push_back(caseQueue.getPriority(21065)); //22
    caseQueue.insert(28572,91805);
    caseQueue.updatePriority(84389, 41903);
    myResult.push_back(caseQueue.getPriority(79931)); //23
    caseQueue.insert(75214,61099);
    caseQueue.updatePriority(45501, 50085);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(74629,79589);
    caseQueue.updatePriority(75214, 88278);
    caseQueue.updatePriority(13841, 35241);
    myResult.push_back(caseQueue.getPriority(45501)); //25
    caseQueue.insert(38359,16037);
    caseQueue.insert(72766,86032);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(21065)); //27
    caseQueue.insert(54435,48984);
    myResult.push_back(caseQueue.getPriority(54435)); //28
    myResult.push_back(caseQueue.getPriority(45501)); //29
    caseQueue.insert(42939,65702);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(33443,66655);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(2542,23590);
    caseQueue.updatePriority(42939, 66947);
    myResult.push_back(caseQueue.getPriority(21065)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(31553,20771);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(21065, 62217);
    myResult.push_back(caseQueue.getPriority(54435)); //38
    caseQueue.updatePriority(79931, 27719);
    caseQueue.insert(96450,40700);
    caseQueue.insert(22781,36275);
    caseQueue.updatePriority(72766, 3566);
    caseQueue.insert(54660,81582);
    caseQueue.updatePriority(79931, 9743);
    caseQueue.updatePriority(84389, 63328);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(84389, 7905);
    caseQueue.insert(48469,51309);
    caseQueue.updatePriority(96450, 15107);
    caseQueue.insert(92683,80839);
    caseQueue.insert(8384,896);
    myResult.push_back(caseQueue.getPriority(96450)); //40
    myResult.push_back(caseQueue.getPriority(54435)); //41
    caseQueue.insert(55247,58483);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(68299,10393);
    myResult.push_back(caseQueue.getPriority(33443)); //43
    myResult.push_back(caseQueue.getPriority(45501)); //44
    myResult.push_back(caseQueue.getPriority(75214)); //45
    caseQueue.insert(32345,53896);
    caseQueue.updatePriority(92683, 25440);
    caseQueue.insert(24734,49598);
    caseQueue.insert(74907,74824);
    caseQueue.insert(71344,41332);
    caseQueue.insert(57141,32638);
    caseQueue.insert(33886,6695);
    myResult.push_back(caseQueue.getPriority(71344)); //46
    caseQueue.updatePriority(71344, 22825);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(99638,90833);
    caseQueue.updatePriority(52367, 86142);
    caseQueue.updatePriority(21065, 27822);
    caseQueue.insert(70688,21288);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(8707,24993);
    caseQueue.updatePriority(67262, 36282);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(79327,48151);
    caseQueue.updatePriority(28464, 78700);
    caseQueue.updatePriority(45501, 60190);
    myResult.push_back(caseQueue.getPriority(21065)); //53
    caseQueue.insert(72409,60242);
    caseQueue.updatePriority(28572, 1805);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(25617,77842);
    caseQueue.updatePriority(24734, 9945);
    myResult.push_back(caseQueue.getPriority(75214)); //55
    caseQueue.insert(47763,38670);
    caseQueue.insert(25664,70551);
    caseQueue.updatePriority(67262, 80380);
    caseQueue.updatePriority(79327, 36329);
    myResult.push_back(caseQueue.getPriority(54660)); //56
    caseQueue.insert(67424,93827);
    myResult.push_back(caseQueue.getPriority(72409)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(54660, 99304);
    caseQueue.updatePriority(65558, 4079);
    myResult.push_back(caseQueue.getPriority(47763)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(74629)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    static const int resultListArray[] = {-1, -1, -1, -1, 82279, 28787, 8907, 95585, 94370, 48260, 17659, 13004, 57080, 7014, 28787, 65677, 60766, 46711, 43068, 69096, 19562, 80575, 43514, 7330, 50085, 38359, 80575, 48984, 50085, 41175, 89274, 85685, 13841, 57698, 80575, 2542, 31553, 48984, 72766, 15107, 48984, 8384, 66655, 50085, 88278, 41332, 33886, 84389, 79931, 68299, 96450, 70688, 27822, 28572, 88278, 81582, 60242, 24734, 38670, 65558, 71344, 79589, 8707}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(46): Basarili" << endl;
    else cout << "Case(46): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_47(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 124);

    vector<int> myResult; 
    caseQueue.insert(32947,56915);
    caseQueue.updatePriority(32947, 71380);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(25720, 97628);
    myResult.push_back(caseQueue.getPriority(72213)); //2
    caseQueue.updatePriority(93225, 54208);
    caseQueue.updatePriority(52818, 9568);
    caseQueue.updatePriority(58484, 78954);
    caseQueue.updatePriority(23238, 8703);
    caseQueue.insert(41346,28338);
    caseQueue.insert(7995,13323);
    caseQueue.insert(44411,60960);
    caseQueue.insert(20870,26115);
    caseQueue.insert(63736,99259);
    caseQueue.insert(64004,55462);
    myResult.push_back(caseQueue.getPriority(44411)); //3
    caseQueue.insert(56930,2145);
    caseQueue.insert(76047,25428);
    caseQueue.updatePriority(44411, 35881);
    myResult.push_back(caseQueue.getPriority(7995)); //4
    caseQueue.insert(25743,77004);
    caseQueue.insert(35015,93729);
    myResult.push_back(caseQueue.getPriority(56930)); //5
    caseQueue.updatePriority(35015, 35043);
    caseQueue.insert(38698,68110);
    myResult.push_back(caseQueue.getPriority(64004)); //6
    caseQueue.insert(5579,34859);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(76259,86480);
    caseQueue.updatePriority(63736, 95211);
    myResult.push_back(caseQueue.getPriority(38698)); //8
    caseQueue.insert(74776,15848);
    caseQueue.insert(61011,35935);
    caseQueue.updatePriority(5579, 29603);
    caseQueue.insert(93473,69705);
    caseQueue.insert(51972,52329);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(63736)); //11
    myResult.push_back(caseQueue.getPriority(51972)); //12
    caseQueue.insert(13095,29348);
    caseQueue.insert(82077,17155);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(61011, 41912);
    caseQueue.insert(7523,36172);
    myResult.push_back(caseQueue.getPriority(41346)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(35015, 56984);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(64004)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(35454,950);
    caseQueue.insert(93891,60704);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(83578,72021);
    caseQueue.insert(5274,4660);
    caseQueue.insert(17418,87920);
    caseQueue.insert(15000,79510);
    caseQueue.insert(47471,14229);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(67622,17303);
    caseQueue.updatePriority(76259, 62539);
    caseQueue.insert(94241,12137);
    caseQueue.insert(1997,12927);
    caseQueue.insert(8667,64190);
    caseQueue.insert(26989,98936);
    myResult.push_back(caseQueue.getPriority(76259)); //24
    caseQueue.insert(69478,94215);
    myResult.push_back(caseQueue.getPriority(47471)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(67622, 30903);
    caseQueue.insert(23067,69056);
    caseQueue.updatePriority(67622, 93911);
    caseQueue.updatePriority(7523, 75269);
    myResult.push_back(caseQueue.getPriority(63736)); //27
    myResult.push_back(caseQueue.getPriority(67622)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(49329,39644);
    caseQueue.updatePriority(93891, 75318);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(51680,59377);
    caseQueue.insert(13350,33892);
    myResult.push_back(caseQueue.getPriority(17418)); //31
    caseQueue.insert(37425,289);
    myResult.push_back(caseQueue.getPriority(93891)); //32
    caseQueue.insert(96586,92029);
    caseQueue.insert(80474,7405);
    caseQueue.updatePriority(61011, 89022);
    caseQueue.insert(59382,26219);
    caseQueue.insert(87732,40651);
    myResult.push_back(caseQueue.getPriority(64004)); //33
    caseQueue.updatePriority(8667, 64989);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(97265,40035);
    caseQueue.insert(50128,43782);
    caseQueue.insert(99003,42000);
    caseQueue.insert(18856,39133);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(76756,25415);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(33293,76454);
    caseQueue.insert(70561,40878);
    caseQueue.insert(54080,77767);
    caseQueue.updatePriority(35015, 9);
    myResult.push_back(caseQueue.getPriority(93891)); //37
    caseQueue.insert(72796,2958);
    myResult.push_back(caseQueue.getPriority(8667)); //38
    caseQueue.updatePriority(38698, 48689);
    myResult.push_back(caseQueue.getPriority(8667)); //39
    caseQueue.insert(60069,49058);
    caseQueue.updatePriority(25743, 62508);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(59382)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(27826,29972);
    caseQueue.updatePriority(15000, 41898);
    caseQueue.insert(50179,94831);
    myResult.push_back(caseQueue.getPriority(33293)); //43
    caseQueue.insert(18756,33187);
    caseQueue.updatePriority(8667, 50114);
    myResult.push_back(caseQueue.deleteMin()); //44
    static const int resultListArray[] = {32947, -1, 60960, 13323, 2145, 55462, 56930, 68110, 7995, 74776, 95211, 52329, 82077, 28338, 76047, 20870, 55462, 41346, 13095, 5579, 44411, 35454, 5274, 62539, 14229, 94241, 95211, 93911, 1997, 47471, 87920, 75318, 55462, 37425, 80474, 76756, 75318, 64989, 64989, 35015, 26219, 72796, 76454, 59382}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(47): Basarili" << endl;
    else cout << "Case(47): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_48(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 160);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(11204)); //1
    caseQueue.insert(51862,55044);
    myResult.push_back(caseQueue.getPriority(51862)); //2
    caseQueue.insert(79937,13815);
    myResult.push_back(caseQueue.getPriority(79937)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(51233,86220);
    caseQueue.insert(93071,61901);
    caseQueue.updatePriority(93071, 77841);
    caseQueue.insert(20463,8832);
    caseQueue.updatePriority(51862, 93481);
    caseQueue.insert(65516,80525);
    caseQueue.insert(10924,11660);
    caseQueue.updatePriority(93071, 24376);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(38467,50293);
    myResult.push_back(caseQueue.getPriority(10924)); //6
    caseQueue.insert(87602,80380);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(51862)); //8
    myResult.push_back(caseQueue.getPriority(38467)); //9
    caseQueue.updatePriority(87602, 74443);
    caseQueue.insert(41156,22785);
    caseQueue.insert(46866,23585);
    caseQueue.updatePriority(46866, 3649);
    caseQueue.insert(76444,39693);
    myResult.push_back(caseQueue.getPriority(65516)); //10
    caseQueue.insert(13488,28615);
    caseQueue.insert(39892,29840);
    caseQueue.insert(59206,61645);
    caseQueue.updatePriority(51233, 74927);
    caseQueue.updatePriority(76444, 7625);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(51233, 49537);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(39892, 16754);
    caseQueue.insert(67952,19640);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(88834,54294);
    myResult.push_back(caseQueue.getPriority(88834)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(25612,47881);
    myResult.push_back(caseQueue.getPriority(13488)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(87602, 85798);
    caseQueue.updatePriority(65516, 72642);
    myResult.push_back(caseQueue.getPriority(25612)); //18
    caseQueue.insert(28818,18330);
    caseQueue.insert(40130,6233);
    caseQueue.insert(42380,65846);
    caseQueue.updatePriority(65516, 97671);
    caseQueue.updatePriority(40130, 77331);
    caseQueue.updatePriority(59206, 10390);
    caseQueue.insert(69963,55482);
    caseQueue.insert(6818,87286);
    caseQueue.insert(4293,8553);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(56988,90442);
    caseQueue.insert(68502,11755);
    caseQueue.updatePriority(87602, 66718);
    caseQueue.updatePriority(51862, 99296);
    myResult.push_back(caseQueue.getPriority(87602)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(48077,97161);
    myResult.push_back(caseQueue.getPriority(56988)); //22
    caseQueue.insert(88891,46663);
    caseQueue.insert(40274,26835);
    caseQueue.insert(78552,60751);
    caseQueue.insert(65138,34375);
    caseQueue.insert(60513,67488);
    caseQueue.updatePriority(38467, 82191);
    caseQueue.insert(35248,63169);
    caseQueue.insert(76043,51235);
    caseQueue.insert(67412,57546);
    caseQueue.updatePriority(25612, 20269);
    caseQueue.updatePriority(76043, 47662);
    caseQueue.updatePriority(51233, 34636);
    caseQueue.insert(33406,20433);
    caseQueue.insert(93215,44612);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(75895,38239);
    caseQueue.insert(16044,90803);
    myResult.push_back(caseQueue.getPriority(78552)); //24
    caseQueue.insert(423,68361);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(60513)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(69963, 61162);
    caseQueue.insert(55206,67298);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(3689,96846);
    myResult.push_back(caseQueue.getPriority(65138)); //30
    myResult.push_back(caseQueue.getPriority(48077)); //31
    caseQueue.updatePriority(65138, 86797);
    myResult.push_back(caseQueue.getPriority(6818)); //32
    caseQueue.insert(28155,15628);
    caseQueue.updatePriority(38467, 21189);
    myResult.push_back(caseQueue.getPriority(88834)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(40130, 27425);
    caseQueue.insert(34202,76627);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(75694,11430);
    caseQueue.updatePriority(75895, 63315);
    caseQueue.insert(72747,5845);
    caseQueue.insert(71168,73971);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(42380, 30741);
    caseQueue.insert(60917,33680);
    myResult.push_back(caseQueue.getPriority(78552)); //38
    caseQueue.updatePriority(75895, 88704);
    caseQueue.insert(62978,51156);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(60513, 30046);
    caseQueue.updatePriority(56988, 46907);
    caseQueue.updatePriority(60917, 66861);
    myResult.push_back(caseQueue.getPriority(60917)); //40
    caseQueue.updatePriority(88834, 25753);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(84724,41634);
    caseQueue.updatePriority(84724, 89165);
    myResult.push_back(caseQueue.getPriority(48077)); //42
    myResult.push_back(caseQueue.getPriority(40130)); //43
    myResult.push_back(caseQueue.getPriority(84724)); //44
    caseQueue.updatePriority(88891, 9604);
    caseQueue.insert(18839,11421);
    caseQueue.updatePriority(71168, 19944);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(42380, 17687);
    caseQueue.insert(1220,33865);
    caseQueue.insert(68112,6555);
    caseQueue.updatePriority(84724, 83023);
    caseQueue.insert(90183,8327);
    caseQueue.updatePriority(65138, 85735);
    caseQueue.updatePriority(423, 52072);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(65516, 53189);
    myResult.push_back(caseQueue.getPriority(3689)); //47
    caseQueue.insert(31679,62983);
    caseQueue.insert(82808,95782);
    caseQueue.updatePriority(423, 35355);
    caseQueue.insert(7783,17407);
    caseQueue.insert(10754,41771);
    caseQueue.updatePriority(34202, 96765);
    caseQueue.updatePriority(55206, 34931);
    caseQueue.insert(44000,10485);
    caseQueue.insert(17619,36369);
    caseQueue.updatePriority(48077, 68362);
    caseQueue.insert(38395,86502);
    caseQueue.insert(1732,70691);
    caseQueue.insert(39674,42389);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(82992,16054);
    caseQueue.updatePriority(56988, 46344);
    caseQueue.insert(77299,3003);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    static const int resultListArray[] = {-1, 55044, 13815, 79937, 20463, 11660, 10924, 93481, 50293, 80525, 46866, 76444, 39892, 54294, 67952, 28615, 41156, 47881, 4293, 66718, 59206, 90442, 68502, 60751, 28818, 67488, 25612, 33406, 93071, 34375, 97161, 87286, 54294, 28155, 38467, 40274, 72747, 60751, 75694, 66861, 88834, 97161, 27425, 89165, 88891, 68112, 96846, 90183, 44000, 77299, 18839}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(48): Basarili" << endl;
    else cout << "Case(48): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_49(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 207);

    vector<int> myResult; 
    caseQueue.insert(24465,31565);
    caseQueue.updatePriority(24465, 20022);
    myResult.push_back(caseQueue.getPriority(24465)); //1
    myResult.push_back(caseQueue.getPriority(24465)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(8039,84640);
    myResult.push_back(caseQueue.getPriority(8039)); //5
    myResult.push_back(caseQueue.getPriority(8039)); //6
    myResult.push_back(caseQueue.getPriority(8039)); //7
    caseQueue.updatePriority(8039, 8216);
    caseQueue.insert(97092,31078);
    caseQueue.insert(81715,94150);
    caseQueue.insert(19737,74928);
    caseQueue.insert(24000,24934);
    caseQueue.insert(30082,80703);
    myResult.push_back(caseQueue.getPriority(30082)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(81715)); //10
    myResult.push_back(caseQueue.getPriority(19737)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(30082, 19762);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(39459,60492);
    caseQueue.updatePriority(97092, 4237);
    caseQueue.insert(75752,37493);
    caseQueue.updatePriority(19737, 76276);
    caseQueue.insert(18345,14273);
    caseQueue.insert(94944,30600);
    caseQueue.updatePriority(97092, 79398);
    myResult.push_back(caseQueue.getPriority(94944)); //14
    myResult.push_back(caseQueue.getPriority(39459)); //15
    caseQueue.insert(28882,43452);
    caseQueue.insert(26638,8191);
    caseQueue.insert(40173,36611);
    myResult.push_back(caseQueue.getPriority(19737)); //16
    caseQueue.insert(82902,43571);
    caseQueue.updatePriority(75752, 17450);
    caseQueue.updatePriority(18345, 50358);
    myResult.push_back(caseQueue.getPriority(18345)); //17
    myResult.push_back(caseQueue.getPriority(39459)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(58693,81210);
    caseQueue.insert(22935,659);
    myResult.push_back(caseQueue.getPriority(40173)); //20
    caseQueue.insert(55502,14397);
    caseQueue.updatePriority(58693, 78735);
    caseQueue.insert(56382,85089);
    caseQueue.updatePriority(58693, 12456);
    caseQueue.insert(67696,19066);
    caseQueue.insert(15602,90691);
    caseQueue.insert(25750,30046);
    caseQueue.updatePriority(97092, 7395);
    caseQueue.insert(38168,52039);
    caseQueue.updatePriority(28882, 71864);
    caseQueue.insert(30026,11180);
    caseQueue.insert(53387,80052);
    caseQueue.insert(46913,90040);
    caseQueue.updatePriority(39459, 57809);
    caseQueue.updatePriority(22935, 75902);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(39793,40671);
    caseQueue.insert(50169,47847);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(58693)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(30896,13565);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(9598,80392);
    caseQueue.insert(33883,1952);
    caseQueue.updatePriority(50169, 95303);
    caseQueue.updatePriority(18345, 73953);
    caseQueue.insert(79609,21424);
    caseQueue.updatePriority(28882, 60418);
    caseQueue.insert(86149,87864);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(88843,78220);
    caseQueue.updatePriority(25750, 26375);
    caseQueue.updatePriority(40173, 99906);
    caseQueue.insert(54183,67357);
    caseQueue.updatePriority(53387, 50339);
    caseQueue.updatePriority(88843, 80859);
    myResult.push_back(caseQueue.getPriority(25750)); //28
    caseQueue.insert(35405,19136);
    myResult.push_back(caseQueue.getPriority(56382)); //29
    myResult.push_back(caseQueue.getPriority(39793)); //30
    caseQueue.insert(59634,8997);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(95349,67182);
    caseQueue.insert(71479,19316);
    caseQueue.insert(67862,42794);
    caseQueue.updatePriority(94944, 88828);
    caseQueue.insert(56860,30570);
    caseQueue.updatePriority(35405, 26029);
    caseQueue.updatePriority(28882, 75125);
    caseQueue.insert(5227,94460);
    caseQueue.updatePriority(81715, 91222);
    caseQueue.insert(95746,13732);
    caseQueue.updatePriority(94944, 98306);
    caseQueue.insert(39186,30487);
    caseQueue.insert(42705,38476);
    caseQueue.insert(96308,8758);
    caseQueue.insert(93328,61336);
    myResult.push_back(caseQueue.getPriority(46913)); //34
    caseQueue.updatePriority(35405, 25364);
    caseQueue.insert(68967,12893);
    caseQueue.insert(42435,63146);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(10939,97435);
    caseQueue.updatePriority(86149, 33071);
    caseQueue.insert(30443,32046);
    caseQueue.insert(79401,64907);
    caseQueue.updatePriority(35405, 68241);
    caseQueue.insert(14759,61924);
    caseQueue.insert(44193,10918);
    caseQueue.insert(4622,67842);
    caseQueue.updatePriority(22935, 31653);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(94944)); //39
    myResult.push_back(caseQueue.getPriority(18345)); //40
    caseQueue.updatePriority(79401, 14165);
    myResult.push_back(caseQueue.getPriority(79401)); //41
    caseQueue.insert(44922,13699);
    caseQueue.insert(97716,23221);
    caseQueue.updatePriority(15602, 4326);
    caseQueue.insert(76365,74425);
    myResult.push_back(caseQueue.getPriority(9598)); //42
    caseQueue.updatePriority(10939, 15423);
    myResult.push_back(caseQueue.getPriority(81715)); //43
    myResult.push_back(caseQueue.getPriority(25750)); //44
    myResult.push_back(caseQueue.getPriority(40173)); //45
    caseQueue.insert(61842,43167);
    myResult.push_back(caseQueue.getPriority(79609)); //46
    caseQueue.insert(78097,92358);
    myResult.push_back(caseQueue.getPriority(42705)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(68268,9561);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(28018,82717);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(60726,17777);
    caseQueue.updatePriority(38168, 68850);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(10210,32615);
    caseQueue.updatePriority(5227, 99808);
    myResult.push_back(caseQueue.getPriority(38168)); //53
    myResult.push_back(caseQueue.getPriority(94944)); //54
    caseQueue.insert(97167,2355);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(86149, 55523);
    caseQueue.insert(45973,35690);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(22935)); //61
    caseQueue.updatePriority(67862, 83295);
    caseQueue.updatePriority(56382, 98149);
    myResult.push_back(caseQueue.getPriority(28882)); //62
    myResult.push_back(caseQueue.getPriority(88843)); //63
    caseQueue.insert(54235,42697);
    caseQueue.updatePriority(22935, 35159);
    caseQueue.insert(66567,92562);
    caseQueue.insert(73605,81303);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(98853,30234);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(99177,48579);
    caseQueue.updatePriority(19737, 8327);
    caseQueue.insert(87604,11933);
    caseQueue.insert(92480,76507);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(76396,27711);
    caseQueue.insert(10736,14716);
    caseQueue.updatePriority(92480, 41477);
    myResult.push_back(caseQueue.getPriority(67862)); //70
    caseQueue.insert(90653,38627);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(84056,3787);
    caseQueue.insert(33904,92126);
    caseQueue.insert(42838,19849);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(78097)); //73
    caseQueue.updatePriority(99177, 71563);
    caseQueue.insert(29708,72016);
    caseQueue.insert(85694,24967);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(65318,71190);
    caseQueue.updatePriority(50169, 82194);
    caseQueue.updatePriority(28882, 59638);
    myResult.push_back(caseQueue.getPriority(35405)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(57652,11781);
    caseQueue.insert(47563,91274);
    caseQueue.insert(70586,11277);
    caseQueue.insert(52211,55148);
    caseQueue.updatePriority(86149, 3509);
    static const int resultListArray[] = {20022, 20022, 24465, -1, 84640, 84640, 84640, 80703, 8039, 94150, 74928, 24000, 30082, 30600, 60492, 76276, 50358, 60492, 26638, 36611, 97092, 30026, 12456, 58693, 55502, 30896, 33883, 26375, 85089, 40671, 59634, 75752, 67696, 90040, 96308, 68967, 44193, 95746, 98306, 73953, 14165, 80392, 91222, 26375, 99906, 21424, 38476, 15602, 44922, 68268, 79401, 10939, 68850, 98306, 97167, 60726, 71479, 79609, 97716, 25750, 31653, 75125, 80859, 39186, 56860, 98853, 30443, 10210, 19737, 83295, 87604, 84056, 92358, 10736, 68241, 42838}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(49): Basarili" << endl;
    else cout << "Case(49): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_50(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 112);

    vector<int> myResult; 
    caseQueue.updatePriority(34902, 67809);
    myResult.push_back(caseQueue.getPriority(57846)); //1
    myResult.push_back(caseQueue.getPriority(66041)); //2
    caseQueue.insert(20337,50807);
    myResult.push_back(caseQueue.getPriority(20337)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(80195)); //5
    myResult.push_back(caseQueue.getPriority(96585)); //6
    caseQueue.insert(28873,43905);
    caseQueue.insert(299,10589);
    caseQueue.updatePriority(28873, 68482);
    caseQueue.updatePriority(299, 31281);
    caseQueue.insert(41629,21383);
    myResult.push_back(caseQueue.getPriority(28873)); //7
    caseQueue.updatePriority(28873, 34446);
    caseQueue.insert(2845,59873);
    caseQueue.insert(23688,2187);
    myResult.push_back(caseQueue.getPriority(28873)); //8
    myResult.push_back(caseQueue.getPriority(2845)); //9
    caseQueue.insert(35322,94028);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(66437,5763);
    caseQueue.insert(99381,60860);
    caseQueue.updatePriority(66437, 82659);
    caseQueue.insert(47883,63207);
    myResult.push_back(caseQueue.getPriority(2845)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(99381)); //13
    myResult.push_back(caseQueue.getPriority(66437)); //14
    caseQueue.insert(75841,69893);
    caseQueue.insert(19899,86809);
    caseQueue.insert(35749,62619);
    caseQueue.insert(59080,85635);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(95690,25387);
    myResult.push_back(caseQueue.getPriority(99381)); //17
    myResult.push_back(caseQueue.getPriority(59080)); //18
    caseQueue.updatePriority(2845, 85284);
    myResult.push_back(caseQueue.getPriority(47883)); //19
    caseQueue.insert(27262,3900);
    caseQueue.insert(25917,1913);
    caseQueue.insert(78091,56343);
    myResult.push_back(caseQueue.getPriority(27262)); //20
    myResult.push_back(caseQueue.getPriority(2845)); //21
    caseQueue.updatePriority(2845, 88754);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(64615,93688);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(7512,92885);
    caseQueue.insert(60621,94336);
    caseQueue.insert(30547,10058);
    caseQueue.insert(234,85197);
    caseQueue.insert(99018,26063);
    caseQueue.insert(9241,16142);
    caseQueue.insert(32222,65344);
    caseQueue.updatePriority(64615, 28557);
    caseQueue.insert(96505,5280);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(47883, 51506);
    caseQueue.insert(70961,95124);
    caseQueue.insert(43421,7561);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(75667,30178);
    myResult.push_back(caseQueue.getPriority(35749)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(64615, 77843);
    caseQueue.insert(90569,55945);
    caseQueue.updatePriority(59080, 3471);
    caseQueue.updatePriority(78091, 20868);
    caseQueue.insert(88887,95755);
    myResult.push_back(caseQueue.getPriority(59080)); //29
    caseQueue.updatePriority(35322, 80678);
    caseQueue.insert(71561,55063);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(44883,90096);
    caseQueue.updatePriority(88887, 15996);
    caseQueue.insert(99187,16240);
    caseQueue.updatePriority(99187, 15838);
    caseQueue.updatePriority(90569, 75071);
    myResult.push_back(caseQueue.getPriority(71561)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(66897,88630);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(25110,48728);
    caseQueue.insert(82558,17112);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(32222, 56213);
    caseQueue.updatePriority(60621, 47697);
    caseQueue.updatePriority(71561, 43836);
    caseQueue.insert(47637,3115);
    myResult.push_back(caseQueue.getPriority(32222)); //35
    caseQueue.insert(12686,76756);
    myResult.push_back(caseQueue.getPriority(12686)); //36
    caseQueue.insert(97782,40046);
    caseQueue.insert(94875,47485);
    caseQueue.insert(76663,56402);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(35322, 13349);
    myResult.push_back(caseQueue.getPriority(47883)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(1594,19924);
    myResult.push_back(caseQueue.getPriority(19899)); //40
    caseQueue.updatePriority(66437, 62047);
    caseQueue.updatePriority(94875, 52456);
    caseQueue.updatePriority(97782, 52365);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(64615, 80621);
    myResult.push_back(caseQueue.getPriority(95690)); //42
    caseQueue.updatePriority(76663, 25139);
    caseQueue.updatePriority(76663, 69774);
    static const int resultListArray[] = {-1, -1, 50807, 20337, -1, -1, 68482, 34446, 59873, 23688, 59873, 41629, 60860, 82659, 299, 28873, 60860, 85635, 63207, 3900, 85284, 25917, 27262, 96505, 43421, 62619, 30547, 9241, 3471, 59080, 55063, 99187, 88887, 82558, 56213, 76756, 47637, 51506, 35322, 86809, 1594, 25387}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(50): Basarili" << endl;
    else cout << "Case(50): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_51(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 242);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(84927)); //2
    caseQueue.updatePriority(34760, 58354);
    caseQueue.insert(43910,27559);
    caseQueue.updatePriority(43910, 25647);
    myResult.push_back(caseQueue.getPriority(43910)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(90670, 42251);
    caseQueue.insert(52626,31690);
    caseQueue.insert(85566,6266);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(19137, 47095);
    caseQueue.insert(24797,34831);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(46141, 72792);
    caseQueue.insert(19315,72294);
    caseQueue.insert(79296,4954);
    caseQueue.updatePriority(19315, 77504);
    caseQueue.updatePriority(19315, 24455);
    myResult.push_back(caseQueue.getPriority(79296)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(95858,81891);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(24067,18549);
    myResult.push_back(caseQueue.getPriority(24067)); //12
    caseQueue.insert(4524,738);
    caseQueue.insert(61440,70729);
    caseQueue.insert(42896,3611);
    caseQueue.updatePriority(24067, 73901);
    caseQueue.updatePriority(61440, 73511);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(91543,19291);
    caseQueue.insert(9255,71439);
    caseQueue.insert(25314,76928);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(48939,49140);
    caseQueue.updatePriority(48939, 15531);
    myResult.push_back(caseQueue.getPriority(24067)); //18
    caseQueue.insert(15357,96196);
    caseQueue.insert(24314,42958);
    caseQueue.insert(98001,7406);
    caseQueue.insert(39419,76385);
    myResult.push_back(caseQueue.getPriority(24067)); //19
    caseQueue.updatePriority(25314, 54582);
    caseQueue.insert(1130,93124);
    caseQueue.updatePriority(48939, 44112);
    caseQueue.insert(73688,1768);
    caseQueue.updatePriority(24067, 11171);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(24067)); //21
    myResult.push_back(caseQueue.getPriority(39419)); //22
    caseQueue.updatePriority(98001, 9077);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(25314, 68250);
    caseQueue.updatePriority(24067, 94891);
    caseQueue.insert(94170,7180);
    caseQueue.insert(388,64809);
    caseQueue.updatePriority(39419, 6444);
    caseQueue.insert(3140,77908);
    myResult.push_back(caseQueue.getPriority(1130)); //24
    myResult.push_back(caseQueue.getPriority(15357)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(48939, 85123);
    caseQueue.updatePriority(24314, 6113);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(15357, 34809);
    myResult.push_back(caseQueue.getPriority(94170)); //28
    myResult.push_back(caseQueue.getPriority(1130)); //29
    caseQueue.insert(96745,21036);
    caseQueue.insert(39081,32942);
    myResult.push_back(caseQueue.getPriority(15357)); //30
    caseQueue.insert(57253,14901);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(59532,93282);
    myResult.push_back(caseQueue.getPriority(48939)); //32
    caseQueue.insert(56624,95692);
    caseQueue.insert(53079,37308);
    caseQueue.insert(80385,955);
    myResult.push_back(caseQueue.getPriority(39081)); //33
    myResult.push_back(caseQueue.getPriority(25314)); //34
    caseQueue.insert(25442,42070);
    myResult.push_back(caseQueue.getPriority(15357)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(39081)); //37
    caseQueue.insert(69097,31252);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(97505,34046);
    caseQueue.insert(7649,20712);
    caseQueue.insert(18651,67259);
    caseQueue.updatePriority(39081, 91503);
    caseQueue.insert(449,77631);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(22320,40681);
    caseQueue.insert(98692,85865);
    caseQueue.updatePriority(388, 49790);
    myResult.push_back(caseQueue.getPriority(388)); //40
    caseQueue.insert(80290,15966);
    caseQueue.insert(85690,83755);
    caseQueue.insert(38603,93979);
    caseQueue.insert(21710,74539);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(62763,55250);
    caseQueue.insert(43678,43958);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(81197,97562);
    caseQueue.insert(64012,51223);
    myResult.push_back(caseQueue.getPriority(25442)); //43
    caseQueue.insert(59973,33857);
    caseQueue.insert(60570,54755);
    caseQueue.insert(87068,6483);
    caseQueue.insert(43833,11384);
    caseQueue.updatePriority(38603, 53239);
    myResult.push_back(caseQueue.getPriority(18651)); //44
    myResult.push_back(caseQueue.getPriority(97505)); //45
    myResult.push_back(caseQueue.getPriority(97505)); //46
    caseQueue.updatePriority(53079, 56808);
    caseQueue.insert(46328,75535);
    myResult.push_back(caseQueue.getPriority(53079)); //47
    myResult.push_back(caseQueue.getPriority(69097)); //48
    myResult.push_back(caseQueue.getPriority(48939)); //49
    caseQueue.updatePriority(449, 87279);
    myResult.push_back(caseQueue.getPriority(38603)); //50
    caseQueue.insert(98810,93147);
    myResult.push_back(caseQueue.getPriority(22320)); //51
    myResult.push_back(caseQueue.getPriority(24067)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(56624)); //54
    caseQueue.insert(92186,20932);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(60873,51041);
    caseQueue.insert(38748,25712);
    caseQueue.updatePriority(81197, 81512);
    caseQueue.insert(88273,97126);
    myResult.push_back(caseQueue.getPriority(92186)); //56
    myResult.push_back(caseQueue.getPriority(38748)); //57
    myResult.push_back(caseQueue.getPriority(46328)); //58
    caseQueue.insert(21410,48644);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(69097)); //60
    caseQueue.insert(49403,25320);
    caseQueue.updatePriority(62763, 59700);
    caseQueue.insert(58556,32683);
    caseQueue.updatePriority(59532, 18097);
    caseQueue.insert(34884,66223);
    myResult.push_back(caseQueue.getPriority(25314)); //61
    caseQueue.insert(89532,61545);
    myResult.push_back(caseQueue.getPriority(39081)); //62
    caseQueue.insert(4165,28293);
    caseQueue.updatePriority(69097, 91499);
    caseQueue.insert(26551,31739);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(63592,21184);
    caseQueue.updatePriority(64012, 88264);
    myResult.push_back(caseQueue.getPriority(46328)); //67
    caseQueue.updatePriority(25314, 24680);
    myResult.push_back(caseQueue.getPriority(3140)); //68
    caseQueue.updatePriority(53079, 40197);
    caseQueue.insert(88422,35269);
    caseQueue.insert(29889,10945);
    myResult.push_back(caseQueue.getPriority(59973)); //69
    caseQueue.updatePriority(3140, 27723);
    caseQueue.insert(91230,7784);
    caseQueue.updatePriority(60570, 49666);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(42444,87086);
    myResult.push_back(caseQueue.getPriority(3140)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(44151,2458);
    caseQueue.insert(37929,32022);
    myResult.push_back(caseQueue.getPriority(85690)); //74
    myResult.push_back(caseQueue.getPriority(18651)); //75
    caseQueue.updatePriority(98810, 81158);
    caseQueue.updatePriority(34884, 5263);
    caseQueue.updatePriority(34884, 43254);
    caseQueue.insert(52667,10768);
    myResult.push_back(caseQueue.getPriority(449)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(388, 68735);
    caseQueue.insert(56127,10558);
    caseQueue.insert(50318,47316);
    caseQueue.insert(73811,42938);
    caseQueue.updatePriority(1130, 50178);
    caseQueue.insert(61808,93707);
    caseQueue.insert(13028,40059);
    myResult.push_back(caseQueue.getPriority(98810)); //78
    caseQueue.insert(42470,17192);
    caseQueue.updatePriority(64012, 36642);
    caseQueue.updatePriority(449, 2497);
    myResult.push_back(caseQueue.getPriority(15357)); //79
    caseQueue.updatePriority(88273, 92293);
    caseQueue.updatePriority(34884, 83984);
    caseQueue.updatePriority(13028, 35980);
    myResult.push_back(caseQueue.getPriority(53079)); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(47734,86460);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(68286,83009);
    caseQueue.updatePriority(39081, 13804);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(59641,60307);
    caseQueue.insert(90949,57275);
    caseQueue.insert(92236,3145);
    caseQueue.insert(53946,95852);
    caseQueue.insert(94034,35577);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(15357)); //85
    caseQueue.insert(54049,665);
    myResult.push_back(caseQueue.getPriority(21410)); //86
    caseQueue.updatePriority(58556, 40516);
    caseQueue.insert(60406,89777);
    caseQueue.updatePriority(64012, 57952);
    caseQueue.insert(19327,16505);
    myResult.push_back(caseQueue.deleteMin()); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(35656,42067);
    caseQueue.insert(11142,39868);
    caseQueue.updatePriority(97505, 97708);
    myResult.push_back(caseQueue.getPriority(18651)); //89
    caseQueue.insert(28554,56577);
    caseQueue.insert(47012,19407);
    caseQueue.insert(89464,2771);
    myResult.push_back(caseQueue.getPriority(18651)); //90
    caseQueue.insert(95836,37953);
    caseQueue.updatePriority(60873, 11361);
    myResult.push_back(caseQueue.getPriority(88273)); //91
    caseQueue.insert(41783,34645);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(61650,79908);
    myResult.push_back(caseQueue.getPriority(60873)); //93
    caseQueue.updatePriority(60406, 84826);
    myResult.push_back(caseQueue.getPriority(60406)); //94
    myResult.push_back(caseQueue.getPriority(97505)); //95
    myResult.push_back(caseQueue.getPriority(13028)); //96
    static const int resultListArray[] = {-1, -1, 25647, 43910, 85566, 52626, 24797, 4954, 79296, 19315, 95858, 18549, 4524, 42896, 91543, 9255, 61440, 73901, 73901, 73688, 11171, 76385, 98001, 93124, 96196, 39419, 24314, 7180, 93124, 34809, 94170, 85123, 32942, 68250, 34809, 80385, 32942, 57253, 7649, 49790, 80290, 96745, 42070, 67259, 34046, 34046, 56808, 31252, 85123, 53239, 40681, 94891, 87068, 95692, 43833, 20932, 25712, 75535, 92186, 31252, 68250, 91503, 59532, 49403, 38748, 4165, 75535, 77908, 33857, 91230, 27723, 29889, 63592, 83755, 67259, 87279, 44151, 81158, 34809, 40197, 449, 56127, 52667, 92236, 34809, 48644, 54049, 39081, 67259, 67259, 92293, 89464, 11361, 84826, 97708, 35980}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(51): Basarili" << endl;
    else cout << "Case(51): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_52(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 194);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(24720)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(85462,94726);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(20036)); //7
    caseQueue.updatePriority(75414, 13918);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(2176,71105);
    caseQueue.insert(97289,73699);
    caseQueue.insert(57461,32247);
    caseQueue.insert(79549,73243);
    caseQueue.updatePriority(97289, 86936);
    caseQueue.insert(5788,26729);
    myResult.push_back(caseQueue.getPriority(97289)); //10
    caseQueue.insert(39935,26119);
    caseQueue.updatePriority(39935, 67063);
    caseQueue.insert(85606,54740);
    myResult.push_back(caseQueue.getPriority(57461)); //11
    caseQueue.updatePriority(57461, 28046);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(97289, 61912);
    caseQueue.updatePriority(79549, 50588);
    myResult.push_back(caseQueue.getPriority(39935)); //13
    myResult.push_back(caseQueue.getPriority(79549)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(721,91964);
    caseQueue.insert(24698,72001);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(54625,53370);
    myResult.push_back(caseQueue.getPriority(39935)); //17
    caseQueue.insert(21522,97680);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(94282,11888);
    caseQueue.updatePriority(97289, 10081);
    caseQueue.updatePriority(721, 13314);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(26664,63922);
    myResult.push_back(caseQueue.getPriority(94282)); //20
    caseQueue.updatePriority(21522, 75750);
    caseQueue.insert(14878,12186);
    caseQueue.updatePriority(26664, 31837);
    caseQueue.insert(35013,52159);
    caseQueue.insert(54755,37535);
    caseQueue.updatePriority(85606, 41662);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(47663,63467);
    myResult.push_back(caseQueue.getPriority(2176)); //22
    caseQueue.insert(97440,67607);
    myResult.push_back(caseQueue.getPriority(24698)); //23
    caseQueue.updatePriority(54755, 54551);
    caseQueue.insert(33766,60456);
    myResult.push_back(caseQueue.getPriority(21522)); //24
    caseQueue.updatePriority(21522, 5672);
    caseQueue.insert(51312,82513);
    caseQueue.updatePriority(33766, 78614);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(7626,68627);
    caseQueue.insert(37333,44767);
    caseQueue.updatePriority(33766, 28792);
    myResult.push_back(caseQueue.getPriority(721)); //27
    caseQueue.insert(13024,58967);
    myResult.push_back(caseQueue.getPriority(39935)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(90775,8044);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(66961,79035);
    caseQueue.insert(53836,93929);
    caseQueue.insert(29607,37520);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(89231,37110);
    myResult.push_back(caseQueue.getPriority(7626)); //32
    caseQueue.insert(85067,77428);
    caseQueue.insert(74767,23765);
    myResult.push_back(caseQueue.getPriority(53836)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(26840,15675);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(31351,80501);
    caseQueue.insert(80798,83583);
    caseQueue.insert(31583,60471);
    myResult.push_back(caseQueue.getPriority(35013)); //37
    caseQueue.insert(94669,81429);
    caseQueue.insert(53477,31577);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(87613,52330);
    caseQueue.insert(79636,41624);
    caseQueue.insert(40205,95269);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(81254,79719);
    caseQueue.updatePriority(31583, 47057);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(41252,23759);
    myResult.push_back(caseQueue.getPriority(87613)); //41
    caseQueue.insert(36681,87664);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(36681)); //43
    caseQueue.updatePriority(54755, 33833);
    caseQueue.insert(33361,54434);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(35472,73330);
    caseQueue.updatePriority(35013, 99894);
    caseQueue.insert(13453,57968);
    caseQueue.updatePriority(31583, 27008);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(13398,28243);
    caseQueue.insert(84047,44296);
    myResult.push_back(caseQueue.getPriority(7626)); //48
    myResult.push_back(caseQueue.getPriority(51312)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(64812,68279);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(6910,74707);
    caseQueue.insert(67970,38831);
    caseQueue.insert(69108,87197);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(13207,75226);
    caseQueue.updatePriority(7626, 64885);
    myResult.push_back(caseQueue.getPriority(24698)); //54
    caseQueue.updatePriority(87613, 66273);
    myResult.push_back(caseQueue.getPriority(69108)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(13024, 96431);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(79134,5382);
    caseQueue.insert(14742,32688);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(53836, 50469);
    caseQueue.insert(62451,73676);
    myResult.push_back(caseQueue.getPriority(69108)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(97440)); //62
    myResult.push_back(caseQueue.getPriority(62451)); //63
    caseQueue.updatePriority(81254, 91255);
    caseQueue.insert(84248,82240);
    myResult.push_back(caseQueue.getPriority(35013)); //64
    myResult.push_back(caseQueue.getPriority(2176)); //65
    myResult.push_back(caseQueue.getPriority(2176)); //66
    myResult.push_back(caseQueue.getPriority(13207)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(94669, 39713);
    caseQueue.updatePriority(7626, 12243);
    caseQueue.insert(85971,18431);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(45796,48815);
    caseQueue.insert(74491,49178);
    caseQueue.updatePriority(80798, 86145);
    caseQueue.updatePriority(84248, 28842);
    caseQueue.insert(37077,82781);
    caseQueue.insert(37760,51266);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(81254)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(80798, 82980);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(95536,11594);
    myResult.push_back(caseQueue.getPriority(85067)); //76
    caseQueue.insert(19787,97499);
    caseQueue.insert(86004,8696);
    caseQueue.insert(77600,27234);
    caseQueue.updatePriority(40205, 64760);
    caseQueue.insert(37367,44877);
    caseQueue.insert(34140,47818);
    caseQueue.insert(12969,60737);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(13335,82296);
    caseQueue.updatePriority(35472, 20597);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(78992,38080);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(21317,80743);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(37077, 64150);
    caseQueue.insert(25284,40283);
    myResult.push_back(caseQueue.getPriority(31351)); //82
    caseQueue.insert(76437,45423);
    caseQueue.insert(69268,50473);
    caseQueue.updatePriority(62451, 87446);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.getPriority(76437)); //84
    caseQueue.updatePriority(31351, 7531);
    myResult.push_back(caseQueue.deleteMin()); //85
    static const int resultListArray[] = {-1, -1, -1, -1, -1, 85462, -1, -1, -1, 86936, 32247, 5788, 67063, 50588, 57461, 79549, 67063, 54625, 97289, 11888, 94282, 71105, 72001, 75750, 21522, 14878, 13314, 67063, 721, 90775, 33766, 68627, 93929, 74767, 26664, 26840, 52159, 53477, 89231, 29607, 52330, 41252, 87664, 54755, 79636, 85606, 31583, 68627, 82513, 13398, 84047, 37333, 67970, 72001, 87197, 33361, 13453, 47663, 79134, 87197, 14742, 67607, 73676, 99894, 71105, 71105, 75226, 53836, 7626, 85971, 91255, 84248, 94669, 45796, 74491, 77428, 86004, 95536, 35472, 77600, 78992, 80501, 25284, 45423, 31351}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(52): Basarili" << endl;
    else cout << "Case(52): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_53(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 115);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(70422)); //1
    caseQueue.insert(88224,25610);
    myResult.push_back(caseQueue.getPriority(88224)); //2
    caseQueue.insert(88706,72818);
    caseQueue.insert(86780,89785);
    caseQueue.insert(53860,14389);
    myResult.push_back(caseQueue.getPriority(88224)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(86780, 36877);
    caseQueue.insert(88712,5807);
    caseQueue.insert(48311,45792);
    caseQueue.insert(83591,8754);
    caseQueue.insert(58631,70895);
    caseQueue.insert(51566,73702);
    caseQueue.insert(84168,22993);
    myResult.push_back(caseQueue.getPriority(48311)); //5
    caseQueue.insert(47319,25518);
    caseQueue.insert(4394,36867);
    caseQueue.updatePriority(58631, 90729);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(5849,67232);
    myResult.push_back(caseQueue.getPriority(4394)); //8
    caseQueue.insert(86898,22172);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(49479,58627);
    caseQueue.updatePriority(51566, 43866);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(14638,81767);
    caseQueue.insert(65652,90002);
    caseQueue.insert(29724,55546);
    caseQueue.updatePriority(65652, 91780);
    caseQueue.insert(43837,24252);
    caseQueue.insert(81927,3330);
    caseQueue.insert(27527,82725);
    caseQueue.insert(47932,55870);
    caseQueue.insert(97696,27168);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(47932)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(73880,85269);
    caseQueue.insert(51876,68681);
    caseQueue.insert(34662,40331);
    caseQueue.insert(99743,17722);
    caseQueue.updatePriority(99743, 66102);
    caseQueue.updatePriority(34662, 54952);
    caseQueue.insert(31609,38253);
    myResult.push_back(caseQueue.getPriority(27527)); //14
    myResult.push_back(caseQueue.getPriority(51876)); //15
    caseQueue.insert(44110,57922);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(31192,17183);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(7296,49572);
    caseQueue.insert(31229,32674);
    caseQueue.updatePriority(86780, 40243);
    caseQueue.insert(39787,32482);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(99743)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(91253,48041);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(34662)); //26
    caseQueue.insert(82810,42797);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(34662, 49998);
    myResult.push_back(caseQueue.getPriority(47932)); //28
    caseQueue.updatePriority(7296, 36686);
    caseQueue.insert(53582,93188);
    caseQueue.updatePriority(51566, 39788);
    caseQueue.updatePriority(51876, 48400);
    caseQueue.updatePriority(44110, 59167);
    myResult.push_back(caseQueue.getPriority(47932)); //29
    caseQueue.insert(62695,19932);
    myResult.push_back(caseQueue.getPriority(51876)); //30
    caseQueue.insert(92268,39490);
    caseQueue.insert(93474,24975);
    caseQueue.insert(95137,81948);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(81039,37229);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(60832,89382);
    myResult.push_back(caseQueue.getPriority(29724)); //34
    caseQueue.insert(48269,46513);
    caseQueue.insert(87187,10476);
    caseQueue.insert(61190,83101);
    caseQueue.insert(58632,23977);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(70253,43629);
    caseQueue.insert(11858,40916);
    myResult.push_back(caseQueue.getPriority(11858)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(48311)); //39
    caseQueue.updatePriority(49479, 67761);
    caseQueue.updatePriority(29724, 36459);
    caseQueue.insert(50995,40513);
    caseQueue.updatePriority(49479, 84350);
    myResult.push_back(caseQueue.getPriority(51876)); //40
    myResult.push_back(caseQueue.getPriority(60832)); //41
    caseQueue.insert(63629,57628);
    myResult.push_back(caseQueue.getPriority(34662)); //42
    myResult.push_back(caseQueue.getPriority(49479)); //43
    caseQueue.updatePriority(92268, 59830);
    caseQueue.insert(37583,46327);
    myResult.push_back(caseQueue.getPriority(47932)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(98164,35863);
    myResult.push_back(caseQueue.getPriority(51876)); //46
    caseQueue.updatePriority(95137, 55571);
    static const int resultListArray[] = {-1, 25610, 25610, 53860, 45792, 88712, 83591, 36867, 86898, 84168, 81927, 55870, 43837, 82725, 68681, 47319, 31192, 88224, 97696, 39787, 66102, 31229, 4394, 31609, 86780, 54952, 82810, 55870, 55870, 48400, 62695, 93474, 7296, 55546, 87187, 40916, 58632, 81039, 45792, 48400, 89382, 49998, 84350, 55870, 29724, 48400}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(53): Basarili" << endl;
    else cout << "Case(53): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_54(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 240);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(16262)); //1
    caseQueue.insert(63140,21059);
    myResult.push_back(caseQueue.getPriority(63140)); //2
    caseQueue.insert(17664,34060);
    caseQueue.updatePriority(63140, 43401);
    myResult.push_back(caseQueue.getPriority(17664)); //3
    myResult.push_back(caseQueue.getPriority(63140)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(63140)); //6
    myResult.push_back(caseQueue.getPriority(63140)); //7
    caseQueue.insert(60039,49414);
    myResult.push_back(caseQueue.getPriority(63140)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(60039, 55231);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(19393,20770);
    caseQueue.updatePriority(19393, 36738);
    caseQueue.insert(56239,30513);
    myResult.push_back(caseQueue.getPriority(56239)); //12
    caseQueue.insert(39982,20522);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(56239)); //14
    caseQueue.updatePriority(19393, 68053);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(19393, 26907);
    caseQueue.insert(39824,46999);
    caseQueue.insert(20495,8469);
    caseQueue.insert(66420,82851);
    myResult.push_back(caseQueue.getPriority(66420)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(25309,30206);
    caseQueue.updatePriority(66420, 21788);
    caseQueue.insert(14873,72242);
    caseQueue.insert(40925,80940);
    caseQueue.insert(27705,81610);
    myResult.push_back(caseQueue.getPriority(40925)); //19
    caseQueue.insert(30539,61585);
    caseQueue.insert(79409,53424);
    caseQueue.insert(50357,23419);
    caseQueue.insert(59403,7617);
    caseQueue.insert(44463,74837);
    myResult.push_back(caseQueue.getPriority(40925)); //20
    myResult.push_back(caseQueue.getPriority(79409)); //21
    caseQueue.insert(72284,76375);
    caseQueue.insert(36939,69491);
    caseQueue.updatePriority(50357, 47534);
    myResult.push_back(caseQueue.getPriority(39824)); //22
    caseQueue.updatePriority(44463, 43605);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(26440,9121);
    myResult.push_back(caseQueue.getPriority(26440)); //24
    caseQueue.insert(84554,15920);
    caseQueue.insert(99343,18361);
    caseQueue.insert(97203,68841);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(29556,55486);
    caseQueue.insert(79252,7015);
    myResult.push_back(caseQueue.getPriority(30539)); //26
    myResult.push_back(caseQueue.getPriority(25309)); //27
    caseQueue.insert(21553,47819);
    caseQueue.updatePriority(97203, 72290);
    caseQueue.insert(45083,23570);
    caseQueue.updatePriority(21553, 80828);
    caseQueue.updatePriority(44463, 45490);
    caseQueue.insert(1595,37966);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(72284)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(39824)); //31
    caseQueue.updatePriority(97203, 76944);
    myResult.push_back(caseQueue.getPriority(25309)); //32
    caseQueue.updatePriority(30539, 38892);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(44463)); //34
    caseQueue.insert(66501,5484);
    myResult.push_back(caseQueue.getPriority(50357)); //35
    caseQueue.insert(774,88161);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(21553, 14651);
    myResult.push_back(caseQueue.getPriority(14873)); //37
    caseQueue.insert(15922,35565);
    caseQueue.insert(96529,80457);
    caseQueue.insert(62287,85319);
    caseQueue.updatePriority(1595, 65142);
    caseQueue.updatePriority(774, 13937);
    caseQueue.updatePriority(1595, 61973);
    caseQueue.updatePriority(66420, 71119);
    myResult.push_back(caseQueue.getPriority(45083)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(27705, 75469);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(50357, 70872);
    caseQueue.insert(46313,63770);
    caseQueue.updatePriority(72284, 85664);
    caseQueue.insert(98627,80554);
    caseQueue.insert(17352,71403);
    caseQueue.insert(20859,10173);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(30653,35790);
    caseQueue.insert(30179,70036);
    caseQueue.updatePriority(40925, 24390);
    caseQueue.insert(39273,48791);
    caseQueue.insert(57682,74545);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(9450,62310);
    myResult.push_back(caseQueue.getPriority(25309)); //44
    caseQueue.updatePriority(14873, 69848);
    caseQueue.updatePriority(27705, 40810);
    caseQueue.insert(56558,25176);
    caseQueue.updatePriority(57682, 3722);
    myResult.push_back(caseQueue.getPriority(29556)); //45
    caseQueue.updatePriority(50357, 69726);
    caseQueue.updatePriority(56558, 784);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(1934,95623);
    caseQueue.insert(14556,61939);
    caseQueue.updatePriority(30179, 57616);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(66420)); //48
    caseQueue.insert(98586,75396);
    caseQueue.insert(48402,71263);
    caseQueue.updatePriority(44463, 91538);
    caseQueue.updatePriority(36939, 25397);
    myResult.push_back(caseQueue.getPriority(39273)); //49
    caseQueue.updatePriority(39273, 23482);
    caseQueue.updatePriority(27705, 54285);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(79409)); //52
    caseQueue.insert(15720,24048);
    caseQueue.insert(54424,5560);
    caseQueue.insert(11326,77264);
    caseQueue.insert(2228,19897);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(96529)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(75373,38040);
    caseQueue.updatePriority(29556, 69401);
    caseQueue.insert(47872,13387);
    caseQueue.insert(70590,21296);
    caseQueue.insert(25861,83287);
    myResult.push_back(caseQueue.getPriority(14873)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(26785,64455);
    caseQueue.insert(61496,18917);
    myResult.push_back(caseQueue.getPriority(17352)); //60
    caseQueue.insert(50195,51227);
    caseQueue.insert(57403,17321);
    caseQueue.insert(37441,9997);
    myResult.push_back(caseQueue.getPriority(50357)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(79409)); //63
    caseQueue.insert(13550,87951);
    myResult.push_back(caseQueue.getPriority(70590)); //64
    caseQueue.updatePriority(1934, 68523);
    caseQueue.insert(73170,66855);
    caseQueue.insert(82322,43462);
    caseQueue.insert(52272,433);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(50195, 90328);
    myResult.push_back(caseQueue.getPriority(17352)); //66
    caseQueue.insert(35044,24829);
    caseQueue.updatePriority(30539, 66271);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(30179)); //68
    caseQueue.insert(56640,72104);
    caseQueue.insert(68945,54110);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(30179)); //71
    myResult.push_back(caseQueue.getPriority(46313)); //72
    caseQueue.updatePriority(72284, 7241);
    caseQueue.insert(76252,86287);
    caseQueue.insert(55602,70862);
    caseQueue.updatePriority(44463, 88127);
    caseQueue.insert(43209,3531);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(81404,34813);
    caseQueue.insert(16219,44768);
    myResult.push_back(caseQueue.getPriority(17352)); //74
    caseQueue.insert(88044,98109);
    caseQueue.insert(13106,44286);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(93982,90414);
    caseQueue.insert(14225,11405);
    caseQueue.insert(90607,40949);
    caseQueue.updatePriority(56640, 78483);
    caseQueue.insert(69019,25126);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.updatePriority(44463, 88680);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(98627, 51171);
    caseQueue.insert(66920,2761);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(30539, 38594);
    caseQueue.insert(56720,27334);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(8717,55918);
    caseQueue.insert(79976,55117);
    caseQueue.insert(59799,48360);
    caseQueue.updatePriority(13550, 27886);
    caseQueue.insert(49144,17206);
    caseQueue.insert(79214,96462);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(50357, 27115);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.updatePriority(48402, 41196);
    caseQueue.updatePriority(44463, 72554);
    caseQueue.insert(64231,76088);
    caseQueue.insert(71288,75048);
    caseQueue.insert(38770,52317);
    caseQueue.updatePriority(71288, 87108);
    caseQueue.updatePriority(88044, 55752);
    caseQueue.insert(99380,5076);
    myResult.push_back(caseQueue.getPriority(98586)); //85
    caseQueue.insert(69808,64895);
    caseQueue.updatePriority(97203, 69624);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(75373)); //87
    caseQueue.updatePriority(8717, 85997);
    myResult.push_back(caseQueue.deleteMin()); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(26020,35703);
    caseQueue.insert(44704,40667);
    caseQueue.insert(64281,63754);
    caseQueue.insert(44845,81438);
    caseQueue.updatePriority(26785, 99576);
    myResult.push_back(caseQueue.getPriority(97203)); //90
    myResult.push_back(caseQueue.getPriority(79976)); //91
    caseQueue.updatePriority(79409, 87265);
    caseQueue.insert(81219,52019);
    myResult.push_back(caseQueue.getPriority(64281)); //92
    static const int resultListArray[] = {-1, 21059, 34060, 43401, 17664, 43401, 43401, 43401, 63140, 60039, -1, 30513, 39982, 30513, 56239, 82851, 20495, 19393, 80940, 80940, 53424, 46999, 59403, 9121, 26440, 61585, 30206, 79252, 76375, 84554, 46999, 30206, 99343, 45490, 47534, 66501, 72242, 23570, 774, 21553, 45083, 20859, 40925, 30206, 55486, 56558, 57682, 71119, 48791, 39273, 36939, 53424, 54424, 2228, 80457, 15720, 25309, 69848, 47872, 71403, 69726, 37441, 53424, 21296, 52272, 71403, 57403, 57616, 61496, 70590, 57616, 63770, 43209, 71403, 72284, 14225, 35044, 69019, 81404, 66920, 15922, 56720, 49144, 50357, 75396, 99380, 38040, 13550, 30653, 69624, 55117, 63754}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(54): Basarili" << endl;
    else cout << "Case(54): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_55(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 231);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(9268)); //1
    caseQueue.updatePriority(15777, 77895);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(75572,84029);
    caseQueue.updatePriority(75572, 33274);
    caseQueue.insert(35775,80453);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(35775, 58917);
    caseQueue.insert(3139,82819);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(3139, 87863);
    caseQueue.updatePriority(3139, 83062);
    caseQueue.updatePriority(3139, 14419);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(12190, 62016);
    caseQueue.updatePriority(11692, 40270);
    caseQueue.updatePriority(12972, 28634);
    caseQueue.updatePriority(99586, 94366);
    caseQueue.insert(27271,1191);
    caseQueue.insert(51086,55355);
    myResult.push_back(caseQueue.getPriority(27271)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(5439,78029);
    caseQueue.insert(85996,86932);
    caseQueue.insert(99401,93277);
    caseQueue.insert(87373,14045);
    caseQueue.updatePriority(87373, 73369);
    caseQueue.updatePriority(5439, 88379);
    caseQueue.insert(86730,31224);
    myResult.push_back(caseQueue.getPriority(51086)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(44561,25749);
    caseQueue.insert(72299,57945);
    caseQueue.updatePriority(44561, 40751);
    caseQueue.insert(73930,51630);
    caseQueue.insert(94257,15777);
    caseQueue.insert(75711,41333);
    caseQueue.insert(69562,62719);
    caseQueue.insert(73879,35923);
    myResult.push_back(caseQueue.getPriority(87373)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(48734,36821);
    caseQueue.updatePriority(48734, 71628);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(87373, 52912);
    caseQueue.updatePriority(69562, 9125);
    caseQueue.updatePriority(48734, 65324);
    caseQueue.insert(37849,36203);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(44561)); //15
    caseQueue.insert(33767,1618);
    caseQueue.insert(90125,61975);
    caseQueue.insert(24644,2722);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(81019,74907);
    caseQueue.updatePriority(85996, 65426);
    caseQueue.updatePriority(72299, 10575);
    caseQueue.updatePriority(5439, 51072);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(21992,6002);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(56850,29326);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(22659,5605);
    caseQueue.insert(81726,43021);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(44343,2358);
    caseQueue.insert(80690,20909);
    caseQueue.insert(21658,64073);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(5439)); //22
    caseQueue.insert(8512,25845);
    myResult.push_back(caseQueue.getPriority(8512)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(85996, 99241);
    myResult.push_back(caseQueue.getPriority(99401)); //26
    caseQueue.updatePriority(75711, 41233);
    myResult.push_back(caseQueue.getPriority(85996)); //27
    caseQueue.insert(31573,37295);
    myResult.push_back(caseQueue.getPriority(56850)); //28
    caseQueue.updatePriority(48734, 17761);
    caseQueue.updatePriority(75711, 46614);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(76646,93730);
    myResult.push_back(caseQueue.getPriority(76646)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(79178,53023);
    caseQueue.insert(38728,86340);
    caseQueue.insert(29851,91356);
    caseQueue.insert(38924,57682);
    caseQueue.updatePriority(99401, 94276);
    caseQueue.insert(45039,19043);
    caseQueue.updatePriority(79178, 78709);
    myResult.push_back(caseQueue.getPriority(45039)); //32
    caseQueue.updatePriority(45039, 7043);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(61890,66833);
    caseQueue.insert(646,66139);
    caseQueue.updatePriority(79178, 37667);
    caseQueue.insert(72254,95705);
    caseQueue.updatePriority(31573, 2029);
    caseQueue.insert(16741,25659);
    caseQueue.insert(48256,12388);
    caseQueue.insert(18630,11945);
    caseQueue.updatePriority(16741, 8728);
    myResult.push_back(caseQueue.getPriority(87373)); //34
    myResult.push_back(caseQueue.getPriority(5439)); //35
    caseQueue.insert(2065,8601);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(44561, 53291);
    caseQueue.insert(38950,55473);
    caseQueue.insert(92223,24026);
    caseQueue.updatePriority(85996, 26440);
    caseQueue.insert(46817,6281);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(90125, 87040);
    caseQueue.insert(92804,21486);
    caseQueue.updatePriority(85996, 27639);
    myResult.push_back(caseQueue.getPriority(18630)); //38
    caseQueue.insert(39726,13935);
    caseQueue.insert(56901,6351);
    myResult.push_back(caseQueue.getPriority(75711)); //39
    caseQueue.insert(17274,32705);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(4852,15154);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(38619,85916);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(51333,50355);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(51086)); //45
    caseQueue.insert(71010,48431);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(84621,84248);
    caseQueue.updatePriority(646, 31251);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(81726, 49248);
    caseQueue.updatePriority(87373, 46207);
    caseQueue.updatePriority(81019, 88618);
    myResult.push_back(caseQueue.getPriority(21658)); //49
    caseQueue.insert(87829,65770);
    caseQueue.insert(14839,11698);
    myResult.push_back(caseQueue.getPriority(92223)); //50
    myResult.push_back(caseQueue.getPriority(76646)); //51
    myResult.push_back(caseQueue.getPriority(21658)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(5439, 96855);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(69077,38194);
    caseQueue.insert(54550,68282);
    caseQueue.insert(14429,97355);
    caseQueue.updatePriority(5439, 65090);
    caseQueue.insert(98814,24676);
    caseQueue.updatePriority(44561, 76270);
    myResult.push_back(caseQueue.getPriority(76646)); //56
    caseQueue.updatePriority(38924, 98682);
    caseQueue.updatePriority(51333, 2704);
    myResult.push_back(caseQueue.getPriority(17274)); //57
    myResult.push_back(caseQueue.getPriority(44561)); //58
    caseQueue.updatePriority(51086, 70738);
    caseQueue.insert(76968,17790);
    caseQueue.insert(45020,77474);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(44561)); //60
    caseQueue.insert(12551,45638);
    myResult.push_back(caseQueue.getPriority(38950)); //61
    caseQueue.insert(72499,38107);
    caseQueue.insert(56018,95040);
    myResult.push_back(caseQueue.getPriority(38728)); //62
    caseQueue.insert(13945,98072);
    caseQueue.insert(11005,34293);
    caseQueue.insert(23319,72754);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(10699,42948);
    myResult.push_back(caseQueue.getPriority(38728)); //64
    caseQueue.updatePriority(44561, 50674);
    myResult.push_back(caseQueue.getPriority(56018)); //65
    caseQueue.insert(67921,55071);
    caseQueue.insert(78554,52842);
    caseQueue.insert(14827,78115);
    caseQueue.updatePriority(38950, 82520);
    caseQueue.updatePriority(13945, 96524);
    caseQueue.insert(72382,52285);
    myResult.push_back(caseQueue.getPriority(56018)); //66
    caseQueue.updatePriority(38924, 76386);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(12551, 46173);
    caseQueue.updatePriority(99401, 99261);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(69108,20740);
    caseQueue.updatePriority(72254, 75532);
    myResult.push_back(caseQueue.getPriority(51086)); //69
    caseQueue.insert(6162,13599);
    caseQueue.updatePriority(56018, 35667);
    caseQueue.updatePriority(84621, 79132);
    myResult.push_back(caseQueue.getPriority(29851)); //70
    caseQueue.insert(25256,27169);
    myResult.push_back(caseQueue.getPriority(79178)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(58024,19953);
    myResult.push_back(caseQueue.getPriority(17274)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.updatePriority(81019, 60968);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(5439, 46664);
    caseQueue.updatePriority(72382, 1153);
    myResult.push_back(caseQueue.getPriority(78554)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(16411,74882);
    caseQueue.insert(53424,76278);
    myResult.push_back(caseQueue.getPriority(99401)); //78
    caseQueue.insert(31044,91367);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(38728, 47226);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(26893,61605);
    caseQueue.insert(72387,25526);
    caseQueue.insert(83893,25844);
    caseQueue.insert(43617,39964);
    caseQueue.insert(39237,64316);
    caseQueue.insert(99827,30820);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(5439)); //85
    static const int resultListArray[] = {-1, -1, 75572, 35775, 3139, 1191, 27271, 55355, 86730, 73369, 94257, 73879, 69562, 37849, 40751, 33767, 24644, 21992, 72299, 22659, 44343, 51072, 25845, 80690, 8512, 93277, 99241, 29326, 48734, 93730, 56850, 19043, 45039, 52912, 51072, 31573, 46817, 11945, 46614, 56901, 2065, 16741, 18630, 48256, 55355, 39726, 4852, 92804, 64073, 24026, 93730, 64073, 14839, 92223, 85996, 93730, 32705, 76270, 51333, 76270, 55473, 86340, 76968, 86340, 95040, 95040, 98814, 646, 70738, 91356, 37667, 6162, 32705, 58024, 69108, 52842, 72382, 99261, 25256, 17274, 11005, 56018, 79178, 72387, 46664}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(55): Basarili" << endl;
    else cout << "Case(55): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_56(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 156);

    vector<int> myResult; 
    caseQueue.updatePriority(31023, 76149);
    myResult.push_back(caseQueue.getPriority(69759)); //1
    caseQueue.insert(31608,83138);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(98091)); //3
    caseQueue.insert(56719,71306);
    caseQueue.updatePriority(56719, 63790);
    caseQueue.insert(30482,56555);
    caseQueue.updatePriority(56719, 54321);
    caseQueue.updatePriority(56719, 67361);
    caseQueue.insert(95502,75659);
    myResult.push_back(caseQueue.getPriority(95502)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(86458,28052);
    caseQueue.insert(43731,85802);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(76078,80537);
    myResult.push_back(caseQueue.getPriority(95502)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(76078)); //10
    caseQueue.insert(76167,70364);
    caseQueue.insert(21051,15330);
    caseQueue.updatePriority(21051, 51841);
    myResult.push_back(caseQueue.getPriority(43731)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(65590,86874);
    caseQueue.updatePriority(65590, 89233);
    myResult.push_back(caseQueue.getPriority(43731)); //14
    caseQueue.updatePriority(65590, 21111);
    caseQueue.insert(23956,20996);
    caseQueue.insert(37089,43478);
    caseQueue.updatePriority(43731, 89729);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(76078, 90196);
    caseQueue.insert(16544,77702);
    caseQueue.insert(55126,31609);
    caseQueue.updatePriority(65590, 23057);
    myResult.push_back(caseQueue.getPriority(43731)); //16
    myResult.push_back(caseQueue.getPriority(76078)); //17
    caseQueue.updatePriority(37089, 34159);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(37089, 32424);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(76078, 88914);
    caseQueue.updatePriority(76078, 53325);
    myResult.push_back(caseQueue.getPriority(43731)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(76078, 63060);
    caseQueue.insert(51734,39127);
    myResult.push_back(caseQueue.getPriority(51734)); //22
    caseQueue.updatePriority(43731, 66260);
    caseQueue.insert(11704,79196);
    myResult.push_back(caseQueue.getPriority(43731)); //23
    caseQueue.insert(94928,2962);
    caseQueue.insert(5407,10171);
    caseQueue.updatePriority(5407, 49132);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(76078, 22600);
    caseQueue.insert(79721,759);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(43393,12994);
    caseQueue.insert(93376,73500);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(76078)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(93376, 88370);
    myResult.push_back(caseQueue.getPriority(11704)); //29
    myResult.push_back(caseQueue.getPriority(43731)); //30
    myResult.push_back(caseQueue.getPriority(93376)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(51898,90645);
    myResult.push_back(caseQueue.getPriority(93376)); //33
    myResult.push_back(caseQueue.getPriority(51898)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(51898)); //36
    myResult.push_back(caseQueue.getPriority(51898)); //37
    caseQueue.insert(47678,90897);
    myResult.push_back(caseQueue.getPriority(93376)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(51898)); //41
    caseQueue.insert(633,83999);
    caseQueue.insert(80277,17256);
    caseQueue.insert(77741,26736);
    myResult.push_back(caseQueue.getPriority(77741)); //42
    caseQueue.insert(98011,90002);
    caseQueue.insert(55170,40450);
    caseQueue.updatePriority(51898, 51091);
    caseQueue.insert(91043,67083);
    caseQueue.updatePriority(91043, 66521);
    caseQueue.insert(47371,34867);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(77741, 91847);
    caseQueue.insert(66472,93668);
    caseQueue.insert(11544,1125);
    caseQueue.updatePriority(11544, 55705);
    caseQueue.updatePriority(47678, 18032);
    caseQueue.updatePriority(633, 46305);
    myResult.push_back(caseQueue.getPriority(55170)); //44
    caseQueue.updatePriority(633, 10317);
    caseQueue.insert(6931,78223);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(41186,99381);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(8294,23582);
    caseQueue.insert(12709,21849);
    myResult.push_back(caseQueue.getPriority(11544)); //47
    myResult.push_back(caseQueue.getPriority(11704)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(31859,15291);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(98950,71999);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(55170)); //52
    caseQueue.insert(59457,23528);
    caseQueue.insert(98796,45100);
    caseQueue.insert(78828,92090);
    caseQueue.updatePriority(51898, 77444);
    caseQueue.insert(32372,62446);
    caseQueue.updatePriority(51898, 1035);
    caseQueue.insert(61542,85285);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(55170, 36101);
    caseQueue.insert(87784,6990);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(98796, 6618);
    caseQueue.updatePriority(66472, 12680);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(10040,56380);
    caseQueue.insert(64693,275);
    caseQueue.insert(29544,2696);
    caseQueue.insert(68924,56817);
    caseQueue.updatePriority(78828, 29533);
    caseQueue.insert(92655,68753);
    myResult.push_back(caseQueue.getPriority(98011)); //59
    caseQueue.updatePriority(93376, 49122);
    caseQueue.updatePriority(61542, 59173);
    myResult.push_back(caseQueue.getPriority(61542)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(94100,44784);
    myResult.push_back(caseQueue.getPriority(66472)); //63
    caseQueue.insert(55922,97004);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(58744,1774);
    caseQueue.insert(3936,92333);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(93376)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(41204,2889);
    static const int resultListArray[] = {-1, 31608, -1, 75659, 30482, 56719, 86458, 75659, 95502, 80537, 85802, 21051, 76167, 85802, 23956, 89729, 90196, 65590, 55126, 89729, 37089, 39127, 66260, 94928, 79721, 43393, 22600, 76078, 79196, 66260, 88370, 51734, 88370, 90645, 5407, 90645, 90645, 88370, 43731, 16544, 90645, 26736, 80277, 40450, 633, 47678, 55705, 79196, 12709, 31859, 8294, 40450, 51898, 59457, 47371, 87784, 55170, 98796, 90002, 59173, 64693, 29544, 12680, 66472, 78828, 58744, 49122, 94100}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(56): Basarili" << endl;
    else cout << "Case(56): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_57(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 101);

    vector<int> myResult; 
    caseQueue.updatePriority(13717, 71197);
    caseQueue.insert(93782,32450);
    myResult.push_back(caseQueue.getPriority(93782)); //1
    caseQueue.updatePriority(93782, 17046);
    caseQueue.updatePriority(93782, 49096);
    caseQueue.insert(47489,37644);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(45960, 39868);
    caseQueue.insert(64246,42089);
    caseQueue.updatePriority(64246, 84250);
    caseQueue.insert(92126,12921);
    caseQueue.insert(5567,36675);
    myResult.push_back(caseQueue.getPriority(5567)); //4
    myResult.push_back(caseQueue.getPriority(5567)); //5
    caseQueue.insert(8846,63567);
    caseQueue.insert(83215,33917);
    myResult.push_back(caseQueue.getPriority(64246)); //6
    caseQueue.insert(57326,12304);
    caseQueue.updatePriority(64246, 81219);
    myResult.push_back(caseQueue.getPriority(5567)); //7
    caseQueue.insert(19358,25547);
    caseQueue.updatePriority(92126, 40224);
    myResult.push_back(caseQueue.getPriority(8846)); //8
    caseQueue.updatePriority(57326, 37304);
    caseQueue.updatePriority(8846, 81789);
    caseQueue.updatePriority(19358, 98746);
    myResult.push_back(caseQueue.getPriority(19358)); //9
    caseQueue.updatePriority(92126, 1609);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(51682,72109);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(89490,53442);
    caseQueue.insert(59291,12480);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(5567)); //13
    caseQueue.insert(85477,61746);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(51682, 53444);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(19358)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(8846)); //18
    caseQueue.updatePriority(85477, 49956);
    caseQueue.insert(57691,94542);
    caseQueue.insert(54406,25591);
    myResult.push_back(caseQueue.getPriority(51682)); //19
    caseQueue.updatePriority(51682, 72316);
    caseQueue.updatePriority(19358, 96524);
    myResult.push_back(caseQueue.getPriority(64246)); //20
    caseQueue.insert(85798,71779);
    myResult.push_back(caseQueue.getPriority(8846)); //21
    caseQueue.updatePriority(19358, 82090);
    caseQueue.insert(48137,17325);
    caseQueue.insert(93532,7460);
    myResult.push_back(caseQueue.getPriority(85477)); //22
    caseQueue.updatePriority(19358, 44651);
    caseQueue.updatePriority(8846, 26973);
    caseQueue.insert(58998,30988);
    caseQueue.insert(15760,58418);
    caseQueue.updatePriority(93532, 94825);
    caseQueue.insert(61713,23503);
    myResult.push_back(caseQueue.getPriority(58998)); //23
    myResult.push_back(caseQueue.getPriority(64246)); //24
    caseQueue.updatePriority(15760, 77541);
    caseQueue.insert(2271,21678);
    caseQueue.insert(1558,26220);
    caseQueue.insert(93837,5390);
    myResult.push_back(caseQueue.getPriority(85798)); //25
    caseQueue.insert(40010,24897);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(24105,66063);
    caseQueue.updatePriority(85798, 29453);
    caseQueue.insert(98312,67218);
    myResult.push_back(caseQueue.getPriority(24105)); //27
    myResult.push_back(caseQueue.getPriority(40010)); //28
    caseQueue.insert(22948,40594);
    caseQueue.updatePriority(58998, 11599);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(64246)); //30
    caseQueue.insert(20213,73617);
    myResult.push_back(caseQueue.getPriority(85477)); //31
    caseQueue.insert(82808,97665);
    caseQueue.updatePriority(51682, 99429);
    caseQueue.insert(46976,65152);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(92755,89339);
    caseQueue.insert(2014,91865);
    myResult.push_back(caseQueue.getPriority(92755)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(20213)); //35
    caseQueue.insert(22659,86756);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(96231,32101);
    myResult.push_back(caseQueue.getPriority(64246)); //37
    myResult.push_back(caseQueue.getPriority(24105)); //38
    myResult.push_back(caseQueue.getPriority(51682)); //39
    caseQueue.insert(33571,13682);
    myResult.push_back(caseQueue.getPriority(93532)); //40
    caseQueue.updatePriority(85477, 63156);
    caseQueue.insert(27052,63979);
    static const int resultListArray[] = {32450, 47489, 93782, 36675, 36675, 84250, 36675, 63567, 98746, 92126, 83215, 59291, 36675, 5567, 57326, 98746, 89490, 81789, 53444, 81219, 81789, 49956, 30988, 81219, 71779, 93837, 66063, 24897, 58998, 81219, 49956, 48137, 89339, 2271, 73617, 61713, 81219, 66063, 99429, 94825}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(57): Basarili" << endl;
    else cout << "Case(57): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_58(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 109);

    vector<int> myResult; 
    caseQueue.insert(17242,16317);
    caseQueue.updatePriority(17242, 63633);
    caseQueue.insert(66015,22629);
    caseQueue.updatePriority(66015, 56981);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(17242)); //2
    caseQueue.updatePriority(17242, 41748);
    caseQueue.insert(87403,8208);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(17242)); //4
    caseQueue.insert(93051,13299);
    caseQueue.insert(84863,22256);
    caseQueue.updatePriority(17242, 44129);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(51085,21217);
    caseQueue.insert(20395,96470);
    caseQueue.insert(19986,45538);
    myResult.push_back(caseQueue.getPriority(17242)); //6
    myResult.push_back(caseQueue.getPriority(17242)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(22431,3030);
    caseQueue.updatePriority(22431, 42808);
    myResult.push_back(caseQueue.getPriority(84863)); //9
    myResult.push_back(caseQueue.getPriority(20395)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(36630,55763);
    caseQueue.insert(58057,94266);
    caseQueue.updatePriority(19986, 92669);
    caseQueue.insert(89989,37501);
    caseQueue.insert(31677,6009);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(19986, 59192);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(22431, 83956);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(56852,88826);
    caseQueue.updatePriority(36630, 48844);
    caseQueue.updatePriority(56852, 2324);
    caseQueue.updatePriority(58057, 8220);
    caseQueue.insert(47636,96267);
    caseQueue.updatePriority(36630, 58839);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(20395, 51298);
    myResult.push_back(caseQueue.getPriority(20395)); //16
    caseQueue.insert(85480,44869);
    myResult.push_back(caseQueue.getPriority(19986)); //17
    caseQueue.updatePriority(47636, 91413);
    caseQueue.insert(12368,1984);
    caseQueue.insert(53806,89787);
    caseQueue.updatePriority(36630, 42763);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(93907,5087);
    myResult.push_back(caseQueue.getPriority(85480)); //20
    caseQueue.updatePriority(19986, 86808);
    caseQueue.insert(97017,32613);
    myResult.push_back(caseQueue.getPriority(97017)); //21
    caseQueue.updatePriority(19986, 2080);
    caseQueue.updatePriority(93907, 41572);
    myResult.push_back(caseQueue.getPriority(20395)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(22431, 11538);
    caseQueue.insert(41840,61490);
    caseQueue.insert(42437,53255);
    caseQueue.insert(46822,80905);
    caseQueue.updatePriority(22431, 40661);
    caseQueue.insert(87710,49211);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(87710)); //27
    caseQueue.insert(49661,99432);
    caseQueue.insert(37895,14979);
    caseQueue.updatePriority(49661, 91502);
    myResult.push_back(caseQueue.getPriority(49661)); //28
    caseQueue.insert(76091,91128);
    myResult.push_back(caseQueue.getPriority(20395)); //29
    caseQueue.insert(30260,53236);
    caseQueue.insert(58010,37258);
    myResult.push_back(caseQueue.getPriority(47636)); //30
    caseQueue.insert(3846,59661);
    caseQueue.insert(49759,3551);
    caseQueue.insert(45214,23924);
    myResult.push_back(caseQueue.getPriority(58010)); //31
    caseQueue.updatePriority(41840, 31143);
    caseQueue.insert(894,32999);
    myResult.push_back(caseQueue.getPriority(76091)); //32
    caseQueue.updatePriority(3846, 15323);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(36630, 24605);
    caseQueue.updatePriority(46822, 7746);
    caseQueue.updatePriority(41840, 78265);
    myResult.push_back(caseQueue.getPriority(894)); //35
    caseQueue.insert(32575,92397);
    caseQueue.updatePriority(49661, 65226);
    caseQueue.updatePriority(46822, 91080);
    caseQueue.insert(24756,41768);
    caseQueue.updatePriority(58010, 60384);
    caseQueue.insert(4707,18056);
    caseQueue.updatePriority(87710, 8014);
    caseQueue.updatePriority(87710, 53772);
    caseQueue.insert(16820,48849);
    caseQueue.insert(1035,53176);
    myResult.push_back(caseQueue.getPriority(42437)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(41840)); //38
    myResult.push_back(caseQueue.getPriority(49661)); //39
    caseQueue.insert(50264,10517);
    static const int resultListArray[] = {66015, 63633, 87403, 41748, 93051, 44129, 44129, 51085, 22256, 96470, 84863, 31677, 89989, 17242, 56852, 51298, 59192, 12368, 58057, 44869, 32613, 51298, 19986, 97017, 93907, 22431, 49211, 91502, 51298, 91413, 37258, 91128, 49759, 37895, 32999, 53255, 3846, 78265, 65226}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(58): Basarili" << endl;
    else cout << "Case(58): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_59(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 202);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(8797)); //1
    myResult.push_back(caseQueue.getPriority(53534)); //2
    myResult.push_back(caseQueue.getPriority(7048)); //3
    caseQueue.insert(16570,24587);
    caseQueue.updatePriority(16570, 67763);
    caseQueue.insert(10951,93003);
    myResult.push_back(caseQueue.getPriority(16570)); //4
    caseQueue.insert(38502,53598);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(32067,66117);
    caseQueue.insert(26354,19549);
    caseQueue.insert(92979,87646);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(74450,35767);
    caseQueue.insert(52004,47255);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(32067, 19815);
    caseQueue.insert(20449,67401);
    caseQueue.insert(68241,27050);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(42032,78641);
    caseQueue.insert(74416,28344);
    caseQueue.insert(26119,76218);
    caseQueue.insert(94307,61122);
    myResult.push_back(caseQueue.getPriority(92979)); //10
    caseQueue.updatePriority(74416, 74395);
    caseQueue.updatePriority(10951, 71581);
    caseQueue.updatePriority(16570, 1460);
    myResult.push_back(caseQueue.getPriority(92979)); //11
    caseQueue.insert(26160,50031);
    caseQueue.updatePriority(10951, 85468);
    myResult.push_back(caseQueue.getPriority(94307)); //12
    caseQueue.updatePriority(94307, 68597);
    caseQueue.insert(38458,65545);
    caseQueue.insert(31231,44865);
    caseQueue.insert(23520,66686);
    myResult.push_back(caseQueue.getPriority(52004)); //13
    caseQueue.insert(35698,85209);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(5983,40601);
    caseQueue.insert(87750,99099);
    caseQueue.updatePriority(35698, 47007);
    caseQueue.insert(43767,28999);
    caseQueue.updatePriority(92979, 22570);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(52004, 83390);
    caseQueue.updatePriority(52004, 11673);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(26823,70594);
    caseQueue.updatePriority(74416, 55872);
    myResult.push_back(caseQueue.getPriority(23520)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(43794,33007);
    caseQueue.updatePriority(38458, 2793);
    caseQueue.updatePriority(23520, 88465);
    myResult.push_back(caseQueue.getPriority(43794)); //19
    myResult.push_back(caseQueue.getPriority(5983)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(42032, 64584);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(26160)); //23
    caseQueue.insert(14670,28030);
    caseQueue.insert(74726,43753);
    caseQueue.updatePriority(14670, 78614);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(35425,13990);
    myResult.push_back(caseQueue.getPriority(26160)); //25
    myResult.push_back(caseQueue.getPriority(35698)); //26
    myResult.push_back(caseQueue.getPriority(74416)); //27
    caseQueue.updatePriority(31231, 67239);
    caseQueue.updatePriority(23520, 59487);
    caseQueue.insert(29024,14404);
    caseQueue.insert(6789,85120);
    myResult.push_back(caseQueue.getPriority(26823)); //28
    caseQueue.insert(2041,44939);
    caseQueue.insert(53669,26728);
    caseQueue.updatePriority(26119, 61158);
    caseQueue.updatePriority(26160, 45450);
    caseQueue.insert(47297,19513);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(87750)); //30
    caseQueue.insert(90536,54957);
    myResult.push_back(caseQueue.getPriority(53669)); //31
    caseQueue.updatePriority(87750, 416);
    caseQueue.insert(78824,28000);
    myResult.push_back(caseQueue.getPriority(31231)); //32
    caseQueue.insert(65325,61090);
    caseQueue.insert(21443,4790);
    caseQueue.insert(86909,66640);
    myResult.push_back(caseQueue.getPriority(26119)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(81901,33871);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(31231)); //36
    myResult.push_back(caseQueue.getPriority(31231)); //37
    caseQueue.insert(17039,74689);
    caseQueue.insert(10918,9080);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(41826,89889);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(84708,78449);
    caseQueue.updatePriority(31231, 2419);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(84708)); //41
    caseQueue.insert(18722,91685);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(59635,79154);
    caseQueue.insert(40853,87609);
    caseQueue.insert(82513,58521);
    caseQueue.insert(65547,78972);
    caseQueue.insert(91662,80915);
    caseQueue.updatePriority(42032, 50283);
    caseQueue.insert(46214,86558);
    myResult.push_back(caseQueue.getPriority(20449)); //43
    caseQueue.insert(52140,29506);
    caseQueue.insert(2827,77423);
    caseQueue.insert(65150,85629);
    caseQueue.updatePriority(18722, 75975);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(30067,18877);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(52140, 97747);
    myResult.push_back(caseQueue.getPriority(78824)); //46
    myResult.push_back(caseQueue.getPriority(20449)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(97601,46972);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(13245,41069);
    caseQueue.insert(34091,87952);
    caseQueue.insert(20738,10182);
    caseQueue.insert(43540,3300);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(35698)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(74614,58739);
    caseQueue.insert(47131,85806);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(40853)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(87081,3828);
    caseQueue.updatePriority(42032, 68644);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(84708, 58202);
    caseQueue.updatePriority(91662, 56407);
    caseQueue.insert(3302,89868);
    caseQueue.insert(35934,30907);
    caseQueue.updatePriority(26823, 33888);
    caseQueue.insert(47086,26629);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(26119, 57661);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(3302)); //62
    caseQueue.insert(33476,77484);
    myResult.push_back(caseQueue.getPriority(86909)); //63
    caseQueue.updatePriority(18722, 87090);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(46214)); //65
    caseQueue.insert(57860,21870);
    myResult.push_back(caseQueue.getPriority(94307)); //66
    caseQueue.insert(23881,34610);
    caseQueue.insert(4969,56580);
    caseQueue.updatePriority(34091, 23236);
    myResult.push_back(caseQueue.getPriority(18722)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(18722, 65665);
    caseQueue.insert(260,90256);
    caseQueue.updatePriority(52140, 75948);
    caseQueue.insert(68812,56236);
    caseQueue.insert(93054,60109);
    myResult.push_back(caseQueue.getPriority(41826)); //69
    caseQueue.insert(11267,8407);
    myResult.push_back(caseQueue.getPriority(3302)); //70
    myResult.push_back(caseQueue.getPriority(40853)); //71
    caseQueue.insert(53433,28681);
    caseQueue.insert(74104,82813);
    myResult.push_back(caseQueue.getPriority(6789)); //72
    myResult.push_back(caseQueue.getPriority(23881)); //73
    caseQueue.insert(68094,40715);
    myResult.push_back(caseQueue.getPriority(35698)); //74
    caseQueue.updatePriority(6789, 9844);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(58195,44964);
    caseQueue.updatePriority(68812, 26146);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(3664,27569);
    caseQueue.insert(5946,50535);
    caseQueue.insert(83815,9698);
    caseQueue.updatePriority(20449, 38592);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(50484,72353);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(52058,78932);
    myResult.push_back(caseQueue.getPriority(26119)); //80
    caseQueue.insert(66359,84490);
    caseQueue.updatePriority(74104, 60920);
    caseQueue.insert(59026,53326);
    caseQueue.insert(39126,47152);
    static const int resultListArray[] = {-1, -1, -1, 67763, 38502, 26354, 74450, 32067, 68241, 87646, 87646, 61122, 47255, 16570, 92979, 52004, 66686, 43767, 33007, 40601, 38458, 43794, 50031, 5983, 50031, 47007, 55872, 70594, 35425, 99099, 26728, 67239, 61158, 87750, 21443, 67239, 67239, 10918, 29024, 31231, 78449, 47297, 67401, 53669, 30067, 28000, 67401, 78824, 81901, 43540, 47007, 20738, 13245, 87609, 74726, 2041, 87081, 47086, 35934, 26823, 26160, 89868, 66640, 97601, 86558, 68597, 87090, 57860, 89889, 89868, 87609, 85120, 34610, 47007, 11267, 6789, 34091, 83815, 68812, 57661}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(59): Basarili" << endl;
    else cout << "Case(59): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_60(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 120);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(529)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(54408, 35493);
    caseQueue.insert(39733,58630);
    caseQueue.updatePriority(39733, 99114);
    caseQueue.insert(3644,80754);
    caseQueue.insert(37404,3819);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(3644)); //4
    caseQueue.insert(48817,89920);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(70362, 58930);
    myResult.push_back(caseQueue.getPriority(4937)); //8
    myResult.push_back(caseQueue.getPriority(11821)); //9
    caseQueue.insert(51557,14441);
    caseQueue.updatePriority(51557, 12971);
    caseQueue.insert(66576,21406);
    caseQueue.updatePriority(51557, 32101);
    caseQueue.insert(78606,59583);
    caseQueue.insert(48195,38162);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(35798,76087);
    caseQueue.insert(11260,72841);
    myResult.push_back(caseQueue.getPriority(78606)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(59040,33745);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(40025,72054);
    caseQueue.updatePriority(48195, 53496);
    caseQueue.insert(92443,59359);
    caseQueue.insert(30801,72453);
    caseQueue.insert(76346,87099);
    caseQueue.updatePriority(11260, 2260);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(42214,69994);
    caseQueue.updatePriority(42214, 50527);
    caseQueue.insert(3728,51747);
    caseQueue.updatePriority(3728, 26293);
    caseQueue.insert(8777,69017);
    caseQueue.insert(68214,79387);
    caseQueue.insert(4928,99837);
    caseQueue.updatePriority(78606, 73067);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(82146,17458);
    caseQueue.insert(50638,47334);
    myResult.push_back(caseQueue.getPriority(68214)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(50638, 64565);
    caseQueue.insert(88345,12028);
    caseQueue.insert(69053,4190);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(33609,69458);
    caseQueue.updatePriority(8777, 6068);
    caseQueue.updatePriority(8777, 62570);
    caseQueue.insert(8363,40822);
    caseQueue.updatePriority(92443, 29942);
    myResult.push_back(caseQueue.getPriority(50638)); //19
    caseQueue.insert(59279,67002);
    caseQueue.insert(70030,53925);
    caseQueue.insert(23317,66616);
    caseQueue.insert(20001,80374);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(72809,68672);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(35798, 38157);
    caseQueue.insert(5403,33510);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(76346, 75155);
    caseQueue.insert(72347,54396);
    caseQueue.insert(60386,49026);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(29279,49058);
    caseQueue.updatePriority(59279, 77107);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(91614,26058);
    myResult.push_back(caseQueue.getPriority(30801)); //26
    caseQueue.insert(66593,70295);
    myResult.push_back(caseQueue.getPriority(40025)); //27
    myResult.push_back(caseQueue.getPriority(23317)); //28
    myResult.push_back(caseQueue.getPriority(50638)); //29
    caseQueue.updatePriority(72809, 21054);
    caseQueue.insert(18186,84610);
    myResult.push_back(caseQueue.getPriority(59279)); //30
    caseQueue.insert(76967,11849);
    caseQueue.updatePriority(91614, 18776);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(68214, 7861);
    myResult.push_back(caseQueue.getPriority(66593)); //32
    caseQueue.updatePriority(23317, 63187);
    caseQueue.insert(64025,3560);
    caseQueue.insert(92784,97482);
    caseQueue.insert(38623,89265);
    caseQueue.insert(40543,64418);
    caseQueue.insert(87072,78551);
    caseQueue.insert(28331,60758);
    caseQueue.insert(78854,42159);
    myResult.push_back(caseQueue.getPriority(8777)); //33
    caseQueue.updatePriority(30801, 98681);
    caseQueue.insert(69500,22762);
    caseQueue.updatePriority(68214, 26399);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(65749,26343);
    caseQueue.insert(61972,90556);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(83983,19481);
    caseQueue.insert(49038,78549);
    caseQueue.insert(32278,90269);
    caseQueue.updatePriority(4928, 48469);
    caseQueue.insert(54274,82620);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(12800,58187);
    caseQueue.updatePriority(20001, 22267);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(33609)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(81963,48339);
    static const int resultListArray[] = {-1, -1, 37404, 80754, 3644, 48817, 39733, -1, -1, 66576, 59583, 51557, 59040, 11260, 3728, 79387, 82146, 69053, 64565, 88345, 92443, 8363, 5403, 35798, 60386, 72453, 72054, 66616, 64565, 77107, 76967, 70295, 62570, 64025, 91614, 83983, 72809, 20001, 69458, 69500}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(60): Basarili" << endl;
    else cout << "Case(60): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_61(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 135);

    vector<int> myResult; 
    caseQueue.updatePriority(65588, 84948);
    myResult.push_back(caseQueue.getPriority(892)); //1
    caseQueue.updatePriority(36218, 53596);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(928, 62419);
    myResult.push_back(caseQueue.getPriority(74986)); //3
    caseQueue.insert(55765,75780);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(12278,75368);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(83139, 23001);
    caseQueue.updatePriority(6881, 43328);
    caseQueue.insert(88786,28174);
    myResult.push_back(caseQueue.getPriority(88786)); //7
    caseQueue.insert(86022,67200);
    caseQueue.updatePriority(88786, 42463);
    caseQueue.updatePriority(86022, 78816);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(39761,81623);
    caseQueue.insert(52693,61545);
    caseQueue.updatePriority(52693, 30801);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(69406,75480);
    caseQueue.updatePriority(39761, 85070);
    caseQueue.insert(44976,44735);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(91883,35066);
    caseQueue.updatePriority(69406, 31791);
    caseQueue.updatePriority(39761, 44037);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(76021,18203);
    caseQueue.updatePriority(91883, 77405);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(39761, 15025);
    caseQueue.insert(97501,8592);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(69287,99777);
    myResult.push_back(caseQueue.getPriority(69287)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(70827,86997);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(30121,94044);
    caseQueue.insert(71331,55146);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(30121)); //20
    caseQueue.updatePriority(69287, 14306);
    myResult.push_back(caseQueue.getPriority(69287)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(30121)); //23
    myResult.push_back(caseQueue.getPriority(30121)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(77190, 72746);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(35914)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(21103,9344);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(85302, 5532);
    caseQueue.insert(19590,10355);
    caseQueue.insert(17780,25908);
    caseQueue.insert(78112,29362);
    caseQueue.insert(8223,91339);
    caseQueue.insert(90835,20274);
    caseQueue.updatePriority(19590, 57921);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(17780, 22653);
    caseQueue.updatePriority(17780, 11837);
    caseQueue.insert(93360,4007);
    myResult.push_back(caseQueue.getPriority(93360)); //32
    caseQueue.insert(33788,51059);
    caseQueue.updatePriority(33788, 87304);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(99426,79092);
    caseQueue.insert(43210,56529);
    caseQueue.insert(3253,5870);
    myResult.push_back(caseQueue.getPriority(17780)); //34
    myResult.push_back(caseQueue.getPriority(17780)); //35
    myResult.push_back(caseQueue.getPriority(19590)); //36
    caseQueue.insert(38446,70894);
    caseQueue.insert(64205,9963);
    caseQueue.insert(85737,44179);
    caseQueue.updatePriority(17780, 65754);
    caseQueue.insert(69965,53001);
    caseQueue.insert(57784,21863);
    caseQueue.updatePriority(78112, 24883);
    caseQueue.insert(64565,22411);
    caseQueue.insert(70584,46662);
    myResult.push_back(caseQueue.getPriority(57784)); //37
    caseQueue.insert(52270,37617);
    caseQueue.insert(52141,19243);
    caseQueue.insert(47862,68172);
    caseQueue.updatePriority(19590, 60219);
    caseQueue.updatePriority(19590, 40549);
    myResult.push_back(caseQueue.getPriority(3253)); //38
    myResult.push_back(caseQueue.getPriority(70584)); //39
    myResult.push_back(caseQueue.getPriority(85737)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(77904,31478);
    myResult.push_back(caseQueue.getPriority(8223)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(47862, 41933);
    myResult.push_back(caseQueue.getPriority(19590)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(47862, 11931);
    caseQueue.updatePriority(19590, 24203);
    myResult.push_back(caseQueue.getPriority(43210)); //47
    caseQueue.insert(87383,80213);
    caseQueue.updatePriority(85737, 11431);
    myResult.push_back(caseQueue.getPriority(85737)); //48
    caseQueue.updatePriority(69965, 32670);
    myResult.push_back(caseQueue.getPriority(52270)); //49
    myResult.push_back(caseQueue.getPriority(19590)); //50
    myResult.push_back(caseQueue.getPriority(87383)); //51
    caseQueue.insert(96896,94392);
    caseQueue.insert(29399,74486);
    caseQueue.insert(51561,80067);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(37041,4962);
    caseQueue.insert(50855,89282);
    caseQueue.updatePriority(77904, 34823);
    myResult.push_back(caseQueue.getPriority(78112)); //53
    caseQueue.insert(72422,51311);
    caseQueue.insert(87019,13568);
    caseQueue.insert(15420,53131);
    caseQueue.insert(56215,84325);
    caseQueue.insert(70358,37675);
    caseQueue.updatePriority(99426, 82012);
    caseQueue.insert(65449,96467);
    caseQueue.insert(30781,57641);
    caseQueue.updatePriority(29399, 74527);
    static const int resultListArray[] = {-1, -1, -1, 55765, -1, 12278, 28174, 88786, 52693, 86022, 44976, 69406, 76021, 97501, 39761, 99777, 91883, 70827, 71331, 94044, 14306, 69287, 94044, 94044, 30121, -1, -1, -1, -1, 21103, 90835, 4007, 93360, 11837, 11837, 57921, 21863, 5870, 46662, 44179, 3253, 91339, 64205, 40549, 52141, 57784, 56529, 11431, 37617, 24203, 80213, 85737, 24883}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(61): Basarili" << endl;
    else cout << "Case(61): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_62(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 120);

    vector<int> myResult; 
    caseQueue.insert(79741,10404);
    caseQueue.updatePriority(79741, 48428);
    caseQueue.insert(79398,52754);
    myResult.push_back(caseQueue.getPriority(79398)); //1
    caseQueue.insert(3978,87199);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(16547,14223);
    caseQueue.updatePriority(16547, 84315);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(93475,16389);
    myResult.push_back(caseQueue.getPriority(16547)); //4
    caseQueue.updatePriority(93475, 97224);
    caseQueue.updatePriority(93475, 32943);
    caseQueue.insert(26207,83240);
    caseQueue.insert(33587,53816);
    caseQueue.updatePriority(3978, 4177);
    caseQueue.updatePriority(16547, 72844);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(8167,59582);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(16547)); //7
    caseQueue.insert(35631,2448);
    caseQueue.insert(2529,62410);
    caseQueue.updatePriority(8167, 22824);
    myResult.push_back(caseQueue.getPriority(26207)); //8
    myResult.push_back(caseQueue.getPriority(33587)); //9
    caseQueue.insert(8153,72766);
    caseQueue.updatePriority(8153, 33124);
    caseQueue.updatePriority(2529, 39936);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(2529, 8921);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(40159,26291);
    caseQueue.insert(98978,81751);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(72037,15747);
    caseQueue.insert(48587,30739);
    caseQueue.insert(80297,31425);
    caseQueue.insert(9066,81469);
    caseQueue.insert(19879,75588);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(11189,28233);
    caseQueue.insert(95977,40911);
    caseQueue.insert(50136,54721);
    caseQueue.insert(86507,13171);
    caseQueue.updatePriority(26207, 99441);
    caseQueue.updatePriority(48587, 14527);
    caseQueue.insert(6188,35832);
    myResult.push_back(caseQueue.getPriority(48587)); //14
    caseQueue.insert(63914,97543);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(48587)); //16
    caseQueue.insert(24541,24463);
    caseQueue.insert(93540,91094);
    caseQueue.insert(20336,54523);
    caseQueue.insert(95612,45911);
    caseQueue.insert(40686,57081);
    caseQueue.insert(68643,58029);
    caseQueue.updatePriority(40159, 1409);
    caseQueue.insert(17212,22508);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(68643, 64334);
    caseQueue.updatePriority(11189, 9857);
    caseQueue.insert(34381,46194);
    caseQueue.updatePriority(80297, 14025);
    caseQueue.updatePriority(40686, 3112);
    caseQueue.insert(77802,810);
    caseQueue.insert(49799,25319);
    caseQueue.insert(39314,23487);
    caseQueue.updatePriority(93540, 99210);
    caseQueue.insert(64509,81406);
    caseQueue.updatePriority(39314, 29244);
    caseQueue.insert(96129,94799);
    caseQueue.insert(50033,10962);
    caseQueue.insert(54617,23767);
    caseQueue.updatePriority(49799, 43194);
    caseQueue.insert(1268,75187);
    myResult.push_back(caseQueue.getPriority(17212)); //18
    caseQueue.insert(77390,28269);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(43636,20996);
    caseQueue.insert(42881,969);
    caseQueue.insert(35551,54935);
    caseQueue.updatePriority(16547, 70000);
    caseQueue.insert(28827,46295);
    caseQueue.insert(11629,10244);
    myResult.push_back(caseQueue.getPriority(26207)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(24541)); //22
    caseQueue.insert(14015,90226);
    myResult.push_back(caseQueue.getPriority(14015)); //23
    caseQueue.insert(3908,96949);
    caseQueue.updatePriority(68643, 44698);
    myResult.push_back(caseQueue.getPriority(17212)); //24
    caseQueue.insert(22731,44880);
    caseQueue.insert(37074,10175);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(37074, 13815);
    caseQueue.insert(27355,33902);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(8153)); //28
    caseQueue.updatePriority(54617, 43259);
    caseQueue.updatePriority(35551, 46909);
    caseQueue.insert(93016,83835);
    caseQueue.insert(78291,37086);
    caseQueue.insert(8708,76794);
    caseQueue.insert(15490,45225);
    myResult.push_back(caseQueue.getPriority(54617)); //29
    myResult.push_back(caseQueue.getPriority(28827)); //30
    caseQueue.insert(60371,63982);
    caseQueue.insert(85454,72122);
    caseQueue.insert(86826,47396);
    myResult.push_back(caseQueue.getPriority(48587)); //31
    caseQueue.updatePriority(68643, 70227);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(9066)); //33
    caseQueue.insert(49516,13865);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(78391,85587);
    static const int resultListArray[] = {52754, 79741, 79398, 84315, 3978, 93475, 72844, 83240, 53816, 35631, 2529, 8167, 72037, 14527, 86507, 14527, 40159, 22508, 77802, 99441, 42881, 24463, 90226, 22508, 40686, 11189, 11629, 33124, 43259, 46295, 14527, 50033, 81469, 37074}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(62): Basarili" << endl;
    else cout << "Case(62): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_63(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 104);

    vector<int> myResult; 
    caseQueue.insert(49961,61007);
    caseQueue.updatePriority(49961, 66674);
    caseQueue.updatePriority(49961, 5942);
    myResult.push_back(caseQueue.getPriority(49961)); //1
    caseQueue.insert(36098,98087);
    caseQueue.insert(37995,90121);
    caseQueue.insert(77408,12253);
    caseQueue.updatePriority(36098, 1601);
    myResult.push_back(caseQueue.getPriority(37995)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(77408)); //4
    caseQueue.updatePriority(77408, 90265);
    myResult.push_back(caseQueue.getPriority(77408)); //5
    caseQueue.insert(92166,12189);
    caseQueue.insert(61581,14398);
    caseQueue.updatePriority(49961, 28628);
    caseQueue.insert(22530,86528);
    caseQueue.updatePriority(37995, 62585);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(77408, 96259);
    caseQueue.insert(47801,60268);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(47801, 89672);
    caseQueue.insert(1678,111);
    caseQueue.insert(72825,14076);
    myResult.push_back(caseQueue.getPriority(49961)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(47801)); //10
    caseQueue.insert(18625,18037);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(90466,94655);
    caseQueue.updatePriority(22530, 33521);
    caseQueue.insert(83292,34558);
    caseQueue.insert(76993,97840);
    caseQueue.insert(7759,27620);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(83292, 33092);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(47801)); //15
    caseQueue.insert(20378,50525);
    caseQueue.insert(27723,61891);
    myResult.push_back(caseQueue.getPriority(37995)); //16
    myResult.push_back(caseQueue.getPriority(27723)); //17
    caseQueue.updatePriority(83292, 5018);
    caseQueue.insert(15379,141);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(22530)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(24828,99744);
    caseQueue.insert(36540,98650);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(42936,25246);
    caseQueue.insert(16185,86871);
    caseQueue.updatePriority(77408, 14035);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(90466)); //25
    myResult.push_back(caseQueue.getPriority(16185)); //26
    myResult.push_back(caseQueue.getPriority(16185)); //27
    caseQueue.updatePriority(42936, 21883);
    caseQueue.insert(81668,14);
    myResult.push_back(caseQueue.getPriority(47801)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(36540)); //30
    caseQueue.insert(68068,82003);
    caseQueue.insert(93961,97322);
    myResult.push_back(caseQueue.getPriority(93961)); //31
    myResult.push_back(caseQueue.getPriority(76993)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(68068, 71272);
    caseQueue.insert(87540,1852);
    caseQueue.insert(3294,52528);
    caseQueue.insert(94457,28185);
    caseQueue.insert(37613,18058);
    caseQueue.insert(9071,23563);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(37613, 16900);
    myResult.push_back(caseQueue.getPriority(37613)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(90466)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(36540, 72126);
    caseQueue.updatePriority(47801, 23885);
    caseQueue.insert(2411,24477);
    caseQueue.updatePriority(90466, 25645);
    caseQueue.updatePriority(24828, 19993);
    caseQueue.insert(78261,56064);
    caseQueue.insert(98397,40381);
    myResult.push_back(caseQueue.getPriority(36540)); //42
    myResult.push_back(caseQueue.getPriority(90466)); //43
    caseQueue.updatePriority(90466, 85770);
    myResult.push_back(caseQueue.getPriority(36540)); //44
    myResult.push_back(caseQueue.getPriority(68068)); //45
    caseQueue.insert(37789,81634);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(98397, 88910);
    caseQueue.insert(24999,22154);
    caseQueue.updatePriority(78261, 69307);
    caseQueue.updatePriority(93961, 11991);
    static const int resultListArray[] = {5942, 90121, 36098, 12253, 90265, 92166, 61581, 28628, 1678, 89672, 72825, 18625, 7759, 49961, 89672, 62585, 61891, 15379, 33521, 83292, 22530, 20378, 27723, 77408, 94655, 86871, 86871, 89672, 81668, 98650, 97322, 97840, 42936, 37995, 87540, 16900, 37613, 9071, 94457, 94655, 3294, 72126, 25645, 72126, 71272, 24828}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(63): Basarili" << endl;
    else cout << "Case(63): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_64(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 218);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(82585)); //2
    caseQueue.insert(51726,77763);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(58173,31442);
    caseQueue.insert(55938,14463);
    caseQueue.insert(13537,40795);
    caseQueue.insert(88840,42701);
    myResult.push_back(caseQueue.getPriority(88840)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(85701,4071);
    myResult.push_back(caseQueue.getPriority(13537)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(48556,43781);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(92422,58940);
    caseQueue.insert(44363,87721);
    caseQueue.insert(46864,10363);
    caseQueue.insert(24723,63693);
    caseQueue.updatePriority(88840, 30984);
    caseQueue.insert(64454,55914);
    caseQueue.insert(81736,32377);
    caseQueue.insert(94686,42673);
    caseQueue.insert(48945,76798);
    caseQueue.updatePriority(92422, 55911);
    caseQueue.insert(31452,21871);
    caseQueue.updatePriority(88840, 30261);
    caseQueue.insert(12284,36573);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(81736)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(64454)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(21744,11948);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(24723)); //15
    myResult.push_back(caseQueue.getPriority(48945)); //16
    myResult.push_back(caseQueue.getPriority(12284)); //17
    caseQueue.updatePriority(48945, 44136);
    myResult.push_back(caseQueue.getPriority(94686)); //18
    caseQueue.insert(20815,82528);
    caseQueue.insert(85727,74060);
    caseQueue.insert(3090,19800);
    caseQueue.insert(28660,21657);
    caseQueue.updatePriority(48556, 77990);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(85727, 91036);
    caseQueue.insert(60294,27536);
    caseQueue.insert(49279,23464);
    myResult.push_back(caseQueue.getPriority(81736)); //20
    caseQueue.insert(81008,31632);
    caseQueue.updatePriority(44363, 35731);
    caseQueue.insert(73917,37161);
    caseQueue.updatePriority(92422, 97475);
    caseQueue.insert(8022,63568);
    myResult.push_back(caseQueue.getPriority(85727)); //21
    myResult.push_back(caseQueue.getPriority(48556)); //22
    caseQueue.insert(31715,54837);
    myResult.push_back(caseQueue.getPriority(94686)); //23
    caseQueue.updatePriority(24723, 98106);
    caseQueue.insert(28313,56839);
    caseQueue.insert(90485,1578);
    caseQueue.insert(97069,5125);
    caseQueue.insert(32918,88353);
    caseQueue.insert(35776,7360);
    caseQueue.updatePriority(24723, 11544);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(98759,17358);
    myResult.push_back(caseQueue.getPriority(13537)); //25
    myResult.push_back(caseQueue.getPriority(44363)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(60095,73808);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(21682,95615);
    myResult.push_back(caseQueue.getPriority(92422)); //29
    caseQueue.insert(5755,91800);
    caseQueue.insert(33124,66217);
    myResult.push_back(caseQueue.getPriority(33124)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(19162,8536);
    myResult.push_back(caseQueue.getPriority(73917)); //32
    caseQueue.insert(5131,23483);
    myResult.push_back(caseQueue.getPriority(81736)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(64454, 13324);
    caseQueue.insert(14020,69008);
    caseQueue.insert(27071,17675);
    caseQueue.updatePriority(81736, 41151);
    caseQueue.insert(33409,72068);
    caseQueue.insert(14151,52356);
    caseQueue.insert(88671,8879);
    caseQueue.insert(52673,30481);
    caseQueue.updatePriority(52673, 55125);
    caseQueue.insert(87049,79940);
    caseQueue.updatePriority(27071, 43523);
    caseQueue.insert(97819,22667);
    caseQueue.updatePriority(48556, 73228);
    myResult.push_back(caseQueue.getPriority(48556)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(47476,27649);
    caseQueue.insert(10889,29033);
    caseQueue.updatePriority(60294, 57608);
    caseQueue.insert(10739,76886);
    caseQueue.insert(45605,48656);
    caseQueue.updatePriority(5755, 25827);
    caseQueue.insert(98530,41688);
    caseQueue.insert(45479,22373);
    caseQueue.updatePriority(10889, 37030);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(48945)); //39
    caseQueue.insert(98584,31612);
    caseQueue.updatePriority(47476, 21571);
    caseQueue.updatePriority(10739, 4073);
    caseQueue.updatePriority(20815, 43227);
    myResult.push_back(caseQueue.getPriority(60095)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(28660)); //43
    caseQueue.updatePriority(44363, 80839);
    caseQueue.insert(85932,19556);
    caseQueue.insert(77450,98030);
    caseQueue.insert(80862,87161);
    myResult.push_back(caseQueue.getPriority(98584)); //44
    caseQueue.insert(81230,79144);
    caseQueue.insert(91442,50138);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(21450,48916);
    caseQueue.insert(3929,13786);
    caseQueue.insert(58308,37670);
    caseQueue.insert(16222,32742);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(82846,54116);
    caseQueue.insert(92004,79964);
    caseQueue.updatePriority(98584, 87480);
    caseQueue.updatePriority(45479, 79020);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(15456,20630);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(98779,9048);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(14151, 29114);
    caseQueue.insert(55655,5342);
    caseQueue.insert(35789,84622);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(21682)); //52
    caseQueue.updatePriority(8022, 47829);
    caseQueue.insert(86209,49201);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(33124, 59307);
    myResult.push_back(caseQueue.getPriority(87049)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(54121,93598);
    caseQueue.updatePriority(77450, 37950);
    myResult.push_back(caseQueue.getPriority(21450)); //57
    myResult.push_back(caseQueue.getPriority(12284)); //58
    caseQueue.insert(23418,8361);
    myResult.push_back(caseQueue.getPriority(28313)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(63156,6379);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(32918)); //62
    caseQueue.updatePriority(33124, 5513);
    caseQueue.updatePriority(8022, 13033);
    myResult.push_back(caseQueue.getPriority(20815)); //63
    caseQueue.updatePriority(58308, 61322);
    caseQueue.updatePriority(16222, 41255);
    caseQueue.updatePriority(20815, 93404);
    myResult.push_back(caseQueue.getPriority(92422)); //64
    caseQueue.updatePriority(94686, 41548);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(92004, 71289);
    caseQueue.insert(3931,45592);
    caseQueue.insert(6947,85521);
    myResult.push_back(caseQueue.getPriority(92422)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(10889)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(10072,20733);
    caseQueue.updatePriority(10072, 73313);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(6162,84991);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(94686, 11596);
    myResult.push_back(caseQueue.getPriority(81736)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(3320,2255);
    myResult.push_back(caseQueue.getPriority(52673)); //74
    myResult.push_back(caseQueue.getPriority(45479)); //75
    caseQueue.updatePriority(32918, 60848);
    caseQueue.insert(30842,45470);
    caseQueue.insert(81814,36668);
    caseQueue.insert(88531,38815);
    myResult.push_back(caseQueue.getPriority(60294)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(54121)); //78
    caseQueue.insert(49980,19226);
    caseQueue.insert(2973,27565);
    caseQueue.insert(57715,84137);
    caseQueue.updatePriority(73917, 13727);
    caseQueue.updatePriority(20815, 41500);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(79547,32783);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.getPriority(31715)); //81
    caseQueue.insert(45832,58152);
    caseQueue.insert(77762,84661);
    caseQueue.insert(64739,68549);
    caseQueue.insert(98417,4957);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(66862,47609);
    myResult.push_back(caseQueue.getPriority(16222)); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(89871,54816);
    caseQueue.insert(28816,67558);
    static const int resultListArray[] = {-1, -1, 51726, 42701, 55938, 40795, 85701, 58173, 46864, 32377, 31452, 55914, 88840, 21744, 63693, 76798, 36573, 42673, 3090, 32377, 91036, 77990, 42673, 90485, 40795, 35731, 97069, 35776, 97475, 66217, 24723, 37161, 32377, 19162, 73228, 88671, 64454, 98759, 44136, 73808, 10739, 47476, 21657, 31612, 85932, 3929, 28660, 15456, 98779, 97819, 55655, 95615, 49279, 5131, 79940, 5755, 48916, 36573, 56839, 23418, 63156, 88353, 43227, 97475, 33124, 97475, 8022, 37030, 14151, 81008, 12284, 41151, 94686, 55125, 79020, 57608, 3320, 93598, 73917, 49980, 54837, 98417, 2973, 41255, 79547}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(64): Basarili" << endl;
    else cout << "Case(64): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_65(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 159);

    vector<int> myResult; 
    caseQueue.updatePriority(35717, 58607);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(22933, 90843);
    caseQueue.updatePriority(69820, 31707);
    caseQueue.updatePriority(9736, 31546);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(2491)); //3
    caseQueue.insert(96693,99653);
    caseQueue.updatePriority(96693, 93989);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(84007)); //5
    myResult.push_back(caseQueue.getPriority(37027)); //6
    myResult.push_back(caseQueue.getPriority(57602)); //7
    caseQueue.updatePriority(96474, 79292);
    caseQueue.updatePriority(89980, 2066);
    caseQueue.insert(11572,3123);
    caseQueue.updatePriority(11572, 91895);
    caseQueue.insert(28302,95706);
    caseQueue.insert(11906,69711);
    myResult.push_back(caseQueue.getPriority(28302)); //8
    caseQueue.insert(31058,75971);
    caseQueue.insert(7186,88259);
    myResult.push_back(caseQueue.getPriority(11572)); //9
    caseQueue.updatePriority(28302, 92240);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(67129,24192);
    caseQueue.insert(39946,3209);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(31058)); //12
    caseQueue.insert(24027,76096);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(11572, 45891);
    caseQueue.updatePriority(28302, 15503);
    caseQueue.updatePriority(7186, 85249);
    caseQueue.updatePriority(31058, 91846);
    caseQueue.updatePriority(31058, 71222);
    myResult.push_back(caseQueue.getPriority(31058)); //14
    caseQueue.updatePriority(11572, 77006);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(31058, 81594);
    caseQueue.insert(16870,21301);
    caseQueue.updatePriority(7186, 11033);
    caseQueue.insert(44092,85799);
    caseQueue.insert(56830,48147);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(56830)); //17
    myResult.push_back(caseQueue.getPriority(24027)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(96539,47340);
    myResult.push_back(caseQueue.getPriority(24027)); //20
    caseQueue.insert(48262,29101);
    caseQueue.insert(34844,77379);
    myResult.push_back(caseQueue.getPriority(31058)); //21
    caseQueue.updatePriority(44092, 57947);
    caseQueue.updatePriority(56830, 63545);
    myResult.push_back(caseQueue.getPriority(56830)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(32277,50407);
    caseQueue.insert(20992,95064);
    myResult.push_back(caseQueue.getPriority(20992)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(48277,75070);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(84613,37170);
    caseQueue.updatePriority(44092, 76782);
    myResult.push_back(caseQueue.getPriority(11572)); //27
    caseQueue.insert(8872,20797);
    caseQueue.updatePriority(34844, 73186);
    myResult.push_back(caseQueue.getPriority(84613)); //28
    caseQueue.updatePriority(8872, 74262);
    caseQueue.insert(86740,16881);
    caseQueue.insert(8268,27161);
    caseQueue.insert(53425,66298);
    caseQueue.updatePriority(86740, 94520);
    caseQueue.updatePriority(24027, 16002);
    caseQueue.insert(78598,47065);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(53425, 76365);
    caseQueue.insert(38678,63903);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(57101,71551);
    caseQueue.insert(53612,4);
    caseQueue.updatePriority(20992, 6612);
    myResult.push_back(caseQueue.getPriority(44092)); //32
    caseQueue.insert(43209,80020);
    caseQueue.insert(33045,46120);
    caseQueue.updatePriority(11572, 99710);
    myResult.push_back(caseQueue.getPriority(34844)); //33
    caseQueue.updatePriority(78598, 34491);
    myResult.push_back(caseQueue.getPriority(33045)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(31058)); //37
    myResult.push_back(caseQueue.getPriority(43209)); //38
    caseQueue.insert(8960,9703);
    caseQueue.insert(61887,10272);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(34844, 5581);
    caseQueue.updatePriority(44092, 24092);
    myResult.push_back(caseQueue.getPriority(61887)); //40
    myResult.push_back(caseQueue.getPriority(31058)); //41
    caseQueue.insert(68146,87613);
    caseQueue.insert(270,20168);
    myResult.push_back(caseQueue.getPriority(53425)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(41420,23271);
    myResult.push_back(caseQueue.getPriority(41420)); //44
    caseQueue.updatePriority(270, 7282);
    myResult.push_back(caseQueue.getPriority(11572)); //45
    caseQueue.insert(76796,73974);
    caseQueue.insert(70067,90225);
    caseQueue.insert(62561,14619);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(5710,19164);
    caseQueue.updatePriority(48277, 13065);
    myResult.push_back(caseQueue.getPriority(78598)); //47
    caseQueue.insert(4468,30401);
    myResult.push_back(caseQueue.getPriority(62561)); //48
    caseQueue.insert(15796,69776);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(38678, 86693);
    caseQueue.insert(99317,87614);
    myResult.push_back(caseQueue.getPriority(57101)); //50
    caseQueue.insert(36383,56529);
    caseQueue.updatePriority(33045, 90526);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(31058)); //52
    caseQueue.updatePriority(4468, 24680);
    caseQueue.insert(68494,46932);
    myResult.push_back(caseQueue.getPriority(57101)); //53
    caseQueue.updatePriority(70067, 19408);
    myResult.push_back(caseQueue.getPriority(57101)); //54
    caseQueue.insert(29470,10097);
    caseQueue.updatePriority(11572, 79772);
    caseQueue.insert(61071,79080);
    myResult.push_back(caseQueue.getPriority(53425)); //55
    caseQueue.insert(43344,84120);
    caseQueue.insert(88321,56499);
    myResult.push_back(caseQueue.getPriority(62561)); //56
    caseQueue.updatePriority(99317, 47851);
    caseQueue.updatePriority(68146, 8266);
    caseQueue.updatePriority(31058, 78400);
    caseQueue.insert(74748,68842);
    myResult.push_back(caseQueue.getPriority(5710)); //57
    caseQueue.insert(22029,75201);
    caseQueue.insert(20843,55778);
    caseQueue.insert(75945,50133);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(10790,69237);
    caseQueue.insert(95665,87285);
    caseQueue.insert(14487,29009);
    caseQueue.insert(13764,32118);
    caseQueue.insert(34040,75944);
    caseQueue.insert(93910,97579);
    myResult.push_back(caseQueue.getPriority(44092)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(90852,82212);
    myResult.push_back(caseQueue.deleteMin()); //61
    static const int resultListArray[] = {-1, -1, -1, 96693, -1, -1, -1, 95706, 91895, 11906, 39946, 75971, 67129, 71222, 28302, 7186, 48147, 76096, 16870, 76096, 81594, 63545, 48262, 95064, 96539, 32277, 77006, 37170, 24027, 8268, 84613, 76782, 73186, 46120, 53612, 20992, 81594, 80020, 8960, 10272, 81594, 76365, 34844, 23271, 99710, 270, 34491, 14619, 61887, 71551, 48277, 81594, 71551, 71551, 76365, 14619, 19164, 68146, 24092, 29470, 62561}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(65): Basarili" << endl;
    else cout << "Case(65): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_66(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 160);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(21319)); //2
    myResult.push_back(caseQueue.getPriority(83000)); //3
    caseQueue.insert(40744,56916);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(89121, 27814);
    caseQueue.updatePriority(53701, 41281);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(73477,72208);
    myResult.push_back(caseQueue.getPriority(73477)); //6
    caseQueue.insert(62230,32);
    caseQueue.updatePriority(73477, 81077);
    caseQueue.insert(53188,81816);
    caseQueue.insert(75557,18894);
    caseQueue.updatePriority(62230, 16773);
    caseQueue.insert(15408,1838);
    caseQueue.insert(27968,69656);
    myResult.push_back(caseQueue.getPriority(53188)); //7
    caseQueue.insert(54162,33989);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(73477)); //9
    caseQueue.insert(5449,35391);
    caseQueue.updatePriority(53188, 69830);
    caseQueue.insert(36368,29435);
    myResult.push_back(caseQueue.getPriority(75557)); //10
    caseQueue.insert(38183,5417);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(27968)); //12
    caseQueue.insert(88027,74017);
    myResult.push_back(caseQueue.getPriority(36368)); //13
    myResult.push_back(caseQueue.getPriority(73477)); //14
    caseQueue.updatePriority(62230, 25745);
    myResult.push_back(caseQueue.getPriority(73477)); //15
    caseQueue.updatePriority(73477, 50264);
    caseQueue.updatePriority(53188, 88030);
    myResult.push_back(caseQueue.getPriority(75557)); //16
    myResult.push_back(caseQueue.getPriority(62230)); //17
    caseQueue.insert(51312,24418);
    caseQueue.insert(99393,13187);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(62230)); //19
    caseQueue.insert(42423,35245);
    caseQueue.insert(3932,96003);
    caseQueue.insert(55980,59696);
    caseQueue.insert(83092,26057);
    caseQueue.updatePriority(42423, 28434);
    caseQueue.insert(29033,7393);
    caseQueue.updatePriority(53188, 67684);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(54876,14);
    caseQueue.insert(5302,25542);
    caseQueue.updatePriority(5449, 27175);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(75557)); //22
    caseQueue.insert(36258,2926);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(65564,15203);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(84498,40882);
    myResult.push_back(caseQueue.getPriority(62230)); //25
    caseQueue.insert(35829,42728);
    caseQueue.insert(81413,38812);
    caseQueue.insert(54434,44073);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(5302, 74780);
    caseQueue.insert(30171,7835);
    caseQueue.updatePriority(55980, 46369);
    myResult.push_back(caseQueue.getPriority(51312)); //27
    caseQueue.updatePriority(3932, 62786);
    caseQueue.insert(40780,71709);
    caseQueue.insert(67493,46834);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(56112,58991);
    caseQueue.updatePriority(51312, 92633);
    caseQueue.updatePriority(56112, 20730);
    caseQueue.insert(65814,66648);
    myResult.push_back(caseQueue.getPriority(62230)); //29
    myResult.push_back(caseQueue.getPriority(67493)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(45578,19304);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(40780, 67501);
    myResult.push_back(caseQueue.getPriority(35829)); //33
    caseQueue.insert(65739,78305);
    caseQueue.insert(59755,56215);
    myResult.push_back(caseQueue.getPriority(3932)); //34
    myResult.push_back(caseQueue.getPriority(81413)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(80216,9129);
    caseQueue.insert(52896,86197);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(36162,91138);
    caseQueue.insert(17545,74209);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(53188, 6726);
    caseQueue.updatePriority(65814, 65887);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(65262,34630);
    myResult.push_back(caseQueue.getPriority(55980)); //43
    myResult.push_back(caseQueue.getPriority(65262)); //44
    caseQueue.insert(80453,5790);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(84498)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(65739)); //48
    myResult.push_back(caseQueue.getPriority(81413)); //49
    caseQueue.insert(90771,41567);
    caseQueue.insert(59633,77908);
    caseQueue.insert(39112,39682);
    myResult.push_back(caseQueue.getPriority(40780)); //50
    caseQueue.insert(14202,47626);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(47667,79122);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(28456,73822);
    myResult.push_back(caseQueue.getPriority(88027)); //53
    myResult.push_back(caseQueue.getPriority(59633)); //54
    caseQueue.updatePriority(5302, 12614);
    myResult.push_back(caseQueue.getPriority(90771)); //55
    myResult.push_back(caseQueue.getPriority(67493)); //56
    myResult.push_back(caseQueue.getPriority(40780)); //57
    caseQueue.updatePriority(3932, 13719);
    caseQueue.insert(16091,48942);
    caseQueue.insert(41562,82198);
    myResult.push_back(caseQueue.getPriority(90771)); //58
    caseQueue.insert(50134,50893);
    caseQueue.insert(68169,40308);
    myResult.push_back(caseQueue.getPriority(5302)); //59
    caseQueue.updatePriority(39112, 32740);
    caseQueue.updatePriority(67493, 80803);
    myResult.push_back(caseQueue.getPriority(3932)); //60
    caseQueue.insert(45545,98053);
    caseQueue.updatePriority(90771, 81952);
    caseQueue.insert(27012,88680);
    caseQueue.updatePriority(17545, 34691);
    myResult.push_back(caseQueue.getPriority(40780)); //61
    caseQueue.updatePriority(41562, 69669);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(37234,4412);
    caseQueue.insert(58544,73307);
    caseQueue.updatePriority(17545, 77438);
    caseQueue.updatePriority(39112, 12549);
    caseQueue.insert(17150,96337);
    caseQueue.insert(82912,5032);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(27012)); //64
    caseQueue.insert(57711,99127);
    caseQueue.updatePriority(59633, 24729);
    caseQueue.insert(64429,92821);
    caseQueue.insert(36549,37248);
    caseQueue.insert(24473,81165);
    caseQueue.insert(21525,62975);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(36549)); //66
    caseQueue.insert(95974,65871);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(76270,24981);
    static const int resultListArray[] = {-1, -1, -1, 40744, -1, 72208, 81816, 15408, 81077, 18894, 38183, 69656, 29435, 81077, 81077, 18894, 25745, 99393, 25745, 29033, 54876, 18894, 36258, 65564, 25745, 75557, 24418, 30171, 25745, 46834, 56112, 45578, 42728, 62786, 38812, 62230, 83092, 80216, 5449, 42423, 53188, 36368, 46369, 34630, 80453, 40882, 54162, 78305, 38812, 67501, 65262, 81413, 74017, 77908, 41567, 46834, 67501, 41567, 12614, 13719, 67501, 5302, 37234, 88680, 82912, 37248, 39112}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(66): Basarili" << endl;
    else cout << "Case(66): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_67(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 138);

    vector<int> myResult; 
    caseQueue.insert(29678,77701);
    caseQueue.insert(13791,25262);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(97214,97846);
    myResult.push_back(caseQueue.getPriority(97214)); //3
    caseQueue.insert(84964,91480);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(39947,75831);
    myResult.push_back(caseQueue.getPriority(39947)); //5
    caseQueue.insert(41466,99726);
    caseQueue.updatePriority(39947, 64043);
    caseQueue.updatePriority(97214, 83025);
    caseQueue.insert(27931,37475);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(77100,89914);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(67088,6314);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(69482,5467);
    caseQueue.insert(63517,8257);
    caseQueue.insert(24877,63215);
    caseQueue.insert(38444,44483);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(67416,44946);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(24877)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(60431,79685);
    caseQueue.insert(47830,62249);
    caseQueue.insert(93987,38645);
    caseQueue.insert(68304,41213);
    caseQueue.insert(54196,14718);
    caseQueue.updatePriority(77100, 83534);
    caseQueue.updatePriority(97214, 91658);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(9710,66631);
    myResult.push_back(caseQueue.getPriority(93987)); //14
    caseQueue.insert(1729,63754);
    caseQueue.updatePriority(24877, 13190);
    myResult.push_back(caseQueue.getPriority(67416)); //15
    caseQueue.updatePriority(1729, 92833);
    myResult.push_back(caseQueue.getPriority(67416)); //16
    caseQueue.updatePriority(68304, 48812);
    caseQueue.insert(29354,4359);
    myResult.push_back(caseQueue.getPriority(1729)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(5146,54772);
    myResult.push_back(caseQueue.getPriority(5146)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(93987)); //21
    caseQueue.insert(82479,31256);
    caseQueue.insert(66655,17814);
    caseQueue.insert(16246,24595);
    myResult.push_back(caseQueue.getPriority(93987)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(5146, 24541);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(16246, 98083);
    caseQueue.insert(11533,98869);
    myResult.push_back(caseQueue.getPriority(93987)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(1937,82583);
    caseQueue.insert(40140,1339);
    myResult.push_back(caseQueue.getPriority(47830)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(61083,55217);
    caseQueue.insert(37030,11718);
    caseQueue.insert(75599,4139);
    caseQueue.insert(15268,67853);
    caseQueue.insert(39226,75008);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(41466)); //30
    caseQueue.updatePriority(68304, 35688);
    myResult.push_back(caseQueue.getPriority(39226)); //31
    myResult.push_back(caseQueue.getPriority(1937)); //32
    caseQueue.updatePriority(37030, 95620);
    myResult.push_back(caseQueue.getPriority(67416)); //33
    caseQueue.updatePriority(39226, 56374);
    caseQueue.insert(81343,16812);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(15268, 83545);
    caseQueue.updatePriority(9710, 71242);
    caseQueue.updatePriority(11533, 11895);
    caseQueue.insert(34531,78080);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(6518,91520);
    caseQueue.updatePriority(93987, 16594);
    caseQueue.insert(57814,98174);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(79695,51935);
    myResult.push_back(caseQueue.getPriority(34531)); //37
    myResult.push_back(caseQueue.getPriority(37030)); //38
    caseQueue.insert(1322,63147);
    caseQueue.insert(5152,26286);
    myResult.push_back(caseQueue.getPriority(97214)); //39
    caseQueue.insert(90619,63652);
    caseQueue.insert(16205,60700);
    caseQueue.insert(83472,48783);
    caseQueue.updatePriority(1729, 22860);
    myResult.push_back(caseQueue.getPriority(90619)); //40
    caseQueue.insert(17874,59849);
    caseQueue.insert(1039,35731);
    caseQueue.insert(27562,33984);
    caseQueue.updatePriority(60431, 8776);
    caseQueue.insert(10669,34968);
    caseQueue.insert(34448,62128);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(97214, 77755);
    caseQueue.insert(76256,38974);
    caseQueue.insert(48343,65861);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(43582,30289);
    caseQueue.updatePriority(16246, 15063);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(95258,92033);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(74181,52143);
    caseQueue.updatePriority(1322, 25039);
    caseQueue.insert(35129,19123);
    caseQueue.insert(53866,30699);
    myResult.push_back(caseQueue.getPriority(37030)); //46
    caseQueue.updatePriority(90619, 83868);
    caseQueue.insert(23591,79989);
    caseQueue.insert(98603,92408);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(65566,53257);
    caseQueue.insert(42525,88596);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(2268,57162);
    myResult.push_back(caseQueue.getPriority(47830)); //49
    myResult.push_back(caseQueue.getPriority(39226)); //50
    caseQueue.insert(22356,45126);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(71089,58332);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    static const int resultListArray[] = {13791, 29678, 97846, 84964, 75831, 27931, 39947, 67088, 69482, 63517, 63215, 38444, 54196, 38645, 44946, 44946, 92833, 29354, 54772, 24877, 38645, 38645, 66655, 5146, 38645, 82479, 62249, 40140, 75599, 99726, 75008, 82583, 44946, 81343, 11533, 93987, 78080, 95620, 91658, 63652, 60431, 1729, 16246, 5152, 43582, 95620, 35129, 1322, 62249, 56374, 53866, 27562, 10669}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(67): Basarili" << endl;
    else cout << "Case(67): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_68(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 143);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(67343, 15707);
    myResult.push_back(caseQueue.getPriority(70996)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(66960,32888);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(53537,33659);
    myResult.push_back(caseQueue.getPriority(53537)); //5
    caseQueue.insert(6481,58845);
    caseQueue.updatePriority(6481, 99898);
    myResult.push_back(caseQueue.getPriority(53537)); //6
    caseQueue.updatePriority(53537, 3455);
    caseQueue.insert(18873,21916);
    caseQueue.insert(96136,12461);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(18873, 6743);
    caseQueue.insert(10391,47567);
    caseQueue.insert(30413,89510);
    caseQueue.updatePriority(18873, 17073);
    caseQueue.insert(9539,76081);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(6481)); //10
    myResult.push_back(caseQueue.getPriority(30413)); //11
    caseQueue.updatePriority(30413, 31262);
    caseQueue.updatePriority(30413, 98871);
    caseQueue.insert(72526,29451);
    caseQueue.insert(94524,39475);
    caseQueue.insert(62765,47176);
    caseQueue.updatePriority(94524, 26735);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(62765, 56684);
    caseQueue.insert(36221,1868);
    myResult.push_back(caseQueue.getPriority(6481)); //13
    caseQueue.updatePriority(9539, 29060);
    caseQueue.updatePriority(9539, 68730);
    caseQueue.updatePriority(9539, 63310);
    myResult.push_back(caseQueue.getPriority(62765)); //14
    caseQueue.insert(90717,15477);
    caseQueue.updatePriority(36221, 12149);
    caseQueue.insert(51091,5213);
    myResult.push_back(caseQueue.getPriority(72526)); //15
    myResult.push_back(caseQueue.getPriority(36221)); //16
    myResult.push_back(caseQueue.getPriority(36221)); //17
    caseQueue.insert(49035,51893);
    caseQueue.insert(58677,22739);
    myResult.push_back(caseQueue.getPriority(72526)); //18
    caseQueue.updatePriority(90717, 1881);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(10391)); //20
    myResult.push_back(caseQueue.getPriority(72526)); //21
    caseQueue.updatePriority(72526, 14955);
    caseQueue.updatePriority(36221, 57213);
    caseQueue.insert(77104,51081);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(43144,3534);
    myResult.push_back(caseQueue.getPriority(49035)); //23
    caseQueue.insert(52827,74406);
    caseQueue.insert(12086,16685);
    caseQueue.insert(19286,1306);
    myResult.push_back(caseQueue.getPriority(30413)); //24
    caseQueue.updatePriority(9539, 32709);
    caseQueue.insert(41224,94005);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(6481, 3053);
    myResult.push_back(caseQueue.getPriority(30413)); //26
    caseQueue.insert(68625,68690);
    myResult.push_back(caseQueue.getPriority(77104)); //27
    caseQueue.insert(89338,29092);
    caseQueue.insert(45283,41709);
    caseQueue.insert(35869,66112);
    caseQueue.updatePriority(45283, 10323);
    caseQueue.updatePriority(45283, 60458);
    caseQueue.insert(10695,29919);
    myResult.push_back(caseQueue.getPriority(30413)); //28
    caseQueue.updatePriority(68625, 45069);
    caseQueue.updatePriority(58677, 90504);
    caseQueue.updatePriority(68625, 63673);
    caseQueue.insert(98297,18600);
    caseQueue.insert(25245,34379);
    caseQueue.insert(71277,35795);
    caseQueue.insert(75528,22538);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(81669,96184);
    caseQueue.insert(94193,53250);
    caseQueue.insert(53573,82793);
    caseQueue.updatePriority(10391, 91560);
    caseQueue.updatePriority(10695, 79227);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(30413)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(68625, 47058);
    myResult.push_back(caseQueue.getPriority(25245)); //34
    myResult.push_back(caseQueue.getPriority(89338)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(2891,49807);
    caseQueue.insert(19666,37469);
    myResult.push_back(caseQueue.getPriority(35869)); //38
    caseQueue.insert(67190,86750);
    caseQueue.insert(45556,37877);
    caseQueue.updatePriority(52827, 46828);
    caseQueue.insert(15151,73395);
    caseQueue.insert(32997,83978);
    caseQueue.updatePriority(35869, 64612);
    caseQueue.updatePriority(19666, 38992);
    caseQueue.insert(940,18086);
    caseQueue.updatePriority(45283, 49931);
    caseQueue.updatePriority(9539, 15194);
    caseQueue.updatePriority(81669, 63950);
    caseQueue.insert(37401,31970);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(44529,3548);
    caseQueue.insert(80218,27006);
    caseQueue.updatePriority(77104, 58595);
    myResult.push_back(caseQueue.getPriority(44529)); //40
    caseQueue.insert(25374,18718);
    caseQueue.updatePriority(68625, 90303);
    myResult.push_back(caseQueue.getPriority(37401)); //41
    caseQueue.insert(9365,54970);
    myResult.push_back(caseQueue.getPriority(10695)); //42
    caseQueue.insert(45668,76187);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(81163,53577);
    caseQueue.insert(93735,6060);
    caseQueue.updatePriority(10391, 97293);
    caseQueue.insert(49402,70491);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(87979,38714);
    caseQueue.updatePriority(37401, 98664);
    myResult.push_back(caseQueue.getPriority(45668)); //45
    caseQueue.insert(70082,36899);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(81163)); //47
    caseQueue.insert(43122,23624);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(864,11979);
    caseQueue.updatePriority(37401, 54404);
    caseQueue.insert(18484,61426);
    caseQueue.insert(97438,59273);
    caseQueue.updatePriority(58677, 44179);
    myResult.push_back(caseQueue.deleteMin()); //49
    static const int resultListArray[] = {-1, -1, -1, 66960, 33659, 33659, 53537, 96136, 18873, 99898, 89510, 94524, 99898, 56684, 29451, 12149, 12149, 29451, 90717, 47567, 29451, 51091, 51893, 98871, 19286, 98871, 51081, 98871, 6481, 43144, 72526, 98871, 12086, 34379, 29092, 98297, 75528, 66112, 9539, 3548, 31970, 79227, 44529, 93735, 76187, 940, 53577, 25374, 864}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(68): Basarili" << endl;
    else cout << "Case(68): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_69(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 232);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(62967,48699);
    caseQueue.updatePriority(62967, 81406);
    caseQueue.insert(66768,95019);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(66768)); //3
    myResult.push_back(caseQueue.getPriority(66768)); //4
    caseQueue.insert(35417,94456);
    caseQueue.updatePriority(66768, 69683);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(35417)); //6
    caseQueue.insert(31517,11325);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(20162,77027);
    caseQueue.insert(34257,71323);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(35417)); //10
    caseQueue.insert(67706,55627);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(91141,6299);
    caseQueue.insert(63566,20663);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(35417, 85812);
    caseQueue.updatePriority(63566, 34512);
    caseQueue.insert(10597,38263);
    caseQueue.insert(62464,37001);
    caseQueue.insert(36814,89944);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(36814)); //14
    caseQueue.updatePriority(62464, 83456);
    caseQueue.insert(11399,31224);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(35417)); //17
    caseQueue.updatePriority(36814, 69226);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(18251)); //22
    caseQueue.insert(15663,27538);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(19293,4064);
    myResult.push_back(caseQueue.getPriority(19293)); //24
    caseQueue.insert(8438,63011);
    caseQueue.insert(91170,33467);
    caseQueue.updatePriority(8438, 90150);
    caseQueue.insert(95842,15161);
    caseQueue.insert(72767,29504);
    caseQueue.insert(46178,10770);
    caseQueue.insert(37401,30881);
    myResult.push_back(caseQueue.getPriority(95842)); //25
    caseQueue.updatePriority(95842, 86251);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(91170, 48669);
    caseQueue.updatePriority(8438, 35701);
    myResult.push_back(caseQueue.getPriority(37401)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(37401, 61446);
    myResult.push_back(caseQueue.getPriority(95842)); //29
    caseQueue.updatePriority(95842, 98029);
    caseQueue.insert(87224,42307);
    caseQueue.insert(62697,45640);
    caseQueue.insert(94868,15759);
    myResult.push_back(caseQueue.getPriority(37401)); //30
    caseQueue.insert(18044,57947);
    caseQueue.insert(44658,90218);
    myResult.push_back(caseQueue.getPriority(62697)); //31
    caseQueue.insert(2782,52776);
    myResult.push_back(caseQueue.getPriority(2782)); //32
    caseQueue.insert(26824,62114);
    caseQueue.insert(22058,77512);
    myResult.push_back(caseQueue.getPriority(91170)); //33
    myResult.push_back(caseQueue.getPriority(62697)); //34
    caseQueue.insert(5549,82608);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(95842, 50543);
    caseQueue.updatePriority(2782, 33486);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(18044)); //37
    caseQueue.updatePriority(62697, 91354);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(87224, 11354);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(29020,46673);
    myResult.push_back(caseQueue.getPriority(44658)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(50038,86439);
    caseQueue.insert(54849,78225);
    myResult.push_back(caseQueue.getPriority(18044)); //42
    myResult.push_back(caseQueue.getPriority(95842)); //43
    caseQueue.insert(21334,59652);
    caseQueue.insert(87291,47146);
    caseQueue.insert(46852,93370);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(37401)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(96258,25033);
    caseQueue.updatePriority(5549, 87515);
    caseQueue.insert(95012,33970);
    caseQueue.insert(97282,85311);
    myResult.push_back(caseQueue.getPriority(26824)); //47
    caseQueue.updatePriority(95012, 10281);
    caseQueue.insert(89868,35043);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(37401, 98532);
    caseQueue.insert(70977,39591);
    caseQueue.insert(15731,56703);
    caseQueue.insert(55415,91525);
    myResult.push_back(caseQueue.getPriority(70977)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(6875,72390);
    caseQueue.insert(18037,38244);
    caseQueue.insert(60714,81184);
    caseQueue.insert(30833,66203);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(7024,45685);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(32406,81455);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(5549)); //54
    myResult.push_back(caseQueue.getPriority(21334)); //55
    caseQueue.updatePriority(22058, 57710);
    caseQueue.updatePriority(91170, 47911);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(46852)); //57
    caseQueue.updatePriority(55415, 71817);
    caseQueue.updatePriority(91170, 10374);
    caseQueue.updatePriority(22058, 55655);
    caseQueue.updatePriority(50038, 42580);
    myResult.push_back(caseQueue.getPriority(26824)); //58
    myResult.push_back(caseQueue.getPriority(37401)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(46852, 99554);
    myResult.push_back(caseQueue.getPriority(62697)); //61
    caseQueue.insert(30393,72410);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(60714)); //63
    caseQueue.insert(44397,21816);
    caseQueue.insert(23402,6246);
    caseQueue.insert(62917,58996);
    caseQueue.insert(8603,39273);
    caseQueue.insert(37387,45366);
    caseQueue.updatePriority(55415, 35464);
    caseQueue.insert(34160,64383);
    caseQueue.updatePriority(21334, 60255);
    myResult.push_back(caseQueue.getPriority(30833)); //64
    caseQueue.updatePriority(5549, 27990);
    caseQueue.insert(98981,26615);
    caseQueue.updatePriority(18044, 449);
    myResult.push_back(caseQueue.getPriority(98981)); //65
    caseQueue.insert(22078,82169);
    caseQueue.updatePriority(60714, 92663);
    myResult.push_back(caseQueue.getPriority(95842)); //66
    caseQueue.insert(85559,59167);
    caseQueue.updatePriority(34160, 69608);
    caseQueue.updatePriority(6875, 87708);
    myResult.push_back(caseQueue.getPriority(30393)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(3016,45268);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(4271,5705);
    myResult.push_back(caseQueue.getPriority(21334)); //72
    caseQueue.insert(34372,73422);
    myResult.push_back(caseQueue.getPriority(22058)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(60714)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(34160, 69080);
    myResult.push_back(caseQueue.getPriority(62697)); //77
    caseQueue.insert(44652,52406);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(77869,37926);
    myResult.push_back(caseQueue.getPriority(46852)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(60091,14708);
    caseQueue.insert(18692,22034);
    caseQueue.insert(3219,92837);
    caseQueue.updatePriority(60091, 94945);
    caseQueue.updatePriority(30393, 20311);
    myResult.push_back(caseQueue.getPriority(8603)); //81
    caseQueue.insert(37641,35887);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(93758,37332);
    caseQueue.insert(32266,71726);
    caseQueue.updatePriority(37641, 82821);
    caseQueue.insert(88469,21941);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(62697)); //85
    myResult.push_back(caseQueue.getPriority(30833)); //86
    caseQueue.insert(20752,28482);
    caseQueue.updatePriority(3016, 90129);
    caseQueue.insert(86170,14578);
    caseQueue.insert(48174,98438);
    myResult.push_back(caseQueue.getPriority(54849)); //87
    caseQueue.insert(71008,2563);
    myResult.push_back(caseQueue.getPriority(20752)); //88
    caseQueue.insert(29993,90190);
    myResult.push_back(caseQueue.getPriority(21334)); //89
    caseQueue.insert(21293,17453);
    myResult.push_back(caseQueue.getPriority(93758)); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.updatePriority(3016, 111);
    caseQueue.updatePriority(44652, 70001);
    caseQueue.insert(30814,47054);
    caseQueue.insert(51536,50964);
    caseQueue.insert(29970,74271);
    caseQueue.insert(97146,97104);
    caseQueue.updatePriority(37641, 59020);
    caseQueue.insert(43260,73267);
    caseQueue.updatePriority(29970, 51676);
    caseQueue.updatePriority(21293, 99091);
    caseQueue.insert(85939,75903);
    caseQueue.updatePriority(29970, 30432);
    myResult.push_back(caseQueue.getPriority(51536)); //92
    caseQueue.insert(94706,57009);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(1660,72254);
    caseQueue.insert(40647,75777);
    myResult.push_back(caseQueue.getPriority(29970)); //94
    caseQueue.insert(216,21472);
    caseQueue.insert(40899,23595);
    myResult.push_back(caseQueue.deleteMin()); //95
    caseQueue.insert(79677,67854);
    caseQueue.insert(12311,28692);
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.getPriority(30814)); //97
    caseQueue.insert(85783,81616);
    static const int resultListArray[] = {-1, 62967, 95019, 95019, 66768, 94456, 31517, 34257, 20162, 94456, 67706, 91141, 63566, 89944, 11399, 10597, 85812, 36814, 62464, 35417, -1, -1, 15663, 4064, 15161, 19293, 30881, 46178, 86251, 61446, 45640, 52776, 48669, 45640, 94868, 72767, 57947, 2782, 87224, 90218, 8438, 57947, 50543, 29020, 61446, 87291, 62114, 95012, 39591, 96258, 89868, 18037, 70977, 87515, 59652, 7024, 93370, 62114, 98532, 91170, 91354, 50038, 81184, 66203, 26615, 50543, 72410, 18044, 23402, 44397, 98981, 60255, 55655, 4271, 92663, 5549, 91354, 55415, 99554, 77869, 39273, 30393, 88469, 18692, 91354, 66203, 78225, 28482, 60255, 37332, 71008, 50964, 3016, 30432, 86170, 216, 47054}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(69): Basarili" << endl;
    else cout << "Case(69): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_70(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 154);

    vector<int> myResult; 
    caseQueue.insert(36345,10845);
    caseQueue.updatePriority(36345, 6489);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(706)); //4
    caseQueue.updatePriority(35385, 22848);
    caseQueue.insert(34668,23633);
    caseQueue.insert(33252,69147);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(33252, 76945);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(51107, 7909);
    caseQueue.updatePriority(81116, 95061);
    myResult.push_back(caseQueue.getPriority(76731)); //7
    caseQueue.insert(94694,91494);
    myResult.push_back(caseQueue.getPriority(94694)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(42825, 58670);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(81672)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(83805,32312);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(80489,58506);
    myResult.push_back(caseQueue.getPriority(80489)); //14
    caseQueue.updatePriority(80489, 85807);
    caseQueue.updatePriority(80489, 15475);
    caseQueue.insert(40407,31504);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(31417,77579);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(31417)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(5849, 41666);
    caseQueue.insert(47661,95345);
    caseQueue.insert(40841,68558);
    caseQueue.updatePriority(47661, 50735);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(26820,5905);
    caseQueue.insert(92297,26875);
    caseQueue.insert(56397,92013);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(40841)); //21
    caseQueue.updatePriority(40841, 98971);
    caseQueue.insert(91700,87405);
    myResult.push_back(caseQueue.getPriority(92297)); //22
    caseQueue.insert(92782,73151);
    caseQueue.insert(73486,85119);
    caseQueue.insert(5832,60728);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(9078,89589);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(37133,42764);
    caseQueue.insert(35754,16961);
    caseQueue.insert(33445,94271);
    caseQueue.insert(48392,18686);
    caseQueue.updatePriority(37133, 39772);
    caseQueue.insert(54225,93954);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(33445, 22917);
    myResult.push_back(caseQueue.getPriority(54225)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(56397)); //31
    caseQueue.insert(69379,44899);
    caseQueue.updatePriority(9078, 28084);
    caseQueue.updatePriority(56397, 65551);
    caseQueue.insert(76135,67868);
    caseQueue.insert(78740,65276);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(76135, 69736);
    caseQueue.updatePriority(9078, 74420);
    caseQueue.insert(49022,53471);
    caseQueue.insert(87573,69767);
    caseQueue.insert(76184,13768);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(9078)); //34
    caseQueue.insert(11455,58669);
    caseQueue.insert(20441,51954);
    caseQueue.insert(34756,44832);
    caseQueue.insert(30017,16677);
    caseQueue.insert(59416,18737);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(84257,26841);
    myResult.push_back(caseQueue.getPriority(54225)); //36
    myResult.push_back(caseQueue.getPriority(78740)); //37
    caseQueue.insert(13102,24960);
    caseQueue.updatePriority(37133, 35964);
    caseQueue.insert(14637,94936);
    caseQueue.updatePriority(69379, 44959);
    caseQueue.insert(81670,57279);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(53669,81841);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(87573, 78363);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(29843,26453);
    myResult.push_back(caseQueue.getPriority(81670)); //42
    caseQueue.insert(27066,64331);
    caseQueue.insert(91438,62599);
    myResult.push_back(caseQueue.getPriority(76135)); //43
    myResult.push_back(caseQueue.getPriority(14637)); //44
    caseQueue.insert(39101,47767);
    caseQueue.insert(15307,95058);
    caseQueue.insert(32555,54248);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(11455, 10344);
    caseQueue.updatePriority(34756, 42552);
    caseQueue.updatePriority(91438, 50206);
    caseQueue.insert(96937,67766);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(81670, 38847);
    myResult.push_back(caseQueue.getPriority(39101)); //47
    myResult.push_back(caseQueue.getPriority(32555)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(34756)); //50
    caseQueue.insert(56944,81531);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(9078)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(32555)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(60040,14404);
    myResult.push_back(caseQueue.getPriority(32555)); //57
    caseQueue.insert(96081,50423);
    caseQueue.insert(95327,47473);
    caseQueue.insert(1227,92661);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(1227, 8063);
    caseQueue.insert(11006,81494);
    caseQueue.updatePriority(96081, 24209);
    caseQueue.insert(4792,62824);
    myResult.push_back(caseQueue.getPriority(96937)); //59
    caseQueue.insert(56744,23791);
    myResult.push_back(caseQueue.getPriority(15307)); //60
    caseQueue.updatePriority(96937, 84262);
    caseQueue.insert(30068,54093);
    myResult.push_back(caseQueue.getPriority(49022)); //61
    caseQueue.insert(70916,54471);
    caseQueue.updatePriority(54225, 58781);
    myResult.push_back(caseQueue.getPriority(27066)); //62
    caseQueue.insert(45838,84774);
    caseQueue.updatePriority(40841, 34720);
    myResult.push_back(caseQueue.getPriority(45838)); //63
    myResult.push_back(caseQueue.getPriority(70916)); //64
    caseQueue.insert(97746,79136);
    myResult.push_back(caseQueue.getPriority(87573)); //65
    caseQueue.updatePriority(87573, 79008);
    caseQueue.insert(4916,6438);
    static const int resultListArray[] = {36345, -1, -1, -1, 34668, 33252, -1, 91494, 94694, -1, -1, -1, 83805, 58506, 80489, 40407, 77579, 31417, 47661, 26820, 68558, 26875, 92297, 5832, 92782, 73486, 91700, 35754, 93954, 48392, 92013, 33445, 76184, 74420, 30017, 93954, 65276, 59416, 13102, 84257, 37133, 57279, 69736, 94936, 29843, 11455, 47767, 54248, 81670, 42552, 34756, 74420, 69379, 54248, 39101, 91438, 54248, 60040, 67766, 95058, 53471, 64331, 84774, 54471, 78363}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(70): Basarili" << endl;
    else cout << "Case(70): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_71(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 129);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(10605)); //1
    caseQueue.insert(38237,70545);
    caseQueue.updatePriority(38237, 55102);
    myResult.push_back(caseQueue.getPriority(38237)); //2
    caseQueue.insert(17029,91100);
    caseQueue.insert(52612,84607);
    caseQueue.updatePriority(52612, 90579);
    caseQueue.insert(19078,7773);
    caseQueue.insert(21771,59333);
    caseQueue.updatePriority(38237, 17325);
    caseQueue.insert(41066,16689);
    caseQueue.insert(14587,40863);
    caseQueue.insert(82459,33198);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(91189,11595);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(14844,85970);
    caseQueue.insert(14148,38777);
    caseQueue.insert(4080,44202);
    caseQueue.insert(54206,99504);
    caseQueue.insert(70877,81029);
    caseQueue.insert(61466,44966);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(14587, 22104);
    caseQueue.insert(43580,1107);
    caseQueue.insert(7738,32450);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(52612, 26958);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(7738, 52101);
    caseQueue.updatePriority(70877, 6336);
    caseQueue.insert(48073,623);
    caseQueue.insert(71922,5242);
    caseQueue.updatePriority(54206, 63625);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(61191,18510);
    myResult.push_back(caseQueue.getPriority(70877)); //12
    caseQueue.insert(44687,79830);
    caseQueue.insert(67465,38473);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(44687, 41829);
    caseQueue.insert(37676,82723);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(90643,55664);
    myResult.push_back(caseQueue.getPriority(14844)); //15
    caseQueue.insert(16283,34062);
    caseQueue.updatePriority(37676, 11602);
    caseQueue.updatePriority(37676, 28694);
    caseQueue.insert(52444,77449);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(37676)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(62365,56691);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(54720,25975);
    caseQueue.insert(55045,54805);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(83791,85960);
    myResult.push_back(caseQueue.getPriority(7738)); //22
    myResult.push_back(caseQueue.getPriority(90643)); //23
    caseQueue.insert(2187,75877);
    myResult.push_back(caseQueue.getPriority(90643)); //24
    caseQueue.insert(72520,54551);
    caseQueue.updatePriority(4080, 10170);
    caseQueue.insert(77882,25373);
    caseQueue.insert(8556,87129);
    myResult.push_back(caseQueue.getPriority(7738)); //25
    caseQueue.insert(22346,97853);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(8556, 34575);
    caseQueue.updatePriority(52444, 82979);
    caseQueue.updatePriority(61466, 36942);
    caseQueue.updatePriority(54206, 82897);
    caseQueue.updatePriority(90643, 49472);
    caseQueue.insert(45028,30119);
    caseQueue.insert(12238,53295);
    caseQueue.insert(40552,61713);
    caseQueue.insert(67336,81035);
    myResult.push_back(caseQueue.getPriority(7738)); //28
    caseQueue.insert(6504,27518);
    caseQueue.insert(24431,24127);
    caseQueue.updatePriority(45028, 16079);
    caseQueue.insert(25380,54827);
    caseQueue.updatePriority(55045, 37589);
    caseQueue.updatePriority(61466, 92922);
    caseQueue.insert(25359,23826);
    caseQueue.insert(16490,96414);
    caseQueue.insert(44920,90257);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(21371,64929);
    caseQueue.insert(95026,32978);
    caseQueue.insert(31335,28892);
    caseQueue.insert(81619,46321);
    caseQueue.insert(11755,3981);
    caseQueue.updatePriority(16490, 44396);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(21771, 63984);
    myResult.push_back(caseQueue.getPriority(25359)); //31
    myResult.push_back(caseQueue.getPriority(54206)); //32
    caseQueue.insert(14959,66765);
    caseQueue.updatePriority(21371, 29767);
    caseQueue.updatePriority(62365, 61218);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(49800,50077);
    myResult.push_back(caseQueue.getPriority(24431)); //34
    caseQueue.insert(6902,28126);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(25239,26733);
    caseQueue.insert(37,8017);
    caseQueue.updatePriority(14148, 79418);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(67596,82944);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(52444)); //38
    caseQueue.insert(52212,72212);
    caseQueue.updatePriority(81619, 66211);
    caseQueue.updatePriority(83791, 6566);
    caseQueue.updatePriority(44920, 97148);
    myResult.push_back(caseQueue.getPriority(7738)); //39
    caseQueue.insert(10822,79089);
    myResult.push_back(caseQueue.getPriority(67596)); //40
    caseQueue.updatePriority(6902, 36701);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    static const int resultListArray[] = {-1, 55102, 19078, 91189, 41066, 38237, 82459, 43580, 14587, 52612, 48073, 6336, 71922, 70877, 85970, 61191, 28694, 37676, 16283, 67465, 54720, 52101, 55664, 55664, 52101, 4080, 77882, 52101, 45028, 11755, 23826, 82897, 25359, 24127, 24431, 37, 25239, 82979, 52101, 82944, 83791, 6504}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(71): Basarili" << endl;
    else cout << "Case(71): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_72(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 117);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(70396)); //1
    caseQueue.insert(96745,55530);
    myResult.push_back(caseQueue.getPriority(96745)); //2
    myResult.push_back(caseQueue.getPriority(96745)); //3
    myResult.push_back(caseQueue.getPriority(96745)); //4
    caseQueue.updatePriority(96745, 63153);
    myResult.push_back(caseQueue.getPriority(96745)); //5
    caseQueue.insert(55553,98702);
    caseQueue.insert(53729,57723);
    caseQueue.insert(26111,23450);
    caseQueue.insert(89723,44853);
    myResult.push_back(caseQueue.getPriority(55553)); //6
    caseQueue.insert(95237,97487);
    caseQueue.updatePriority(26111, 14091);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(55553)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(55553)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(55553)); //14
    caseQueue.updatePriority(55553, 35903);
    myResult.push_back(caseQueue.getPriority(55553)); //15
    caseQueue.insert(21285,77397);
    caseQueue.insert(11711,73643);
    caseQueue.insert(94462,70210);
    caseQueue.insert(32763,90792);
    myResult.push_back(caseQueue.getPriority(21285)); //16
    caseQueue.insert(19666,19730);
    caseQueue.insert(27527,28904);
    caseQueue.updatePriority(94462, 78657);
    caseQueue.updatePriority(94462, 18835);
    caseQueue.insert(73931,93327);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(95330,71890);
    caseQueue.updatePriority(95330, 72159);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(35909,82851);
    caseQueue.insert(15554,14492);
    caseQueue.insert(33675,37047);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(97963,7514);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(74201,57359);
    caseQueue.updatePriority(33675, 17715);
    caseQueue.updatePriority(73931, 28023);
    caseQueue.insert(29777,70770);
    caseQueue.insert(72801,47815);
    caseQueue.insert(16147,48643);
    caseQueue.insert(31470,63742);
    caseQueue.updatePriority(74201, 1121);
    caseQueue.insert(43262,31841);
    caseQueue.insert(80331,10675);
    caseQueue.updatePriority(16147, 27967);
    myResult.push_back(caseQueue.getPriority(73931)); //22
    caseQueue.insert(44509,88543);
    caseQueue.updatePriority(55553, 93113);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(35909, 12717);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(72801)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(15473,67355);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(16147)); //28
    myResult.push_back(caseQueue.getPriority(21285)); //29
    caseQueue.updatePriority(31470, 85996);
    caseQueue.insert(85609,76999);
    caseQueue.updatePriority(15473, 3755);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(43262)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(31470)); //35
    myResult.push_back(caseQueue.getPriority(32763)); //36
    caseQueue.updatePriority(29777, 89159);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(44509, 65656);
    myResult.push_back(caseQueue.getPriority(44509)); //38
    caseQueue.insert(75273,16465);
    caseQueue.insert(20492,465);
    myResult.push_back(caseQueue.getPriority(44509)); //39
    caseQueue.insert(36052,39792);
    caseQueue.insert(50367,51939);
    caseQueue.insert(27045,67819);
    caseQueue.insert(66843,50122);
    caseQueue.insert(42484,86193);
    caseQueue.insert(74524,62615);
    caseQueue.insert(76936,93345);
    caseQueue.insert(97156,27411);
    caseQueue.updatePriority(42484, 41931);
    caseQueue.insert(62663,31271);
    myResult.push_back(caseQueue.getPriority(11711)); //40
    myResult.push_back(caseQueue.getPriority(27045)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(11711)); //43
    myResult.push_back(caseQueue.getPriority(11711)); //44
    caseQueue.insert(94173,72174);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(94173, 69562);
    myResult.push_back(caseQueue.getPriority(32763)); //48
    caseQueue.insert(52742,53453);
    caseQueue.updatePriority(52742, 97651);
    caseQueue.insert(24491,28225);
    myResult.push_back(caseQueue.getPriority(52742)); //49
    caseQueue.insert(65645,37993);
    myResult.push_back(caseQueue.getPriority(44509)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(36052)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(11711, 47604);
    myResult.push_back(caseQueue.deleteMin()); //54
    static const int resultListArray[] = {-1, 55530, 55530, 55530, 63153, 98702, 26111, 98702, 89723, 53729, 98702, 96745, 95237, 98702, 35903, 77397, 94462, 19666, 27527, 15554, 97963, 28023, 74201, 80331, 47815, 35909, 33675, 27967, 77397, 15473, 16147, 31841, 73931, 43262, 85996, 90792, 72801, 65656, 65656, 73643, 67819, 20492, 73643, 73643, 75273, 97156, 62663, 90792, 97651, 65656, 24491, 39792, 65645, 36052}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(72): Basarili" << endl;
    else cout << "Case(72): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_73(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 187);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(1039)); //1
    caseQueue.updatePriority(8172, 40887);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(82432,80182);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(35087,42294);
    myResult.push_back(caseQueue.getPriority(35087)); //5
    caseQueue.insert(89791,47567);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(23610,35614);
    caseQueue.insert(8367,83745);
    caseQueue.insert(39136,16879);
    caseQueue.insert(5211,90710);
    myResult.push_back(caseQueue.getPriority(5211)); //7
    caseQueue.insert(76564,2107);
    myResult.push_back(caseQueue.getPriority(39136)); //8
    myResult.push_back(caseQueue.getPriority(89791)); //9
    caseQueue.insert(4207,60798);
    caseQueue.updatePriority(23610, 55491);
    caseQueue.insert(25587,22602);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(89791, 97303);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(89791)); //14
    caseQueue.insert(56437,19438);
    caseQueue.insert(57777,26398);
    caseQueue.updatePriority(89791, 98398);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(5211)); //17
    caseQueue.insert(92516,94396);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(8367, 78451);
    caseQueue.insert(36548,86941);
    caseQueue.updatePriority(8367, 10278);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(5211, 91549);
    caseQueue.insert(87329,38579);
    caseQueue.insert(50945,7544);
    myResult.push_back(caseQueue.getPriority(5211)); //20
    caseQueue.updatePriority(36548, 25206);
    caseQueue.insert(27249,21463);
    myResult.push_back(caseQueue.getPriority(89791)); //21
    myResult.push_back(caseQueue.getPriority(50945)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(5211, 57023);
    caseQueue.insert(34500,52496);
    caseQueue.insert(19346,71374);
    caseQueue.updatePriority(34500, 54641);
    caseQueue.insert(17476,50859);
    caseQueue.insert(34094,45351);
    caseQueue.updatePriority(34094, 29609);
    caseQueue.updatePriority(87329, 49123);
    caseQueue.updatePriority(34500, 3787);
    caseQueue.insert(44616,83169);
    caseQueue.updatePriority(19346, 82853);
    myResult.push_back(caseQueue.getPriority(5211)); //25
    caseQueue.updatePriority(5211, 83618);
    myResult.push_back(caseQueue.getPriority(17476)); //26
    myResult.push_back(caseQueue.getPriority(92516)); //27
    myResult.push_back(caseQueue.getPriority(34094)); //28
    caseQueue.insert(82349,94973);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(16424,41531);
    caseQueue.insert(91364,39537);
    caseQueue.insert(5288,28671);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(19346)); //33
    caseQueue.updatePriority(89791, 97029);
    caseQueue.insert(63576,53827);
    caseQueue.insert(44935,44490);
    caseQueue.insert(43801,24676);
    caseQueue.updatePriority(92516, 3625);
    caseQueue.updatePriority(89791, 34524);
    caseQueue.insert(56592,6151);
    caseQueue.updatePriority(82349, 71740);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(25440,65616);
    caseQueue.updatePriority(19346, 26039);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(63576, 73186);
    caseQueue.insert(52749,98897);
    caseQueue.insert(80621,82350);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(82349)); //37
    caseQueue.updatePriority(44935, 75905);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(52749, 60033);
    myResult.push_back(caseQueue.getPriority(63576)); //39
    caseQueue.updatePriority(44935, 19210);
    caseQueue.insert(88724,76611);
    myResult.push_back(caseQueue.getPriority(17476)); //40
    myResult.push_back(caseQueue.getPriority(17476)); //41
    caseQueue.insert(61383,34734);
    myResult.push_back(caseQueue.getPriority(87329)); //42
    myResult.push_back(caseQueue.getPriority(80621)); //43
    myResult.push_back(caseQueue.getPriority(89791)); //44
    caseQueue.updatePriority(25440, 72850);
    caseQueue.insert(10920,52057);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(45,5065);
    caseQueue.insert(57749,16046);
    caseQueue.insert(41844,25596);
    myResult.push_back(caseQueue.getPriority(87329)); //47
    caseQueue.insert(6825,8014);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(57749, 49457);
    caseQueue.insert(99404,75177);
    myResult.push_back(caseQueue.getPriority(87329)); //50
    myResult.push_back(caseQueue.getPriority(44616)); //51
    caseQueue.updatePriority(5211, 17201);
    caseQueue.insert(49455,72626);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(46323,31771);
    caseQueue.insert(51482,62317);
    caseQueue.insert(74305,42498);
    myResult.push_back(caseQueue.getPriority(44616)); //54
    myResult.push_back(caseQueue.getPriority(25440)); //55
    caseQueue.insert(78242,25870);
    myResult.push_back(caseQueue.getPriority(44616)); //56
    myResult.push_back(caseQueue.getPriority(16424)); //57
    caseQueue.insert(42680,27307);
    caseQueue.insert(58270,43694);
    caseQueue.insert(66486,911);
    caseQueue.insert(19876,99611);
    caseQueue.insert(20572,22158);
    caseQueue.insert(38917,74788);
    caseQueue.insert(25699,4385);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(91364, 28431);
    caseQueue.insert(8690,86955);
    caseQueue.insert(1739,53315);
    caseQueue.insert(66791,57328);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(66791)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(74670,20088);
    myResult.push_back(caseQueue.getPriority(51482)); //62
    caseQueue.insert(3902,7511);
    caseQueue.updatePriority(42680, 87750);
    myResult.push_back(caseQueue.getPriority(17476)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(20463,56752);
    myResult.push_back(caseQueue.getPriority(52749)); //65
    caseQueue.insert(14272,95286);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(64952,79640);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(63576)); //68
    caseQueue.updatePriority(25440, 31138);
    myResult.push_back(caseQueue.getPriority(19876)); //69
    caseQueue.insert(86519,69704);
    myResult.push_back(caseQueue.getPriority(64952)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(88724)); //72
    caseQueue.updatePriority(57749, 32522);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(1340,22461);
    caseQueue.updatePriority(88724, 17180);
    caseQueue.insert(75006,94116);
    caseQueue.updatePriority(14272, 30441);
    caseQueue.insert(72726,24441);
    caseQueue.insert(98071,95702);
    caseQueue.updatePriority(46323, 16369);
    caseQueue.updatePriority(87329, 95720);
    caseQueue.insert(93455,14592);
    caseQueue.insert(10598,98797);
    caseQueue.insert(56326,43456);
    caseQueue.updatePriority(38917, 21601);
    caseQueue.insert(34536,92413);
    myResult.push_back(caseQueue.getPriority(51482)); //74
    myResult.push_back(caseQueue.getPriority(87329)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(66791)); //79
    caseQueue.insert(95308,70965);
    caseQueue.insert(66775,12563);
    static const int resultListArray[] = {-1, -1, -1, 82432, 42294, 35087, 90710, 16879, 47567, 76564, 39136, 25587, 23610, 97303, 56437, 57777, 90710, 4207, 8367, 91549, 98398, 7544, 50945, 27249, 57023, 50859, 94396, 29609, 34500, 36548, 5288, 34094, 82853, 92516, 56592, 43801, 71740, 19346, 73186, 50859, 50859, 49123, 82350, 34524, 44935, 89791, 49123, 45, 6825, 49123, 83169, 5211, 41844, 83169, 72850, 83169, 41531, 66486, 25699, 57328, 20572, 62317, 50859, 3902, 60033, 74670, 78242, 73186, 99611, 79640, 91364, 76611, 25440, 62317, 95720, 93455, 46323, 88724, 57328}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(73): Basarili" << endl;
    else cout << "Case(73): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_74(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 131);

    vector<int> myResult; 
    caseQueue.insert(31408,72635);
    caseQueue.updatePriority(31408, 34519);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(33713,85551);
    caseQueue.insert(87694,33772);
    myResult.push_back(caseQueue.getPriority(33713)); //3
    caseQueue.insert(97831,61848);
    caseQueue.updatePriority(87694, 99945);
    caseQueue.insert(43259,85009);
    caseQueue.insert(45327,42729);
    caseQueue.insert(6247,39622);
    caseQueue.updatePriority(33713, 35341);
    caseQueue.insert(75923,22578);
    caseQueue.insert(72833,10632);
    caseQueue.insert(44280,74353);
    caseQueue.insert(423,76855);
    caseQueue.insert(79118,59369);
    myResult.push_back(caseQueue.getPriority(44280)); //4
    myResult.push_back(caseQueue.getPriority(33713)); //5
    myResult.push_back(caseQueue.getPriority(87694)); //6
    caseQueue.insert(32386,30366);
    caseQueue.insert(89612,19215);
    caseQueue.insert(984,41568);
    myResult.push_back(caseQueue.getPriority(89612)); //7
    myResult.push_back(caseQueue.getPriority(6247)); //8
    caseQueue.insert(50546,63909);
    myResult.push_back(caseQueue.getPriority(43259)); //9
    caseQueue.insert(77570,6558);
    caseQueue.insert(58615,67553);
    myResult.push_back(caseQueue.getPriority(32386)); //10
    myResult.push_back(caseQueue.getPriority(87694)); //11
    caseQueue.insert(59946,45866);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(72833)); //13
    caseQueue.insert(78337,46281);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(77793,61608);
    caseQueue.insert(73834,33339);
    caseQueue.insert(56448,17144);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(25117,84501);
    caseQueue.updatePriority(79118, 88010);
    caseQueue.updatePriority(97831, 45460);
    caseQueue.insert(6848,78162);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(33713, 25191);
    caseQueue.insert(36882,62631);
    caseQueue.insert(6574,98920);
    caseQueue.updatePriority(43259, 89975);
    caseQueue.insert(82048,44467);
    caseQueue.updatePriority(423, 36949);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(44280, 83614);
    caseQueue.insert(4687,6510);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(90551,95960);
    myResult.push_back(caseQueue.getPriority(87694)); //22
    caseQueue.insert(9136,29211);
    myResult.push_back(caseQueue.getPriority(79118)); //23
    caseQueue.insert(45147,74938);
    caseQueue.insert(91699,86004);
    caseQueue.updatePriority(45327, 38467);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(25117)); //25
    myResult.push_back(caseQueue.getPriority(90551)); //26
    caseQueue.insert(69801,7527);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(90551, 15418);
    myResult.push_back(caseQueue.getPriority(59946)); //29
    myResult.push_back(caseQueue.getPriority(6247)); //30
    myResult.push_back(caseQueue.getPriority(59946)); //31
    caseQueue.updatePriority(91699, 2897);
    caseQueue.insert(2531,98275);
    caseQueue.updatePriority(45327, 14007);
    caseQueue.updatePriority(78337, 44990);
    caseQueue.updatePriority(90551, 76268);
    caseQueue.updatePriority(90551, 79131);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(82048, 82143);
    myResult.push_back(caseQueue.getPriority(6848)); //33
    caseQueue.insert(25399,4361);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(43259)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(50546, 58097);
    caseQueue.insert(257,11131);
    caseQueue.updatePriority(25117, 29085);
    caseQueue.insert(53845,59862);
    caseQueue.updatePriority(77793, 52079);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(36882, 97139);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(54055,97910);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(87761,74127);
    caseQueue.updatePriority(44280, 48816);
    caseQueue.updatePriority(43259, 80167);
    caseQueue.updatePriority(78337, 63218);
    myResult.push_back(caseQueue.getPriority(45147)); //41
    caseQueue.updatePriority(97831, 35982);
    caseQueue.updatePriority(59946, 77323);
    caseQueue.insert(94245,6875);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(5979,80277);
    caseQueue.insert(69882,54667);
    caseQueue.insert(91853,42415);
    caseQueue.updatePriority(82048, 87067);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(76941,86501);
    myResult.push_back(caseQueue.getPriority(58615)); //45
    caseQueue.insert(66909,55572);
    caseQueue.insert(54545,19255);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(63703,45309);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(35702,55633);
    caseQueue.insert(3904,51998);
    caseQueue.updatePriority(45147, 14561);
    caseQueue.updatePriority(45147, 14797);
    caseQueue.insert(5907,49515);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(5058,20256);
    caseQueue.insert(27535,88835);
    myResult.push_back(caseQueue.getPriority(87694)); //49
    static const int resultListArray[] = {31408, -1, 85551, 74353, 35341, 99945, 19215, 39622, 85009, 30366, 99945, 77570, 10632, 72833, 89612, 56448, 75923, 33713, 32386, 73834, 4687, 99945, 88010, 9136, 84501, 95960, 69801, 423, 45866, 39622, 45866, 91699, 78162, 25399, 45327, 89975, 6247, 257, 25117, 984, 74938, 94245, 97831, 91853, 67553, 54545, 63703, 45147, 99945}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(74): Basarili" << endl;
    else cout << "Case(74): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_75(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 167);

    vector<int> myResult; 
    caseQueue.insert(47890,19668);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(77071,19850);
    caseQueue.insert(13780,7854);
    myResult.push_back(caseQueue.getPriority(77071)); //2
    caseQueue.updatePriority(13780, 46096);
    caseQueue.insert(98985,58343);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(98985)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(24528)); //7
    myResult.push_back(caseQueue.getPriority(3312)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(86970, 97437);
    caseQueue.insert(86888,35534);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(99982,51007);
    caseQueue.updatePriority(99982, 31311);
    caseQueue.updatePriority(99982, 28828);
    caseQueue.insert(42497,76074);
    myResult.push_back(caseQueue.getPriority(99982)); //11
    caseQueue.updatePriority(42497, 88712);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(73006, 84508);
    caseQueue.insert(17914,80973);
    caseQueue.insert(1360,90836);
    caseQueue.insert(25378,89540);
    myResult.push_back(caseQueue.getPriority(17914)); //14
    caseQueue.updatePriority(25378, 65083);
    caseQueue.insert(19432,15128);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(25378, 48880);
    caseQueue.insert(25581,13424);
    caseQueue.updatePriority(25378, 64110);
    caseQueue.insert(21146,37361);
    caseQueue.updatePriority(1360, 59147);
    myResult.push_back(caseQueue.getPriority(17914)); //16
    caseQueue.updatePriority(1360, 27123);
    caseQueue.insert(28618,34189);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(28618)); //18
    myResult.push_back(caseQueue.getPriority(25378)); //19
    myResult.push_back(caseQueue.getPriority(1360)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(21146)); //22
    caseQueue.insert(84988,90370);
    caseQueue.insert(3513,46697);
    caseQueue.insert(71175,14626);
    myResult.push_back(caseQueue.getPriority(21146)); //23
    caseQueue.insert(44770,29702);
    caseQueue.insert(73171,45176);
    caseQueue.updatePriority(73171, 42375);
    caseQueue.insert(87378,75310);
    myResult.push_back(caseQueue.getPriority(17914)); //24
    caseQueue.insert(65473,51526);
    caseQueue.insert(24956,89688);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(73171, 12662);
    myResult.push_back(caseQueue.getPriority(28618)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(24956, 6683);
    caseQueue.insert(18226,65713);
    myResult.push_back(caseQueue.getPriority(87378)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(61429,8746);
    myResult.push_back(caseQueue.getPriority(84988)); //30
    caseQueue.insert(50760,70483);
    myResult.push_back(caseQueue.getPriority(65473)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(72597,85143);
    caseQueue.updatePriority(3513, 37508);
    caseQueue.insert(51217,2905);
    myResult.push_back(caseQueue.getPriority(51217)); //33
    caseQueue.updatePriority(72597, 60904);
    caseQueue.insert(47310,81400);
    caseQueue.updatePriority(65473, 18470);
    myResult.push_back(caseQueue.getPriority(84988)); //34
    caseQueue.insert(34484,83271);
    myResult.push_back(caseQueue.getPriority(21146)); //35
    caseQueue.insert(97164,43776);
    caseQueue.insert(20445,52384);
    caseQueue.updatePriority(18226, 26859);
    caseQueue.updatePriority(21146, 93973);
    caseQueue.updatePriority(97164, 74247);
    caseQueue.insert(57040,89815);
    myResult.push_back(caseQueue.getPriority(18226)); //36
    caseQueue.insert(99469,27238);
    caseQueue.insert(7242,90204);
    caseQueue.updatePriority(47310, 5001);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(25378)); //38
    caseQueue.insert(65828,51816);
    caseQueue.insert(88815,35281);
    myResult.push_back(caseQueue.getPriority(18226)); //39
    caseQueue.insert(71490,33759);
    myResult.push_back(caseQueue.getPriority(28618)); //40
    caseQueue.updatePriority(18226, 48644);
    caseQueue.updatePriority(28618, 68928);
    myResult.push_back(caseQueue.getPriority(7242)); //41
    caseQueue.updatePriority(57040, 90634);
    caseQueue.updatePriority(72597, 61035);
    caseQueue.insert(10039,39259);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(25378)); //44
    caseQueue.insert(4742,60557);
    myResult.push_back(caseQueue.getPriority(10039)); //45
    caseQueue.insert(90428,90658);
    caseQueue.insert(47745,94072);
    caseQueue.insert(21683,24613);
    caseQueue.insert(61382,11581);
    caseQueue.insert(82254,62881);
    myResult.push_back(caseQueue.getPriority(88815)); //46
    caseQueue.insert(89562,79631);
    caseQueue.insert(14306,84430);
    caseQueue.insert(85285,80702);
    myResult.push_back(caseQueue.getPriority(21683)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(72597)); //49
    caseQueue.updatePriority(71490, 95925);
    caseQueue.insert(11815,69746);
    caseQueue.insert(83285,40763);
    caseQueue.updatePriority(21146, 92591);
    caseQueue.insert(50736,42372);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(90428)); //51
    caseQueue.insert(22894,26758);
    caseQueue.insert(76712,97180);
    caseQueue.updatePriority(88815, 21374);
    caseQueue.insert(60218,13907);
    caseQueue.insert(10049,74460);
    myResult.push_back(caseQueue.getPriority(44770)); //52
    caseQueue.insert(44018,46396);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(25378)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(4242,14486);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(90428, 92668);
    caseQueue.insert(47191,15841);
    caseQueue.insert(77586,89451);
    caseQueue.insert(78501,22126);
    caseQueue.updatePriority(14306, 33711);
    caseQueue.insert(71298,17143);
    caseQueue.insert(38532,1659);
    caseQueue.insert(22474,64863);
    caseQueue.insert(76189,25688);
    caseQueue.updatePriority(10049, 59621);
    caseQueue.updatePriority(4742, 16100);
    caseQueue.insert(50686,44170);
    caseQueue.updatePriority(25378, 14145);
    caseQueue.insert(74264,93197);
    caseQueue.insert(62647,35335);
    myResult.push_back(caseQueue.getPriority(78501)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(47191)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(18226, 5306);
    caseQueue.insert(63557,73920);
    caseQueue.updatePriority(84988, 24960);
    caseQueue.insert(64951,9598);
    caseQueue.insert(40922,28292);
    caseQueue.insert(27781,50972);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(13138,11376);
    static const int resultListArray[] = {47890, 19850, 77071, 58343, 13780, 98985, -1, -1, -1, 86888, 28828, 99982, 42497, 80973, 19432, 80973, 25581, 34189, 64110, 27123, 1360, 37361, 37361, 80973, 71175, 34189, 73171, 75310, 24956, 90370, 51526, 61429, 2905, 90370, 37361, 26859, 51217, 64110, 26859, 34189, 90204, 47310, 65473, 64110, 39259, 35281, 24613, 61382, 61035, 21683, 90658, 29702, 60218, 64110, 88815, 4242, 22126, 38532, 15841, 25378, 18226}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(75): Basarili" << endl;
    else cout << "Case(75): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_76(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 124);

    vector<int> myResult; 
    caseQueue.insert(59437,18717);
    caseQueue.insert(39740,37426);
    myResult.push_back(caseQueue.getPriority(59437)); //1
    caseQueue.insert(84928,2073);
    myResult.push_back(caseQueue.getPriority(84928)); //2
    caseQueue.insert(33806,83608);
    caseQueue.insert(51997,16147);
    myResult.push_back(caseQueue.getPriority(33806)); //3
    caseQueue.insert(87800,54619);
    caseQueue.updatePriority(39740, 39028);
    myResult.push_back(caseQueue.getPriority(39740)); //4
    myResult.push_back(caseQueue.getPriority(51997)); //5
    caseQueue.insert(6617,17201);
    caseQueue.updatePriority(87800, 48537);
    caseQueue.updatePriority(33806, 75439);
    caseQueue.insert(7554,29569);
    caseQueue.updatePriority(84928, 35417);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(49596,81657);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(14895,55362);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(33806, 71071);
    caseQueue.updatePriority(49596, 71381);
    caseQueue.updatePriority(33806, 18361);
    caseQueue.insert(74030,66081);
    caseQueue.updatePriority(39740, 57680);
    caseQueue.insert(13514,65641);
    caseQueue.insert(72533,47327);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(83943,26984);
    caseQueue.insert(26135,45331);
    caseQueue.updatePriority(49596, 28700);
    caseQueue.insert(39619,88931);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(25230,73859);
    caseQueue.updatePriority(14895, 26747);
    myResult.push_back(caseQueue.getPriority(13514)); //13
    caseQueue.insert(87062,47514);
    myResult.push_back(caseQueue.getPriority(87062)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(89741,13998);
    myResult.push_back(caseQueue.getPriority(72533)); //17
    caseQueue.updatePriority(72533, 28157);
    caseQueue.insert(90587,36272);
    myResult.push_back(caseQueue.getPriority(26135)); //18
    caseQueue.insert(56569,70965);
    caseQueue.insert(95417,31249);
    caseQueue.insert(62084,21249);
    caseQueue.updatePriority(56569, 24649);
    myResult.push_back(caseQueue.getPriority(72533)); //19
    caseQueue.insert(65351,14904);
    caseQueue.updatePriority(87800, 31399);
    caseQueue.updatePriority(95417, 30811);
    myResult.push_back(caseQueue.getPriority(62084)); //20
    caseQueue.insert(99530,36098);
    caseQueue.insert(97515,90224);
    caseQueue.updatePriority(97515, 31890);
    caseQueue.updatePriority(90587, 12179);
    caseQueue.insert(22694,70234);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(72533)); //22
    caseQueue.insert(77876,64131);
    caseQueue.insert(79017,57795);
    caseQueue.insert(36519,42857);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(39835,14410);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(37126,70993);
    caseQueue.insert(15504,92897);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(13514)); //27
    caseQueue.updatePriority(87800, 42318);
    caseQueue.updatePriority(95417, 34335);
    caseQueue.insert(70934,55700);
    myResult.push_back(caseQueue.getPriority(74030)); //28
    caseQueue.insert(3007,22415);
    caseQueue.insert(59198,1118);
    caseQueue.insert(65127,24130);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(70934)); //30
    myResult.push_back(caseQueue.getPriority(56569)); //31
    caseQueue.insert(6577,60705);
    caseQueue.insert(20378,94814);
    myResult.push_back(caseQueue.getPriority(56569)); //32
    caseQueue.insert(71878,30224);
    caseQueue.insert(21712,45619);
    caseQueue.insert(71916,94148);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(72533)); //34
    caseQueue.insert(27299,22917);
    myResult.push_back(caseQueue.getPriority(25230)); //35
    myResult.push_back(caseQueue.getPriority(22694)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(25230, 86658);
    caseQueue.updatePriority(72533, 45829);
    myResult.push_back(caseQueue.getPriority(71878)); //39
    caseQueue.insert(31619,87289);
    myResult.push_back(caseQueue.getPriority(56569)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(33199,92729);
    caseQueue.updatePriority(97515, 52112);
    caseQueue.insert(59332,4013);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(39740, 54724);
    caseQueue.insert(7311,96808);
    caseQueue.updatePriority(33199, 58625);
    caseQueue.insert(56130,14955);
    myResult.push_back(caseQueue.getPriority(95417)); //44
    caseQueue.insert(68097,29713);
    caseQueue.insert(33046,61402);
    myResult.push_back(caseQueue.getPriority(26135)); //45
    myResult.push_back(caseQueue.getPriority(20378)); //46
    caseQueue.insert(53658,86687);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(19385,49398);
    caseQueue.insert(92079,36589);
    caseQueue.insert(12878,63171);
    static const int resultListArray[] = {18717, 2073, 83608, 39028, 16147, 51997, 6617, 59437, 7554, 33806, 83943, 49596, 65641, 47514, 14895, 84928, 47327, 45331, 28157, 21249, 90587, 28157, 89741, 65351, 39835, 62084, 65641, 66081, 59198, 55700, 24649, 24649, 3007, 28157, 73859, 70234, 27299, 65127, 30224, 24649, 56569, 71878, 59332, 34335, 45331, 94814, 56130}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(76): Basarili" << endl;
    else cout << "Case(76): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_77(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 159);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(35823,82017);
    myResult.push_back(caseQueue.getPriority(35823)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(5850,73286);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(66863, 81248);
    caseQueue.insert(25909,30387);
    myResult.push_back(caseQueue.getPriority(25909)); //7
    caseQueue.insert(58483,9126);
    caseQueue.insert(70342,82583);
    myResult.push_back(caseQueue.getPriority(70342)); //8
    myResult.push_back(caseQueue.getPriority(25909)); //9
    caseQueue.insert(16423,74314);
    caseQueue.insert(89266,54063);
    caseQueue.insert(42928,86606);
    caseQueue.updatePriority(89266, 48495);
    caseQueue.insert(66843,18496);
    caseQueue.insert(89508,74998);
    caseQueue.insert(25102,76248);
    caseQueue.insert(20268,28529);
    caseQueue.insert(60943,62702);
    myResult.push_back(caseQueue.getPriority(58483)); //10
    myResult.push_back(caseQueue.getPriority(66843)); //11
    caseQueue.insert(34972,87635);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(90186,49395);
    caseQueue.insert(13062,3950);
    caseQueue.insert(61219,51764);
    caseQueue.insert(10776,85047);
    caseQueue.updatePriority(10776, 57400);
    caseQueue.insert(32866,86968);
    caseQueue.insert(93536,30934);
    caseQueue.insert(9042,57756);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(2407,70755);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(89508)); //15
    caseQueue.updatePriority(60943, 8771);
    caseQueue.insert(65912,36391);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(61219)); //17
    caseQueue.insert(44199,24859);
    caseQueue.insert(62763,4089);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(81474,58891);
    caseQueue.updatePriority(2407, 48447);
    myResult.push_back(caseQueue.getPriority(20268)); //19
    caseQueue.insert(9448,54679);
    caseQueue.updatePriority(20268, 99955);
    caseQueue.updatePriority(9042, 85936);
    caseQueue.insert(73980,17275);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(32866)); //21
    myResult.push_back(caseQueue.getPriority(81474)); //22
    myResult.push_back(caseQueue.getPriority(44199)); //23
    myResult.push_back(caseQueue.getPriority(10776)); //24
    caseQueue.insert(39331,35246);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(42928)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(20268, 66853);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(48462,57240);
    caseQueue.insert(53174,36331);
    caseQueue.insert(78040,90151);
    caseQueue.insert(80465,86651);
    caseQueue.insert(77631,95699);
    caseQueue.insert(75315,55653);
    caseQueue.updatePriority(32866, 60933);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(53174, 86535);
    caseQueue.updatePriority(75315, 99512);
    myResult.push_back(caseQueue.getPriority(9448)); //30
    myResult.push_back(caseQueue.getPriority(16423)); //31
    caseQueue.insert(16525,47471);
    caseQueue.insert(59946,15375);
    caseQueue.updatePriority(9042, 77824);
    caseQueue.insert(30820,95337);
    caseQueue.insert(65680,45331);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(88314,27285);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(18337,27818);
    myResult.push_back(caseQueue.getPriority(89508)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(95566,80901);
    myResult.push_back(caseQueue.getPriority(53174)); //39
    caseQueue.insert(49618,62291);
    caseQueue.insert(80563,8852);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(20692,68045);
    caseQueue.insert(6100,87736);
    caseQueue.updatePriority(20692, 82226);
    caseQueue.insert(28839,3388);
    caseQueue.insert(65262,90317);
    caseQueue.insert(14073,99247);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(34972, 781);
    caseQueue.updatePriority(42928, 27217);
    caseQueue.insert(96721,43557);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(95566)); //43
    caseQueue.insert(39931,66955);
    myResult.push_back(caseQueue.getPriority(53174)); //44
    caseQueue.updatePriority(16423, 77891);
    caseQueue.insert(88091,18954);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(9042)); //46
    myResult.push_back(caseQueue.getPriority(20268)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(49544,45090);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(83248,89354);
    caseQueue.insert(65891,63009);
    caseQueue.updatePriority(20692, 78101);
    caseQueue.insert(92043,94381);
    caseQueue.updatePriority(9042, 88089);
    caseQueue.updatePriority(92043, 95609);
    caseQueue.insert(7890,29768);
    caseQueue.updatePriority(75315, 84207);
    caseQueue.insert(31470,47318);
    myResult.push_back(caseQueue.getPriority(39931)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(25102)); //52
    caseQueue.insert(26307,20279);
    caseQueue.insert(70201,10833);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(48452,16831);
    myResult.push_back(caseQueue.getPriority(80465)); //54
    myResult.push_back(caseQueue.getPriority(92043)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(90186, 16290);
    caseQueue.insert(99077,90965);
    caseQueue.insert(41435,17300);
    myResult.push_back(caseQueue.getPriority(70342)); //57
    caseQueue.insert(3109,60034);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(35719,77796);
    caseQueue.insert(31390,10982);
    caseQueue.insert(45334,84250);
    myResult.push_back(caseQueue.getPriority(31470)); //59
    myResult.push_back(caseQueue.getPriority(20268)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(20692)); //62
    caseQueue.insert(89033,21023);
    myResult.push_back(caseQueue.getPriority(70342)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(53174, 5126);
    myResult.push_back(caseQueue.getPriority(9448)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(9042)); //67
    myResult.push_back(caseQueue.getPriority(70342)); //68
    caseQueue.insert(82830,64501);
    static const int resultListArray[] = {-1, -1, -1, 82017, 35823, 5850, 30387, 82583, 30387, 9126, 18496, 58483, 13062, 66843, 74998, 60943, 51764, 62763, 28529, 73980, 86968, 58891, 24859, 57400, 44199, 86606, 25909, 93536, 39331, 54679, 74314, 59946, 88314, 65912, 65680, 16525, 74998, 18337, 86535, 80563, 28839, 34972, 80901, 86535, 88091, 77824, 66853, 42928, 96721, 66955, 7890, 76248, 70201, 86651, 95609, 48452, 82583, 90186, 47318, 66853, 31390, 78101, 82583, 41435, 54679, 53174, 88089, 82583}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(77): Basarili" << endl;
    else cout << "Case(77): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_78(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 223);

    vector<int> myResult; 
    caseQueue.updatePriority(80324, 99366);
    caseQueue.updatePriority(7781, 87253);
    caseQueue.updatePriority(99907, 98642);
    caseQueue.updatePriority(33755, 17523);
    caseQueue.insert(96872,62736);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(642)); //2
    myResult.push_back(caseQueue.getPriority(72886)); //3
    caseQueue.insert(40242,50282);
    myResult.push_back(caseQueue.getPriority(40242)); //4
    caseQueue.updatePriority(40242, 25068);
    myResult.push_back(caseQueue.getPriority(40242)); //5
    caseQueue.updatePriority(40242, 29588);
    myResult.push_back(caseQueue.getPriority(40242)); //6
    caseQueue.insert(77819,81934);
    caseQueue.insert(22900,38970);
    caseQueue.insert(31742,82013);
    caseQueue.insert(66616,63654);
    myResult.push_back(caseQueue.getPriority(31742)); //7
    caseQueue.updatePriority(66616, 21613);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(77819)); //9
    caseQueue.insert(19167,55170);
    caseQueue.updatePriority(31742, 44837);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(22900, 79036);
    caseQueue.updatePriority(22900, 37918);
    myResult.push_back(caseQueue.getPriority(31742)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(78536,67894);
    caseQueue.updatePriority(19167, 31202);
    caseQueue.updatePriority(31742, 1545);
    myResult.push_back(caseQueue.getPriority(77819)); //13
    myResult.push_back(caseQueue.getPriority(31742)); //14
    caseQueue.insert(32371,79502);
    caseQueue.insert(14963,12659);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(14963)); //16
    caseQueue.insert(12401,86716);
    caseQueue.insert(35012,68974);
    caseQueue.updatePriority(32371, 57743);
    myResult.push_back(caseQueue.getPriority(14963)); //17
    caseQueue.insert(37200,34993);
    caseQueue.insert(28244,80031);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(19167, 98936);
    caseQueue.insert(14233,24763);
    myResult.push_back(caseQueue.getPriority(77819)); //19
    myResult.push_back(caseQueue.getPriority(32371)); //20
    myResult.push_back(caseQueue.getPriority(35012)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(77819, 12793);
    caseQueue.insert(4455,81387);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(81726,88106);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(35012)); //26
    caseQueue.insert(96135,38135);
    caseQueue.updatePriority(78536, 1453);
    myResult.push_back(caseQueue.getPriority(28244)); //27
    caseQueue.insert(87347,97634);
    caseQueue.insert(55381,31012);
    myResult.push_back(caseQueue.getPriority(4455)); //28
    caseQueue.updatePriority(55381, 77639);
    caseQueue.insert(66487,32745);
    caseQueue.insert(82585,61841);
    caseQueue.insert(76707,6970);
    caseQueue.updatePriority(96135, 89311);
    myResult.push_back(caseQueue.getPriority(4455)); //29
    myResult.push_back(caseQueue.getPriority(78536)); //30
    caseQueue.insert(10631,85944);
    caseQueue.insert(23065,77574);
    caseQueue.insert(56708,82054);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(63170,30562);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(10631, 58219);
    caseQueue.insert(47012,63916);
    myResult.push_back(caseQueue.getPriority(56708)); //34
    myResult.push_back(caseQueue.getPriority(12401)); //35
    caseQueue.insert(60870,6665);
    caseQueue.insert(57506,8895);
    caseQueue.updatePriority(47012, 88456);
    caseQueue.insert(15924,34038);
    caseQueue.insert(67850,55005);
    caseQueue.updatePriority(67850, 61384);
    caseQueue.updatePriority(96135, 26273);
    myResult.push_back(caseQueue.getPriority(57506)); //36
    caseQueue.updatePriority(47012, 51961);
    caseQueue.insert(75961,59595);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(10631, 36301);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(47012, 97224);
    myResult.push_back(caseQueue.getPriority(56708)); //40
    caseQueue.insert(63977,45774);
    caseQueue.insert(78772,17964);
    caseQueue.insert(68566,37305);
    caseQueue.insert(26917,25927);
    caseQueue.updatePriority(75961, 42085);
    myResult.push_back(caseQueue.getPriority(63977)); //41
    caseQueue.updatePriority(78772, 22613);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(531,89577);
    caseQueue.updatePriority(28244, 70124);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(30249,41893);
    caseQueue.insert(46937,87087);
    caseQueue.updatePriority(15924, 10690);
    caseQueue.insert(98029,74039);
    caseQueue.insert(46585,59694);
    myResult.push_back(caseQueue.getPriority(87347)); //44
    caseQueue.insert(40616,15745);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(98029)); //46
    caseQueue.insert(3071,92110);
    caseQueue.insert(72233,55056);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(46937)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(22780,18785);
    caseQueue.updatePriority(87347, 4529);
    caseQueue.updatePriority(98029, 90983);
    myResult.push_back(caseQueue.getPriority(531)); //50
    caseQueue.updatePriority(87347, 20774);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(67850)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(63265,74367);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(72890,72891);
    myResult.push_back(caseQueue.getPriority(55381)); //55
    myResult.push_back(caseQueue.getPriority(56708)); //56
    myResult.push_back(caseQueue.getPriority(56708)); //57
    caseQueue.insert(99304,80275);
    caseQueue.insert(5952,46767);
    myResult.push_back(caseQueue.getPriority(81726)); //58
    caseQueue.insert(78332,19743);
    caseQueue.insert(79121,27649);
    caseQueue.updatePriority(35012, 69878);
    caseQueue.updatePriority(79121, 15527);
    caseQueue.updatePriority(68566, 69750);
    myResult.push_back(caseQueue.getPriority(23065)); //59
    myResult.push_back(caseQueue.getPriority(67850)); //60
    caseQueue.updatePriority(3071, 70944);
    caseQueue.insert(18639,24419);
    caseQueue.insert(19391,63630);
    myResult.push_back(caseQueue.getPriority(30249)); //61
    caseQueue.insert(38561,99472);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(75961, 42887);
    myResult.push_back(caseQueue.getPriority(23065)); //63
    caseQueue.updatePriority(67850, 74459);
    myResult.push_back(caseQueue.getPriority(63977)); //64
    caseQueue.updatePriority(75961, 78971);
    caseQueue.insert(86762,28468);
    caseQueue.updatePriority(75961, 89782);
    caseQueue.updatePriority(63977, 35291);
    caseQueue.insert(42356,67893);
    caseQueue.insert(9598,13479);
    caseQueue.insert(15177,30624);
    myResult.push_back(caseQueue.getPriority(63977)); //65
    myResult.push_back(caseQueue.getPriority(86762)); //66
    caseQueue.insert(15637,92901);
    caseQueue.insert(68524,68278);
    caseQueue.insert(73170,37222);
    myResult.push_back(caseQueue.getPriority(15637)); //67
    caseQueue.insert(99119,40849);
    caseQueue.insert(10144,19341);
    caseQueue.insert(43275,47666);
    caseQueue.updatePriority(4455, 48169);
    caseQueue.insert(56291,59696);
    myResult.push_back(caseQueue.getPriority(46585)); //68
    myResult.push_back(caseQueue.getPriority(47012)); //69
    caseQueue.insert(1859,67509);
    caseQueue.insert(48025,42159);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(79445,69168);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(43275, 45721);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(62215,43547);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(6374,4250);
    caseQueue.updatePriority(81726, 97974);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(94424,76225);
    caseQueue.insert(58967,92084);
    myResult.push_back(caseQueue.getPriority(3071)); //75
    caseQueue.updatePriority(94424, 77345);
    myResult.push_back(caseQueue.getPriority(56291)); //76
    caseQueue.insert(85897,31198);
    caseQueue.insert(65736,4350);
    myResult.push_back(caseQueue.getPriority(46937)); //77
    myResult.push_back(caseQueue.getPriority(99119)); //78
    caseQueue.updatePriority(15177, 36408);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(30955,51439);
    myResult.push_back(caseQueue.getPriority(94424)); //80
    caseQueue.insert(6457,63915);
    myResult.push_back(caseQueue.getPriority(12401)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.getPriority(67850)); //83
    caseQueue.updatePriority(46585, 6743);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(51041,24325);
    caseQueue.insert(21089,67935);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.updatePriority(3071, 77007);
    caseQueue.insert(39482,72495);
    caseQueue.insert(82747,95208);
    myResult.push_back(caseQueue.getPriority(6457)); //88
    caseQueue.insert(32296,5390);
    myResult.push_back(caseQueue.getPriority(58967)); //89
    caseQueue.insert(93541,73007);
    caseQueue.updatePriority(82585, 21522);
    myResult.push_back(caseQueue.deleteMin()); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    static const int resultListArray[] = {96872, -1, -1, 50282, 25068, 29588, 82013, 66616, 81934, 40242, 44837, 22900, 81934, 1545, 31742, 12659, 12659, 14963, 81934, 57743, 68974, 14233, 37200, 77819, 32371, 68974, 80031, 81387, 81387, 1453, 78536, 76707, 63170, 82054, 86716, 8895, 60870, 57506, 96135, 82054, 45774, 78772, 26917, 97634, 15924, 74039, 40616, 87087, 66487, 89577, 22780, 61384, 87347, 10631, 77639, 82054, 82054, 88106, 77574, 61384, 41893, 79121, 77574, 45774, 35291, 28468, 92901, 59694, 97224, 9598, 10144, 78332, 18639, 6374, 70944, 59696, 87087, 40849, 65736, 77345, 86716, 86762, 74459, 46585, 51041, 85897, 63977, 63915, 92084, 32296, 82585}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(78): Basarili" << endl;
    else cout << "Case(78): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_79(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 207);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(85154,11355);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(98878)); //3
    myResult.push_back(caseQueue.getPriority(47602)); //4
    myResult.push_back(caseQueue.getPriority(5710)); //5
    caseQueue.insert(73274,11683);
    myResult.push_back(caseQueue.getPriority(73274)); //6
    caseQueue.insert(60693,30566);
    myResult.push_back(caseQueue.getPriority(60693)); //7
    caseQueue.updatePriority(60693, 65325);
    myResult.push_back(caseQueue.getPriority(60693)); //8
    myResult.push_back(caseQueue.getPriority(60693)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(60693, 37615);
    caseQueue.insert(26099,82893);
    caseQueue.insert(905,19799);
    caseQueue.updatePriority(905, 57340);
    caseQueue.insert(26543,30514);
    caseQueue.insert(69945,14506);
    caseQueue.insert(21566,14584);
    caseQueue.insert(5029,55027);
    myResult.push_back(caseQueue.getPriority(26543)); //11
    caseQueue.insert(41064,84441);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(65247,9349);
    myResult.push_back(caseQueue.getPriority(905)); //13
    caseQueue.insert(7316,4477);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(5899,1589);
    caseQueue.updatePriority(41064, 63191);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(41064)); //16
    caseQueue.insert(96710,30692);
    caseQueue.updatePriority(5029, 63856);
    caseQueue.updatePriority(26099, 62728);
    caseQueue.updatePriority(26543, 59351);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(68705,45325);
    myResult.push_back(caseQueue.getPriority(96710)); //18
    caseQueue.insert(89010,86853);
    caseQueue.insert(62451,97164);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(26543)); //20
    caseQueue.insert(22233,277);
    caseQueue.insert(46265,41452);
    caseQueue.insert(65290,93644);
    caseQueue.insert(54201,32907);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(68705, 56793);
    caseQueue.updatePriority(68705, 8102);
    caseQueue.insert(28446,74731);
    caseQueue.insert(39436,18064);
    caseQueue.updatePriority(65290, 83344);
    myResult.push_back(caseQueue.getPriority(905)); //22
    caseQueue.insert(19084,24502);
    caseQueue.updatePriority(905, 73606);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(905, 28754);
    myResult.push_back(caseQueue.getPriority(19084)); //24
    caseQueue.updatePriority(41064, 21624);
    myResult.push_back(caseQueue.getPriority(26543)); //25
    caseQueue.insert(49158,79426);
    myResult.push_back(caseQueue.getPriority(96710)); //26
    caseQueue.insert(26305,30270);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(62872,53956);
    caseQueue.updatePriority(26305, 34567);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(76586,23819);
    caseQueue.updatePriority(76586, 30531);
    myResult.push_back(caseQueue.getPriority(5029)); //29
    myResult.push_back(caseQueue.getPriority(62451)); //30
    caseQueue.insert(45799,79996);
    caseQueue.insert(2958,12891);
    caseQueue.insert(63379,44105);
    caseQueue.insert(14222,41952);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(37284,66061);
    caseQueue.insert(56931,70956);
    caseQueue.insert(49786,59697);
    caseQueue.updatePriority(45799, 93588);
    caseQueue.insert(67663,64615);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(905)); //33
    caseQueue.insert(23319,92448);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(82967,31229);
    caseQueue.insert(57704,73461);
    caseQueue.insert(94798,24087);
    myResult.push_back(caseQueue.getPriority(60693)); //35
    caseQueue.updatePriority(63379, 92579);
    caseQueue.insert(91970,40120);
    myResult.push_back(caseQueue.getPriority(82967)); //36
    myResult.push_back(caseQueue.getPriority(63379)); //37
    myResult.push_back(caseQueue.getPriority(62451)); //38
    caseQueue.updatePriority(82967, 18270);
    caseQueue.updatePriority(62872, 76875);
    caseQueue.updatePriority(46265, 77344);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(5029)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(14222)); //42
    caseQueue.updatePriority(60693, 81332);
    myResult.push_back(caseQueue.getPriority(49158)); //43
    caseQueue.insert(7191,67307);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(15276,3798);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(89867,92389);
    caseQueue.insert(70318,69273);
    caseQueue.insert(38745,95872);
    caseQueue.insert(49792,46224);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(67210,58756);
    myResult.push_back(caseQueue.getPriority(63379)); //48
    caseQueue.insert(42116,87919);
    caseQueue.updatePriority(45799, 82200);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(64776,63462);
    caseQueue.insert(7076,42477);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(28446, 15541);
    caseQueue.insert(47054,32822);
    caseQueue.insert(86215,21571);
    caseQueue.updatePriority(26543, 11982);
    caseQueue.insert(79186,71929);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(69841,16651);
    caseQueue.insert(97039,49134);
    caseQueue.insert(98907,79760);
    caseQueue.insert(18580,35242);
    caseQueue.updatePriority(7191, 45637);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(65611,82975);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(7076)); //56
    caseQueue.insert(79462,39621);
    caseQueue.insert(43694,83994);
    caseQueue.insert(4750,96338);
    caseQueue.insert(71808,48944);
    caseQueue.insert(10273,32037);
    myResult.push_back(caseQueue.getPriority(71808)); //57
    caseQueue.insert(4568,39933);
    caseQueue.insert(26929,83705);
    myResult.push_back(caseQueue.getPriority(7076)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(49792, 34680);
    caseQueue.insert(94044,52859);
    caseQueue.insert(22964,40737);
    caseQueue.insert(48546,82131);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(31060,1853);
    caseQueue.updatePriority(26099, 55334);
    caseQueue.updatePriority(7191, 42464);
    caseQueue.updatePriority(94044, 54400);
    caseQueue.insert(99179,25119);
    caseQueue.insert(64181,45228);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(31080,80760);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(79186)); //65
    caseQueue.insert(40099,68560);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(41118,76024);
    caseQueue.insert(83449,70174);
    caseQueue.insert(33279,65001);
    caseQueue.updatePriority(65290, 40606);
    myResult.push_back(caseQueue.getPriority(71808)); //67
    caseQueue.updatePriority(40099, 69905);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(4750)); //69
    myResult.push_back(caseQueue.getPriority(64181)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(65611, 18138);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(64776)); //74
    caseQueue.insert(90014,58442);
    caseQueue.insert(32056,70987);
    caseQueue.insert(19260,54430);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(54579,95404);
    caseQueue.insert(14760,98150);
    caseQueue.insert(17941,95843);
    myResult.push_back(caseQueue.getPriority(48546)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(70318, 14298);
    caseQueue.insert(7197,19161);
    caseQueue.insert(18394,59062);
    caseQueue.insert(30437,69755);
    caseQueue.updatePriority(32056, 93571);
    caseQueue.updatePriority(41118, 53761);
    caseQueue.insert(83835,88889);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(25808,53754);
    caseQueue.insert(83623,79498);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(26929, 43823);
    caseQueue.insert(61142,74120);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(79426,24652);
    static const int resultListArray[] = {-1, 85154, -1, -1, -1, 11683, 30566, 65325, 65325, 73274, 30514, 69945, 57340, 7316, 5899, 63191, 65247, 30692, 21566, 59351, 22233, 57340, 68705, 24502, 59351, 30692, 39436, 41064, 63856, 97164, 2958, 19084, 28754, 905, 37615, 31229, 92579, 97164, 82967, 63856, 94798, 41952, 79426, 76586, 15276, 96710, 54201, 92579, 26305, 91970, 26543, 28446, 69841, 86215, 47054, 42477, 48944, 42477, 10273, 18580, 49792, 79462, 31060, 99179, 71929, 4568, 48944, 65290, 96338, 45228, 22964, 65611, 14222, 63462, 7191, 82131, 7076, 70318, 7197, 26929}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(79): Basarili" << endl;
    else cout << "Case(79): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_80(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 232);

    vector<int> myResult; 
    caseQueue.insert(44541,10725);
    caseQueue.updatePriority(44541, 38165);
    caseQueue.insert(75988,24695);
    caseQueue.insert(34136,75678);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(15952,41593);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(15952, 71105);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(34136, 95446);
    caseQueue.insert(63738,81243);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(77026,84152);
    caseQueue.insert(52148,62429);
    caseQueue.insert(98367,32561);
    caseQueue.updatePriority(52148, 62974);
    caseQueue.insert(20881,82619);
    caseQueue.insert(54161,16358);
    caseQueue.insert(49029,59099);
    caseQueue.insert(91689,70399);
    caseQueue.insert(27239,21823);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(57941,40176);
    caseQueue.insert(74055,23681);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(36108,97994);
    caseQueue.insert(13841,10300);
    caseQueue.insert(62034,23098);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(13999,82743);
    caseQueue.updatePriority(52148, 54805);
    myResult.push_back(caseQueue.getPriority(98367)); //9
    myResult.push_back(caseQueue.getPriority(74055)); //10
    caseQueue.updatePriority(52148, 98010);
    caseQueue.insert(22087,55419);
    caseQueue.updatePriority(20881, 21618);
    caseQueue.insert(7562,43927);
    caseQueue.insert(61845,89529);
    caseQueue.updatePriority(57941, 8514);
    caseQueue.insert(38430,79938);
    caseQueue.updatePriority(74055, 43277);
    caseQueue.insert(37501,19571);
    myResult.push_back(caseQueue.getPriority(38430)); //11
    caseQueue.updatePriority(91689, 70687);
    caseQueue.updatePriority(74055, 44177);
    caseQueue.updatePriority(38430, 16596);
    caseQueue.insert(7094,61275);
    caseQueue.insert(58991,3558);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(36309,21846);
    caseQueue.insert(37711,43023);
    caseQueue.insert(87841,66971);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(39060,86616);
    myResult.push_back(caseQueue.getPriority(49029)); //14
    caseQueue.updatePriority(7562, 14959);
    myResult.push_back(caseQueue.getPriority(7094)); //15
    caseQueue.insert(57232,39132);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(20436,35456);
    myResult.push_back(caseQueue.getPriority(20881)); //17
    caseQueue.insert(67623,13624);
    myResult.push_back(caseQueue.getPriority(7094)); //18
    caseQueue.updatePriority(20881, 92433);
    caseQueue.insert(14284,19647);
    caseQueue.insert(59759,73865);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(23652,69087);
    caseQueue.insert(81881,6940);
    caseQueue.updatePriority(81881, 41651);
    caseQueue.updatePriority(36108, 71433);
    caseQueue.insert(30294,5951);
    caseQueue.insert(68933,27940);
    caseQueue.updatePriority(49029, 99169);
    caseQueue.insert(50335,53067);
    myResult.push_back(caseQueue.getPriority(37711)); //20
    caseQueue.updatePriority(57232, 82629);
    myResult.push_back(caseQueue.getPriority(37711)); //21
    caseQueue.insert(96153,64927);
    caseQueue.insert(85446,87816);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(3107,53808);
    caseQueue.insert(44636,61110);
    myResult.push_back(caseQueue.getPriority(50335)); //23
    caseQueue.insert(28382,32124);
    caseQueue.updatePriority(37711, 88100);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(39060, 14410);
    caseQueue.insert(91902,75727);
    caseQueue.insert(38872,79460);
    caseQueue.updatePriority(62034, 58579);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(28382)); //26
    caseQueue.insert(87214,69046);
    myResult.push_back(caseQueue.getPriority(3107)); //27
    caseQueue.insert(70763,53317);
    caseQueue.insert(75316,85668);
    caseQueue.insert(14296,56676);
    myResult.push_back(caseQueue.getPriority(74055)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(8550,98088);
    caseQueue.updatePriority(87841, 86363);
    caseQueue.insert(81789,31013);
    caseQueue.updatePriority(36108, 46594);
    caseQueue.updatePriority(3107, 53426);
    caseQueue.insert(21358,18103);
    myResult.push_back(caseQueue.getPriority(59759)); //30
    caseQueue.updatePriority(49029, 36911);
    caseQueue.insert(25144,98616);
    caseQueue.insert(92160,16694);
    caseQueue.insert(78032,95044);
    caseQueue.insert(64608,75127);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(98639,37017);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(38872)); //33
    caseQueue.updatePriority(81881, 12578);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(99424,47711);
    myResult.push_back(caseQueue.getPriority(13999)); //35
    caseQueue.updatePriority(20881, 63016);
    myResult.push_back(caseQueue.getPriority(85446)); //36
    caseQueue.insert(4664,65814);
    caseQueue.updatePriority(59759, 75381);
    caseQueue.insert(20462,11404);
    myResult.push_back(caseQueue.getPriority(91689)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(79660,46682);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(59759, 23214);
    myResult.push_back(caseQueue.getPriority(7094)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(35656,37873);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(20436)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(74055)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(98639, 69986);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(96153)); //51
    myResult.push_back(caseQueue.getPriority(20881)); //52
    myResult.push_back(caseQueue.getPriority(85446)); //53
    caseQueue.insert(35938,76841);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(17295,27114);
    myResult.push_back(caseQueue.getPriority(91689)); //55
    myResult.push_back(caseQueue.getPriority(25144)); //56
    caseQueue.insert(97005,1968);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(7094, 86544);
    caseQueue.insert(44721,949);
    caseQueue.updatePriority(91902, 43188);
    caseQueue.updatePriority(78032, 36088);
    myResult.push_back(caseQueue.getPriority(50335)); //58
    caseQueue.insert(38039,33992);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(7094)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(70763)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(56112,2431);
    caseQueue.updatePriority(37711, 20005);
    caseQueue.updatePriority(70763, 43446);
    caseQueue.updatePriority(35938, 87968);
    caseQueue.insert(82590,83420);
    caseQueue.insert(15599,87848);
    caseQueue.updatePriority(8550, 68617);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(48817,21063);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(52757,34869);
    caseQueue.insert(50426,86652);
    caseQueue.updatePriority(4664, 70930);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(6161,14485);
    caseQueue.updatePriority(35938, 66192);
    caseQueue.updatePriority(50426, 98389);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(3107)); //69
    caseQueue.insert(15247,40137);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(57232)); //71
    caseQueue.insert(12942,46293);
    caseQueue.insert(22811,20504);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(70450,2845);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(12690,57659);
    caseQueue.insert(20200,79727);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(14296)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(34350,41130);
    caseQueue.insert(45660,79457);
    caseQueue.insert(62322,37775);
    caseQueue.insert(14477,83050);
    caseQueue.insert(22353,80153);
    myResult.push_back(caseQueue.getPriority(12942)); //77
    caseQueue.insert(55930,21069);
    caseQueue.insert(36610,48355);
    caseQueue.insert(92761,84534);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(20881, 33961);
    caseQueue.insert(38015,4177);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(28018,71571);
    caseQueue.updatePriority(35938, 52290);
    caseQueue.insert(80892,41701);
    myResult.push_back(caseQueue.getPriority(99424)); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(2634,83048);
    caseQueue.insert(23487,11153);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(12942)); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(73926,99079);
    caseQueue.updatePriority(52148, 16485);
    caseQueue.updatePriority(4664, 47913);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(29263,66409);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(64597,33704);
    caseQueue.insert(76808,58634);
    caseQueue.insert(7162,22860);
    static const int resultListArray[] = {75988, 44541, 15952, 63738, 34136, 54161, 27239, 13841, 32561, 23681, 79938, 58991, 57941, 59099, 61275, 7562, 21618, 61275, 67623, 43023, 43023, 30294, 53067, 38430, 39060, 32124, 53808, 44177, 37501, 73865, 92160, 21358, 79460, 81881, 82743, 87816, 70687, 20462, 14284, 36309, 61275, 59759, 68933, 81789, 28382, 35456, 98367, 44177, 20436, 49029, 64927, 63016, 87816, 35656, 70687, 98616, 97005, 53067, 44721, 86544, 17295, 53317, 38039, 78032, 56112, 37711, 48817, 6161, 53426, 52757, 82629, 22811, 70450, 15247, 56676, 91902, 46293, 55930, 62322, 38015, 20881, 47711, 34350, 23487, 46293, 80892, 52148, 70763}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(80): Basarili" << endl;
    else cout << "Case(80): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_81(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 182);

    vector<int> myResult; 
    caseQueue.insert(5775,70257);
    caseQueue.insert(59353,67214);
    caseQueue.updatePriority(59353, 17511);
    caseQueue.updatePriority(5775, 73928);
    caseQueue.insert(86020,11985);
    myResult.push_back(caseQueue.getPriority(59353)); //1
    myResult.push_back(caseQueue.getPriority(59353)); //2
    myResult.push_back(caseQueue.getPriority(59353)); //3
    caseQueue.updatePriority(5775, 42483);
    caseQueue.insert(77825,16635);
    caseQueue.insert(72339,56757);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(77825, 80727);
    caseQueue.insert(58092,77444);
    caseQueue.updatePriority(77825, 33140);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(5775, 73252);
    caseQueue.updatePriority(72339, 65435);
    caseQueue.insert(10162,59251);
    myResult.push_back(caseQueue.getPriority(10162)); //7
    caseQueue.insert(68786,36497);
    caseQueue.updatePriority(68786, 58324);
    caseQueue.insert(17953,40726);
    caseQueue.insert(1192,51685);
    caseQueue.insert(80591,83726);
    myResult.push_back(caseQueue.getPriority(80591)); //8
    myResult.push_back(caseQueue.getPriority(10162)); //9
    caseQueue.insert(37808,76100);
    myResult.push_back(caseQueue.getPriority(58092)); //10
    caseQueue.insert(97588,49973);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(5775)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(50047,3531);
    caseQueue.insert(64769,54792);
    caseQueue.insert(38365,28362);
    caseQueue.insert(70191,36635);
    myResult.push_back(caseQueue.getPriority(68786)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(72339, 6825);
    myResult.push_back(caseQueue.getPriority(1192)); //17
    caseQueue.insert(8144,67751);
    caseQueue.insert(23581,39857);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(87385,33379);
    caseQueue.insert(53273,67870);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(79442,72253);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(37808, 22738);
    caseQueue.updatePriority(37808, 50023);
    caseQueue.insert(62388,24570);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(79442, 1746);
    caseQueue.insert(79422,81992);
    caseQueue.updatePriority(8144, 76664);
    myResult.push_back(caseQueue.getPriority(64769)); //23
    caseQueue.insert(52251,52945);
    myResult.push_back(caseQueue.getPriority(5775)); //24
    caseQueue.insert(43746,1312);
    caseQueue.updatePriority(5775, 16425);
    caseQueue.updatePriority(53273, 43205);
    caseQueue.updatePriority(79422, 2990);
    caseQueue.insert(77456,25953);
    caseQueue.insert(5345,97810);
    caseQueue.insert(4180,36222);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(47480,18813);
    caseQueue.insert(319,34141);
    caseQueue.insert(99209,73652);
    caseQueue.updatePriority(80591, 41225);
    caseQueue.updatePriority(5345, 55983);
    caseQueue.updatePriority(80591, 16134);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(18732,3189);
    caseQueue.insert(14650,9943);
    caseQueue.insert(9939,41436);
    caseQueue.insert(40904,29312);
    myResult.push_back(caseQueue.getPriority(9939)); //27
    myResult.push_back(caseQueue.getPriority(14650)); //28
    myResult.push_back(caseQueue.getPriority(9939)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(47480, 69370);
    caseQueue.insert(49289,57078);
    caseQueue.insert(79793,90298);
    caseQueue.updatePriority(49289, 36682);
    caseQueue.insert(70543,95885);
    caseQueue.updatePriority(52251, 71151);
    myResult.push_back(caseQueue.getPriority(37808)); //31
    myResult.push_back(caseQueue.getPriority(77456)); //32
    caseQueue.updatePriority(49289, 88502);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(6519,24164);
    caseQueue.updatePriority(80591, 93102);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(5775, 39129);
    caseQueue.insert(17480,60772);
    caseQueue.insert(74931,93490);
    caseQueue.updatePriority(74931, 7666);
    caseQueue.insert(39775,20025);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(80591, 47322);
    myResult.push_back(caseQueue.getPriority(40904)); //36
    caseQueue.updatePriority(6519, 40771);
    caseQueue.insert(45219,53249);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(34496,77766);
    caseQueue.updatePriority(8144, 31859);
    caseQueue.updatePriority(49289, 45864);
    caseQueue.insert(17559,49119);
    myResult.push_back(caseQueue.getPriority(37808)); //39
    myResult.push_back(caseQueue.getPriority(49289)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(11762,16824);
    caseQueue.insert(35222,1027);
    caseQueue.updatePriority(37808, 21692);
    myResult.push_back(caseQueue.getPriority(37808)); //43
    caseQueue.insert(51278,98873);
    caseQueue.insert(75351,15784);
    caseQueue.insert(6993,45549);
    caseQueue.updatePriority(6993, 69947);
    caseQueue.updatePriority(70543, 77693);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(33618,35750);
    caseQueue.insert(95581,68299);
    myResult.push_back(caseQueue.getPriority(80591)); //45
    caseQueue.insert(98703,74898);
    myResult.push_back(caseQueue.getPriority(47480)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(6519, 69314);
    caseQueue.insert(59283,13220);
    caseQueue.updatePriority(51278, 63244);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(21144,17388);
    caseQueue.insert(51072,97744);
    caseQueue.insert(47985,12705);
    caseQueue.insert(58001,67214);
    myResult.push_back(caseQueue.getPriority(47480)); //50
    myResult.push_back(caseQueue.getPriority(80591)); //51
    caseQueue.updatePriority(95581, 77914);
    myResult.push_back(caseQueue.getPriority(9939)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(58092)); //54
    caseQueue.insert(61046,20149);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(1192, 15520);
    caseQueue.insert(20870,65086);
    caseQueue.insert(11606,63281);
    caseQueue.updatePriority(6519, 74900);
    caseQueue.updatePriority(52251, 55233);
    myResult.push_back(caseQueue.getPriority(51072)); //58
    myResult.push_back(caseQueue.getPriority(70543)); //59
    caseQueue.updatePriority(6993, 58660);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(87542,87164);
    caseQueue.insert(70097,85204);
    caseQueue.updatePriority(51072, 98218);
    caseQueue.insert(53473,50191);
    caseQueue.insert(28963,61037);
    caseQueue.insert(33869,37759);
    caseQueue.insert(845,26458);
    caseQueue.updatePriority(9939, 41358);
    caseQueue.updatePriority(33618, 71690);
    caseQueue.insert(79378,31310);
    caseQueue.insert(15329,51846);
    caseQueue.insert(15531,3393);
    caseQueue.insert(10470,94057);
    caseQueue.insert(4401,40366);
    myResult.push_back(caseQueue.getPriority(6993)); //61
    caseQueue.insert(75276,15206);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(53605,32352);
    myResult.push_back(caseQueue.getPriority(28963)); //63
    caseQueue.insert(73237,79820);
    static const int resultListArray[] = {17511, 17511, 17511, 86020, 59353, 77825, 59251, 83726, 59251, 77444, 17953, 73252, 97588, 58324, 50047, 38365, 51685, 72339, 87385, 70191, 62388, 23581, 54792, 73252, 43746, 79442, 41436, 9943, 41436, 79422, 50023, 25953, 18732, 14650, 74931, 29312, 39775, 77456, 50023, 45864, 40904, 8144, 21692, 35222, 47322, 69370, 75351, 59283, 11762, 69370, 47322, 41436, 47985, 77444, 21144, 61046, 37808, 97744, 77693, 1192, 58660, 15531, 61037}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(81): Basarili" << endl;
    else cout << "Case(81): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_82(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 202);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(63822, 14413);
    caseQueue.insert(79972,59525);
    caseQueue.updatePriority(79972, 73484);
    caseQueue.insert(74922,73630);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(74922, 12108);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(36376,97915);
    caseQueue.updatePriority(36376, 15730);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(24011,25161);
    caseQueue.insert(19482,85835);
    myResult.push_back(caseQueue.getPriority(24011)); //7
    caseQueue.insert(17264,50753);
    caseQueue.updatePriority(19482, 91717);
    myResult.push_back(caseQueue.getPriority(24011)); //8
    myResult.push_back(caseQueue.getPriority(17264)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(15590,87431);
    caseQueue.updatePriority(19482, 34286);
    caseQueue.updatePriority(15590, 11551);
    caseQueue.updatePriority(15590, 46763);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(33462,35049);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(17264, 80098);
    caseQueue.updatePriority(17264, 72194);
    caseQueue.insert(51304,17778);
    caseQueue.insert(40784,12078);
    caseQueue.updatePriority(17264, 26392);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(38475,26716);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(52289,41203);
    caseQueue.insert(11553,78247);
    caseQueue.updatePriority(52289, 60424);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(35222,34358);
    caseQueue.updatePriority(52289, 41706);
    caseQueue.updatePriority(11553, 33288);
    caseQueue.insert(48440,95432);
    caseQueue.updatePriority(35222, 12377);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(71332,51871);
    caseQueue.insert(95580,67549);
    myResult.push_back(caseQueue.getPriority(71332)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(95580, 85586);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(48782,57030);
    caseQueue.insert(66579,82634);
    caseQueue.insert(68959,83757);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(66579, 66308);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(81765,27250);
    caseQueue.insert(53871,31005);
    caseQueue.insert(47644,42419);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(68959, 1240);
    caseQueue.updatePriority(53871, 47473);
    caseQueue.updatePriority(47644, 19960);
    caseQueue.updatePriority(68959, 87632);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(73108)); //31
    caseQueue.updatePriority(92754, 22805);
    myResult.push_back(caseQueue.getPriority(55588)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(85003,24636);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(93892)); //36
    caseQueue.insert(48770,39098);
    caseQueue.updatePriority(48770, 3301);
    caseQueue.updatePriority(48770, 62696);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(96097,42416);
    caseQueue.insert(91500,12856);
    caseQueue.updatePriority(91500, 10205);
    myResult.push_back(caseQueue.getPriority(96097)); //38
    caseQueue.insert(14735,61275);
    caseQueue.updatePriority(96097, 80530);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(41844,64799);
    caseQueue.updatePriority(96097, 66106);
    caseQueue.insert(35461,63180);
    myResult.push_back(caseQueue.getPriority(41844)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(41844)); //43
    myResult.push_back(caseQueue.getPriority(96097)); //44
    caseQueue.insert(1011,27665);
    caseQueue.insert(71884,16214);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(34994,75925);
    myResult.push_back(caseQueue.getPriority(1011)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(63150,6852);
    caseQueue.insert(17029,9443);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(17029)); //49
    myResult.push_back(caseQueue.getPriority(96097)); //50
    myResult.push_back(caseQueue.getPriority(34994)); //51
    caseQueue.insert(88704,60469);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(46129,1571);
    myResult.push_back(caseQueue.getPriority(41844)); //53
    caseQueue.updatePriority(34994, 89361);
    caseQueue.insert(68593,52601);
    caseQueue.insert(41757,4905);
    caseQueue.insert(83268,25638);
    caseQueue.updatePriority(41844, 61328);
    caseQueue.updatePriority(68593, 63617);
    myResult.push_back(caseQueue.getPriority(88704)); //54
    caseQueue.insert(81696,38759);
    myResult.push_back(caseQueue.getPriority(46129)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(68593)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(70811,91778);
    caseQueue.updatePriority(83268, 84280);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(88444,81483);
    caseQueue.updatePriority(70811, 69049);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(64280,30977);
    myResult.push_back(caseQueue.getPriority(68593)); //62
    caseQueue.insert(89254,33225);
    caseQueue.insert(85521,13598);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(45802,99379);
    caseQueue.updatePriority(96097, 51847);
    caseQueue.updatePriority(83268, 61913);
    caseQueue.updatePriority(34994, 28142);
    caseQueue.insert(40011,81017);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(63169,92358);
    caseQueue.insert(95949,2049);
    caseQueue.insert(35478,56804);
    myResult.push_back(caseQueue.getPriority(68593)); //65
    caseQueue.insert(69752,29378);
    caseQueue.insert(64860,94125);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.updatePriority(64280, 579);
    myResult.push_back(caseQueue.getPriority(89254)); //67
    myResult.push_back(caseQueue.getPriority(69752)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(63169)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(70811)); //72
    caseQueue.updatePriority(83268, 31907);
    myResult.push_back(caseQueue.getPriority(88444)); //73
    caseQueue.insert(7659,72479);
    caseQueue.updatePriority(35478, 85354);
    caseQueue.insert(98343,72573);
    caseQueue.insert(70776,7984);
    caseQueue.insert(36318,43113);
    caseQueue.insert(48740,86296);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(25152,39194);
    caseQueue.insert(20454,20279);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(2576,29969);
    caseQueue.insert(64980,87659);
    caseQueue.insert(62018,99709);
    myResult.push_back(caseQueue.getPriority(83268)); //76
    caseQueue.updatePriority(70811, 39215);
    caseQueue.insert(73205,19591);
    caseQueue.insert(11994,68191);
    myResult.push_back(caseQueue.getPriority(68593)); //77
    caseQueue.insert(40276,94310);
    caseQueue.updatePriority(70811, 91361);
    myResult.push_back(caseQueue.getPriority(2576)); //78
    myResult.push_back(caseQueue.getPriority(7659)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.getPriority(35478)); //82
    caseQueue.updatePriority(64980, 60114);
    caseQueue.updatePriority(40276, 64844);
    myResult.push_back(caseQueue.getPriority(83268)); //83
    caseQueue.insert(39813,42712);
    caseQueue.insert(17723,65741);
    myResult.push_back(caseQueue.getPriority(63169)); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(60021,14744);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(68979,5933);
    caseQueue.insert(23334,74466);
    caseQueue.updatePriority(64860, 20670);
    caseQueue.updatePriority(45802, 15751);
    caseQueue.insert(45722,64038);
    static const int resultListArray[] = {-1, -1, -1, 79972, 74922, 36376, 25161, 25161, 50753, 24011, 19482, 15590, 33462, 40784, 51304, 17264, 38475, 35222, 11553, 52289, 48440, 51871, 71332, 95580, 48782, 66579, 81765, 47644, 53871, 68959, -1, -1, -1, 85003, -1, -1, 48770, 42416, 91500, 14735, 64799, 35461, 64799, 66106, 71884, 27665, 1011, 63150, 9443, 66106, 75925, 17029, 64799, 60469, 1571, 46129, 63617, 41757, 81696, 88704, 41844, 63617, 85521, 34994, 63617, 95949, 33225, 29378, 64280, 92358, 69752, 69049, 81483, 70776, 20454, 31907, 63617, 29969, 72479, 73205, 2576, 85354, 31907, 92358, 83268, 60021}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(82): Basarili" << endl;
    else cout << "Case(82): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_83(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 135);

    vector<int> myResult; 
    caseQueue.updatePriority(90931, 72932);
    caseQueue.updatePriority(22457, 89557);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(49105,32104);
    myResult.push_back(caseQueue.getPriority(49105)); //2
    caseQueue.insert(64894,49365);
    caseQueue.updatePriority(49105, 7584);
    caseQueue.insert(66488,7972);
    caseQueue.insert(31850,229);
    caseQueue.updatePriority(66488, 12279);
    caseQueue.insert(62573,17591);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(25604,48841);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(64894, 98710);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(84424,38782);
    caseQueue.updatePriority(64894, 60200);
    caseQueue.updatePriority(25604, 81304);
    myResult.push_back(caseQueue.getPriority(84424)); //6
    caseQueue.insert(42383,18874);
    caseQueue.insert(81303,57467);
    caseQueue.updatePriority(25604, 1964);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(84424, 95830);
    caseQueue.updatePriority(81303, 14544);
    myResult.push_back(caseQueue.getPriority(42383)); //8
    caseQueue.updatePriority(81303, 85314);
    myResult.push_back(caseQueue.getPriority(81303)); //9
    caseQueue.insert(86932,80717);
    myResult.push_back(caseQueue.getPriority(86932)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(13482,74976);
    caseQueue.insert(59715,54436);
    caseQueue.updatePriority(13482, 79055);
    caseQueue.updatePriority(81303, 25668);
    myResult.push_back(caseQueue.getPriority(64894)); //12
    caseQueue.insert(80138,45402);
    caseQueue.updatePriority(59715, 67536);
    caseQueue.updatePriority(64894, 41486);
    caseQueue.updatePriority(42383, 20914);
    caseQueue.insert(33975,85528);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(86932, 14923);
    caseQueue.insert(95814,1920);
    caseQueue.updatePriority(64894, 1163);
    caseQueue.updatePriority(33975, 78433);
    caseQueue.insert(86730,81821);
    caseQueue.insert(91990,73129);
    caseQueue.insert(21524,25114);
    caseQueue.insert(23400,16317);
    caseQueue.insert(26537,40512);
    myResult.push_back(caseQueue.getPriority(86730)); //14
    caseQueue.insert(42574,82747);
    caseQueue.updatePriority(33975, 67152);
    caseQueue.updatePriority(95814, 29732);
    myResult.push_back(caseQueue.getPriority(33975)); //15
    caseQueue.insert(31946,12865);
    caseQueue.insert(23183,76766);
    caseQueue.insert(55905,90358);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(2250,50135);
    myResult.push_back(caseQueue.getPriority(13482)); //17
    caseQueue.insert(7528,42342);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(26537, 27098);
    caseQueue.insert(5349,20097);
    caseQueue.updatePriority(23183, 77452);
    caseQueue.updatePriority(2250, 4571);
    myResult.push_back(caseQueue.getPriority(55905)); //20
    caseQueue.updatePriority(84424, 54053);
    caseQueue.insert(27996,34693);
    myResult.push_back(caseQueue.getPriority(59715)); //21
    caseQueue.insert(60954,80826);
    caseQueue.insert(1302,25865);
    caseQueue.updatePriority(21524, 43502);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(28614,39252);
    caseQueue.updatePriority(21524, 95461);
    caseQueue.insert(78043,40225);
    myResult.push_back(caseQueue.getPriority(84424)); //23
    myResult.push_back(caseQueue.getPriority(42574)); //24
    caseQueue.updatePriority(81303, 47234);
    caseQueue.insert(80972,64981);
    caseQueue.insert(50341,39142);
    caseQueue.insert(21618,49440);
    caseQueue.insert(26825,39709);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(21524, 96733);
    caseQueue.updatePriority(26825, 68697);
    myResult.push_back(caseQueue.getPriority(84424)); //26
    myResult.push_back(caseQueue.getPriority(91990)); //27
    caseQueue.updatePriority(27996, 92099);
    caseQueue.insert(47408,47641);
    caseQueue.updatePriority(13482, 52331);
    caseQueue.updatePriority(55905, 77);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(7528, 54490);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(19332,7934);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(1330,65449);
    caseQueue.insert(36551,62235);
    caseQueue.updatePriority(26537, 16457);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(80138)); //33
    caseQueue.updatePriority(13482, 23883);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(80138)); //35
    caseQueue.insert(22633,70243);
    caseQueue.insert(56472,49092);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(7685,8173);
    caseQueue.insert(35068,90532);
    caseQueue.updatePriority(7685, 89202);
    caseQueue.insert(28148,61678);
    caseQueue.updatePriority(78043, 99579);
    caseQueue.insert(76645,30596);
    caseQueue.insert(51629,80243);
    caseQueue.updatePriority(1330, 47937);
    caseQueue.insert(89065,68425);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(47408)); //38
    caseQueue.updatePriority(33975, 82386);
    myResult.push_back(caseQueue.getPriority(33975)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(27996)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(18092,20068);
    caseQueue.insert(42512,68889);
    caseQueue.insert(19946,34486);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(91990)); //44
    static const int resultListArray[] = {-1, 32104, 31850, 49105, 66488, 38782, 25604, 18874, 85314, 80717, 62573, 60200, 42383, 81821, 67152, 64894, 79055, 31946, 86932, 90358, 67536, 2250, 54053, 82747, 23400, 54053, 73129, 55905, 5349, 19332, 1302, 26537, 45402, 13482, 45402, 95814, 76645, 47641, 82386, 50341, 92099, 28614, 18092, 73129}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(83): Basarili" << endl;
    else cout << "Case(83): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_84(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 189);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(28199,97322);
    caseQueue.updatePriority(28199, 49063);
    caseQueue.insert(31149,95731);
    caseQueue.updatePriority(31149, 64729);
    myResult.push_back(caseQueue.getPriority(31149)); //2
    caseQueue.insert(6690,22569);
    caseQueue.insert(97008,79169);
    caseQueue.updatePriority(6690, 59537);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(6690)); //4
    caseQueue.updatePriority(6690, 26104);
    caseQueue.updatePriority(31149, 16348);
    caseQueue.insert(68326,52503);
    caseQueue.insert(86999,76647);
    caseQueue.updatePriority(97008, 25690);
    caseQueue.updatePriority(97008, 85962);
    caseQueue.insert(4817,18153);
    caseQueue.insert(99369,74132);
    caseQueue.insert(33853,62304);
    caseQueue.updatePriority(6690, 40928);
    caseQueue.insert(98069,50050);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(97008, 17393);
    caseQueue.updatePriority(4817, 97582);
    myResult.push_back(caseQueue.getPriority(86999)); //6
    caseQueue.updatePriority(4817, 97777);
    myResult.push_back(caseQueue.getPriority(98069)); //7
    caseQueue.insert(37814,91617);
    caseQueue.updatePriority(99369, 80812);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(86999)); //9
    myResult.push_back(caseQueue.getPriority(98069)); //10
    caseQueue.updatePriority(33853, 45959);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(86999, 96720);
    caseQueue.insert(47569,77468);
    caseQueue.insert(94052,4374);
    caseQueue.updatePriority(99369, 46310);
    myResult.push_back(caseQueue.getPriority(99369)); //12
    myResult.push_back(caseQueue.getPriority(37814)); //13
    caseQueue.updatePriority(37814, 23171);
    caseQueue.insert(76030,63469);
    myResult.push_back(caseQueue.getPriority(47569)); //14
    caseQueue.insert(92989,78400);
    caseQueue.insert(22516,15067);
    caseQueue.insert(84989,98368);
    caseQueue.updatePriority(47569, 98037);
    caseQueue.updatePriority(84989, 54941);
    caseQueue.insert(77154,13946);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(52220,44962);
    myResult.push_back(caseQueue.getPriority(86999)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(31253,66658);
    caseQueue.insert(52882,37644);
    caseQueue.insert(29584,30344);
    caseQueue.updatePriority(33853, 24225);
    caseQueue.insert(73049,45964);
    caseQueue.insert(40158,12277);
    myResult.push_back(caseQueue.getPriority(37814)); //19
    caseQueue.updatePriority(92989, 32419);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(76820,51544);
    caseQueue.insert(35691,26082);
    caseQueue.insert(67633,11598);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(28408,70488);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(4149,35370);
    myResult.push_back(caseQueue.getPriority(35691)); //24
    caseQueue.updatePriority(31253, 15569);
    caseQueue.updatePriority(28408, 44478);
    caseQueue.insert(7075,77578);
    caseQueue.updatePriority(47569, 103);
    caseQueue.insert(68602,18367);
    myResult.push_back(caseQueue.getPriority(31253)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(92989)); //27
    caseQueue.insert(42718,3300);
    caseQueue.updatePriority(99369, 17028);
    caseQueue.insert(85139,84448);
    caseQueue.updatePriority(7075, 26200);
    caseQueue.updatePriority(4817, 28824);
    caseQueue.updatePriority(99369, 75424);
    myResult.push_back(caseQueue.getPriority(73049)); //28
    myResult.push_back(caseQueue.getPriority(92989)); //29
    caseQueue.insert(67792,45435);
    caseQueue.insert(74106,33566);
    myResult.push_back(caseQueue.getPriority(29584)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(49717,13644);
    caseQueue.insert(51067,83821);
    caseQueue.insert(69380,78180);
    myResult.push_back(caseQueue.getPriority(35691)); //32
    caseQueue.insert(11174,91504);
    caseQueue.insert(37776,31331);
    caseQueue.updatePriority(31253, 39932);
    myResult.push_back(caseQueue.getPriority(84989)); //33
    caseQueue.updatePriority(52220, 93051);
    caseQueue.insert(26061,84490);
    myResult.push_back(caseQueue.getPriority(84989)); //34
    caseQueue.insert(74626,90848);
    caseQueue.insert(86526,62132);
    caseQueue.insert(64688,78842);
    caseQueue.insert(37075,70805);
    myResult.push_back(caseQueue.getPriority(74626)); //35
    caseQueue.updatePriority(85139, 66187);
    caseQueue.updatePriority(69380, 47781);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(67003,51622);
    caseQueue.insert(12922,94074);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(52419,99678);
    caseQueue.insert(47136,17704);
    myResult.push_back(caseQueue.getPriority(12922)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(35691)); //40
    myResult.push_back(caseQueue.getPriority(67792)); //41
    caseQueue.insert(93219,82565);
    caseQueue.insert(51402,41017);
    caseQueue.insert(43219,84091);
    myResult.push_back(caseQueue.getPriority(73049)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(52220, 8559);
    caseQueue.updatePriority(52419, 66106);
    myResult.push_back(caseQueue.getPriority(86526)); //44
    caseQueue.updatePriority(98069, 3399);
    caseQueue.insert(39008,70688);
    caseQueue.updatePriority(37075, 96980);
    myResult.push_back(caseQueue.getPriority(68326)); //45
    caseQueue.insert(96453,14015);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(76030, 76709);
    caseQueue.updatePriority(92989, 87979);
    caseQueue.insert(26986,82454);
    caseQueue.insert(43283,50836);
    caseQueue.insert(75825,64342);
    caseQueue.insert(92367,10208);
    myResult.push_back(caseQueue.getPriority(43283)); //47
    myResult.push_back(caseQueue.getPriority(92367)); //48
    caseQueue.updatePriority(37776, 77352);
    caseQueue.updatePriority(11174, 8078);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(22761,9589);
    myResult.push_back(caseQueue.getPriority(74626)); //50
    caseQueue.updatePriority(52419, 56088);
    myResult.push_back(caseQueue.getPriority(76030)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(76030, 6436);
    myResult.push_back(caseQueue.getPriority(76030)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(42520,3095);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(68326, 33899);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(39008, 83251);
    caseQueue.insert(92962,82208);
    caseQueue.insert(1919,67099);
    caseQueue.updatePriority(4817, 73438);
    caseQueue.updatePriority(43219, 66123);
    caseQueue.insert(69867,61798);
    caseQueue.insert(38651,22934);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(92989)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(4149, 45228);
    caseQueue.insert(36581,15460);
    myResult.push_back(caseQueue.getPriority(39008)); //60
    caseQueue.insert(64595,16076);
    caseQueue.insert(90103,48066);
    caseQueue.insert(68710,97422);
    caseQueue.updatePriority(86999, 29039);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(96346,5738);
    caseQueue.insert(38182,86313);
    caseQueue.insert(75422,65332);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(86999, 32252);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(54128,33610);
    caseQueue.updatePriority(84989, 26029);
    myResult.push_back(caseQueue.getPriority(4149)); //64
    caseQueue.insert(44411,60913);
    myResult.push_back(caseQueue.getPriority(54128)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(69860,88600);
    static const int resultListArray[] = {-1, 64729, 28199, 59537, 31149, 76647, 50050, 97008, 76647, 50050, 6690, 46310, 91617, 77468, 94052, 96720, 77154, 22516, 23171, 40158, 67633, 37814, 33853, 26082, 15569, 47569, 32419, 45964, 32419, 30344, 42718, 26082, 54941, 54941, 90848, 49717, 68602, 94074, 47136, 26082, 45435, 45964, 35691, 62132, 52503, 98069, 50836, 10208, 11174, 90848, 76709, 52220, 6436, 76030, 42520, 22761, 92367, 87979, 96453, 83251, 36581, 96346, 64595, 45228, 33610, 38651}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(84): Basarili" << endl;
    else cout << "Case(84): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_85(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 231);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(36370)); //1
    caseQueue.insert(91416,67012);
    caseQueue.insert(67815,73348);
    myResult.push_back(caseQueue.getPriority(67815)); //2
    caseQueue.insert(35276,36696);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(37959,62757);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(77274,82954);
    caseQueue.updatePriority(67815, 669);
    caseQueue.updatePriority(67815, 5208);
    myResult.push_back(caseQueue.getPriority(77274)); //5
    caseQueue.insert(89656,56536);
    caseQueue.updatePriority(89656, 7668);
    caseQueue.insert(51558,59256);
    caseQueue.updatePriority(91416, 37931);
    caseQueue.updatePriority(67815, 89952);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(53082,82839);
    myResult.push_back(caseQueue.getPriority(53082)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(87291,84448);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(25253,30854);
    caseQueue.insert(51461,23132);
    caseQueue.insert(32022,37166);
    caseQueue.insert(20475,50187);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(20475, 83946);
    myResult.push_back(caseQueue.getPriority(77274)); //12
    myResult.push_back(caseQueue.getPriority(20475)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(1922,97153);
    caseQueue.insert(79657,41806);
    caseQueue.insert(72803,9249);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(20475, 46702);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(96936,191);
    caseQueue.insert(3665,50573);
    caseQueue.updatePriority(96936, 84259);
    caseQueue.updatePriority(87291, 48056);
    caseQueue.insert(74112,38937);
    caseQueue.updatePriority(1922, 56620);
    myResult.push_back(caseQueue.getPriority(77274)); //18
    myResult.push_back(caseQueue.getPriority(1922)); //19
    caseQueue.updatePriority(77274, 64665);
    myResult.push_back(caseQueue.getPriority(77274)); //20
    caseQueue.insert(73534,22394);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(3665, 60607);
    caseQueue.updatePriority(1922, 48723);
    myResult.push_back(caseQueue.getPriority(87291)); //24
    myResult.push_back(caseQueue.getPriority(96936)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(46800,77105);
    caseQueue.insert(43567,99724);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(13880,17277);
    caseQueue.insert(69624,76920);
    caseQueue.insert(93690,78932);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(67815)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(80171,49278);
    myResult.push_back(caseQueue.getPriority(80171)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(67815)); //36
    caseQueue.insert(13918,19715);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(68776,43897);
    myResult.push_back(caseQueue.getPriority(96936)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(43567, 30670);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(89780, 66052);
    caseQueue.insert(79737,19214);
    myResult.push_back(caseQueue.getPriority(79737)); //44
    caseQueue.insert(64227,32693);
    myResult.push_back(caseQueue.getPriority(79737)); //45
    myResult.push_back(caseQueue.getPriority(79737)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(64227)); //48
    caseQueue.updatePriority(64227, 87109);
    caseQueue.insert(7051,7730);
    caseQueue.insert(353,53594);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(64227)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(64227)); //52
    caseQueue.insert(75879,38346);
    caseQueue.updatePriority(75879, 45576);
    myResult.push_back(caseQueue.getPriority(64227)); //53
    caseQueue.insert(89077,22597);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(75879, 92028);
    caseQueue.insert(81750,71903);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(64227, 21197);
    caseQueue.insert(89543,55624);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(89543, 89662);
    caseQueue.insert(36010,87837);
    caseQueue.updatePriority(89543, 15924);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(12322,56708);
    caseQueue.insert(50098,3653);
    myResult.push_back(caseQueue.getPriority(50098)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(33690,53548);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(96135,63798);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(36010)); //62
    caseQueue.updatePriority(36010, 16499);
    caseQueue.insert(11073,119);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(26863,98791);
    caseQueue.updatePriority(96135, 35588);
    caseQueue.insert(31923,80791);
    caseQueue.updatePriority(75879, 90560);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(237,62121);
    myResult.push_back(caseQueue.getPriority(75879)); //65
    myResult.push_back(caseQueue.getPriority(31923)); //66
    caseQueue.insert(29345,93556);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(68089,27615);
    caseQueue.insert(38892,93428);
    myResult.push_back(caseQueue.getPriority(29345)); //69
    caseQueue.insert(41137,55304);
    caseQueue.updatePriority(29345, 27241);
    caseQueue.insert(26148,76025);
    myResult.push_back(caseQueue.getPriority(29345)); //70
    caseQueue.updatePriority(68089, 11428);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(63468,59310);
    caseQueue.insert(91783,81863);
    caseQueue.insert(46822,45347);
    caseQueue.updatePriority(26148, 13142);
    caseQueue.updatePriority(26148, 18573);
    caseQueue.insert(21846,67447);
    caseQueue.updatePriority(46822, 15218);
    caseQueue.insert(38176,74648);
    caseQueue.insert(28996,31902);
    caseQueue.insert(98615,23121);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(26148, 79637);
    caseQueue.insert(65979,70008);
    caseQueue.updatePriority(41137, 87684);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(38176)); //74
    caseQueue.insert(81527,16621);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(10802,97680);
    myResult.push_back(caseQueue.getPriority(26148)); //77
    caseQueue.updatePriority(65979, 48026);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(51845,88074);
    myResult.push_back(caseQueue.getPriority(75879)); //81
    caseQueue.updatePriority(26148, 41236);
    caseQueue.insert(55919,6778);
    caseQueue.updatePriority(31923, 8689);
    caseQueue.updatePriority(10802, 72578);
    caseQueue.updatePriority(21846, 88240);
    caseQueue.updatePriority(38176, 12081);
    caseQueue.insert(84507,40321);
    caseQueue.insert(29401,43915);
    caseQueue.updatePriority(55919, 71260);
    caseQueue.insert(28471,32152);
    myResult.push_back(caseQueue.getPriority(75879)); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(75879, 34169);
    caseQueue.updatePriority(28471, 33162);
    caseQueue.insert(48620,8944);
    myResult.push_back(caseQueue.getPriority(55919)); //84
    caseQueue.updatePriority(38892, 92403);
    caseQueue.updatePriority(75879, 4536);
    caseQueue.insert(12868,65409);
    myResult.push_back(caseQueue.getPriority(26863)); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(81647,74556);
    caseQueue.updatePriority(48620, 61728);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.updatePriority(48620, 68783);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.updatePriority(38892, 98820);
    caseQueue.updatePriority(26863, 9157);
    caseQueue.insert(86362,75484);
    myResult.push_back(caseQueue.getPriority(81647)); //89
    caseQueue.insert(65520,54717);
    caseQueue.updatePriority(41137, 42300);
    myResult.push_back(caseQueue.deleteMin()); //90
    myResult.push_back(caseQueue.getPriority(55919)); //91
    caseQueue.insert(20741,90172);
    myResult.push_back(caseQueue.getPriority(12868)); //92
    caseQueue.insert(13804,66180);
    caseQueue.insert(87077,1045);
    myResult.push_back(caseQueue.getPriority(21846)); //93
    caseQueue.insert(837,91067);
    caseQueue.updatePriority(91783, 3482);
    caseQueue.updatePriority(20741, 5469);
    caseQueue.insert(47040,17192);
    caseQueue.updatePriority(29401, 26408);
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.insert(82109,86469);
    myResult.push_back(caseQueue.getPriority(65520)); //95
    caseQueue.insert(45553,62259);
    myResult.push_back(caseQueue.deleteMin()); //96
    caseQueue.insert(96914,10742);
    caseQueue.insert(39256,49265);
    caseQueue.insert(72909,39431);
    caseQueue.updatePriority(51845, 45387);
    caseQueue.updatePriority(20741, 61272);
    caseQueue.insert(80936,99474);
    myResult.push_back(caseQueue.deleteMin()); //97
    caseQueue.updatePriority(84507, 87547);
    static const int resultListArray[] = {-1, 73348, 35276, 37959, 82954, 89656, 82839, 91416, 51558, 53082, 51461, 82954, 83946, 25253, 32022, 72803, 79657, 82954, 56620, 64665, 73534, 74112, 20475, 48056, 84259, 87291, 1922, 3665, 77274, 46800, 13880, 89952, 69624, 49278, 80171, 89952, 13918, 84259, 68776, 93690, 43567, 96936, 67815, 19214, 19214, 19214, 79737, 32693, 7051, 87109, 353, 87109, 87109, 89077, 81750, 64227, 89543, 3653, 50098, 33690, 12322, 87837, 11073, 36010, 90560, 80791, 96135, 237, 93556, 27241, 68089, 46822, 98615, 74648, 81527, 29345, 79637, 28996, 65979, 63468, 90560, 90560, 31923, 71260, 98791, 75879, 38176, 28471, 74556, 26863, 71260, 65409, 88240, 87077, 54717, 91783, 96914}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(85): Basarili" << endl;
    else cout << "Case(85): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_86(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 191);

    vector<int> myResult; 
    caseQueue.insert(39547,71851);
    myResult.push_back(caseQueue.getPriority(39547)); //1
    caseQueue.insert(30939,75755);
    caseQueue.updatePriority(39547, 14855);
    caseQueue.insert(55135,45489);
    caseQueue.insert(53742,38806);
    caseQueue.updatePriority(55135, 72646);
    caseQueue.insert(22526,66054);
    caseQueue.insert(50688,42079);
    myResult.push_back(caseQueue.getPriority(39547)); //2
    caseQueue.insert(47786,34021);
    myResult.push_back(caseQueue.getPriority(55135)); //3
    caseQueue.insert(96709,55141);
    caseQueue.insert(19104,75090);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(70971,73297);
    myResult.push_back(caseQueue.getPriority(96709)); //6
    caseQueue.insert(58448,6725);
    caseQueue.updatePriority(19104, 48038);
    caseQueue.updatePriority(70971, 71666);
    caseQueue.insert(71195,50565);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(60186,45546);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(26443,48496);
    caseQueue.insert(12842,79217);
    myResult.push_back(caseQueue.getPriority(30939)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(94187,25685);
    caseQueue.insert(19671,44962);
    caseQueue.updatePriority(22526, 23410);
    caseQueue.insert(74600,22025);
    myResult.push_back(caseQueue.getPriority(12842)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(55135)); //13
    caseQueue.insert(83887,96935);
    caseQueue.insert(12636,99027);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(85573,17560);
    caseQueue.insert(2798,20663);
    myResult.push_back(caseQueue.getPriority(96709)); //15
    caseQueue.updatePriority(83887, 96147);
    caseQueue.insert(6967,43832);
    caseQueue.insert(7192,20156);
    caseQueue.insert(33368,14654);
    caseQueue.updatePriority(7192, 53521);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(5156,54918);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(63281,49128);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(71195, 94440);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(91003,68501);
    myResult.push_back(caseQueue.getPriority(71195)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(12842)); //24
    caseQueue.insert(55132,71023);
    caseQueue.insert(68404,28794);
    caseQueue.insert(74392,12075);
    caseQueue.insert(430,11922);
    caseQueue.updatePriority(55132, 2213);
    caseQueue.insert(54118,78424);
    myResult.push_back(caseQueue.getPriority(26443)); //25
    myResult.push_back(caseQueue.getPriority(70971)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(70971)); //28
    myResult.push_back(caseQueue.getPriority(91003)); //29
    caseQueue.updatePriority(54118, 77495);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(70971)); //31
    caseQueue.insert(93395,72858);
    caseQueue.updatePriority(70971, 6760);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(71195)); //34
    caseQueue.insert(57206,90536);
    caseQueue.insert(13482,29096);
    caseQueue.insert(13717,86977);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(8355,9365);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(26443)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(61020,23593);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(5156, 8444);
    caseQueue.updatePriority(57206, 87330);
    caseQueue.updatePriority(63281, 75898);
    caseQueue.insert(27997,48528);
    caseQueue.updatePriority(91003, 25437);
    myResult.push_back(caseQueue.getPriority(91003)); //41
    caseQueue.updatePriority(54118, 69226);
    caseQueue.insert(30107,86278);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(4653,95059);
    myResult.push_back(caseQueue.getPriority(71195)); //45
    caseQueue.insert(11430,32819);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(98678,94594);
    caseQueue.insert(96417,33932);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(30939)); //48
    caseQueue.insert(73733,59187);
    myResult.push_back(caseQueue.getPriority(63281)); //49
    caseQueue.insert(43499,62586);
    caseQueue.updatePriority(27997, 11444);
    caseQueue.insert(77673,58793);
    myResult.push_back(caseQueue.getPriority(12636)); //50
    caseQueue.insert(807,44418);
    myResult.push_back(caseQueue.getPriority(71195)); //51
    caseQueue.insert(18337,91560);
    myResult.push_back(caseQueue.getPriority(55135)); //52
    myResult.push_back(caseQueue.getPriority(27997)); //53
    caseQueue.updatePriority(83887, 38765);
    caseQueue.updatePriority(12842, 38012);
    caseQueue.insert(23076,38181);
    myResult.push_back(caseQueue.getPriority(30107)); //54
    caseQueue.updatePriority(57206, 22197);
    caseQueue.insert(38090,98854);
    caseQueue.updatePriority(7192, 93240);
    caseQueue.insert(56514,887);
    caseQueue.updatePriority(93395, 6283);
    myResult.push_back(caseQueue.getPriority(54118)); //55
    caseQueue.insert(49966,77691);
    caseQueue.updatePriority(13717, 90947);
    myResult.push_back(caseQueue.getPriority(83887)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(43499)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(87589,60033);
    caseQueue.updatePriority(55135, 38036);
    caseQueue.insert(20808,57910);
    caseQueue.updatePriority(18337, 25563);
    caseQueue.insert(67186,35468);
    myResult.push_back(caseQueue.getPriority(18337)); //60
    caseQueue.insert(38160,13791);
    caseQueue.updatePriority(38090, 22798);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(63129,29631);
    caseQueue.updatePriority(30107, 95562);
    myResult.push_back(caseQueue.getPriority(30939)); //62
    caseQueue.updatePriority(57206, 80270);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(54140,69247);
    caseQueue.updatePriority(807, 53979);
    caseQueue.insert(48522,2173);
    myResult.push_back(caseQueue.getPriority(54140)); //64
    myResult.push_back(caseQueue.getPriority(87589)); //65
    myResult.push_back(caseQueue.getPriority(30107)); //66
    caseQueue.updatePriority(38090, 99331);
    caseQueue.insert(32072,1051);
    caseQueue.insert(10218,15746);
    caseQueue.insert(41117,66070);
    caseQueue.updatePriority(98678, 66936);
    caseQueue.updatePriority(83887, 60843);
    myResult.push_back(caseQueue.getPriority(13717)); //67
    caseQueue.updatePriority(54140, 45006);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(33238,56097);
    caseQueue.insert(31887,77025);
    myResult.push_back(caseQueue.getPriority(13717)); //71
    caseQueue.insert(97931,48839);
    caseQueue.insert(75312,74918);
    caseQueue.updatePriority(98678, 73646);
    myResult.push_back(caseQueue.getPriority(77673)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(13717)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(80213,89861);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(89491,37831);
    caseQueue.updatePriority(55135, 48768);
    myResult.push_back(caseQueue.getPriority(20808)); //78
    caseQueue.insert(19234,38538);
    caseQueue.updatePriority(75312, 36329);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(34057,67821);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(1412,37219);
    myResult.push_back(caseQueue.getPriority(54140)); //82
    static const int resultListArray[] = {71851, 14855, 72646, 39547, 47786, 55141, 58448, 53742, 75755, 50688, 79217, 74600, 72646, 22526, 55141, 33368, 85573, 2798, 94187, 6967, 19671, 94440, 60186, 79217, 48496, 71666, 55132, 71666, 68501, 430, 71666, 70971, 74392, 94440, 68404, 8355, 48496, 13482, 19104, 61020, 25437, 5156, 91003, 26443, 94440, 11430, 96417, 75755, 75898, 99027, 94440, 72646, 11444, 86278, 69226, 38765, 56514, 62586, 93395, 25563, 27997, 75755, 38160, 69247, 60033, 95562, 90947, 32072, 48522, 10218, 90947, 58793, 18337, 90947, 63129, 67186, 12842, 57910, 75312, 89491, 23076, 45006}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(86): Basarili" << endl;
    else cout << "Case(86): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_87(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 117);

    vector<int> myResult; 
    caseQueue.updatePriority(87668, 90913);
    caseQueue.insert(54512,23813);
    caseQueue.insert(80708,40964);
    myResult.push_back(caseQueue.getPriority(54512)); //1
    caseQueue.updatePriority(54512, 2729);
    caseQueue.insert(91438,42900);
    caseQueue.insert(23608,60340);
    caseQueue.insert(14276,86960);
    myResult.push_back(caseQueue.getPriority(54512)); //2
    caseQueue.insert(97917,1023);
    caseQueue.updatePriority(91438, 73187);
    caseQueue.insert(51984,73692);
    caseQueue.insert(63831,72193);
    caseQueue.insert(66905,73004);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(94839,7278);
    caseQueue.updatePriority(14276, 63004);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(47456,10063);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(47456)); //6
    caseQueue.insert(58246,36487);
    myResult.push_back(caseQueue.getPriority(58246)); //7
    caseQueue.insert(92689,64565);
    caseQueue.insert(83216,49861);
    myResult.push_back(caseQueue.getPriority(63831)); //8
    caseQueue.updatePriority(83216, 74699);
    caseQueue.insert(52221,52400);
    myResult.push_back(caseQueue.getPriority(14276)); //9
    caseQueue.updatePriority(66905, 67542);
    myResult.push_back(caseQueue.getPriority(66905)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(46550,4531);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(11407,34647);
    caseQueue.insert(76608,63420);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(9596,79062);
    caseQueue.insert(63708,16576);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(16249,39683);
    caseQueue.insert(81682,28009);
    caseQueue.updatePriority(91438, 58193);
    caseQueue.updatePriority(52221, 36585);
    caseQueue.insert(8840,51116);
    caseQueue.insert(38699,61302);
    caseQueue.insert(92242,20161);
    caseQueue.insert(38767,28266);
    caseQueue.insert(89959,64117);
    caseQueue.updatePriority(14276, 711);
    myResult.push_back(caseQueue.getPriority(38767)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(7543,20208);
    caseQueue.insert(13226,21056);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(23800,13647);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(98578,19323);
    caseQueue.insert(9565,7026);
    myResult.push_back(caseQueue.getPriority(83216)); //19
    caseQueue.insert(82889,16035);
    caseQueue.insert(15894,1189);
    caseQueue.updatePriority(16249, 49771);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(47402,60101);
    caseQueue.updatePriority(98578, 64411);
    myResult.push_back(caseQueue.getPriority(92689)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(92689)); //23
    caseQueue.insert(70662,85739);
    caseQueue.insert(2128,27991);
    caseQueue.updatePriority(92689, 78756);
    myResult.push_back(caseQueue.getPriority(7543)); //24
    caseQueue.insert(3702,23374);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(19487,74283);
    caseQueue.insert(88089,19536);
    caseQueue.insert(57578,63150);
    caseQueue.insert(43462,29799);
    caseQueue.updatePriority(89959, 5299);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(91438)); //28
    caseQueue.insert(46952,86692);
    caseQueue.insert(27550,36709);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(81814,72514);
    myResult.push_back(caseQueue.getPriority(9596)); //30
    myResult.push_back(caseQueue.getPriority(47402)); //31
    caseQueue.insert(88489,7165);
    caseQueue.updatePriority(8840, 8566);
    caseQueue.updatePriority(88489, 7509);
    caseQueue.insert(30483,21507);
    caseQueue.updatePriority(23608, 49858);
    myResult.push_back(caseQueue.getPriority(51984)); //32
    caseQueue.insert(75275,75623);
    caseQueue.insert(79295,3979);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(95031,86385);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(87587,89628);
    myResult.push_back(caseQueue.getPriority(3702)); //35
    caseQueue.insert(90223,26147);
    caseQueue.insert(16526,82577);
    caseQueue.insert(41176,25809);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(903,7818);
    caseQueue.insert(14291,640);
    caseQueue.insert(5848,1083);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(83380,14633);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(16526, 17277);
    caseQueue.insert(76650,61909);
    myResult.push_back(caseQueue.getPriority(9596)); //41
    static const int resultListArray[] = {23813, 2729, 97917, 54512, 94839, 10063, 36487, 72193, 63004, 67542, 47456, 46550, 11407, 63708, 28266, 14276, 92242, 23800, 74699, 15894, 64565, 9565, 64565, 20208, 82889, 7543, 89959, 58193, 88089, 79062, 60101, 73692, 79295, 88489, 23374, 8840, 13226, 30483, 14291, 5848, 79062}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(87): Basarili" << endl;
    else cout << "Case(87): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_88(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 196);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(21168,18662);
    caseQueue.updatePriority(21168, 72672);
    caseQueue.insert(80500,68183);
    myResult.push_back(caseQueue.getPriority(80500)); //2
    caseQueue.insert(27655,50708);
    caseQueue.updatePriority(27655, 74221);
    caseQueue.updatePriority(80500, 68458);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(21168, 61302);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(51693)); //6
    caseQueue.insert(31258,49726);
    caseQueue.insert(10353,90755);
    caseQueue.insert(26310,75108);
    myResult.push_back(caseQueue.getPriority(31258)); //7
    myResult.push_back(caseQueue.getPriority(26310)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(10353, 77218);
    caseQueue.insert(17065,69127);
    caseQueue.updatePriority(17065, 47229);
    myResult.push_back(caseQueue.getPriority(17065)); //11
    caseQueue.updatePriority(10353, 95744);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(75965,99683);
    caseQueue.insert(59764,35561);
    myResult.push_back(caseQueue.getPriority(75965)); //14
    myResult.push_back(caseQueue.getPriority(75965)); //15
    caseQueue.insert(37378,72239);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(75965)); //17
    caseQueue.insert(59477,19895);
    caseQueue.insert(28220,34988);
    caseQueue.insert(72132,54533);
    caseQueue.insert(17067,95962);
    caseQueue.insert(32526,85704);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(66915,68736);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(72132, 25224);
    caseQueue.updatePriority(72132, 13015);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(66915)); //21
    caseQueue.insert(15295,49297);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(32526, 65656);
    caseQueue.insert(37705,96331);
    myResult.push_back(caseQueue.getPriority(37705)); //23
    caseQueue.insert(90287,76879);
    caseQueue.updatePriority(17067, 61056);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(38302,57278);
    myResult.push_back(caseQueue.getPriority(32526)); //25
    myResult.push_back(caseQueue.getPriority(75965)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(10992,50086);
    caseQueue.updatePriority(32526, 18999);
    caseQueue.insert(7667,36707);
    caseQueue.updatePriority(66915, 9324);
    caseQueue.insert(91500,39416);
    myResult.push_back(caseQueue.getPriority(37378)); //28
    myResult.push_back(caseQueue.getPriority(37705)); //29
    caseQueue.insert(89528,37683);
    caseQueue.updatePriority(89528, 47714);
    caseQueue.insert(54144,39975);
    myResult.push_back(caseQueue.getPriority(91500)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(37705, 63977);
    caseQueue.insert(35225,80650);
    myResult.push_back(caseQueue.getPriority(37378)); //36
    caseQueue.insert(79408,97341);
    caseQueue.insert(86529,50861);
    caseQueue.updatePriority(90287, 42448);
    caseQueue.insert(30182,50594);
    caseQueue.updatePriority(79408, 78568);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(29531,27424);
    caseQueue.updatePriority(86529, 65377);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(18581,49371);
    caseQueue.insert(22269,4499);
    caseQueue.updatePriority(30182, 62479);
    myResult.push_back(caseQueue.getPriority(10992)); //40
    caseQueue.insert(7409,85230);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(37378)); //42
    myResult.push_back(caseQueue.getPriority(86529)); //43
    myResult.push_back(caseQueue.getPriority(30182)); //44
    caseQueue.insert(51579,62709);
    caseQueue.insert(72883,93649);
    caseQueue.insert(68656,43628);
    myResult.push_back(caseQueue.getPriority(79408)); //45
    caseQueue.insert(14570,67675);
    caseQueue.insert(67158,77073);
    caseQueue.insert(50292,71438);
    caseQueue.insert(7645,98229);
    caseQueue.insert(83788,13708);
    myResult.push_back(caseQueue.getPriority(30182)); //46
    caseQueue.insert(727,99257);
    caseQueue.insert(73547,44216);
    myResult.push_back(caseQueue.getPriority(51579)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(82512,31236);
    caseQueue.updatePriority(18581, 70101);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(47308,6754);
    caseQueue.insert(82603,71441);
    caseQueue.updatePriority(73547, 93118);
    caseQueue.updatePriority(75965, 40688);
    caseQueue.updatePriority(14570, 82993);
    caseQueue.updatePriority(7645, 90395);
    caseQueue.updatePriority(7645, 23265);
    caseQueue.insert(59852,16838);
    myResult.push_back(caseQueue.getPriority(67158)); //50
    caseQueue.insert(6666,42726);
    caseQueue.updatePriority(10992, 18398);
    myResult.push_back(caseQueue.getPriority(68656)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(32979,9558);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(37378)); //54
    caseQueue.insert(4558,70698);
    caseQueue.insert(14311,98662);
    caseQueue.insert(61818,68537);
    caseQueue.updatePriority(61818, 32478);
    caseQueue.insert(73072,37462);
    caseQueue.insert(36647,20475);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(7645, 74717);
    caseQueue.updatePriority(35225, 59019);
    caseQueue.insert(7507,25293);
    caseQueue.insert(24558,53297);
    caseQueue.updatePriority(36647, 46144);
    caseQueue.updatePriority(82603, 51495);
    caseQueue.insert(71265,96442);
    caseQueue.updatePriority(4558, 69219);
    caseQueue.insert(65622,80465);
    myResult.push_back(caseQueue.getPriority(10992)); //56
    caseQueue.insert(40196,62969);
    myResult.push_back(caseQueue.getPriority(73547)); //57
    caseQueue.updatePriority(82603, 13547);
    caseQueue.insert(55350,55659);
    caseQueue.insert(14801,41866);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(61818, 22358);
    caseQueue.insert(60530,66113);
    caseQueue.insert(1201,96997);
    caseQueue.insert(69490,16324);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(7645, 53148);
    caseQueue.updatePriority(18581, 87001);
    myResult.push_back(caseQueue.getPriority(35225)); //61
    caseQueue.updatePriority(61818, 98577);
    myResult.push_back(caseQueue.getPriority(14801)); //62
    caseQueue.insert(14591,19467);
    caseQueue.updatePriority(55350, 89056);
    caseQueue.insert(90456,52573);
    caseQueue.insert(81324,66260);
    myResult.push_back(caseQueue.getPriority(30182)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(93913,40484);
    caseQueue.insert(64858,42161);
    myResult.push_back(caseQueue.getPriority(7507)); //65
    caseQueue.insert(80820,82468);
    caseQueue.insert(701,51926);
    caseQueue.insert(45740,56598);
    caseQueue.insert(80280,56381);
    myResult.push_back(caseQueue.getPriority(79408)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(37378, 76478);
    caseQueue.insert(33414,62722);
    caseQueue.insert(58100,85974);
    myResult.push_back(caseQueue.getPriority(6666)); //68
    caseQueue.insert(57940,89575);
    myResult.push_back(caseQueue.getPriority(14311)); //69
    caseQueue.insert(37142,73230);
    caseQueue.insert(43264,62045);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(36647)); //71
    caseQueue.insert(89580,21932);
    caseQueue.updatePriority(45740, 17515);
    caseQueue.updatePriority(81324, 31566);
    caseQueue.insert(20249,33435);
    myResult.push_back(caseQueue.getPriority(80280)); //72
    caseQueue.insert(50415,89427);
    caseQueue.insert(58711,6952);
    caseQueue.insert(37701,87719);
    static const int resultListArray[] = {-1, 68183, 80500, 21168, 27655, -1, 49726, 75108, 31258, 26310, 47229, 17065, 10353, 99683, 99683, 59764, 99683, 59477, 28220, 72132, 68736, 15295, 96331, 17067, 65656, 99683, 38302, 72239, 96331, 39416, 66915, 32526, 7667, 91500, 54144, 72239, 90287, 89528, 29531, 50086, 22269, 72239, 65377, 62479, 78568, 62479, 62709, 83788, 82512, 77073, 43628, 47308, 32979, 72239, 59852, 18398, 93118, 82603, 69490, 10992, 59019, 41866, 62479, 14591, 25293, 78568, 7507, 42726, 98662, 73072, 46144, 56381}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(88): Basarili" << endl;
    else cout << "Case(88): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_89(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 173);

    vector<int> myResult; 
    caseQueue.insert(60766,8835);
    caseQueue.updatePriority(60766, 79797);
    caseQueue.insert(7066,86840);
    caseQueue.insert(79907,42242);
    caseQueue.insert(27857,29669);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(94561,91819);
    myResult.push_back(caseQueue.getPriority(60766)); //2
    caseQueue.updatePriority(60766, 9558);
    caseQueue.updatePriority(7066, 45212);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(7066, 35607);
    caseQueue.updatePriority(79907, 25092);
    caseQueue.insert(80276,46535);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(37729,10829);
    myResult.push_back(caseQueue.getPriority(80276)); //5
    caseQueue.insert(84582,78390);
    caseQueue.updatePriority(37729, 65823);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(94561, 93318);
    myResult.push_back(caseQueue.getPriority(80276)); //7
    myResult.push_back(caseQueue.getPriority(37729)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(84582)); //11
    caseQueue.updatePriority(94561, 59704);
    caseQueue.insert(40679,51472);
    caseQueue.insert(17697,35787);
    caseQueue.insert(69257,3226);
    myResult.push_back(caseQueue.getPriority(94561)); //12
    caseQueue.insert(48413,42913);
    caseQueue.insert(81135,45468);
    caseQueue.updatePriority(40679, 51711);
    caseQueue.updatePriority(94561, 83347);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(48413, 73612);
    myResult.push_back(caseQueue.getPriority(40679)); //15
    caseQueue.insert(43101,20917);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(4771,98229);
    caseQueue.insert(83303,20346);
    caseQueue.insert(43938,66492);
    caseQueue.insert(50209,96438);
    caseQueue.updatePriority(83303, 23207);
    caseQueue.insert(77538,45604);
    myResult.push_back(caseQueue.getPriority(77538)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(52193,44527);
    caseQueue.insert(55886,96506);
    caseQueue.updatePriority(77538, 13242);
    caseQueue.insert(15736,58188);
    caseQueue.insert(95006,27498);
    caseQueue.updatePriority(43938, 5175);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(4771, 40628);
    myResult.push_back(caseQueue.getPriority(94561)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(94561)); //22
    caseQueue.updatePriority(95006, 70544);
    caseQueue.updatePriority(50209, 65064);
    caseQueue.updatePriority(52193, 93106);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(67502,2361);
    myResult.push_back(caseQueue.getPriority(67502)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(5227,5124);
    caseQueue.updatePriority(55886, 13358);
    myResult.push_back(caseQueue.getPriority(50209)); //26
    caseQueue.insert(7618,59573);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(56456,11164);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(61411,92069);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(95006)); //30
    myResult.push_back(caseQueue.getPriority(15736)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(7618)); //33
    myResult.push_back(caseQueue.getPriority(50209)); //34
    caseQueue.insert(28553,28387);
    myResult.push_back(caseQueue.getPriority(28553)); //35
    caseQueue.insert(94564,57959);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(58931,68128);
    caseQueue.insert(80245,53144);
    caseQueue.insert(88991,28344);
    caseQueue.insert(1576,89001);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(40679)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(91506,16319);
    caseQueue.insert(48922,62006);
    caseQueue.insert(58796,52130);
    caseQueue.updatePriority(94561, 46319);
    caseQueue.insert(93757,20869);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(94561, 20870);
    caseQueue.insert(22491,88613);
    caseQueue.insert(62961,75961);
    caseQueue.insert(26965,50492);
    caseQueue.updatePriority(50209, 75625);
    caseQueue.insert(3474,3308);
    caseQueue.updatePriority(84582, 86056);
    myResult.push_back(caseQueue.getPriority(58931)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(73829,34485);
    caseQueue.insert(44238,98471);
    caseQueue.updatePriority(26965, 15783);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(40603,78436);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(58931)); //46
    caseQueue.updatePriority(15736, 98932);
    caseQueue.updatePriority(50209, 46932);
    caseQueue.updatePriority(84582, 38311);
    caseQueue.insert(42183,87670);
    caseQueue.insert(51211,89302);
    caseQueue.insert(99827,55527);
    caseQueue.updatePriority(44238, 14052);
    caseQueue.updatePriority(52193, 37094);
    caseQueue.insert(2090,89097);
    caseQueue.updatePriority(94564, 274);
    caseQueue.updatePriority(15736, 2641);
    caseQueue.insert(69538,54988);
    caseQueue.insert(70736,17423);
    caseQueue.insert(30918,16518);
    caseQueue.updatePriority(61411, 36648);
    caseQueue.updatePriority(15736, 75769);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(58387,85823);
    caseQueue.insert(8407,98979);
    caseQueue.insert(93230,44246);
    caseQueue.insert(6744,54834);
    caseQueue.insert(99002,11688);
    caseQueue.updatePriority(48922, 69434);
    caseQueue.insert(20951,95109);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(71883,440);
    caseQueue.insert(65212,47648);
    caseQueue.updatePriority(58387, 55234);
    caseQueue.updatePriority(51211, 18696);
    caseQueue.insert(94028,47596);
    caseQueue.insert(50953,63974);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(50209)); //51
    caseQueue.insert(64293,90815);
    myResult.push_back(caseQueue.getPriority(95006)); //52
    myResult.push_back(caseQueue.getPriority(84582)); //53
    caseQueue.updatePriority(58796, 17885);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(80245, 67900);
    caseQueue.updatePriority(52193, 76630);
    caseQueue.insert(64662,27460);
    caseQueue.insert(49567,74281);
    caseQueue.insert(1555,33338);
    caseQueue.updatePriority(7618, 69547);
    caseQueue.insert(91198,60256);
    myResult.push_back(caseQueue.getPriority(48413)); //55
    caseQueue.updatePriority(65212, 80744);
    myResult.push_back(caseQueue.getPriority(93230)); //56
    caseQueue.updatePriority(69538, 45221);
    caseQueue.insert(70075,79605);
    caseQueue.updatePriority(93230, 66548);
    caseQueue.updatePriority(64293, 26535);
    myResult.push_back(caseQueue.getPriority(65212)); //57
    caseQueue.updatePriority(65212, 67352);
    caseQueue.updatePriority(94028, 36777);
    myResult.push_back(caseQueue.getPriority(40603)); //58
    caseQueue.insert(80011,34889);
    static const int resultListArray[] = {27857, 79797, 60766, 79907, 46535, 7066, 46535, 65823, 80276, 37729, 78390, 59704, 69257, 17697, 51711, 43101, 45604, 83303, 43938, 83347, 77538, 83347, 4771, 2361, 67502, 65064, 5227, 56456, 55886, 70544, 58188, 81135, 59573, 65064, 28387, 28553, 88991, 51711, 40679, 91506, 93757, 68128, 3474, 26965, 94561, 68128, 94564, 44238, 99002, 71883, 46932, 70544, 38311, 30918, 73612, 44246, 80744, 78436}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(89): Basarili" << endl;
    else cout << "Case(89): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_90(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 177);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(85046, 9449);
    caseQueue.insert(63507,23591);
    myResult.push_back(caseQueue.getPriority(63507)); //3
    caseQueue.updatePriority(63507, 75963);
    myResult.push_back(caseQueue.getPriority(63507)); //4
    caseQueue.insert(49788,57126);
    caseQueue.insert(70095,86517);
    caseQueue.updatePriority(63507, 67807);
    caseQueue.updatePriority(63507, 54719);
    caseQueue.insert(75820,26840);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(21231,23873);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(49788)); //7
    caseQueue.updatePriority(63507, 92033);
    caseQueue.insert(27353,81773);
    caseQueue.insert(3119,31884);
    caseQueue.updatePriority(63507, 25704);
    caseQueue.updatePriority(27353, 37120);
    caseQueue.insert(25171,5205);
    caseQueue.insert(45968,8105);
    caseQueue.insert(88214,72013);
    caseQueue.insert(62902,58877);
    caseQueue.updatePriority(49788, 31070);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(88214, 59381);
    caseQueue.insert(23216,91156);
    myResult.push_back(caseQueue.getPriority(27353)); //10
    caseQueue.updatePriority(27353, 89589);
    caseQueue.updatePriority(3119, 83085);
    myResult.push_back(caseQueue.getPriority(70095)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(3119, 17389);
    myResult.push_back(caseQueue.getPriority(88214)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(88214, 6626);
    caseQueue.insert(60869,94555);
    caseQueue.insert(21894,59257);
    caseQueue.insert(34715,83614);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(3,5589);
    caseQueue.updatePriority(23216, 80210);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(34764,64242);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(91579,15341);
    caseQueue.updatePriority(70095, 13066);
    caseQueue.updatePriority(27353, 33790);
    caseQueue.updatePriority(91579, 62154);
    caseQueue.insert(84600,70546);
    caseQueue.insert(21494,99075);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(91579)); //19
    caseQueue.updatePriority(27353, 23158);
    caseQueue.insert(75826,31955);
    caseQueue.insert(64931,72821);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(67100,44520);
    myResult.push_back(caseQueue.getPriority(21894)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(74873,7775);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(34764)); //24
    myResult.push_back(caseQueue.getPriority(21494)); //25
    myResult.push_back(caseQueue.getPriority(84600)); //26
    caseQueue.updatePriority(91579, 29957);
    caseQueue.updatePriority(34764, 85989);
    caseQueue.updatePriority(23216, 15404);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(44947,57888);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(44947, 31349);
    myResult.push_back(caseQueue.getPriority(67100)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(62902)); //31
    myResult.push_back(caseQueue.getPriority(64931)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(27570,81345);
    myResult.push_back(caseQueue.getPriority(27570)); //34
    caseQueue.insert(28712,55314);
    caseQueue.updatePriority(84600, 5419);
    caseQueue.insert(5527,6505);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(81866,77216);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(64931, 18040);
    caseQueue.insert(20407,50083);
    caseQueue.insert(5286,81754);
    caseQueue.updatePriority(34715, 42483);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(39840,73678);
    caseQueue.insert(25567,48076);
    myResult.push_back(caseQueue.getPriority(27570)); //38
    myResult.push_back(caseQueue.getPriority(62902)); //39
    caseQueue.insert(64695,36521);
    caseQueue.updatePriority(81866, 83569);
    myResult.push_back(caseQueue.getPriority(34764)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(39840)); //42
    myResult.push_back(caseQueue.getPriority(27570)); //43
    caseQueue.insert(26537,79857);
    myResult.push_back(caseQueue.getPriority(81866)); //44
    myResult.push_back(caseQueue.getPriority(34715)); //45
    caseQueue.updatePriority(39840, 61037);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(19234,68774);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(2759,62111);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(2759)); //49
    caseQueue.insert(92328,23760);
    caseQueue.insert(41163,56748);
    caseQueue.insert(92143,3984);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(62902, 84833);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(63717,28973);
    caseQueue.insert(38255,7559);
    myResult.push_back(caseQueue.getPriority(28712)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(10795,9256);
    caseQueue.updatePriority(28712, 87160);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(34764)); //55
    myResult.push_back(caseQueue.getPriority(21494)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(2759, 16381);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(28712, 37261);
    caseQueue.insert(52062,84961);
    caseQueue.insert(91035,25653);
    myResult.push_back(caseQueue.getPriority(62902)); //59
    caseQueue.updatePriority(5286, 40113);
    caseQueue.insert(88438,4804);
    caseQueue.insert(42066,17662);
    caseQueue.updatePriority(27570, 38009);
    caseQueue.insert(51539,48932);
    myResult.push_back(caseQueue.getPriority(28712)); //60
    caseQueue.insert(45952,66074);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(62902, 50544);
    caseQueue.updatePriority(62902, 20084);
    caseQueue.updatePriority(51539, 97430);
    caseQueue.insert(35041,9421);
    myResult.push_back(caseQueue.getPriority(21894)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(60869)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(40164,49199);
    caseQueue.insert(88251,69381);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(75571,25793);
    caseQueue.insert(64055,74383);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(48586,15867);
    myResult.push_back(caseQueue.getPriority(21494)); //69
    myResult.push_back(caseQueue.getPriority(51539)); //70
    caseQueue.insert(74912,40692);
    caseQueue.updatePriority(41163, 93188);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(41163)); //72
    caseQueue.insert(71092,86528);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(21494)); //74
    caseQueue.updatePriority(64055, 84018);
    myResult.push_back(caseQueue.getPriority(60869)); //75
    caseQueue.insert(63240,66401);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(41163, 65391);
    caseQueue.insert(8474,4515);
    caseQueue.updatePriority(64055, 9162);
    myResult.push_back(caseQueue.getPriority(26537)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    static const int resultListArray[] = {-1, -1, 23591, 75963, 75820, 21231, 57126, 25171, 45968, 37120, 86517, 63507, 59381, 3119, 88214, 3, 49788, 70095, 62154, 27353, 59257, 75826, 74873, 64242, 99075, 70546, 23216, 91579, 44520, 44947, 58877, 72821, 67100, 81345, 84600, 5527, 64931, 81345, 58877, 85989, 64695, 73678, 81345, 83569, 42483, 34715, 25567, 20407, 62111, 92143, 92328, 55314, 38255, 10795, 85989, 99075, 63717, 2759, 84833, 37261, 88438, 42066, 59257, 35041, 94555, 62902, 91035, 75571, 99075, 97430, 48586, 93188, 28712, 99075, 94555, 27570, 79857, 8474}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(90): Basarili" << endl;
    else cout << "Case(90): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_91(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 239);

    vector<int> myResult; 
    caseQueue.insert(92640,13800);
    caseQueue.insert(39885,69447);
    caseQueue.insert(51801,97496);
    myResult.push_back(caseQueue.getPriority(92640)); //1
    caseQueue.insert(84858,55010);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(90403,45654);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(45404,46472);
    caseQueue.insert(38582,75078);
    caseQueue.insert(66441,65161);
    caseQueue.updatePriority(38582, 2748);
    caseQueue.insert(42217,23648);
    myResult.push_back(caseQueue.getPriority(42217)); //4
    caseQueue.insert(29937,65547);
    caseQueue.updatePriority(66441, 57571);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(51801, 47317);
    myResult.push_back(caseQueue.getPriority(45404)); //6
    myResult.push_back(caseQueue.getPriority(45404)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(84858, 64540);
    myResult.push_back(caseQueue.getPriority(45404)); //9
    myResult.push_back(caseQueue.getPriority(29937)); //10
    caseQueue.insert(69626,60676);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(39885, 12224);
    caseQueue.updatePriority(84858, 6750);
    caseQueue.insert(91224,27524);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(76746,4177);
    myResult.push_back(caseQueue.getPriority(69626)); //13
    myResult.push_back(caseQueue.getPriority(91224)); //14
    caseQueue.updatePriority(39885, 75873);
    caseQueue.updatePriority(76746, 80735);
    myResult.push_back(caseQueue.getPriority(51801)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(88445,31774);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(30576,56194);
    caseQueue.updatePriority(39885, 54139);
    caseQueue.updatePriority(69626, 28065);
    caseQueue.updatePriority(29937, 82988);
    caseQueue.insert(65129,31200);
    caseQueue.updatePriority(30576, 2146);
    caseQueue.insert(23301,4303);
    caseQueue.insert(58358,30618);
    caseQueue.insert(19410,63839);
    caseQueue.updatePriority(69626, 51055);
    caseQueue.insert(19500,12569);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(19500, 64332);
    caseQueue.updatePriority(69626, 6919);
    caseQueue.insert(27785,86887);
    myResult.push_back(caseQueue.getPriority(39885)); //20
    caseQueue.insert(61252,16445);
    caseQueue.insert(2355,92635);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(19410, 55762);
    caseQueue.insert(22638,81359);
    caseQueue.insert(65946,17793);
    caseQueue.updatePriority(27785, 61896);
    myResult.push_back(caseQueue.getPriority(22638)); //22
    caseQueue.insert(62249,11041);
    caseQueue.insert(69127,21190);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(89872,12422);
    caseQueue.updatePriority(19410, 39469);
    caseQueue.insert(22363,98623);
    caseQueue.insert(6063,33772);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(65946)); //25
    myResult.push_back(caseQueue.getPriority(51801)); //26
    caseQueue.updatePriority(39885, 79075);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(19731,91286);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(51801)); //29
    caseQueue.updatePriority(19410, 71658);
    myResult.push_back(caseQueue.getPriority(22638)); //30
    caseQueue.insert(97137,14001);
    caseQueue.insert(13283,25427);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(72047,59799);
    caseQueue.updatePriority(13283, 29760);
    caseQueue.updatePriority(19731, 92716);
    caseQueue.insert(60810,95857);
    caseQueue.insert(77937,82575);
    myResult.push_back(caseQueue.getPriority(22638)); //32
    caseQueue.updatePriority(6063, 53258);
    myResult.push_back(caseQueue.getPriority(6063)); //33
    caseQueue.insert(43790,82071);
    caseQueue.updatePriority(43790, 35041);
    caseQueue.insert(83798,82457);
    myResult.push_back(caseQueue.getPriority(43790)); //34
    caseQueue.insert(86077,11619);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(48344,29553);
    myResult.push_back(caseQueue.getPriority(22363)); //37
    caseQueue.insert(57177,72728);
    caseQueue.updatePriority(22363, 27490);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(32587,56191);
    caseQueue.insert(60358,89438);
    caseQueue.updatePriority(19410, 9717);
    myResult.push_back(caseQueue.getPriority(19410)); //40
    caseQueue.insert(86501,37826);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(58358)); //42
    caseQueue.updatePriority(57177, 24856);
    caseQueue.insert(57434,16731);
    caseQueue.updatePriority(58358, 96470);
    myResult.push_back(caseQueue.getPriority(2355)); //43
    myResult.push_back(caseQueue.getPriority(57177)); //44
    caseQueue.insert(29640,88684);
    myResult.push_back(caseQueue.getPriority(6063)); //45
    caseQueue.updatePriority(13283, 95170);
    myResult.push_back(caseQueue.getPriority(83798)); //46
    caseQueue.insert(83663,25012);
    caseQueue.insert(16844,84886);
    myResult.push_back(caseQueue.getPriority(83798)); //47
    caseQueue.insert(90671,32695);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(70886,76296);
    caseQueue.insert(18859,62328);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(99346,1055);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(16844)); //53
    myResult.push_back(caseQueue.getPriority(43790)); //54
    caseQueue.updatePriority(18859, 97018);
    myResult.push_back(caseQueue.getPriority(60810)); //55
    caseQueue.updatePriority(60358, 34520);
    caseQueue.updatePriority(6063, 67202);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(29937)); //57
    caseQueue.insert(9449,81536);
    caseQueue.insert(85695,82571);
    caseQueue.updatePriority(29640, 43193);
    caseQueue.updatePriority(19731, 63323);
    caseQueue.updatePriority(2355, 85555);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(51801, 59399);
    caseQueue.insert(72829,30440);
    caseQueue.updatePriority(85695, 20460);
    caseQueue.updatePriority(9449, 2176);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(87287,67629);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(19500, 24392);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(22638, 41133);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(29640, 48934);
    caseQueue.insert(84914,45921);
    caseQueue.insert(18824,47731);
    caseQueue.updatePriority(6063, 68520);
    caseQueue.updatePriority(83798, 26467);
    myResult.push_back(caseQueue.getPriority(83798)); //63
    caseQueue.insert(10380,88762);
    caseQueue.insert(73720,41749);
    caseQueue.insert(63382,18987);
    caseQueue.insert(90978,29460);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(19731, 96223);
    caseQueue.insert(47824,52062);
    myResult.push_back(caseQueue.getPriority(29640)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(61520,27222);
    caseQueue.insert(75859,74922);
    caseQueue.insert(79746,85665);
    caseQueue.insert(26202,21078);
    caseQueue.insert(15490,74612);
    caseQueue.updatePriority(10380, 98098);
    caseQueue.insert(21642,27430);
    caseQueue.insert(18659,92622);
    caseQueue.insert(84128,42734);
    myResult.push_back(caseQueue.getPriority(22638)); //67
    caseQueue.insert(81022,61365);
    caseQueue.insert(98452,10444);
    caseQueue.updatePriority(79746, 10317);
    myResult.push_back(caseQueue.getPriority(18659)); //68
    caseQueue.insert(60590,88822);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(55469,66086);
    myResult.push_back(caseQueue.getPriority(76746)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(53119,28131);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(87188,72986);
    caseQueue.insert(41385,56015);
    caseQueue.updatePriority(86501, 5055);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(84128, 86177);
    caseQueue.updatePriority(58358, 33217);
    caseQueue.insert(39675,13896);
    myResult.push_back(caseQueue.getPriority(60810)); //74
    caseQueue.insert(78614,87187);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(77708,14877);
    caseQueue.insert(92273,80368);
    caseQueue.insert(30235,45608);
    myResult.push_back(caseQueue.getPriority(41385)); //76
    caseQueue.updatePriority(27785, 45038);
    caseQueue.updatePriority(29937, 84526);
    caseQueue.updatePriority(16844, 31731);
    caseQueue.insert(25585,67303);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(22638, 25535);
    caseQueue.insert(63929,69091);
    caseQueue.insert(44539,38505);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.updatePriority(75859, 51289);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.getPriority(41385)); //82
    myResult.push_back(caseQueue.getPriority(58358)); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(21685,83597);
    caseQueue.updatePriority(72047, 5430);
    caseQueue.updatePriority(84914, 13168);
    myResult.push_back(caseQueue.getPriority(47824)); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.updatePriority(87287, 93441);
    caseQueue.insert(83790,93230);
    caseQueue.updatePriority(76746, 31447);
    myResult.push_back(caseQueue.getPriority(63929)); //88
    caseQueue.insert(29342,85002);
    myResult.push_back(caseQueue.getPriority(70886)); //89
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.updatePriority(13283, 8817);
    caseQueue.insert(61898,33337);
    static const int resultListArray[] = {13800, 92640, 90403, 23648, 38582, 46472, 46472, 42217, 46472, 65547, 45404, 84858, 60676, 27524, 47317, 91224, 88445, 30576, 23301, 54139, 69626, 81359, 62249, 89872, 17793, 47317, 61252, 65946, 47317, 81359, 97137, 81359, 53258, 35041, 86077, 69127, 98623, 22363, 48344, 9717, 19410, 30618, 92635, 24856, 53258, 82457, 82457, 57434, 57177, 83663, 65129, 99346, 84886, 35041, 95857, 90671, 82988, 60358, 9449, 85695, 19500, 72829, 26467, 63382, 48934, 83798, 41133, 92622, 79746, 80735, 98452, 26202, 86501, 95857, 39675, 56015, 77708, 22638, 61520, 21642, 53119, 56015, 33217, 90978, 52062, 72047, 84914, 69091, 76296, 76746}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(91): Basarili" << endl;
    else cout << "Case(91): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_92(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 219);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(58268, 55531);
    myResult.push_back(caseQueue.getPriority(65816)); //3
    caseQueue.updatePriority(38153, 81549);
    myResult.push_back(caseQueue.getPriority(34460)); //4
    caseQueue.updatePriority(80740, 78548);
    caseQueue.updatePriority(11244, 9543);
    myResult.push_back(caseQueue.getPriority(25089)); //5
    caseQueue.insert(61087,64923);
    myResult.push_back(caseQueue.getPriority(61087)); //6
    caseQueue.insert(69254,67436);
    myResult.push_back(caseQueue.getPriority(69254)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(69254)); //9
    caseQueue.updatePriority(69254, 2606);
    myResult.push_back(caseQueue.getPriority(69254)); //10
    myResult.push_back(caseQueue.getPriority(69254)); //11
    caseQueue.insert(5500,85125);
    caseQueue.insert(37128,6030);
    myResult.push_back(caseQueue.getPriority(69254)); //12
    caseQueue.insert(81604,41650);
    caseQueue.insert(59933,91703);
    caseQueue.insert(21417,81637);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(81604)); //14
    myResult.push_back(caseQueue.getPriority(37128)); //15
    caseQueue.insert(23586,66636);
    caseQueue.insert(5384,93635);
    myResult.push_back(caseQueue.getPriority(23586)); //16
    caseQueue.insert(60820,37654);
    caseQueue.insert(21244,58461);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(29383,60614);
    caseQueue.updatePriority(60820, 60971);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(23586)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(29383)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(5500, 610);
    caseQueue.insert(63333,40750);
    myResult.push_back(caseQueue.getPriority(21417)); //23
    caseQueue.insert(26521,88314);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(5384, 35860);
    caseQueue.insert(79653,54668);
    caseQueue.insert(57695,94541);
    caseQueue.updatePriority(79653, 43173);
    caseQueue.updatePriority(23586, 45207);
    caseQueue.insert(17837,85415);
    caseQueue.updatePriority(26521, 12572);
    myResult.push_back(caseQueue.getPriority(21417)); //25
    myResult.push_back(caseQueue.getPriority(23586)); //26
    caseQueue.insert(72127,63354);
    caseQueue.insert(89841,30050);
    myResult.push_back(caseQueue.getPriority(26521)); //27
    caseQueue.insert(88157,37933);
    caseQueue.insert(56392,79136);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(77255,56126);
    caseQueue.insert(35496,96774);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(71073,18450);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(21417)); //31
    caseQueue.updatePriority(17837, 13222);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(77255, 96001);
    caseQueue.insert(46266,81346);
    caseQueue.insert(33261,35838);
    myResult.push_back(caseQueue.getPriority(5384)); //33
    caseQueue.insert(5188,37495);
    caseQueue.insert(48865,93220);
    caseQueue.updatePriority(33261, 38308);
    caseQueue.updatePriority(46266, 58838);
    caseQueue.insert(83393,66384);
    caseQueue.updatePriority(72127, 83750);
    caseQueue.insert(97487,24062);
    caseQueue.updatePriority(56392, 64950);
    myResult.push_back(caseQueue.getPriority(46266)); //34
    myResult.push_back(caseQueue.getPriority(72127)); //35
    myResult.push_back(caseQueue.getPriority(60820)); //36
    caseQueue.insert(35514,7518);
    caseQueue.updatePriority(77255, 3357);
    caseQueue.insert(6014,50212);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(23586)); //38
    caseQueue.insert(64591,41453);
    caseQueue.insert(70337,39190);
    caseQueue.insert(77379,46464);
    myResult.push_back(caseQueue.getPriority(5384)); //39
    caseQueue.insert(73998,78508);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(57695)); //41
    caseQueue.insert(981,76530);
    caseQueue.updatePriority(63333, 26022);
    myResult.push_back(caseQueue.getPriority(5188)); //42
    caseQueue.updatePriority(64591, 98725);
    caseQueue.insert(33115,12448);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(981)); //44
    caseQueue.insert(78000,41012);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(23586, 34840);
    caseQueue.insert(7609,96206);
    caseQueue.insert(81374,94006);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(46266, 3018);
    caseQueue.updatePriority(79653, 88868);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(95665,76117);
    caseQueue.insert(71356,68379);
    caseQueue.insert(17749,93458);
    caseQueue.updatePriority(88157, 41419);
    caseQueue.updatePriority(59933, 20645);
    myResult.push_back(caseQueue.getPriority(95665)); //51
    myResult.push_back(caseQueue.getPriority(73998)); //52
    caseQueue.insert(25405,31314);
    myResult.push_back(caseQueue.getPriority(981)); //53
    myResult.push_back(caseQueue.getPriority(981)); //54
    myResult.push_back(caseQueue.getPriority(78000)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(90923,8644);
    myResult.push_back(caseQueue.getPriority(60820)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(17027,4785);
    caseQueue.insert(23961,2179);
    caseQueue.insert(55906,34976);
    myResult.push_back(caseQueue.getPriority(21417)); //59
    caseQueue.insert(78885,32904);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(45894,94766);
    caseQueue.insert(21532,40506);
    caseQueue.insert(24225,49396);
    caseQueue.insert(58379,43286);
    myResult.push_back(caseQueue.getPriority(33261)); //61
    caseQueue.insert(63972,69582);
    caseQueue.insert(99895,16473);
    caseQueue.updatePriority(99895, 20237);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(93008,93051);
    caseQueue.insert(67531,51964);
    caseQueue.insert(33974,9421);
    caseQueue.insert(22070,42471);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(2068,81015);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(17749)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(72127)); //67
    caseQueue.updatePriority(2068, 29588);
    myResult.push_back(caseQueue.getPriority(58379)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(94757,20809);
    caseQueue.insert(7008,79513);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(21417, 3722);
    caseQueue.updatePriority(981, 84437);
    caseQueue.insert(99487,48293);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(95665)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(70887,47816);
    caseQueue.insert(15911,27323);
    caseQueue.insert(1301,59403);
    myResult.push_back(caseQueue.getPriority(55906)); //74
    caseQueue.insert(36040,18916);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(15911)); //76
    caseQueue.insert(14031,64486);
    caseQueue.insert(62307,58411);
    caseQueue.insert(43761,74566);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(43761, 18011);
    caseQueue.insert(8534,70247);
    caseQueue.insert(69024,22215);
    caseQueue.insert(10274,34571);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(7008)); //79
    myResult.push_back(caseQueue.getPriority(35496)); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(83971,88545);
    caseQueue.insert(44270,73954);
    caseQueue.updatePriority(1301, 25394);
    caseQueue.updatePriority(6014, 47184);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(16024,61057);
    caseQueue.insert(64369,65310);
    caseQueue.updatePriority(63972, 20564);
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.updatePriority(22070, 22255);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    myResult.push_back(caseQueue.getPriority(60820)); //88
    myResult.push_back(caseQueue.getPriority(8534)); //89
    caseQueue.insert(64055,29624);
    caseQueue.updatePriority(24225, 67063);
    myResult.push_back(caseQueue.getPriority(70887)); //90
    caseQueue.insert(19187,60459);
    caseQueue.insert(53648,34036);
    caseQueue.insert(72924,93720);
    caseQueue.insert(84437,36098);
    caseQueue.insert(38896,94105);
    caseQueue.insert(19438,75518);
    caseQueue.updatePriority(19187, 43990);
    caseQueue.insert(5792,57292);
    caseQueue.insert(22225,9678);
    caseQueue.insert(75355,13500);
    caseQueue.updatePriority(22225, 22481);
    myResult.push_back(caseQueue.deleteMin()); //91
    myResult.push_back(caseQueue.getPriority(73998)); //92
    caseQueue.updatePriority(14031, 40199);
    myResult.push_back(caseQueue.deleteMin()); //93
    static const int resultListArray[] = {-1, -1, -1, -1, -1, 64923, 67436, 61087, 67436, 2606, 2606, 2606, 69254, 41650, 6030, 66636, 37128, 81604, 66636, 21244, 60614, 29383, 81637, 5500, 81637, 45207, 12572, 26521, 89841, 71073, 81637, 17837, 35860, 58838, 83750, 60971, 77255, 45207, 35860, 35514, 94541, 37495, 33115, 76530, 97487, 63333, 23586, 46266, 5384, 5188, 76117, 78508, 76530, 76530, 41012, 59933, 60971, 90923, 81637, 23961, 38308, 17027, 33974, 99895, 93458, 25405, 83750, 43286, 2068, 94757, 21417, 76117, 78885, 34976, 36040, 27323, 15911, 43761, 79513, 96774, 69024, 10274, 55906, 1301, 63972, 22070, 33261, 60971, 70247, 47816, 75355, 78508, 22225}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(92): Basarili" << endl;
    else cout << "Case(92): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_93(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 245);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(94799)); //1
    myResult.push_back(caseQueue.getPriority(34641)); //2
    caseQueue.updatePriority(91010, 57375);
    caseQueue.updatePriority(69099, 80886);
    caseQueue.insert(3302,98800);
    caseQueue.insert(95754,10693);
    caseQueue.updatePriority(3302, 2199);
    myResult.push_back(caseQueue.getPriority(3302)); //3
    myResult.push_back(caseQueue.getPriority(95754)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(65396,62607);
    caseQueue.insert(41030,15200);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(65396, 21712);
    caseQueue.insert(24251,1049);
    caseQueue.updatePriority(24251, 44361);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(25997,28582);
    myResult.push_back(caseQueue.getPriority(24251)); //8
    caseQueue.updatePriority(25997, 54024);
    myResult.push_back(caseQueue.getPriority(65396)); //9
    caseQueue.insert(24967,54502);
    myResult.push_back(caseQueue.getPriority(24967)); //10
    caseQueue.insert(47241,22635);
    caseQueue.insert(54709,7210);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(47241, 63555);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(24967)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(70253,28587);
    caseQueue.insert(40257,30648);
    myResult.push_back(caseQueue.getPriority(40257)); //16
    caseQueue.insert(9567,92990);
    caseQueue.insert(7800,24887);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(45557,30212);
    myResult.push_back(caseQueue.getPriority(70253)); //18
    caseQueue.insert(57975,15059);
    caseQueue.insert(21328,43249);
    caseQueue.insert(3834,64863);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(9567, 36545);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(63170,50595);
    caseQueue.insert(1784,11333);
    caseQueue.insert(95084,58597);
    caseQueue.updatePriority(63170, 90688);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(47241, 36532);
    caseQueue.insert(2778,3670);
    caseQueue.insert(15949,66032);
    caseQueue.insert(35718,59300);
    caseQueue.updatePriority(45557, 20553);
    caseQueue.insert(6407,13443);
    caseQueue.insert(88104,52048);
    caseQueue.updatePriority(40257, 41913);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(53720,30360);
    caseQueue.updatePriority(3834, 82828);
    caseQueue.updatePriority(45557, 23179);
    caseQueue.insert(13010,50699);
    caseQueue.insert(89025,55304);
    caseQueue.insert(37753,14978);
    caseQueue.insert(57620,14212);
    myResult.push_back(caseQueue.getPriority(35718)); //23
    caseQueue.insert(24365,96421);
    myResult.push_back(caseQueue.getPriority(88104)); //24
    caseQueue.insert(37829,71504);
    myResult.push_back(caseQueue.getPriority(6407)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(13010)); //28
    caseQueue.insert(53888,5615);
    caseQueue.insert(44147,80717);
    caseQueue.insert(60701,89727);
    caseQueue.updatePriority(44147, 79114);
    myResult.push_back(caseQueue.getPriority(24365)); //29
    caseQueue.insert(66239,87825);
    myResult.push_back(caseQueue.getPriority(3834)); //30
    caseQueue.insert(67467,19391);
    caseQueue.insert(70654,8804);
    caseQueue.insert(6871,78762);
    caseQueue.updatePriority(24365, 75600);
    caseQueue.updatePriority(37753, 1087);
    caseQueue.insert(3337,73745);
    caseQueue.insert(52128,60990);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(38648,57848);
    myResult.push_back(caseQueue.getPriority(53720)); //32
    caseQueue.insert(26521,81356);
    caseQueue.insert(26511,96673);
    caseQueue.insert(86331,18229);
    myResult.push_back(caseQueue.getPriority(15949)); //33
    caseQueue.insert(72839,30758);
    caseQueue.updatePriority(45557, 34231);
    myResult.push_back(caseQueue.getPriority(15949)); //34
    caseQueue.updatePriority(24365, 3682);
    myResult.push_back(caseQueue.getPriority(37829)); //35
    caseQueue.insert(56097,83304);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(85560,91171);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(70654, 24889);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(89720,18554);
    caseQueue.insert(7948,59882);
    caseQueue.insert(62402,29965);
    caseQueue.insert(30665,35938);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(26521)); //41
    caseQueue.insert(66355,60971);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(1733,44032);
    caseQueue.updatePriority(13010, 26873);
    caseQueue.updatePriority(24967, 19895);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(3834, 79198);
    myResult.push_back(caseQueue.getPriority(95084)); //44
    caseQueue.insert(22996,30492);
    caseQueue.insert(11114,69932);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(66760,163);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(81213,26818);
    caseQueue.updatePriority(3337, 44673);
    caseQueue.insert(95917,19690);
    caseQueue.insert(76302,40607);
    caseQueue.updatePriority(63170, 71924);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(21877,78689);
    caseQueue.insert(42744,36174);
    myResult.push_back(caseQueue.getPriority(60701)); //49
    caseQueue.updatePriority(7948, 73630);
    myResult.push_back(caseQueue.getPriority(85560)); //50
    caseQueue.insert(62142,7220);
    caseQueue.insert(70515,61322);
    caseQueue.insert(66007,74293);
    caseQueue.updatePriority(26521, 52028);
    caseQueue.insert(12905,65573);
    caseQueue.insert(5479,23635);
    caseQueue.updatePriority(6871, 92086);
    caseQueue.insert(36913,13576);
    caseQueue.insert(48913,32111);
    myResult.push_back(caseQueue.getPriority(70515)); //51
    caseQueue.insert(512,47820);
    caseQueue.insert(21357,62546);
    caseQueue.insert(24592,99400);
    caseQueue.insert(58843,76653);
    caseQueue.insert(3521,87355);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(96090,10956);
    caseQueue.updatePriority(60701, 92433);
    myResult.push_back(caseQueue.getPriority(48913)); //53
    caseQueue.updatePriority(38648, 93265);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(11114, 58194);
    caseQueue.insert(32016,39605);
    caseQueue.insert(78155,23946);
    myResult.push_back(caseQueue.getPriority(7948)); //55
    myResult.push_back(caseQueue.getPriority(81213)); //56
    caseQueue.insert(10381,39862);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(57334,65420);
    caseQueue.insert(92555,49365);
    myResult.push_back(caseQueue.getPriority(30665)); //58
    caseQueue.updatePriority(48913, 64033);
    caseQueue.insert(91075,51150);
    caseQueue.insert(34528,30679);
    caseQueue.insert(89432,36737);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(35718)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(59997,26387);
    caseQueue.insert(4338,58110);
    caseQueue.insert(42523,76969);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(45557)); //64
    caseQueue.updatePriority(15949, 98004);
    myResult.push_back(caseQueue.getPriority(70515)); //65
    caseQueue.updatePriority(24592, 76700);
    myResult.push_back(caseQueue.getPriority(66007)); //66
    caseQueue.insert(12108,46610);
    caseQueue.updatePriority(42523, 61768);
    caseQueue.insert(90595,36127);
    caseQueue.insert(91071,64253);
    caseQueue.updatePriority(90595, 94543);
    caseQueue.insert(21952,39085);
    caseQueue.updatePriority(89432, 2705);
    caseQueue.updatePriority(66239, 32150);
    myResult.push_back(caseQueue.getPriority(11114)); //67
    caseQueue.insert(11506,34704);
    myResult.push_back(caseQueue.getPriority(32016)); //68
    caseQueue.insert(6868,19904);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(21357)); //70
    caseQueue.insert(72836,4725);
    caseQueue.insert(77179,74642);
    caseQueue.updatePriority(11506, 33610);
    caseQueue.insert(44538,96751);
    caseQueue.insert(80286,11231);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(42523, 82052);
    caseQueue.insert(7131,12649);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(43786,91219);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(72839, 91378);
    caseQueue.insert(6820,18242);
    caseQueue.insert(82297,61730);
    caseQueue.insert(15207,5720);
    caseQueue.updatePriority(26521, 61418);
    caseQueue.insert(52223,65945);
    caseQueue.insert(24280,7183);
    caseQueue.updatePriority(45557, 17899);
    myResult.push_back(caseQueue.getPriority(60701)); //76
    myResult.push_back(caseQueue.getPriority(35718)); //77
    caseQueue.insert(59384,8552);
    myResult.push_back(caseQueue.getPriority(4338)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(11506, 35150);
    myResult.push_back(caseQueue.getPriority(3521)); //80
    caseQueue.updatePriority(76302, 37327);
    myResult.push_back(caseQueue.getPriority(15949)); //81
    caseQueue.insert(76171,35587);
    caseQueue.insert(58434,60328);
    myResult.push_back(caseQueue.getPriority(34528)); //82
    caseQueue.insert(69269,81900);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(61477,69189);
    caseQueue.insert(28934,12290);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(4338)); //85
    caseQueue.insert(70809,71633);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.updatePriority(30665, 58466);
    caseQueue.insert(95781,21022);
    myResult.push_back(caseQueue.getPriority(77179)); //88
    static const int resultListArray[] = {-1, -1, 2199, 10693, 3302, 95754, 41030, 44361, 21712, 54502, 54709, 65396, 54502, 24251, 25997, 30648, 7800, 28587, 57975, 70253, 1784, 2778, 59300, 52048, 13443, 6407, 57620, 50699, 96421, 82828, 37753, 30360, 66032, 66032, 71504, 24365, 53888, 86331, 67467, 89720, 81356, 70654, 24967, 58597, 13010, 62402, 66760, 95917, 89727, 91171, 61322, 62142, 32111, 96090, 73630, 26818, 36913, 35938, 5479, 78155, 59300, 81213, 59997, 34231, 61322, 74293, 58194, 39605, 89432, 62546, 72836, 80286, 7131, 6868, 53720, 92433, 59300, 58110, 15207, 87355, 98004, 30679, 24280, 59384, 58110, 28934, 45557, 74642}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(93): Basarili" << endl;
    else cout << "Case(93): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_94(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 118);

    vector<int> myResult; 
    caseQueue.insert(33033,30396);
    caseQueue.insert(22908,368);
    caseQueue.insert(58755,45930);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(19220,83071);
    caseQueue.insert(5675,98572);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(19220)); //3
    caseQueue.insert(78256,71850);
    myResult.push_back(caseQueue.getPriority(78256)); //4
    caseQueue.updatePriority(78256, 28916);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(58755, 20275);
    caseQueue.insert(41796,9914);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(37848,16658);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(19220)); //8
    caseQueue.insert(41521,53757);
    myResult.push_back(caseQueue.getPriority(58755)); //9
    caseQueue.updatePriority(5675, 44065);
    caseQueue.updatePriority(19220, 84103);
    caseQueue.insert(64460,91534);
    caseQueue.updatePriority(41521, 62045);
    myResult.push_back(caseQueue.getPriority(19220)); //10
    caseQueue.insert(7294,50881);
    caseQueue.insert(33204,52790);
    caseQueue.updatePriority(33204, 86134);
    caseQueue.insert(68865,38801);
    caseQueue.insert(68242,62132);
    caseQueue.insert(47646,53810);
    caseQueue.updatePriority(41521, 49352);
    caseQueue.insert(49233,46789);
    myResult.push_back(caseQueue.getPriority(49233)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(62505,49008);
    caseQueue.updatePriority(7294, 9628);
    caseQueue.updatePriority(47646, 86036);
    myResult.push_back(caseQueue.getPriority(47646)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(64460)); //15
    caseQueue.insert(12902,47686);
    myResult.push_back(caseQueue.getPriority(5675)); //16
    caseQueue.updatePriority(5675, 54357);
    caseQueue.insert(67752,5841);
    myResult.push_back(caseQueue.getPriority(64460)); //17
    myResult.push_back(caseQueue.getPriority(68242)); //18
    caseQueue.updatePriority(49233, 74862);
    caseQueue.updatePriority(41521, 41612);
    caseQueue.updatePriority(19220, 1334);
    caseQueue.updatePriority(47646, 54873);
    caseQueue.insert(29377,80458);
    caseQueue.insert(15874,99633);
    myResult.push_back(caseQueue.getPriority(19220)); //19
    myResult.push_back(caseQueue.getPriority(62505)); //20
    myResult.push_back(caseQueue.getPriority(49233)); //21
    myResult.push_back(caseQueue.getPriority(68865)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(70724,84050);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(64460)); //25
    caseQueue.insert(19828,92079);
    caseQueue.updatePriority(29377, 16420);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(89133,66953);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(14701,15308);
    caseQueue.updatePriority(68242, 61270);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(88866,1298);
    myResult.push_back(caseQueue.getPriority(89133)); //29
    caseQueue.insert(3524,68101);
    caseQueue.insert(91480,10695);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(91480)); //31
    caseQueue.insert(98829,13751);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(89133, 71769);
    caseQueue.insert(26900,84086);
    caseQueue.insert(8037,26215);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(79482,78029);
    caseQueue.insert(43374,62340);
    caseQueue.insert(42446,29127);
    caseQueue.insert(68747,93790);
    myResult.push_back(caseQueue.getPriority(47646)); //34
    caseQueue.insert(55995,51431);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(49273,66033);
    caseQueue.updatePriority(19828, 64532);
    caseQueue.updatePriority(19828, 94176);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(68747, 415);
    caseQueue.insert(60458,66523);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(53389,73296);
    caseQueue.updatePriority(62505, 13806);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(5675, 47229);
    caseQueue.updatePriority(68242, 15696);
    caseQueue.insert(40070,17470);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(53389, 64);
    caseQueue.updatePriority(3524, 41142);
    myResult.push_back(caseQueue.getPriority(33204)); //41
    caseQueue.insert(37412,67390);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(46091,89619);
    caseQueue.updatePriority(89133, 53574);
    caseQueue.updatePriority(12902, 72966);
    caseQueue.updatePriority(49233, 13106);
    caseQueue.insert(6600,17473);
    caseQueue.insert(79403,15551);
    caseQueue.insert(45026,18209);
    caseQueue.insert(79804,7538);
    caseQueue.updatePriority(64460, 77593);
    caseQueue.insert(87566,19597);
    static const int resultListArray[] = {22908, 33033, 83071, 71850, 78256, 41796, 37848, 83071, 20275, 84103, 46789, 58755, 86036, 7294, 91534, 44065, 91534, 62132, 1334, 49008, 74862, 38801, 19220, 67752, 91534, 29377, 68865, 14701, 66953, 88866, 10695, 91480, 98829, 54873, 8037, 42446, 68747, 41521, 62505, 68242, 86134, 53389}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(94): Basarili" << endl;
    else cout << "Case(94): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_95(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 195);

    vector<int> myResult; 
    caseQueue.updatePriority(37186, 97223);
    caseQueue.insert(5264,43339);
    myResult.push_back(caseQueue.getPriority(5264)); //1
    caseQueue.insert(65403,54860);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(65403)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(71282, 56183);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(44662, 99093);
    caseQueue.updatePriority(35240, 82619);
    caseQueue.insert(23460,69607);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(7935)); //7
    caseQueue.insert(97729,97064);
    myResult.push_back(caseQueue.getPriority(97729)); //8
    caseQueue.insert(43261,36813);
    caseQueue.updatePriority(43261, 18572);
    myResult.push_back(caseQueue.getPriority(43261)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(97729)); //11
    caseQueue.updatePriority(97729, 38598);
    caseQueue.insert(22477,71750);
    myResult.push_back(caseQueue.getPriority(97729)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(22477, 29988);
    myResult.push_back(caseQueue.getPriority(22477)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(19184,41652);
    caseQueue.updatePriority(19184, 11293);
    caseQueue.insert(26946,30108);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(26946, 87909);
    myResult.push_back(caseQueue.getPriority(26946)); //17
    caseQueue.updatePriority(26946, 91993);
    caseQueue.insert(15158,86044);
    caseQueue.insert(64743,95292);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(26946, 7119);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(64743)); //20
    caseQueue.insert(10689,33355);
    caseQueue.insert(73494,43424);
    caseQueue.insert(609,15751);
    myResult.push_back(caseQueue.getPriority(64743)); //21
    myResult.push_back(caseQueue.getPriority(64743)); //22
    caseQueue.insert(12362,85353);
    caseQueue.updatePriority(64743, 48484);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(19189,21517);
    myResult.push_back(caseQueue.getPriority(73494)); //24
    caseQueue.insert(53219,81613);
    caseQueue.updatePriority(12362, 37501);
    caseQueue.updatePriority(64743, 52023);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(56941,69937);
    caseQueue.updatePriority(73494, 50825);
    caseQueue.insert(92468,6817);
    caseQueue.insert(54685,92493);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(64743, 62680);
    caseQueue.insert(15035,89553);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(54685)); //31
    caseQueue.insert(41520,73393);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(54685, 58965);
    myResult.push_back(caseQueue.getPriority(41520)); //33
    caseQueue.insert(32417,3006);
    caseQueue.updatePriority(15035, 17572);
    myResult.push_back(caseQueue.getPriority(41520)); //34
    caseQueue.insert(55213,38593);
    caseQueue.insert(93772,89212);
    caseQueue.insert(34833,47992);
    caseQueue.insert(79244,86239);
    caseQueue.updatePriority(93772, 94703);
    caseQueue.insert(79965,14410);
    myResult.push_back(caseQueue.getPriority(79244)); //35
    caseQueue.insert(33394,83334);
    caseQueue.insert(47054,22525);
    caseQueue.insert(4196,38715);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(10327,7338);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(79244, 78232);
    myResult.push_back(caseQueue.getPriority(34833)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(85388,97773);
    caseQueue.insert(12421,12055);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(93772)); //44
    caseQueue.insert(33024,23874);
    caseQueue.updatePriority(34833, 86451);
    caseQueue.insert(11803,2005);
    caseQueue.updatePriority(33024, 60170);
    myResult.push_back(caseQueue.getPriority(79244)); //45
    caseQueue.insert(94057,94319);
    caseQueue.insert(83700,84934);
    caseQueue.insert(46272,17262);
    caseQueue.updatePriority(33394, 65603);
    caseQueue.insert(48916,16262);
    caseQueue.updatePriority(33024, 11308);
    caseQueue.updatePriority(41520, 7957);
    myResult.push_back(caseQueue.getPriority(54685)); //46
    caseQueue.insert(90539,29216);
    myResult.push_back(caseQueue.getPriority(79244)); //47
    caseQueue.updatePriority(94057, 72895);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(14997,6084);
    caseQueue.insert(98810,75342);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(81911,53395);
    myResult.push_back(caseQueue.getPriority(94057)); //50
    myResult.push_back(caseQueue.getPriority(94057)); //51
    myResult.push_back(caseQueue.getPriority(33394)); //52
    caseQueue.updatePriority(85388, 88967);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(94057)); //54
    myResult.push_back(caseQueue.getPriority(94057)); //55
    caseQueue.updatePriority(79244, 89822);
    caseQueue.insert(95147,72286);
    myResult.push_back(caseQueue.getPriority(95147)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(5188,46441);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(54685)); //59
    caseQueue.insert(13156,20653);
    caseQueue.insert(76238,97727);
    caseQueue.updatePriority(90539, 93737);
    caseQueue.updatePriority(46272, 64384);
    myResult.push_back(caseQueue.getPriority(83700)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(54157,86694);
    caseQueue.insert(77311,14047);
    caseQueue.updatePriority(85388, 30125);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(39110,59021);
    caseQueue.updatePriority(94057, 92345);
    caseQueue.updatePriority(85388, 82722);
    caseQueue.insert(9639,57049);
    caseQueue.insert(78865,88048);
    caseQueue.insert(39399,17912);
    myResult.push_back(caseQueue.getPriority(98810)); //63
    caseQueue.updatePriority(90539, 99098);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(93772)); //66
    caseQueue.insert(64965,85201);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(95147, 18638);
    caseQueue.updatePriority(34833, 52027);
    caseQueue.updatePriority(81911, 91537);
    myResult.push_back(caseQueue.getPriority(33394)); //68
    caseQueue.updatePriority(54157, 9651);
    caseQueue.insert(98680,10389);
    caseQueue.insert(99672,95587);
    caseQueue.insert(19352,98416);
    myResult.push_back(caseQueue.getPriority(99672)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(34833, 62463);
    caseQueue.insert(6614,66316);
    caseQueue.updatePriority(76238, 10466);
    caseQueue.insert(58625,68061);
    myResult.push_back(caseQueue.getPriority(93772)); //72
    caseQueue.insert(43468,77073);
    caseQueue.insert(78797,73107);
    caseQueue.insert(96144,15561);
    caseQueue.updatePriority(34833, 31539);
    myResult.push_back(caseQueue.getPriority(39110)); //73
    caseQueue.insert(53164,32910);
    caseQueue.insert(90759,16326);
    caseQueue.updatePriority(46272, 73152);
    caseQueue.updatePriority(43468, 45767);
    myResult.push_back(caseQueue.getPriority(58625)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(47875,2800);
    myResult.push_back(caseQueue.getPriority(19352)); //76
    caseQueue.insert(52982,18618);
    caseQueue.updatePriority(94057, 62081);
    caseQueue.updatePriority(85388, 87156);
    myResult.push_back(caseQueue.getPriority(90539)); //77
    caseQueue.insert(38405,60174);
    caseQueue.insert(65209,7971);
    myResult.push_back(caseQueue.getPriority(46272)); //78
    myResult.push_back(caseQueue.getPriority(9639)); //79
    myResult.push_back(caseQueue.getPriority(95147)); //80
    caseQueue.insert(7211,24289);
    caseQueue.insert(44890,59291);
    static const int resultListArray[] = {43339, 5264, 54860, 65403, -1, 23460, -1, 97064, 18572, 43261, 97064, 38598, 97729, 29988, 22477, 19184, 87909, 15158, 26946, 95292, 95292, 95292, 609, 43424, 19189, 10689, 92468, 12362, 73494, 64743, 92493, 56941, 73393, 73393, 86239, 32417, 10327, 47992, 79965, 12421, 15035, 47054, 55213, 94703, 78232, 58965, 78232, 11803, 14997, 72895, 72895, 65603, 41520, 72895, 72895, 72286, 33024, 48916, 58965, 84934, 13156, 77311, 75342, 39399, 4196, 94703, 5188, 65603, 95587, 54157, 98680, 94703, 59021, 68061, 76238, 98416, 99098, 73152, 57049, 18638}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(95): Basarili" << endl;
    else cout << "Case(95): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_96(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 211);

    vector<int> myResult; 
    caseQueue.insert(90655,30840);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(63107, 13363);
    caseQueue.insert(67209,28334);
    caseQueue.updatePriority(67209, 53218);
    caseQueue.insert(32920,25154);
    caseQueue.updatePriority(67209, 35507);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(94174,13141);
    caseQueue.insert(28535,75327);
    myResult.push_back(caseQueue.getPriority(28535)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(28535, 20796);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(8330)); //7
    myResult.push_back(caseQueue.getPriority(29313)); //8
    myResult.push_back(caseQueue.getPriority(91613)); //9
    myResult.push_back(caseQueue.getPriority(31657)); //10
    caseQueue.insert(14858,24785);
    caseQueue.updatePriority(14858, 66960);
    caseQueue.insert(36161,47781);
    caseQueue.insert(63504,24925);
    myResult.push_back(caseQueue.getPriority(36161)); //11
    caseQueue.insert(5595,83314);
    caseQueue.insert(58564,63182);
    caseQueue.insert(64112,36847);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(24364,57622);
    caseQueue.updatePriority(5595, 98411);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(35301,17770);
    myResult.push_back(caseQueue.getPriority(5595)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(24364, 38935);
    myResult.push_back(caseQueue.getPriority(36161)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(5595)); //18
    caseQueue.updatePriority(36161, 57862);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(12961,68666);
    caseQueue.insert(88446,66420);
    caseQueue.updatePriority(58564, 86453);
    caseQueue.insert(88720,7833);
    caseQueue.insert(18256,12485);
    caseQueue.insert(67273,47316);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(5595)); //21
    myResult.push_back(caseQueue.getPriority(12961)); //22
    caseQueue.insert(54032,69647);
    caseQueue.insert(54801,46027);
    myResult.push_back(caseQueue.getPriority(54801)); //23
    caseQueue.insert(97445,14117);
    caseQueue.updatePriority(5595, 21406);
    caseQueue.insert(98141,91763);
    caseQueue.updatePriority(54801, 51226);
    caseQueue.updatePriority(12961, 65014);
    caseQueue.insert(91469,89969);
    caseQueue.insert(5009,13583);
    caseQueue.updatePriority(54801, 16495);
    myResult.push_back(caseQueue.getPriority(5009)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(95966,15562);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(12255,6856);
    myResult.push_back(caseQueue.getPriority(12255)); //27
    myResult.push_back(caseQueue.getPriority(5595)); //28
    myResult.push_back(caseQueue.getPriority(12961)); //29
    caseQueue.insert(35810,72992);
    myResult.push_back(caseQueue.getPriority(14858)); //30
    caseQueue.updatePriority(97445, 8160);
    caseQueue.updatePriority(98141, 24064);
    caseQueue.updatePriority(5595, 18274);
    caseQueue.insert(19446,55701);
    caseQueue.insert(62777,48453);
    caseQueue.insert(4318,13609);
    caseQueue.insert(55547,61169);
    caseQueue.insert(57560,71299);
    caseQueue.insert(82844,30633);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(58564)); //32
    caseQueue.updatePriority(62777, 58779);
    myResult.push_back(caseQueue.getPriority(58564)); //33
    caseQueue.insert(93665,17945);
    caseQueue.updatePriority(98141, 20456);
    caseQueue.insert(15033,50392);
    caseQueue.insert(13904,57374);
    myResult.push_back(caseQueue.getPriority(95966)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(15033, 79035);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(88446)); //38
    caseQueue.insert(36170,75851);
    caseQueue.insert(39125,47900);
    caseQueue.insert(167,24861);
    caseQueue.updatePriority(93665, 16274);
    myResult.push_back(caseQueue.getPriority(98141)); //39
    myResult.push_back(caseQueue.getPriority(54032)); //40
    myResult.push_back(caseQueue.getPriority(13904)); //41
    myResult.push_back(caseQueue.getPriority(55547)); //42
    myResult.push_back(caseQueue.getPriority(12961)); //43
    caseQueue.insert(27185,57067);
    caseQueue.insert(1618,11625);
    myResult.push_back(caseQueue.getPriority(19446)); //44
    caseQueue.insert(31937,82958);
    caseQueue.updatePriority(88446, 32950);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(81374,57488);
    myResult.push_back(caseQueue.getPriority(27185)); //46
    caseQueue.insert(90333,52227);
    caseQueue.updatePriority(27185, 21567);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(47706,33280);
    caseQueue.insert(70018,35921);
    myResult.push_back(caseQueue.getPriority(88446)); //48
    caseQueue.insert(74011,64883);
    caseQueue.insert(97252,85720);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(30088,32650);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(65202,52522);
    caseQueue.insert(60247,98497);
    caseQueue.insert(27175,25680);
    myResult.push_back(caseQueue.getPriority(90333)); //52
    caseQueue.updatePriority(47706, 88475);
    myResult.push_back(caseQueue.getPriority(62777)); //53
    caseQueue.updatePriority(81374, 11740);
    caseQueue.insert(54816,28061);
    caseQueue.insert(22636,40392);
    myResult.push_back(caseQueue.getPriority(14858)); //54
    caseQueue.insert(17907,812);
    caseQueue.insert(61020,94753);
    caseQueue.insert(40592,36009);
    myResult.push_back(caseQueue.getPriority(13904)); //55
    caseQueue.insert(21153,4653);
    caseQueue.updatePriority(36170, 12541);
    caseQueue.insert(52188,36713);
    caseQueue.insert(83981,4700);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(62777, 37461);
    myResult.push_back(caseQueue.getPriority(27175)); //58
    caseQueue.insert(5382,21083);
    caseQueue.insert(92208,69561);
    myResult.push_back(caseQueue.getPriority(39125)); //59
    caseQueue.insert(55894,78763);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(52193,52491);
    caseQueue.insert(98319,96634);
    caseQueue.insert(27486,80281);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(67273)); //63
    caseQueue.insert(39603,83029);
    caseQueue.insert(26891,350);
    myResult.push_back(caseQueue.getPriority(27175)); //64
    caseQueue.insert(90242,9572);
    caseQueue.insert(62738,80791);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(40592)); //67
    caseQueue.insert(78871,90722);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(56589,12527);
    myResult.push_back(caseQueue.getPriority(52193)); //69
    myResult.push_back(caseQueue.getPriority(61020)); //70
    myResult.push_back(caseQueue.getPriority(14858)); //71
    caseQueue.insert(29024,89593);
    caseQueue.updatePriority(27185, 59010);
    caseQueue.insert(2298,82724);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(79749,73265);
    caseQueue.insert(90351,41501);
    myResult.push_back(caseQueue.getPriority(27185)); //73
    caseQueue.insert(67818,21839);
    myResult.push_back(caseQueue.getPriority(39603)); //74
    caseQueue.insert(14187,52889);
    caseQueue.updatePriority(39125, 34145);
    caseQueue.updatePriority(67818, 48893);
    myResult.push_back(caseQueue.getPriority(91469)); //75
    caseQueue.insert(21703,74095);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(20639,22805);
    caseQueue.insert(31645,60692);
    myResult.push_back(caseQueue.getPriority(60247)); //77
    myResult.push_back(caseQueue.getPriority(27175)); //78
    caseQueue.insert(33805,15560);
    caseQueue.insert(21511,38403);
    caseQueue.insert(11804,12010);
    caseQueue.insert(77890,41133);
    caseQueue.insert(63446,51981);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(60247)); //80
    caseQueue.insert(66343,35162);
    myResult.push_back(caseQueue.getPriority(79749)); //81
    caseQueue.insert(91325,83942);
    caseQueue.insert(97771,45044);
    caseQueue.updatePriority(91469, 56919);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(24679,37595);
    myResult.push_back(caseQueue.getPriority(82844)); //83
    caseQueue.updatePriority(29024, 88086);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.updatePriority(31937, 37155);
    myResult.push_back(caseQueue.getPriority(65202)); //86
    caseQueue.updatePriority(66343, 33617);
    myResult.push_back(caseQueue.getPriority(54816)); //87
    caseQueue.updatePriority(13904, 31636);
    static const int resultListArray[] = {90655, 32920, 67209, 75327, 94174, 28535, -1, -1, -1, -1, 47781, 63504, 64112, 98411, 35301, 47781, 24364, 98411, 36161, 88720, 98411, 68666, 46027, 13583, 18256, 5009, 6856, 21406, 65014, 66960, 12255, 86453, 86453, 15562, 97445, 4318, 95966, 66420, 20456, 69647, 57374, 61169, 65014, 55701, 1618, 57067, 93665, 32950, 54801, 5595, 98141, 52227, 58779, 66960, 57374, 17907, 21153, 25680, 47900, 83981, 81374, 36170, 47316, 25680, 26891, 90242, 36009, 5382, 52491, 94753, 66960, 56589, 59010, 83029, 89969, 167, 98497, 25680, 11804, 98497, 73265, 33805, 30633, 20639, 27175, 52522, 28061}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(96): Basarili" << endl;
    else cout << "Case(96): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_97(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 122);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(84804)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(90465)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(22815,90521);
    myResult.push_back(caseQueue.getPriority(22815)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(95079,79658);
    myResult.push_back(caseQueue.getPriority(95079)); //9
    caseQueue.updatePriority(95079, 62611);
    caseQueue.insert(98749,65976);
    caseQueue.updatePriority(98749, 43002);
    caseQueue.insert(54466,53943);
    caseQueue.updatePriority(95079, 69105);
    caseQueue.insert(61006,71000);
    myResult.push_back(caseQueue.getPriority(54466)); //10
    caseQueue.updatePriority(98749, 62865);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(95079)); //13
    caseQueue.updatePriority(61006, 59854);
    myResult.push_back(caseQueue.getPriority(61006)); //14
    caseQueue.insert(97122,57768);
    caseQueue.insert(55727,81545);
    caseQueue.updatePriority(55727, 19179);
    myResult.push_back(caseQueue.getPriority(97122)); //15
    caseQueue.insert(74334,50482);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(95079, 16504);
    caseQueue.updatePriority(97122, 49660);
    caseQueue.insert(65897,29046);
    caseQueue.updatePriority(97122, 67858);
    myResult.push_back(caseQueue.getPriority(97122)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(38431,35621);
    myResult.push_back(caseQueue.getPriority(61006)); //19
    myResult.push_back(caseQueue.getPriority(38431)); //20
    myResult.push_back(caseQueue.getPriority(97122)); //21
    caseQueue.updatePriority(38431, 52046);
    caseQueue.insert(34648,28873);
    myResult.push_back(caseQueue.getPriority(38431)); //22
    caseQueue.insert(31931,87975);
    caseQueue.insert(89079,90078);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(33056,25241);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(74334, 13238);
    caseQueue.insert(52905,64830);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(91316,66378);
    caseQueue.updatePriority(89079, 72955);
    myResult.push_back(caseQueue.getPriority(91316)); //27
    myResult.push_back(caseQueue.getPriority(97122)); //28
    caseQueue.insert(51661,5840);
    myResult.push_back(caseQueue.getPriority(31931)); //29
    caseQueue.updatePriority(52905, 71633);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(15544,35484);
    myResult.push_back(caseQueue.getPriority(91316)); //31
    caseQueue.updatePriority(61006, 41408);
    myResult.push_back(caseQueue.getPriority(91316)); //32
    caseQueue.insert(37498,37981);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(38431)); //35
    caseQueue.insert(5070,89226);
    myResult.push_back(caseQueue.getPriority(89079)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(78737,25914);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(38431)); //39
    myResult.push_back(caseQueue.getPriority(5070)); //40
    caseQueue.updatePriority(38431, 11971);
    myResult.push_back(caseQueue.getPriority(91316)); //41
    myResult.push_back(caseQueue.getPriority(31931)); //42
    caseQueue.insert(58620,92774);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(62010,96208);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(73110,63131);
    myResult.push_back(caseQueue.getPriority(52905)); //45
    myResult.push_back(caseQueue.getPriority(52905)); //46
    caseQueue.updatePriority(62010, 73189);
    caseQueue.insert(36035,69186);
    myResult.push_back(caseQueue.getPriority(62010)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(34260,30905);
    myResult.push_back(caseQueue.getPriority(31931)); //49
    caseQueue.insert(50643,86561);
    caseQueue.updatePriority(62010, 20814);
    myResult.push_back(caseQueue.getPriority(89079)); //50
    myResult.push_back(caseQueue.getPriority(58620)); //51
    caseQueue.insert(98800,87401);
    caseQueue.insert(56605,4185);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(97122)); //53
    caseQueue.insert(32625,51682);
    caseQueue.insert(98141,17598);
    caseQueue.insert(36734,13599);
    caseQueue.insert(35022,75700);
    caseQueue.insert(34529,5945);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(58620)); //55
    myResult.push_back(caseQueue.getPriority(98800)); //56
    caseQueue.insert(4471,99607);
    myResult.push_back(caseQueue.getPriority(62010)); //57
    myResult.push_back(caseQueue.getPriority(31931)); //58
    caseQueue.insert(99545,14181);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(98141)); //60
    myResult.push_back(caseQueue.getPriority(97122)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(35022, 34778);
    caseQueue.insert(54926,54661);
    myResult.push_back(caseQueue.getPriority(50643)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(32625)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    static const int resultListArray[] = {-1, -1, -1, -1, -1, -1, 90521, 22815, 79658, 53943, 54466, 98749, 69105, 59854, 57768, 55727, 67858, 95079, 59854, 35621, 67858, 52046, 34648, 33056, 74334, 65897, 66378, 67858, 87975, 51661, 66378, 66378, 15544, 37498, 52046, 72955, 61006, 78737, 52046, 89226, 66378, 87975, 38431, 91316, 71633, 71633, 73189, 73110, 87975, 72955, 92774, 56605, 67858, 34529, 92774, 87401, 20814, 87975, 36734, 17598, 67858, 99545, 86561, 98141, 62010, 51682, 34260}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(97): Basarili" << endl;
    else cout << "Case(97): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_98(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 155);

    vector<int> myResult; 
    caseQueue.updatePriority(54162, 78360);
    myResult.push_back(caseQueue.getPriority(42245)); //1
    caseQueue.insert(86950,52554);
    caseQueue.updatePriority(86950, 46657);
    caseQueue.insert(98764,13379);
    caseQueue.insert(60224,848);
    myResult.push_back(caseQueue.getPriority(98764)); //2
    caseQueue.insert(37918,68786);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(98764, 94059);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(82767,70762);
    caseQueue.insert(95737,38389);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(40838,63894);
    caseQueue.insert(7127,54125);
    caseQueue.updatePriority(82767, 37690);
    caseQueue.insert(64548,31101);
    caseQueue.insert(51244,27737);
    myResult.push_back(caseQueue.getPriority(82767)); //6
    caseQueue.insert(97629,28302);
    caseQueue.insert(25338,18076);
    caseQueue.updatePriority(51244, 45811);
    caseQueue.insert(20209,12006);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(64548, 84698);
    caseQueue.insert(71849,79084);
    caseQueue.insert(92140,20670);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(64548)); //9
    caseQueue.updatePriority(98764, 10644);
    caseQueue.updatePriority(64548, 4996);
    caseQueue.insert(6055,51570);
    caseQueue.insert(48053,38951);
    caseQueue.updatePriority(40838, 42931);
    caseQueue.insert(93124,4695);
    myResult.push_back(caseQueue.getPriority(93124)); //10
    caseQueue.insert(14296,45286);
    caseQueue.insert(32088,83399);
    caseQueue.insert(70009,2105);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(64548)); //12
    caseQueue.insert(13171,32130);
    caseQueue.insert(48966,45369);
    caseQueue.updatePriority(48053, 33600);
    caseQueue.insert(80332,45938);
    caseQueue.insert(42979,49688);
    caseQueue.updatePriority(32088, 38323);
    myResult.push_back(caseQueue.getPriority(64548)); //13
    myResult.push_back(caseQueue.getPriority(71849)); //14
    caseQueue.updatePriority(48966, 47292);
    caseQueue.insert(76786,97359);
    caseQueue.insert(23121,68596);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(23121, 52498);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(95173,15637);
    caseQueue.insert(48182,37807);
    caseQueue.insert(44503,62739);
    caseQueue.insert(76393,45373);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(13171, 7393);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(61570,22668);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(48053, 54828);
    caseQueue.updatePriority(14296, 19916);
    caseQueue.updatePriority(80332, 67385);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(86178,17324);
    caseQueue.insert(85117,41783);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(51244)); //25
    myResult.push_back(caseQueue.getPriority(48053)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(48966)); //28
    caseQueue.insert(79215,39595);
    caseQueue.insert(76057,88988);
    myResult.push_back(caseQueue.getPriority(80332)); //29
    caseQueue.insert(65710,43581);
    caseQueue.updatePriority(76057, 93693);
    caseQueue.insert(39391,13118);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(23121)); //33
    caseQueue.insert(27916,17507);
    myResult.push_back(caseQueue.getPriority(65710)); //34
    caseQueue.insert(62306,4709);
    caseQueue.insert(63623,26731);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(71849)); //36
    caseQueue.updatePriority(51244, 12974);
    myResult.push_back(caseQueue.getPriority(48966)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(39032,22799);
    caseQueue.insert(98135,15037);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(85117, 47784);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(23121, 83292);
    caseQueue.insert(19542,30106);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(71849, 54306);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(37918, 65127);
    caseQueue.insert(88152,19072);
    caseQueue.insert(41595,68698);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(48966, 86140);
    caseQueue.updatePriority(71849, 74513);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(7127)); //47
    caseQueue.insert(41249,34373);
    caseQueue.insert(33082,51389);
    caseQueue.insert(84477,49164);
    caseQueue.insert(36775,6576);
    myResult.push_back(caseQueue.getPriority(7127)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(15871,31645);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(48053)); //52
    caseQueue.insert(76240,38619);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(48966, 43742);
    caseQueue.insert(28582,32860);
    caseQueue.insert(3301,25351);
    caseQueue.insert(24946,40556);
    myResult.push_back(caseQueue.getPriority(76786)); //54
    caseQueue.insert(97391,33530);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(12894,45911);
    caseQueue.insert(6247,35340);
    caseQueue.insert(1100,6346);
    caseQueue.insert(51749,5043);
    caseQueue.insert(41365,87299);
    caseQueue.insert(85565,25594);
    caseQueue.updatePriority(41595, 68948);
    caseQueue.updatePriority(23121, 8734);
    myResult.push_back(caseQueue.getPriority(24946)); //56
    caseQueue.updatePriority(37918, 23228);
    caseQueue.insert(89892,35540);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(70947,1528);
    caseQueue.insert(77701,26828);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(59120,77692);
    static const int resultListArray[] = {-1, 13379, 60224, 86950, 95737, 37690, 20209, 25338, 84698, 4695, 70009, 4996, 4996, 79084, 93124, 64548, 98764, 13171, 95173, 92140, 14296, 86178, 61570, 97629, 45811, 54828, 82767, 47292, 67385, 39391, 48182, 32088, 52498, 43581, 62306, 79084, 47292, 51244, 98135, 27916, 39032, 63623, 19542, 88152, 79215, 40838, 54125, 54125, 36775, 41249, 15871, 54828, 76240, 97359, 3301, 40556, 51749, 1100, 23121, 70947}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(98): Basarili" << endl;
    else cout << "Case(98): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_99(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 166);

    vector<int> myResult; 
    caseQueue.updatePriority(94483, 63780);
    caseQueue.insert(9824,14975);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(51273,6378);
    caseQueue.insert(73633,46649);
    caseQueue.insert(38203,90775);
    caseQueue.updatePriority(38203, 99897);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(38203)); //5
    caseQueue.insert(40108,3240);
    caseQueue.updatePriority(40108, 96330);
    caseQueue.insert(84699,80967);
    caseQueue.updatePriority(84699, 76820);
    caseQueue.insert(51683,3093);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(38203, 27051);
    caseQueue.insert(90480,86159);
    caseQueue.updatePriority(90480, 123);
    myResult.push_back(caseQueue.getPriority(40108)); //8
    caseQueue.insert(1863,60328);
    caseQueue.updatePriority(38203, 83478);
    caseQueue.insert(48893,54746);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(55815,77925);
    caseQueue.updatePriority(38203, 26802);
    caseQueue.insert(63619,34167);
    caseQueue.updatePriority(1863, 73516);
    myResult.push_back(caseQueue.getPriority(55815)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(42680,82082);
    caseQueue.insert(33241,89095);
    myResult.push_back(caseQueue.getPriority(48893)); //12
    caseQueue.updatePriority(40108, 30230);
    caseQueue.insert(2830,94481);
    myResult.push_back(caseQueue.getPriority(42680)); //13
    caseQueue.insert(60364,4398);
    myResult.push_back(caseQueue.getPriority(48893)); //14
    caseQueue.insert(48262,72073);
    caseQueue.insert(70751,60221);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(33241, 94383);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(42680)); //20
    caseQueue.insert(11145,66960);
    caseQueue.insert(95386,13794);
    caseQueue.insert(7372,77227);
    myResult.push_back(caseQueue.getPriority(42680)); //21
    caseQueue.insert(33614,28690);
    caseQueue.insert(42965,49236);
    caseQueue.insert(23611,30986);
    myResult.push_back(caseQueue.getPriority(48262)); //22
    caseQueue.insert(92276,98707);
    caseQueue.updatePriority(42965, 47263);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(1863)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(42680)); //26
    caseQueue.insert(62268,69983);
    caseQueue.insert(82688,90800);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(92276)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(1863)); //30
    myResult.push_back(caseQueue.getPriority(62268)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(99700,11147);
    myResult.push_back(caseQueue.getPriority(1863)); //33
    caseQueue.insert(45168,70712);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(44264,451);
    caseQueue.insert(3972,84263);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(7233,70297);
    caseQueue.insert(7258,59475);
    caseQueue.insert(39200,47527);
    caseQueue.insert(30036,22005);
    caseQueue.updatePriority(39200, 94893);
    caseQueue.insert(35448,594);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(2219,23192);
    caseQueue.insert(30836,71345);
    caseQueue.insert(43927,23697);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(39200)); //39
    caseQueue.insert(40563,31688);
    caseQueue.updatePriority(33241, 26);
    caseQueue.updatePriority(33241, 1170);
    caseQueue.updatePriority(7258, 41225);
    caseQueue.insert(9961,71959);
    caseQueue.insert(68880,61006);
    caseQueue.updatePriority(7258, 57825);
    caseQueue.updatePriority(43927, 27391);
    caseQueue.insert(15290,80964);
    caseQueue.updatePriority(33241, 1727);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(45168)); //41
    caseQueue.insert(682,68692);
    caseQueue.updatePriority(42680, 9005);
    caseQueue.insert(71092,85770);
    caseQueue.insert(32768,60458);
    caseQueue.updatePriority(7258, 60038);
    caseQueue.insert(68563,14929);
    myResult.push_back(caseQueue.getPriority(7233)); //42
    caseQueue.insert(68613,61037);
    caseQueue.updatePriority(7258, 4625);
    caseQueue.updatePriority(45168, 47496);
    caseQueue.insert(53273,98113);
    caseQueue.insert(80173,58406);
    caseQueue.updatePriority(32768, 10764);
    caseQueue.updatePriority(55815, 65177);
    caseQueue.updatePriority(45168, 49997);
    myResult.push_back(caseQueue.getPriority(9961)); //43
    myResult.push_back(caseQueue.getPriority(30836)); //44
    caseQueue.updatePriority(30836, 91849);
    caseQueue.updatePriority(68880, 10500);
    caseQueue.updatePriority(40563, 63554);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(82688)); //46
    caseQueue.insert(97917,71672);
    caseQueue.insert(46447,61687);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(71092, 89504);
    caseQueue.insert(95382,34574);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(2219)); //49
    caseQueue.updatePriority(97917, 22187);
    myResult.push_back(caseQueue.getPriority(82688)); //50
    caseQueue.updatePriority(15290, 46014);
    caseQueue.insert(8404,72826);
    caseQueue.insert(70549,3385);
    caseQueue.insert(45704,20736);
    caseQueue.updatePriority(682, 67646);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(31251,33307);
    caseQueue.insert(62,68554);
    caseQueue.insert(21450,50028);
    caseQueue.insert(70101,81515);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(31251)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(43927, 59702);
    caseQueue.insert(59494,29238);
    caseQueue.insert(80335,80709);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(2830)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(52286,91811);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(40563, 85928);
    myResult.push_back(caseQueue.getPriority(45168)); //62
    caseQueue.insert(42001,23176);
    myResult.push_back(caseQueue.getPriority(9961)); //63
    caseQueue.insert(67510,95553);
    caseQueue.updatePriority(7372, 4595);
    caseQueue.insert(4119,95153);
    caseQueue.insert(57302,69839);
    static const int resultListArray[] = {9824, -1, 51273, 73633, 99897, 51683, 84699, 96330, 90480, 77925, 38203, 54746, 82082, 54746, 60364, 40108, 63619, 48893, 70751, 82082, 82082, 72073, 95386, 73516, 33614, 82082, 23611, 98707, 42965, 73516, 69983, 11145, 73516, 99700, 44264, 62268, 35448, 30036, 94893, 33241, 70712, 70297, 71959, 71345, 7258, 90800, 42680, 68880, 23192, 90800, 70549, 32768, 68563, 33307, 45704, 97917, 94481, 2219, 59494, 31251, 95382, 49997, 71959}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(99): Basarili" << endl;
    else cout << "Case(99): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_100(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 147);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(37110)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(25882)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(74563)); //5
    myResult.push_back(caseQueue.getPriority(55860)); //6
    caseQueue.updatePriority(8364, 86086);
    caseQueue.updatePriority(78366, 15781);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(93905,88398);
    caseQueue.updatePriority(93905, 93621);
    caseQueue.insert(86864,62433);
    caseQueue.updatePriority(86864, 95151);
    myResult.push_back(caseQueue.getPriority(86864)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(60581,16422);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(16407,48394);
    caseQueue.updatePriority(16407, 10934);
    caseQueue.insert(65858,17164);
    caseQueue.insert(2626,87294);
    caseQueue.insert(80456,83676);
    caseQueue.updatePriority(80456, 4460);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(16407, 4508);
    caseQueue.updatePriority(2626, 70562);
    caseQueue.updatePriority(65858, 61461);
    caseQueue.insert(62196,25897);
    caseQueue.insert(96032,51248);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(68167,61763);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(65858)); //15
    caseQueue.insert(48881,22852);
    myResult.push_back(caseQueue.getPriority(96032)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(65858)); //18
    caseQueue.insert(37136,29646);
    caseQueue.updatePriority(37136, 13850);
    caseQueue.updatePriority(37136, 7625);
    myResult.push_back(caseQueue.getPriority(37136)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(68167, 71777);
    caseQueue.insert(60391,50606);
    caseQueue.updatePriority(60391, 18370);
    caseQueue.updatePriority(60391, 35347);
    caseQueue.insert(30831,86328);
    caseQueue.updatePriority(2626, 11223);
    caseQueue.insert(84637,53435);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(84637)); //23
    caseQueue.insert(55848,734);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(30831)); //25
    caseQueue.insert(77902,93177);
    caseQueue.insert(36993,9844);
    caseQueue.insert(90084,94746);
    myResult.push_back(caseQueue.getPriority(30831)); //26
    caseQueue.insert(94637,64984);
    caseQueue.insert(21301,59651);
    myResult.push_back(caseQueue.getPriority(65858)); //27
    myResult.push_back(caseQueue.getPriority(60391)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(60391, 37124);
    caseQueue.insert(23692,96097);
    caseQueue.insert(92085,76999);
    caseQueue.insert(45757,98242);
    caseQueue.updatePriority(94637, 9937);
    myResult.push_back(caseQueue.getPriority(84637)); //30
    caseQueue.updatePriority(68167, 62215);
    caseQueue.updatePriority(77902, 17433);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(6341,55095);
    myResult.push_back(caseQueue.getPriority(84637)); //32
    caseQueue.insert(76501,12574);
    caseQueue.updatePriority(21301, 49820);
    caseQueue.updatePriority(77902, 97565);
    caseQueue.updatePriority(21301, 16534);
    caseQueue.insert(94793,56994);
    caseQueue.insert(46275,46193);
    caseQueue.updatePriority(84637, 4232);
    myResult.push_back(caseQueue.getPriority(45757)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(14232,48173);
    caseQueue.updatePriority(68167, 71303);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(90084, 99286);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(65858, 22999);
    myResult.push_back(caseQueue.getPriority(68167)); //37
    caseQueue.insert(64107,31405);
    caseQueue.insert(55889,80430);
    myResult.push_back(caseQueue.getPriority(23692)); //38
    caseQueue.insert(40218,23614);
    caseQueue.insert(93535,3297);
    caseQueue.updatePriority(45757, 65910);
    caseQueue.updatePriority(90084, 98190);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(18357,20840);
    myResult.push_back(caseQueue.getPriority(77902)); //40
    myResult.push_back(caseQueue.getPriority(18357)); //41
    caseQueue.updatePriority(64107, 88823);
    caseQueue.insert(9838,13058);
    caseQueue.insert(52184,85148);
    caseQueue.updatePriority(90084, 4251);
    caseQueue.insert(18393,93980);
    myResult.push_back(caseQueue.getPriority(52184)); //42
    caseQueue.insert(76118,98250);
    myResult.push_back(caseQueue.getPriority(68167)); //43
    caseQueue.insert(49386,70856);
    caseQueue.updatePriority(94793, 24403);
    caseQueue.insert(75151,91716);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(46275, 64847);
    caseQueue.insert(9866,2207);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(93904,34739);
    caseQueue.insert(99616,65666);
    caseQueue.insert(74975,95475);
    caseQueue.updatePriority(52184, 61506);
    caseQueue.insert(64247,77227);
    caseQueue.insert(46411,7768);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(94793)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(88866,56921);
    caseQueue.updatePriority(30831, 70281);
    caseQueue.updatePriority(52184, 80728);
    myResult.push_back(caseQueue.getPriority(18393)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(48744,96571);
    caseQueue.insert(61770,26861);
    caseQueue.insert(9212,4019);
    myResult.push_back(caseQueue.getPriority(6341)); //53
    caseQueue.updatePriority(94793, 29417);
    caseQueue.updatePriority(30831, 78706);
    caseQueue.updatePriority(52184, 47789);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(85843,60818);
    caseQueue.insert(77598,15548);
    myResult.push_back(caseQueue.getPriority(52184)); //55
    caseQueue.updatePriority(93904, 90286);
    myResult.push_back(caseQueue.deleteMin()); //56
    static const int resultListArray[] = {-1, -1, -1, -1, -1, -1, -1, 95151, 93905, 86864, 60581, 80456, 16407, 62196, 61461, 51248, 48881, 61461, 7625, 37136, 96032, 2626, 53435, 55848, 86328, 86328, 61461, 35347, 36993, 53435, 94637, 53435, 98242, 84637, 76501, 21301, 71303, 96097, 93535, 97565, 20840, 85148, 71303, 90084, 9838, 9866, 46411, 24403, 18357, 65858, 93980, 40218, 55095, 9212, 47789, 77598}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(100): Basarili" << endl;
    else cout << "Case(100): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_101(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 146);

    vector<int> myResult; 
    caseQueue.insert(78925,44065);
    caseQueue.insert(15976,7895);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(40390,8435);
    caseQueue.updatePriority(78925, 4551);
    caseQueue.updatePriority(78925, 5318);
    myResult.push_back(caseQueue.getPriority(78925)); //2
    caseQueue.updatePriority(40390, 21504);
    caseQueue.insert(94302,87378);
    caseQueue.updatePriority(40390, 27994);
    myResult.push_back(caseQueue.getPriority(40390)); //3
    caseQueue.insert(28026,99254);
    caseQueue.updatePriority(78925, 39744);
    caseQueue.updatePriority(40390, 41411);
    caseQueue.insert(58171,12926);
    myResult.push_back(caseQueue.getPriority(78925)); //4
    caseQueue.updatePriority(28026, 93488);
    caseQueue.insert(99567,28723);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(65127,37516);
    caseQueue.insert(66406,4011);
    caseQueue.insert(61635,60355);
    caseQueue.updatePriority(66406, 92171);
    caseQueue.updatePriority(78925, 24420);
    myResult.push_back(caseQueue.getPriority(61635)); //7
    caseQueue.insert(19998,30964);
    caseQueue.updatePriority(65127, 31660);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(28026, 6634);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(5688,94004);
    myResult.push_back(caseQueue.getPriority(66406)); //10
    caseQueue.insert(79862,34420);
    myResult.push_back(caseQueue.getPriority(40390)); //11
    caseQueue.insert(60450,52202);
    myResult.push_back(caseQueue.getPriority(5688)); //12
    caseQueue.insert(91803,75796);
    caseQueue.insert(54007,63888);
    caseQueue.insert(87390,37580);
    caseQueue.insert(91109,78120);
    caseQueue.insert(64432,35065);
    myResult.push_back(caseQueue.getPriority(54007)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(40390, 30306);
    caseQueue.updatePriority(60450, 12839);
    myResult.push_back(caseQueue.getPriority(60450)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(65127)); //17
    caseQueue.insert(58133,6508);
    caseQueue.insert(18667,84634);
    caseQueue.insert(24848,16268);
    caseQueue.insert(59706,50063);
    myResult.push_back(caseQueue.getPriority(65127)); //18
    caseQueue.insert(22226,51098);
    caseQueue.insert(48092,64715);
    myResult.push_back(caseQueue.getPriority(24848)); //19
    caseQueue.insert(65393,7765);
    myResult.push_back(caseQueue.getPriority(5688)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(65393)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(66406)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(65127)); //26
    caseQueue.updatePriority(79862, 98852);
    caseQueue.insert(18898,13214);
    caseQueue.updatePriority(61635, 75189);
    myResult.push_back(caseQueue.getPriority(65127)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(91109, 36700);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(75235,22380);
    myResult.push_back(caseQueue.getPriority(79862)); //31
    myResult.push_back(caseQueue.getPriority(75235)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(59706, 95112);
    caseQueue.insert(46547,54187);
    caseQueue.insert(99962,91777);
    caseQueue.updatePriority(48092, 89873);
    myResult.push_back(caseQueue.getPriority(87390)); //34
    caseQueue.insert(49865,62562);
    caseQueue.insert(47364,75290);
    caseQueue.updatePriority(49865, 22923);
    caseQueue.insert(81036,3597);
    caseQueue.updatePriority(47364, 52768);
    caseQueue.insert(89499,57074);
    caseQueue.insert(47543,61030);
    myResult.push_back(caseQueue.getPriority(81036)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(99962, 48705);
    caseQueue.updatePriority(99962, 47726);
    myResult.push_back(caseQueue.getPriority(47364)); //37
    myResult.push_back(caseQueue.getPriority(87390)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(47543, 51700);
    caseQueue.updatePriority(46547, 44979);
    myResult.push_back(caseQueue.getPriority(87390)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(49923,72809);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(82078,94526);
    caseQueue.insert(19343,9989);
    myResult.push_back(caseQueue.getPriority(94302)); //44
    myResult.push_back(caseQueue.getPriority(18667)); //45
    caseQueue.insert(35001,77257);
    caseQueue.updatePriority(47543, 4951);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(74846,40281);
    caseQueue.updatePriority(61635, 53012);
    caseQueue.insert(74424,91393);
    myResult.push_back(caseQueue.getPriority(66406)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(54444,57909);
    caseQueue.insert(59995,63513);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(51387,13774);
    caseQueue.insert(73754,34638);
    caseQueue.insert(11083,92822);
    caseQueue.insert(9354,58613);
    caseQueue.insert(45373,54888);
    caseQueue.insert(39133,42115);
    myResult.push_back(caseQueue.getPriority(46547)); //50
    myResult.push_back(caseQueue.getPriority(5688)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(35001, 34841);
    caseQueue.insert(34912,25974);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(79320,71511);
    myResult.push_back(caseQueue.getPriority(82078)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(46547, 58354);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(74424)); //58
    caseQueue.insert(33920,26197);
    myResult.push_back(caseQueue.getPriority(74424)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(17811,34294);
    caseQueue.insert(91671,36869);
    caseQueue.insert(84242,31982);
    caseQueue.insert(78957,40054);
    myResult.push_back(caseQueue.deleteMin()); //62
    static const int resultListArray[] = {15976, 5318, 27994, 39744, 58171, 99567, 60355, 78925, 28026, 92171, 41411, 94004, 63888, 19998, 12839, 60450, 31660, 31660, 16268, 94004, 58133, 7765, 65393, 92171, 24848, 31660, 31660, 18898, 40390, 65127, 98852, 22380, 75235, 37580, 3597, 81036, 52768, 37580, 49865, 37580, 64432, 91109, 87390, 87378, 84634, 47543, 92171, 19343, 74846, 44979, 94004, 51387, 34912, 94526, 73754, 35001, 39133, 91393, 91393, 33920, 99962, 84242}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(101): Basarili" << endl;
    else cout << "Case(101): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_102(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 242);

    vector<int> myResult; 
    caseQueue.insert(35610,13085);
    caseQueue.insert(23850,40668);
    caseQueue.insert(45312,27163);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(84280,24832);
    caseQueue.insert(78106,77745);
    caseQueue.insert(6428,28373);
    myResult.push_back(caseQueue.getPriority(45312)); //2
    myResult.push_back(caseQueue.getPriority(45312)); //3
    caseQueue.insert(52002,70912);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(78106, 15805);
    caseQueue.insert(78736,44009);
    myResult.push_back(caseQueue.getPriority(78736)); //5
    myResult.push_back(caseQueue.getPriority(6428)); //6
    caseQueue.insert(19738,96235);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(45312)); //8
    caseQueue.updatePriority(6428, 56526);
    caseQueue.insert(34341,68816);
    caseQueue.updatePriority(34341, 71240);
    myResult.push_back(caseQueue.getPriority(6428)); //9
    myResult.push_back(caseQueue.getPriority(78736)); //10
    caseQueue.updatePriority(45312, 44318);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(67813,95300);
    caseQueue.insert(25382,38414);
    caseQueue.updatePriority(6428, 21335);
    caseQueue.insert(41966,19635);
    myResult.push_back(caseQueue.getPriority(41966)); //12
    myResult.push_back(caseQueue.getPriority(34341)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(44559,27138);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(76397,93783);
    caseQueue.updatePriority(52002, 54800);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(24029,69538);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(34341)); //20
    caseQueue.insert(7850,10390);
    caseQueue.updatePriority(76397, 20918);
    caseQueue.insert(80036,97359);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(80036, 37578);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(52002, 74553);
    caseQueue.insert(27517,94778);
    caseQueue.insert(58287,1439);
    myResult.push_back(caseQueue.getPriority(34341)); //23
    caseQueue.insert(60361,58388);
    caseQueue.insert(87763,18574);
    myResult.push_back(caseQueue.getPriority(52002)); //24
    caseQueue.insert(91278,29931);
    myResult.push_back(caseQueue.getPriority(27517)); //25
    myResult.push_back(caseQueue.getPriority(87763)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(34341, 11355);
    caseQueue.insert(40062,98579);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(73844,51865);
    myResult.push_back(caseQueue.getPriority(60361)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(80036, 38976);
    myResult.push_back(caseQueue.getPriority(91278)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(4378,73715);
    caseQueue.updatePriority(60361, 88575);
    caseQueue.insert(79400,29284);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(40062)); //34
    myResult.push_back(caseQueue.getPriority(67813)); //35
    caseQueue.updatePriority(4378, 5921);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(19738)); //37
    caseQueue.updatePriority(67813, 69039);
    caseQueue.updatePriority(73844, 81334);
    caseQueue.insert(12957,36173);
    myResult.push_back(caseQueue.getPriority(27517)); //38
    caseQueue.insert(44138,10770);
    caseQueue.insert(86062,26344);
    caseQueue.updatePriority(44138, 47505);
    myResult.push_back(caseQueue.getPriority(27517)); //39
    caseQueue.insert(47298,38185);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(89590,49636);
    caseQueue.updatePriority(60361, 19069);
    caseQueue.insert(74951,2622);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(73844, 84881);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(96779,46610);
    caseQueue.insert(2281,33802);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(51997,57587);
    caseQueue.updatePriority(96779, 96636);
    myResult.push_back(caseQueue.getPriority(73844)); //46
    caseQueue.insert(65523,54007);
    caseQueue.updatePriority(52002, 98220);
    myResult.push_back(caseQueue.getPriority(51997)); //47
    caseQueue.updatePriority(51997, 67072);
    caseQueue.updatePriority(27517, 55104);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(28415,80357);
    caseQueue.insert(81243,38025);
    caseQueue.insert(91865,90707);
    caseQueue.insert(56441,89453);
    caseQueue.insert(6247,43232);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(96779, 31821);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(24029, 47860);
    caseQueue.insert(16195,53135);
    myResult.push_back(caseQueue.getPriority(91865)); //54
    myResult.push_back(caseQueue.getPriority(65523)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(27517)); //57
    caseQueue.insert(56333,49110);
    caseQueue.insert(99405,80695);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(86450,82768);
    caseQueue.updatePriority(73844, 96763);
    myResult.push_back(caseQueue.getPriority(40062)); //59
    caseQueue.updatePriority(16195, 62892);
    caseQueue.insert(23059,48710);
    caseQueue.insert(52044,99451);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(27157,56117);
    caseQueue.updatePriority(67813, 31437);
    caseQueue.insert(73607,403);
    caseQueue.insert(1081,58024);
    caseQueue.insert(83503,59268);
    caseQueue.insert(57711,62233);
    caseQueue.insert(49962,87765);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(73844)); //62
    caseQueue.insert(14278,62063);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(50021,15111);
    caseQueue.insert(28893,61599);
    caseQueue.insert(78858,97725);
    myResult.push_back(caseQueue.getPriority(14278)); //64
    caseQueue.insert(46671,55228);
    caseQueue.insert(6888,16673);
    caseQueue.insert(40189,87315);
    caseQueue.insert(75340,93048);
    caseQueue.insert(27983,70086);
    caseQueue.insert(76926,69779);
    caseQueue.insert(42598,51986);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(84225,43227);
    myResult.push_back(caseQueue.getPriority(99405)); //66
    caseQueue.insert(954,79182);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(56441, 87217);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(954, 74469);
    caseQueue.updatePriority(56441, 48437);
    caseQueue.insert(81573,45070);
    caseQueue.updatePriority(49962, 28399);
    caseQueue.insert(41920,65442);
    caseQueue.updatePriority(75340, 73710);
    caseQueue.insert(53095,10344);
    myResult.push_back(caseQueue.getPriority(81573)); //69
    myResult.push_back(caseQueue.getPriority(65523)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(96681,26300);
    caseQueue.updatePriority(51997, 37262);
    caseQueue.insert(71711,87175);
    caseQueue.insert(21112,46772);
    caseQueue.insert(1346,52475);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(83196,28124);
    caseQueue.insert(71007,41890);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(93189,8337);
    myResult.push_back(caseQueue.getPriority(86450)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(62936,41924);
    caseQueue.updatePriority(81573, 90205);
    caseQueue.updatePriority(71711, 47578);
    caseQueue.updatePriority(27983, 57736);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(41851,7905);
    caseQueue.insert(635,10557);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(36280,21131);
    caseQueue.insert(8034,65292);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(79127,7800);
    caseQueue.insert(96181,11571);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(91839,93085);
    caseQueue.insert(58472,8949);
    caseQueue.updatePriority(83503, 56992);
    caseQueue.insert(94852,74246);
    caseQueue.insert(40736,98373);
    caseQueue.insert(64102,68077);
    caseQueue.updatePriority(27983, 94608);
    caseQueue.updatePriority(96181, 77409);
    caseQueue.updatePriority(21112, 90434);
    caseQueue.updatePriority(42598, 37708);
    caseQueue.updatePriority(19738, 640);
    myResult.push_back(caseQueue.getPriority(28415)); //82
    caseQueue.insert(25784,93019);
    caseQueue.insert(75209,61173);
    caseQueue.updatePriority(8034, 37754);
    myResult.push_back(caseQueue.getPriority(27517)); //83
    caseQueue.insert(76363,42026);
    caseQueue.insert(89194,19359);
    caseQueue.insert(27599,91355);
    caseQueue.insert(18326,37235);
    caseQueue.insert(90120,33760);
    caseQueue.insert(24940,30116);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(28893)); //85
    caseQueue.updatePriority(25784, 96606);
    myResult.push_back(caseQueue.getPriority(8034)); //86
    caseQueue.insert(1295,40482);
    caseQueue.updatePriority(64102, 93048);
    caseQueue.updatePriority(21112, 48298);
    caseQueue.insert(71913,30356);
    caseQueue.insert(81769,72756);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(23088,32670);
    caseQueue.insert(76714,51614);
    myResult.push_back(caseQueue.getPriority(94852)); //88
    caseQueue.updatePriority(65523, 77744);
    caseQueue.insert(91240,6247);
    caseQueue.insert(49659,77920);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(19055,51616);
    caseQueue.updatePriority(71711, 58969);
    static const int resultListArray[] = {35610, 27163, 27163, 84280, 44009, 28373, 78106, 27163, 56526, 44009, 23850, 19635, 71240, 41966, 6428, 44559, 25382, 78736, 45312, 71240, 7850, 76397, 71240, 74553, 94778, 18574, 58287, 34341, 58388, 87763, 29931, 91278, 79400, 98579, 95300, 4378, 96235, 94778, 94778, 86062, 74951, 60361, 12957, 47298, 2281, 84881, 57587, 80036, 44138, 89590, 81243, 96779, 6247, 90707, 54007, 24029, 55104, 56333, 98579, 23059, 73607, 96763, 67813, 62063, 50021, 80695, 6888, 84225, 45070, 54007, 53095, 96681, 83196, 82768, 93189, 49962, 51997, 41851, 635, 36280, 79127, 80357, 55104, 19738, 61599, 37754, 58472, 74246, 91240}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(102): Basarili" << endl;
    else cout << "Case(102): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_103(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 248);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(357, 50238);
    myResult.push_back(caseQueue.getPriority(185)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(80598, 32379);
    caseQueue.insert(20877,22059);
    caseQueue.insert(72245,56208);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(32483,34497);
    caseQueue.insert(13731,18215);
    caseQueue.insert(83899,71334);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(32483)); //6
    caseQueue.insert(81064,28027);
    myResult.push_back(caseQueue.getPriority(83899)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(72245)); //9
    caseQueue.insert(59386,15331);
    caseQueue.insert(89293,61588);
    myResult.push_back(caseQueue.getPriority(32483)); //10
    caseQueue.insert(26920,57250);
    myResult.push_back(caseQueue.getPriority(26920)); //11
    caseQueue.insert(28012,35434);
    caseQueue.insert(81725,31236);
    caseQueue.insert(85644,85027);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(24175,73519);
    myResult.push_back(caseQueue.getPriority(83899)); //13
    myResult.push_back(caseQueue.getPriority(26920)); //14
    myResult.push_back(caseQueue.getPriority(85644)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(36310,16506);
    caseQueue.insert(28221,46648);
    caseQueue.insert(39654,44790);
    caseQueue.insert(22013,96956);
    caseQueue.insert(62370,24613);
    caseQueue.insert(44976,74893);
    caseQueue.insert(21648,32491);
    caseQueue.insert(11961,77780);
    myResult.push_back(caseQueue.getPriority(22013)); //17
    caseQueue.insert(57054,41218);
    caseQueue.insert(20585,64032);
    myResult.push_back(caseQueue.getPriority(39654)); //18
    caseQueue.updatePriority(26920, 98555);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(39654, 23708);
    myResult.push_back(caseQueue.getPriority(20585)); //20
    caseQueue.insert(74533,86839);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(9622,96958);
    caseQueue.insert(14096,79791);
    caseQueue.updatePriority(44976, 10868);
    caseQueue.updatePriority(21648, 84677);
    caseQueue.insert(78982,52234);
    caseQueue.insert(20128,38129);
    caseQueue.updatePriority(20128, 21376);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(88018,78022);
    caseQueue.insert(34674,87446);
    caseQueue.updatePriority(20585, 80724);
    caseQueue.insert(38677,14650);
    caseQueue.updatePriority(38677, 81800);
    caseQueue.insert(99759,50672);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(90351,67441);
    myResult.push_back(caseQueue.getPriority(22013)); //24
    caseQueue.insert(1690,49245);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(22013, 6358);
    caseQueue.insert(91033,36580);
    caseQueue.updatePriority(1690, 21463);
    caseQueue.insert(2861,26335);
    myResult.push_back(caseQueue.getPriority(2861)); //26
    myResult.push_back(caseQueue.getPriority(11961)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(51453,56928);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(18738,91206);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(18738, 53359);
    caseQueue.insert(79893,31162);
    caseQueue.updatePriority(90351, 77820);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(24192,47905);
    myResult.push_back(caseQueue.getPriority(74533)); //32
    caseQueue.insert(24221,63291);
    myResult.push_back(caseQueue.getPriority(14096)); //33
    myResult.push_back(caseQueue.getPriority(28012)); //34
    caseQueue.updatePriority(89293, 6301);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(72245)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(70352,25367);
    caseQueue.insert(67051,91358);
    caseQueue.insert(9499,41866);
    myResult.push_back(caseQueue.getPriority(20585)); //38
    caseQueue.updatePriority(67051, 84281);
    caseQueue.insert(13562,15639);
    caseQueue.insert(32693,99764);
    caseQueue.insert(93286,23328);
    caseQueue.updatePriority(51453, 49638);
    caseQueue.updatePriority(11961, 25900);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(72245)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(42151,28174);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(85644)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(34674, 82944);
    caseQueue.updatePriority(28221, 21967);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(87391,46824);
    caseQueue.insert(44713,16424);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(3426,88129);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(24175, 34079);
    caseQueue.insert(26608,74872);
    myResult.push_back(caseQueue.getPriority(38677)); //51
    caseQueue.insert(15317,12252);
    myResult.push_back(caseQueue.getPriority(32693)); //52
    myResult.push_back(caseQueue.getPriority(14096)); //53
    myResult.push_back(caseQueue.getPriority(85644)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(32693, 43407);
    caseQueue.insert(17144,75086);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(69100,52013);
    myResult.push_back(caseQueue.getPriority(83899)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(72245)); //62
    myResult.push_back(caseQueue.getPriority(85644)); //63
    myResult.push_back(caseQueue.getPriority(17144)); //64
    caseQueue.updatePriority(72245, 91127);
    caseQueue.updatePriority(88018, 57028);
    caseQueue.insert(75242,23235);
    caseQueue.insert(31264,49244);
    caseQueue.updatePriority(9622, 22131);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(34909,8610);
    caseQueue.updatePriority(69100, 88499);
    caseQueue.updatePriority(85644, 77852);
    myResult.push_back(caseQueue.getPriority(83899)); //66
    caseQueue.updatePriority(78982, 23919);
    caseQueue.insert(64493,45736);
    caseQueue.insert(33001,76904);
    caseQueue.updatePriority(34909, 64021);
    caseQueue.insert(78119,17400);
    caseQueue.insert(63506,77897);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(74533, 91541);
    caseQueue.updatePriority(63506, 94902);
    myResult.push_back(caseQueue.getPriority(75242)); //68
    caseQueue.insert(57053,58117);
    caseQueue.insert(6846,74613);
    myResult.push_back(caseQueue.getPriority(78982)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(71971,28698);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(31264, 69672);
    caseQueue.insert(61643,24999);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.updatePriority(83899, 14432);
    caseQueue.insert(17479,86382);
    caseQueue.insert(95998,83214);
    caseQueue.insert(99839,92987);
    caseQueue.updatePriority(34909, 34922);
    myResult.push_back(caseQueue.getPriority(24221)); //75
    caseQueue.updatePriority(74533, 45271);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(17984,68668);
    caseQueue.updatePriority(20585, 8254);
    caseQueue.insert(89599,87241);
    caseQueue.insert(50473,63259);
    myResult.push_back(caseQueue.getPriority(89599)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(26608)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.getPriority(17144)); //81
    caseQueue.insert(4349,78760);
    caseQueue.updatePriority(4349, 47727);
    caseQueue.insert(49283,2090);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(15843,64458);
    caseQueue.insert(60956,13024);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.getPriority(57053)); //86
    myResult.push_back(caseQueue.getPriority(63506)); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    myResult.push_back(caseQueue.getPriority(17984)); //89
    caseQueue.updatePriority(24221, 26653);
    myResult.push_back(caseQueue.getPriority(17984)); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(41560,40388);
    myResult.push_back(caseQueue.getPriority(90351)); //93
    caseQueue.insert(24698,59670);
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.updatePriority(3426, 45480);
    caseQueue.insert(24362,3110);
    caseQueue.insert(95246,29335);
    caseQueue.insert(92809,12740);
    caseQueue.insert(74168,97198);
    caseQueue.updatePriority(24362, 46992);
    caseQueue.updatePriority(50473, 54515);
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    caseQueue.insert(15406,40756);
    caseQueue.updatePriority(72245, 76638);
    myResult.push_back(caseQueue.deleteMin()); //97
    caseQueue.updatePriority(95998, 41232);
    caseQueue.updatePriority(6846, 96608);
    myResult.push_back(caseQueue.getPriority(26920)); //98
    caseQueue.insert(16278,46509);
    myResult.push_back(caseQueue.deleteMin()); //99
    caseQueue.updatePriority(24698, 89174);
    caseQueue.insert(20191,85942);
    myResult.push_back(caseQueue.getPriority(18738)); //100
    myResult.push_back(caseQueue.getPriority(89599)); //101
    myResult.push_back(caseQueue.getPriority(26920)); //102
    caseQueue.updatePriority(89599, 50084);
    caseQueue.insert(94034,6663);
    myResult.push_back(caseQueue.getPriority(16278)); //103
    myResult.push_back(caseQueue.getPriority(26608)); //104
    caseQueue.insert(61311,85554);
    caseQueue.updatePriority(88018, 47913);
    caseQueue.updatePriority(26920, 82727);
    myResult.push_back(caseQueue.getPriority(20191)); //105
    caseQueue.updatePriority(74168, 60840);
    caseQueue.updatePriority(18738, 62095);
    caseQueue.insert(49095,79484);
    caseQueue.updatePriority(99839, 79333);
    myResult.push_back(caseQueue.getPriority(63506)); //106
    myResult.push_back(caseQueue.deleteMin()); //107
    caseQueue.insert(61191,70231);
    caseQueue.insert(90645,44478);
    caseQueue.updatePriority(34674, 73485);
    static const int resultListArray[] = {-1, -1, -1, 20877, 13731, 34497, 71334, 81064, 56208, 34497, 57250, 59386, 71334, 57250, 85027, 81725, 96956, 44790, 36310, 64032, 39654, 44976, 20128, 96956, 62370, 26335, 77780, 22013, 1690, 2861, 79893, 86839, 79791, 35434, 89293, 56208, 32483, 80724, 13562, 56208, 93286, 70352, 85027, 11961, 42151, 28221, 44713, 28012, 91033, 57054, 81800, 99764, 79791, 85027, 15317, 24175, 9499, 32693, 87391, 71334, 24192, 56208, 85027, 75086, 9622, 71334, 78119, 23235, 23919, 75242, 78982, 64493, 71971, 61643, 63291, 83899, 87241, 20585, 74872, 34909, 75086, 49283, 60956, 74533, 4349, 58117, 94902, 51453, 68668, 68668, 24221, 99759, 77820, 41560, 92809, 95246, 15406, 98555, 95998, 53359, 87241, 98555, 46509, 74872, 85942, 94902, 94034}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(103): Basarili" << endl;
    else cout << "Case(103): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_104(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 108);

    vector<int> myResult; 
    caseQueue.insert(50023,61971);
    myResult.push_back(caseQueue.getPriority(50023)); //1
    caseQueue.insert(94822,60936);
    caseQueue.updatePriority(94822, 94651);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(79373,92702);
    caseQueue.insert(94395,85420);
    caseQueue.insert(84361,1851);
    caseQueue.insert(64680,78681);
    caseQueue.insert(87776,37624);
    caseQueue.updatePriority(94822, 15093);
    myResult.push_back(caseQueue.getPriority(87776)); //3
    myResult.push_back(caseQueue.getPriority(94395)); //4
    caseQueue.updatePriority(94822, 98105);
    myResult.push_back(caseQueue.getPriority(79373)); //5
    caseQueue.updatePriority(64680, 19337);
    myResult.push_back(caseQueue.getPriority(94822)); //6
    caseQueue.insert(73822,34242);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(94395, 77621);
    caseQueue.updatePriority(79373, 70734);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(8748,25014);
    myResult.push_back(caseQueue.getPriority(94822)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(31090,37317);
    caseQueue.updatePriority(87776, 35162);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(23955,4529);
    caseQueue.updatePriority(31090, 67077);
    caseQueue.insert(91881,38304);
    myResult.push_back(caseQueue.getPriority(91881)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(97043,66302);
    caseQueue.updatePriority(91881, 5390);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(80412,35761);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(97043)); //17
    caseQueue.insert(39744,62180);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(6924,51842);
    caseQueue.insert(3254,68062);
    caseQueue.insert(78960,72445);
    caseQueue.updatePriority(94395, 85334);
    caseQueue.insert(71206,59359);
    caseQueue.insert(34486,44439);
    caseQueue.insert(12684,51573);
    caseQueue.insert(11106,15036);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(10334,77734);
    caseQueue.insert(46514,78416);
    caseQueue.insert(60932,75829);
    caseQueue.updatePriority(46514, 41748);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(46991,64572);
    caseQueue.updatePriority(60932, 3623);
    caseQueue.updatePriority(94822, 40183);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(94395)); //23
    caseQueue.updatePriority(78960, 74985);
    caseQueue.updatePriority(10334, 41327);
    caseQueue.insert(52885,32182);
    caseQueue.insert(10558,45701);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(46991)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(3254, 71321);
    caseQueue.insert(64040,59189);
    myResult.push_back(caseQueue.getPriority(71206)); //27
    caseQueue.insert(43374,16575);
    caseQueue.insert(49211,33474);
    myResult.push_back(caseQueue.getPriority(78960)); //28
    caseQueue.updatePriority(12684, 42146);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(10334, 76202);
    myResult.push_back(caseQueue.getPriority(6924)); //30
    caseQueue.insert(41797,82993);
    caseQueue.insert(52450,68847);
    caseQueue.insert(30678,79304);
    caseQueue.insert(38049,58149);
    caseQueue.insert(93287,68684);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(94395)); //32
    myResult.push_back(caseQueue.getPriority(10334)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(67987,18676);
    caseQueue.insert(98736,58496);
    caseQueue.insert(29874,14474);
    myResult.push_back(caseQueue.getPriority(38049)); //35
    caseQueue.insert(79512,66223);
    caseQueue.updatePriority(78960, 58249);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(60215,76442);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(10334, 97741);
    myResult.push_back(caseQueue.getPriority(46991)); //38
    myResult.push_back(caseQueue.getPriority(38049)); //39
    myResult.push_back(caseQueue.getPriority(10334)); //40
    caseQueue.insert(72816,98855);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(31090)); //42
    caseQueue.insert(66649,49202);
    caseQueue.insert(42118,60401);
    caseQueue.insert(67426,70627);
    myResult.push_back(caseQueue.deleteMin()); //43
    static const int resultListArray[] = {61971, 50023, 37624, 85420, 92702, 98105, 84361, 64680, 98105, 8748, 73822, 87776, 38304, 23955, 91881, 80412, 66302, 39744, 11106, 46514, 34486, 60932, 85334, 52885, 64572, 94822, 59359, 74985, 43374, 51842, 49211, 85334, 76202, 12684, 58149, 29874, 67987, 64572, 58149, 97741, 10558, 67077, 66649}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(104): Basarili" << endl;
    else cout << "Case(104): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_105(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 119);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(62809, 45178);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(40913)); //3
    caseQueue.updatePriority(79901, 34544);
    caseQueue.updatePriority(89630, 36046);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(55676,59842);
    caseQueue.insert(43031,36571);
    caseQueue.updatePriority(43031, 19958);
    caseQueue.updatePriority(55676, 92304);
    myResult.push_back(caseQueue.getPriority(55676)); //6
    caseQueue.insert(70661,72368);
    myResult.push_back(caseQueue.getPriority(70661)); //7
    caseQueue.insert(78521,41900);
    caseQueue.insert(28230,13538);
    caseQueue.insert(31857,11807);
    caseQueue.updatePriority(78521, 43385);
    caseQueue.updatePriority(43031, 62906);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(56384,20890);
    caseQueue.insert(95663,23604);
    caseQueue.insert(55089,48737);
    caseQueue.updatePriority(55676, 16759);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(1447,10462);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(35909,92910);
    caseQueue.insert(94126,31872);
    myResult.push_back(caseQueue.getPriority(43031)); //14
    caseQueue.insert(30044,63668);
    caseQueue.insert(58533,23559);
    caseQueue.insert(24311,98310);
    caseQueue.insert(16789,90081);
    caseQueue.updatePriority(43031, 39168);
    caseQueue.insert(7294,26313);
    caseQueue.insert(22516,2882);
    caseQueue.insert(77388,27764);
    caseQueue.updatePriority(30044, 34853);
    myResult.push_back(caseQueue.getPriority(16789)); //15
    myResult.push_back(caseQueue.getPriority(58533)); //16
    caseQueue.insert(41124,11128);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(55089, 75258);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(93701,34671);
    caseQueue.insert(71335,8921);
    caseQueue.updatePriority(43031, 9715);
    myResult.push_back(caseQueue.getPriority(71335)); //19
    caseQueue.updatePriority(7294, 83662);
    caseQueue.updatePriority(70661, 24128);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(40365,42673);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(90817,73858);
    caseQueue.insert(2845,49836);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(2845)); //23
    myResult.push_back(caseQueue.getPriority(70661)); //24
    caseQueue.insert(62960,21138);
    caseQueue.insert(91774,66100);
    caseQueue.updatePriority(2845, 17391);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(58827,24783);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(29238,36560);
    caseQueue.updatePriority(35909, 49416);
    caseQueue.insert(14863,54097);
    caseQueue.insert(29847,89138);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(74779,68382);
    caseQueue.insert(81979,98647);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(58674,80126);
    caseQueue.insert(29526,54235);
    caseQueue.updatePriority(78521, 73555);
    myResult.push_back(caseQueue.getPriority(14863)); //32
    caseQueue.insert(84387,87187);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(90817)); //34
    caseQueue.insert(41671,86351);
    caseQueue.insert(286,96634);
    caseQueue.insert(32155,29923);
    myResult.push_back(caseQueue.getPriority(7294)); //35
    caseQueue.insert(15493,33720);
    myResult.push_back(caseQueue.getPriority(29847)); //36
    caseQueue.insert(15065,72311);
    caseQueue.insert(97063,2299);
    caseQueue.updatePriority(29847, 81856);
    myResult.push_back(caseQueue.getPriority(24311)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(88962,6031);
    myResult.push_back(caseQueue.getPriority(91774)); //39
    caseQueue.insert(32339,69567);
    caseQueue.insert(48125,43572);
    caseQueue.insert(16106,85514);
    caseQueue.insert(43259,25033);
    caseQueue.insert(67110,89768);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(24311, 53231);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(20947,2828);
    caseQueue.updatePriority(67110, 40735);
    caseQueue.insert(32613,15312);
    caseQueue.insert(14643,30841);
    caseQueue.insert(4365,84203);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(84387, 47029);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(67665,59547);
    caseQueue.insert(99761,80258);
    static const int resultListArray[] = {-1, -1, -1, -1, -1, 92304, 72368, 31857, 28230, 1447, 55676, 56384, 95663, 62906, 90081, 23559, 22516, 41124, 8921, 71335, 43031, 58533, 49836, 24128, 2845, 62960, 70661, 58827, 77388, 94126, 93701, 54097, 30044, 73858, 83662, 89138, 98310, 97063, 66100, 88962, 43259, 32155, 20947, 32613}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(105): Basarili" << endl;
    else cout << "Case(105): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_106(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 146);

    vector<int> myResult; 
    caseQueue.insert(99847,24795);
    caseQueue.insert(40668,70205);
    caseQueue.insert(58822,98448);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(58822, 62799);
    caseQueue.updatePriority(58822, 67184);
    caseQueue.insert(88045,99010);
    caseQueue.insert(37094,90299);
    caseQueue.updatePriority(58822, 47599);
    myResult.push_back(caseQueue.getPriority(40668)); //2
    caseQueue.insert(31483,9254);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(16007,49883);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(64209,24735);
    caseQueue.insert(8272,12875);
    myResult.push_back(caseQueue.getPriority(64209)); //5
    caseQueue.insert(82453,67318);
    caseQueue.insert(18139,54625);
    myResult.push_back(caseQueue.getPriority(18139)); //6
    caseQueue.updatePriority(64209, 81602);
    caseQueue.insert(49579,43275);
    caseQueue.updatePriority(49579, 90692);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(82453)); //8
    myResult.push_back(caseQueue.getPriority(37094)); //9
    caseQueue.insert(99785,13645);
    myResult.push_back(caseQueue.getPriority(49579)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(73194,35719);
    caseQueue.insert(80947,94245);
    myResult.push_back(caseQueue.getPriority(49579)); //12
    caseQueue.insert(76716,97152);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(67015,95898);
    caseQueue.updatePriority(80947, 42012);
    myResult.push_back(caseQueue.getPriority(80947)); //14
    myResult.push_back(caseQueue.getPriority(82453)); //15
    caseQueue.updatePriority(40668, 66852);
    caseQueue.insert(27041,71716);
    myResult.push_back(caseQueue.getPriority(64209)); //16
    caseQueue.insert(56569,94522);
    caseQueue.insert(90577,50510);
    caseQueue.insert(2460,16450);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(66912,16729);
    caseQueue.insert(41428,90188);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(64209, 54485);
    caseQueue.insert(56956,20194);
    caseQueue.insert(18684,98343);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(56569, 81990);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(40668, 13114);
    caseQueue.insert(60222,88072);
    caseQueue.updatePriority(76716, 55587);
    caseQueue.insert(44850,9578);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(49579)); //23
    caseQueue.updatePriority(67015, 61578);
    myResult.push_back(caseQueue.getPriority(37094)); //24
    myResult.push_back(caseQueue.getPriority(18684)); //25
    caseQueue.insert(75312,30910);
    myResult.push_back(caseQueue.getPriority(40668)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(4100,44573);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(841,41570);
    caseQueue.insert(13908,34386);
    myResult.push_back(caseQueue.getPriority(56569)); //29
    caseQueue.insert(63859,91571);
    caseQueue.insert(15911,68024);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(27041)); //31
    caseQueue.updatePriority(90577, 91623);
    myResult.push_back(caseQueue.getPriority(27041)); //32
    caseQueue.insert(82381,13775);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(57418,52552);
    caseQueue.insert(87709,32891);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(27041, 13503);
    myResult.push_back(caseQueue.getPriority(60222)); //35
    myResult.push_back(caseQueue.getPriority(49579)); //36
    myResult.push_back(caseQueue.getPriority(841)); //37
    caseQueue.insert(78075,16011);
    myResult.push_back(caseQueue.getPriority(90577)); //38
    caseQueue.insert(32538,88164);
    caseQueue.insert(4234,17869);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(76716)); //40
    caseQueue.updatePriority(57418, 81031);
    caseQueue.insert(23995,27809);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(60488,74525);
    myResult.push_back(caseQueue.getPriority(63859)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(50921,3999);
    caseQueue.updatePriority(57418, 1007);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(26742,3139);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(63859)); //46
    caseQueue.updatePriority(90577, 68956);
    myResult.push_back(caseQueue.getPriority(841)); //47
    myResult.push_back(caseQueue.getPriority(37094)); //48
    caseQueue.insert(27304,98224);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(27304, 527);
    caseQueue.updatePriority(23995, 34903);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(88603,68975);
    caseQueue.insert(75084,50425);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(18139, 18563);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(60488, 21651);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(16048,10731);
    myResult.push_back(caseQueue.getPriority(76716)); //55
    caseQueue.updatePriority(75084, 87783);
    myResult.push_back(caseQueue.getPriority(49579)); //56
    caseQueue.updatePriority(88603, 65610);
    caseQueue.updatePriority(41428, 70597);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(70110,89978);
    caseQueue.insert(37421,71823);
    myResult.push_back(caseQueue.getPriority(15911)); //59
    caseQueue.updatePriority(15911, 40261);
    caseQueue.updatePriority(70110, 90793);
    caseQueue.updatePriority(41428, 16808);
    caseQueue.updatePriority(70110, 11912);
    caseQueue.insert(5487,32947);
    caseQueue.insert(24762,29679);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(86831,3519);
    caseQueue.insert(62577,26086);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(72413,38947);
    caseQueue.insert(5644,84893);
    caseQueue.insert(9296,55288);
    static const int resultListArray[] = {99847, 70205, 31483, 58822, 24735, 54625, 8272, 67318, 90299, 90692, 99785, 90692, 73194, 42012, 67318, 81602, 2460, 66912, 56956, 80947, 16007, 44850, 90692, 90299, 98343, 13114, 40668, 75312, 81990, 13908, 71716, 71716, 82381, 87709, 88072, 90692, 41570, 91623, 27041, 55587, 78075, 91571, 4234, 57418, 26742, 91571, 41570, 90299, 50921, 27304, 23995, 841, 18139, 60488, 55587, 90692, 16048, 4100, 68024, 70110, 86831, 41428}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(106): Basarili" << endl;
    else cout << "Case(106): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_107(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 145);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(58330)); //1
    caseQueue.insert(66344,35346);
    caseQueue.updatePriority(66344, 3781);
    myResult.push_back(caseQueue.getPriority(66344)); //2
    myResult.push_back(caseQueue.getPriority(66344)); //3
    caseQueue.insert(48595,29716);
    myResult.push_back(caseQueue.getPriority(48595)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(52133,53161);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(33384,90945);
    caseQueue.insert(76082,80726);
    caseQueue.insert(43080,17543);
    caseQueue.updatePriority(76082, 75589);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(97997,7097);
    caseQueue.updatePriority(76082, 30368);
    caseQueue.insert(41697,39813);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(75259,75615);
    myResult.push_back(caseQueue.getPriority(33384)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(94945,85768);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(42777,93469);
    caseQueue.insert(45270,80525);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(98147,58080);
    caseQueue.insert(2407,26120);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(44319,90654);
    myResult.push_back(caseQueue.getPriority(98147)); //14
    caseQueue.updatePriority(75259, 58404);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(94945)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(30741,68680);
    caseQueue.insert(53520,53097);
    myResult.push_back(caseQueue.getPriority(94945)); //18
    caseQueue.insert(80197,74635);
    caseQueue.updatePriority(94945, 26787);
    myResult.push_back(caseQueue.getPriority(94945)); //19
    myResult.push_back(caseQueue.getPriority(80197)); //20
    caseQueue.updatePriority(45270, 66475);
    myResult.push_back(caseQueue.getPriority(45270)); //21
    caseQueue.updatePriority(44319, 30804);
    myResult.push_back(caseQueue.getPriority(53520)); //22
    caseQueue.insert(48078,29892);
    caseQueue.updatePriority(42777, 77513);
    caseQueue.insert(50146,59700);
    caseQueue.insert(41681,16951);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(69172,51733);
    caseQueue.updatePriority(42777, 65988);
    caseQueue.updatePriority(50146, 95725);
    caseQueue.updatePriority(30741, 85162);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(91879,91069);
    caseQueue.insert(92222,149);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(53520, 85935);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(33384, 68165);
    caseQueue.updatePriority(69172, 42346);
    caseQueue.insert(52128,83853);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(45270)); //29
    myResult.push_back(caseQueue.getPriority(53520)); //30
    myResult.push_back(caseQueue.getPriority(45270)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(23927,84794);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(80197)); //34
    caseQueue.insert(45717,98776);
    caseQueue.insert(79634,81770);
    myResult.push_back(caseQueue.getPriority(23927)); //35
    caseQueue.insert(25785,131);
    caseQueue.updatePriority(80197, 42590);
    caseQueue.insert(52561,13032);
    caseQueue.insert(91785,92130);
    caseQueue.insert(32192,18194);
    myResult.push_back(caseQueue.getPriority(53520)); //36
    caseQueue.insert(65975,90886);
    caseQueue.insert(60435,96571);
    caseQueue.updatePriority(53520, 95036);
    caseQueue.insert(94249,56390);
    caseQueue.updatePriority(91879, 50228);
    caseQueue.insert(36254,88864);
    caseQueue.updatePriority(52128, 50868);
    caseQueue.insert(85373,42816);
    caseQueue.insert(54457,62944);
    caseQueue.insert(63632,73771);
    caseQueue.updatePriority(91785, 25565);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(45717)); //38
    caseQueue.insert(96931,32446);
    caseQueue.insert(84044,59519);
    caseQueue.insert(12450,20272);
    caseQueue.updatePriority(12450, 46322);
    caseQueue.insert(14221,84986);
    myResult.push_back(caseQueue.getPriority(12450)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(63632)); //41
    caseQueue.insert(43093,11884);
    caseQueue.insert(57921,29404);
    caseQueue.updatePriority(14221, 27095);
    caseQueue.insert(70423,95411);
    caseQueue.insert(48044,87525);
    myResult.push_back(caseQueue.getPriority(45717)); //42
    caseQueue.insert(66141,74276);
    caseQueue.insert(20900,42104);
    caseQueue.updatePriority(70423, 29577);
    myResult.push_back(caseQueue.getPriority(85373)); //43
    caseQueue.insert(9367,51127);
    caseQueue.insert(74747,24738);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(33258,30525);
    caseQueue.insert(39889,88143);
    caseQueue.updatePriority(79634, 99261);
    caseQueue.insert(18868,74830);
    caseQueue.insert(36977,15043);
    caseQueue.updatePriority(66141, 1865);
    caseQueue.updatePriority(39889, 40583);
    myResult.push_back(caseQueue.getPriority(63632)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(53520, 31373);
    caseQueue.insert(43193,28893);
    caseQueue.updatePriority(18868, 43171);
    caseQueue.updatePriority(57921, 38730);
    caseQueue.updatePriority(45717, 1339);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(21209,62234);
    caseQueue.insert(32457,33139);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(54457)); //50
    caseQueue.insert(29238,4571);
    caseQueue.insert(25162,22569);
    caseQueue.insert(25327,6189);
    myResult.push_back(caseQueue.getPriority(65975)); //51
    caseQueue.insert(57843,56895);
    caseQueue.insert(64327,49754);
    caseQueue.insert(42091,49931);
    myResult.push_back(caseQueue.getPriority(29238)); //52
    static const int resultListArray[] = {-1, 3781, 3781, 29716, 66344, 48595, 43080, 97997, 90945, 76082, 41697, 52133, 2407, 58080, 98147, 85768, 75259, 85768, 26787, 74635, 66475, 53097, 41681, 94945, 48078, 92222, 44319, 69172, 66475, 85935, 66475, 42777, 45270, 74635, 84794, 85935, 25785, 98776, 46322, 52561, 73771, 98776, 42816, 43093, 32192, 73771, 66141, 45717, 36977, 62944, 90886, 4571}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(107): Basarili" << endl;
    else cout << "Case(107): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_108(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 224);

    vector<int> myResult; 
    caseQueue.insert(83561,6628);
    caseQueue.insert(61266,5343);
    caseQueue.updatePriority(83561, 6164);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(83561, 96245);
    myResult.push_back(caseQueue.getPriority(83561)); //2
    caseQueue.insert(52380,24240);
    caseQueue.updatePriority(52380, 34663);
    caseQueue.updatePriority(83561, 27929);
    caseQueue.insert(97647,77899);
    caseQueue.updatePriority(83561, 89784);
    caseQueue.updatePriority(83561, 33293);
    caseQueue.insert(25259,86040);
    caseQueue.insert(60931,66740);
    caseQueue.insert(71795,77296);
    caseQueue.insert(97096,22152);
    myResult.push_back(caseQueue.getPriority(97096)); //3
    caseQueue.updatePriority(71795, 71352);
    caseQueue.updatePriority(97096, 59271);
    myResult.push_back(caseQueue.getPriority(25259)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(11820,39802);
    caseQueue.insert(99211,98826);
    caseQueue.updatePriority(60931, 41763);
    myResult.push_back(caseQueue.getPriority(11820)); //7
    myResult.push_back(caseQueue.getPriority(99211)); //8
    myResult.push_back(caseQueue.getPriority(71795)); //9
    caseQueue.insert(74378,66968);
    caseQueue.updatePriority(60931, 72370);
    caseQueue.insert(8034,80168);
    myResult.push_back(caseQueue.getPriority(60931)); //10
    caseQueue.insert(66235,19990);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(94104,85058);
    caseQueue.updatePriority(97096, 54571);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(8034)); //13
    myResult.push_back(caseQueue.getPriority(94104)); //14
    caseQueue.insert(42599,13439);
    caseQueue.insert(60540,86365);
    caseQueue.insert(10252,37168);
    caseQueue.updatePriority(74378, 41892);
    caseQueue.insert(92060,29920);
    myResult.push_back(caseQueue.getPriority(60540)); //15
    myResult.push_back(caseQueue.getPriority(92060)); //16
    myResult.push_back(caseQueue.getPriority(25259)); //17
    caseQueue.updatePriority(60540, 8301);
    caseQueue.insert(59280,81869);
    myResult.push_back(caseQueue.getPriority(97647)); //18
    caseQueue.insert(76306,83480);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(10294,28276);
    caseQueue.updatePriority(60931, 6961);
    caseQueue.updatePriority(59280, 73409);
    myResult.push_back(caseQueue.getPriority(42599)); //20
    caseQueue.updatePriority(42599, 22918);
    myResult.push_back(caseQueue.getPriority(99211)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(82917,7203);
    myResult.push_back(caseQueue.getPriority(10252)); //23
    caseQueue.insert(36872,2199);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(54759,1214);
    caseQueue.updatePriority(99211, 55113);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(10294, 37852);
    myResult.push_back(caseQueue.getPriority(8034)); //27
    myResult.push_back(caseQueue.getPriority(97647)); //28
    caseQueue.insert(72656,16278);
    caseQueue.insert(62022,24392);
    myResult.push_back(caseQueue.getPriority(10294)); //29
    myResult.push_back(caseQueue.getPriority(92060)); //30
    caseQueue.insert(56712,45279);
    caseQueue.updatePriority(94104, 29002);
    caseQueue.insert(94193,15250);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(27638,92744);
    caseQueue.updatePriority(10252, 92568);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(25259)); //36
    caseQueue.insert(34034,81543);
    caseQueue.insert(23733,82052);
    caseQueue.updatePriority(76306, 31425);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(74378)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(34034)); //40
    caseQueue.updatePriority(25259, 90153);
    caseQueue.insert(43296,59860);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(41414,54611);
    caseQueue.insert(80472,63420);
    caseQueue.insert(25410,44567);
    caseQueue.insert(48549,42327);
    caseQueue.insert(50968,64701);
    caseQueue.updatePriority(23733, 62908);
    myResult.push_back(caseQueue.getPriority(50968)); //42
    myResult.push_back(caseQueue.getPriority(99211)); //43
    caseQueue.insert(37153,92175);
    myResult.push_back(caseQueue.getPriority(8034)); //44
    caseQueue.insert(82230,79705);
    caseQueue.insert(88502,19549);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(43296, 76995);
    myResult.push_back(caseQueue.getPriority(82230)); //46
    caseQueue.insert(9479,67091);
    caseQueue.insert(87052,26677);
    caseQueue.updatePriority(23733, 41961);
    myResult.push_back(caseQueue.getPriority(43296)); //47
    myResult.push_back(caseQueue.getPriority(10252)); //48
    caseQueue.insert(96830,78442);
    caseQueue.insert(96995,60492);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(96830)); //50
    caseQueue.insert(16964,36951);
    caseQueue.updatePriority(48549, 57072);
    caseQueue.updatePriority(96830, 29457);
    caseQueue.insert(18423,14522);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(57715,66639);
    caseQueue.insert(11982,62992);
    caseQueue.updatePriority(99211, 77716);
    myResult.push_back(caseQueue.getPriority(80472)); //53
    myResult.push_back(caseQueue.getPriority(11982)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(82230)); //56
    caseQueue.insert(3888,66692);
    caseQueue.insert(46346,69700);
    caseQueue.insert(2367,27204);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(97096)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(11982, 87528);
    caseQueue.insert(6295,5017);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(46753,31915);
    myResult.push_back(caseQueue.getPriority(34034)); //64
    myResult.push_back(caseQueue.getPriority(80472)); //65
    caseQueue.updatePriority(48549, 14996);
    caseQueue.updatePriority(37153, 92560);
    caseQueue.insert(25417,75936);
    caseQueue.insert(38588,96256);
    caseQueue.insert(71837,59879);
    caseQueue.insert(21485,11513);
    caseQueue.insert(27265,24469);
    caseQueue.insert(17774,43048);
    caseQueue.insert(47827,32819);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(1114,50228);
    caseQueue.updatePriority(96995, 92508);
    caseQueue.updatePriority(9479, 26831);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(59280)); //68
    caseQueue.insert(27582,16249);
    myResult.push_back(caseQueue.getPriority(57715)); //69
    myResult.push_back(caseQueue.getPriority(8034)); //70
    caseQueue.updatePriority(27265, 66374);
    caseQueue.updatePriority(25259, 47717);
    myResult.push_back(caseQueue.getPriority(11982)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(10252)); //73
    myResult.push_back(caseQueue.getPriority(27638)); //74
    myResult.push_back(caseQueue.getPriority(38588)); //75
    caseQueue.updatePriority(1114, 42603);
    caseQueue.insert(64937,29451);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(25259)); //77
    caseQueue.updatePriority(97647, 93608);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(73597,61009);
    caseQueue.updatePriority(57715, 67033);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(82230, 81407);
    caseQueue.updatePriority(10252, 10880);
    caseQueue.updatePriority(59280, 71086);
    myResult.push_back(caseQueue.getPriority(27265)); //80
    caseQueue.updatePriority(17774, 67319);
    caseQueue.insert(98727,46408);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(90254,28037);
    caseQueue.updatePriority(27265, 50302);
    caseQueue.insert(12736,96705);
    myResult.push_back(caseQueue.getPriority(34034)); //82
    caseQueue.insert(14262,67497);
    caseQueue.insert(9948,76316);
    caseQueue.updatePriority(80472, 52812);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(7186,50306);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(36912,4921);
    caseQueue.insert(44069,25862);
    myResult.push_back(caseQueue.getPriority(38588)); //85
    caseQueue.insert(71455,70531);
    myResult.push_back(caseQueue.getPriority(8034)); //86
    caseQueue.insert(53440,91136);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(95114,16845);
    caseQueue.insert(65293,28082);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(1435,19427);
    caseQueue.insert(21875,26416);
    caseQueue.insert(17267,81236);
    myResult.push_back(caseQueue.deleteMin()); //89
    myResult.push_back(caseQueue.getPriority(27265)); //90
    caseQueue.insert(69815,75233);
    caseQueue.insert(18288,68806);
    caseQueue.insert(49854,70309);
    myResult.push_back(caseQueue.getPriority(80472)); //91
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(29799,90374);
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.insert(98307,15652);
    caseQueue.insert(69272,96781);
    caseQueue.updatePriority(71795, 56867);
    static const int resultListArray[] = {61266, 96245, 22152, 86040, 83561, 52380, 39802, 98826, 71352, 72370, 66235, 11820, 80168, 85058, 86365, 29920, 86040, 77899, 60540, 13439, 98826, 60931, 37168, 36872, 54759, 82917, 80168, 77899, 37852, 29920, 94193, 72656, 42599, 62022, 94104, 86040, 92060, 41892, 76306, 81543, 10294, 64701, 55113, 80168, 88502, 79705, 76995, 92568, 87052, 78442, 18423, 96830, 63420, 62992, 16964, 79705, 2367, 74378, 54571, 23733, 25410, 6295, 56712, 81543, 63420, 21485, 48549, 73409, 66639, 80168, 87528, 27582, 92568, 92744, 96256, 9479, 47717, 64937, 46753, 66374, 10252, 81543, 90254, 47827, 96256, 80168, 36912, 95114, 1435, 50302, 52812, 44069, 21875, 65293}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(108): Basarili" << endl;
    else cout << "Case(108): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_109(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 167);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(35689)); //1
    caseQueue.insert(14339,45654);
    caseQueue.insert(8439,44909);
    myResult.push_back(caseQueue.getPriority(8439)); //2
    caseQueue.updatePriority(8439, 77464);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(8439)); //4
    caseQueue.insert(52984,76275);
    caseQueue.insert(90404,80736);
    caseQueue.insert(30128,21472);
    myResult.push_back(caseQueue.getPriority(90404)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(46838,41566);
    myResult.push_back(caseQueue.getPriority(90404)); //7
    caseQueue.updatePriority(46838, 74527);
    caseQueue.updatePriority(8439, 83587);
    myResult.push_back(caseQueue.getPriority(90404)); //8
    caseQueue.insert(92115,97562);
    caseQueue.updatePriority(52984, 82194);
    caseQueue.insert(50270,24007);
    caseQueue.insert(43087,48761);
    myResult.push_back(caseQueue.getPriority(8439)); //9
    myResult.push_back(caseQueue.getPriority(52984)); //10
    myResult.push_back(caseQueue.getPriority(43087)); //11
    caseQueue.insert(50384,38992);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(8439)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(63241,51010);
    caseQueue.insert(61963,60980);
    caseQueue.insert(6123,37399);
    caseQueue.insert(17528,12063);
    caseQueue.insert(6093,84446);
    caseQueue.updatePriority(52984, 66370);
    caseQueue.insert(47970,72797);
    myResult.push_back(caseQueue.getPriority(63241)); //16
    myResult.push_back(caseQueue.getPriority(61963)); //17
    caseQueue.updatePriority(90404, 21263);
    caseQueue.insert(81173,90392);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(40259,28843);
    caseQueue.insert(59658,60090);
    caseQueue.insert(84674,82316);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(59658, 6835);
    caseQueue.updatePriority(40259, 16282);
    caseQueue.insert(61849,92681);
    caseQueue.insert(40841,92607);
    myResult.push_back(caseQueue.getPriority(59658)); //20
    caseQueue.updatePriority(6093, 82972);
    myResult.push_back(caseQueue.getPriority(6093)); //21
    caseQueue.updatePriority(59658, 86798);
    caseQueue.insert(5373,31075);
    caseQueue.insert(85492,92672);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(59658, 9052);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(92115)); //24
    caseQueue.insert(5625,44609);
    myResult.push_back(caseQueue.getPriority(52984)); //25
    caseQueue.insert(95811,74771);
    caseQueue.insert(32806,74744);
    myResult.push_back(caseQueue.getPriority(47970)); //26
    myResult.push_back(caseQueue.getPriority(32806)); //27
    caseQueue.insert(39611,98451);
    caseQueue.updatePriority(40841, 71712);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(76849,31415);
    caseQueue.insert(35969,39601);
    caseQueue.updatePriority(81173, 78548);
    myResult.push_back(caseQueue.getPriority(8439)); //30
    caseQueue.updatePriority(35969, 50133);
    myResult.push_back(caseQueue.getPriority(46838)); //31
    caseQueue.updatePriority(76849, 95322);
    caseQueue.insert(44808,81419);
    myResult.push_back(caseQueue.getPriority(44808)); //32
    caseQueue.updatePriority(6093, 27443);
    caseQueue.insert(34851,78102);
    caseQueue.updatePriority(61963, 15560);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(74839,73399);
    caseQueue.insert(29418,38663);
    caseQueue.updatePriority(46838, 91508);
    caseQueue.updatePriority(74839, 28676);
    myResult.push_back(caseQueue.getPriority(92115)); //34
    caseQueue.updatePriority(47970, 51547);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(13852,95010);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(31708,45720);
    caseQueue.insert(94478,60342);
    myResult.push_back(caseQueue.getPriority(84674)); //37
    caseQueue.insert(59490,41454);
    caseQueue.insert(87448,58706);
    caseQueue.insert(39810,42369);
    caseQueue.insert(25963,94546);
    caseQueue.updatePriority(59490, 18220);
    caseQueue.insert(47397,85854);
    caseQueue.insert(10988,57904);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(97486,13075);
    caseQueue.insert(84390,11227);
    myResult.push_back(caseQueue.getPriority(39611)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(73724,80867);
    myResult.push_back(caseQueue.getPriority(32806)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(10988, 26725);
    caseQueue.insert(31363,69123);
    caseQueue.insert(48110,5685);
    caseQueue.insert(7031,43553);
    caseQueue.updatePriority(47397, 40660);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(92115)); //44
    caseQueue.updatePriority(5625, 89662);
    caseQueue.updatePriority(46838, 18181);
    caseQueue.insert(86764,65136);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(32120,4396);
    caseQueue.insert(75433,19347);
    caseQueue.updatePriority(86764, 93493);
    myResult.push_back(caseQueue.getPriority(84674)); //46
    myResult.push_back(caseQueue.getPriority(31708)); //47
    caseQueue.updatePriority(25963, 2557);
    caseQueue.insert(89542,22616);
    caseQueue.updatePriority(35969, 75414);
    caseQueue.insert(59504,49788);
    caseQueue.insert(45534,40608);
    myResult.push_back(caseQueue.getPriority(87448)); //48
    caseQueue.updatePriority(92115, 1986);
    myResult.push_back(caseQueue.getPriority(39611)); //49
    caseQueue.insert(4170,71025);
    caseQueue.updatePriority(39810, 65803);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(5587,42582);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(33901,449);
    myResult.push_back(caseQueue.getPriority(40841)); //54
    caseQueue.insert(95480,52013);
    myResult.push_back(caseQueue.getPriority(76849)); //55
    caseQueue.insert(67004,93892);
    myResult.push_back(caseQueue.getPriority(87448)); //56
    caseQueue.insert(48472,23369);
    caseQueue.insert(45180,80567);
    caseQueue.updatePriority(95811, 32567);
    caseQueue.insert(30252,51601);
    caseQueue.insert(25335,37813);
    caseQueue.insert(45762,42421);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(23483,562);
    caseQueue.updatePriority(5625, 56228);
    caseQueue.updatePriority(30252, 49687);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(69572,51281);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(77838,42363);
    caseQueue.updatePriority(59504, 10661);
    caseQueue.insert(62047,3751);
    caseQueue.updatePriority(5587, 8083);
    caseQueue.updatePriority(52984, 27299);
    myResult.push_back(caseQueue.getPriority(29418)); //61
    caseQueue.updatePriority(87448, 87483);
    static const int resultListArray[] = {-1, 44909, 14339, 77464, 80736, 30128, 80736, 80736, 83587, 82194, 48761, 50270, 50384, 83587, 43087, 51010, 60980, 17528, 90404, 6835, 82972, 40259, 59658, 97562, 66370, 72797, 74744, 5373, 6123, 83587, 74527, 81419, 61963, 97562, 6093, 74839, 82316, 59490, 98451, 84390, 74744, 97486, 48110, 97562, 46838, 82316, 45720, 58706, 98451, 92115, 25963, 32120, 75433, 71712, 95322, 58706, 33901, 23483, 89542, 48472, 38663}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(109): Basarili" << endl;
    else cout << "Case(109): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_110(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 204);

    vector<int> myResult; 
    caseQueue.insert(23140,53872);
    caseQueue.insert(37756,24406);
    caseQueue.updatePriority(37756, 71173);
    caseQueue.insert(87590,87431);
    caseQueue.insert(69252,28682);
    caseQueue.insert(24038,25146);
    caseQueue.insert(17325,21267);
    caseQueue.updatePriority(37756, 5540);
    caseQueue.insert(32028,17560);
    caseQueue.insert(51110,97228);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(47710,78561);
    myResult.push_back(caseQueue.getPriority(47710)); //2
    caseQueue.updatePriority(24038, 90238);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(51110, 11633);
    caseQueue.updatePriority(47710, 47629);
    caseQueue.insert(12768,77362);
    caseQueue.updatePriority(51110, 58751);
    caseQueue.insert(90706,58501);
    caseQueue.updatePriority(51110, 76223);
    myResult.push_back(caseQueue.getPriority(12768)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(24038, 62188);
    caseQueue.insert(5308,85717);
    caseQueue.updatePriority(5308, 73600);
    caseQueue.updatePriority(5308, 82991);
    caseQueue.insert(17062,73212);
    caseQueue.updatePriority(87590, 52330);
    caseQueue.insert(56711,4083);
    caseQueue.insert(16006,95155);
    caseQueue.insert(29810,30553);
    caseQueue.insert(52374,87995);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(87340,22289);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(69252)); //8
    myResult.push_back(caseQueue.getPriority(12768)); //9
    caseQueue.insert(91506,92845);
    caseQueue.insert(45816,43535);
    caseQueue.updatePriority(5308, 17433);
    caseQueue.insert(60948,82574);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(52374)); //11
    caseQueue.insert(46930,81042);
    caseQueue.insert(54,9255);
    caseQueue.insert(83431,55901);
    caseQueue.insert(33191,16130);
    caseQueue.insert(28463,42458);
    caseQueue.insert(25794,97981);
    myResult.push_back(caseQueue.getPriority(23140)); //12
    myResult.push_back(caseQueue.getPriority(83431)); //13
    myResult.push_back(caseQueue.getPriority(25794)); //14
    myResult.push_back(caseQueue.getPriority(47710)); //15
    caseQueue.insert(13500,33740);
    caseQueue.updatePriority(25794, 96368);
    caseQueue.insert(76037,90466);
    caseQueue.insert(37804,55282);
    caseQueue.insert(59406,19787);
    caseQueue.insert(68731,15244);
    caseQueue.updatePriority(29810, 76356);
    caseQueue.insert(93228,16714);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(17934,37909);
    caseQueue.insert(67964,59688);
    caseQueue.updatePriority(91506, 86527);
    caseQueue.insert(99201,35999);
    myResult.push_back(caseQueue.getPriority(67964)); //18
    caseQueue.insert(42117,22199);
    myResult.push_back(caseQueue.getPriority(25794)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(86932,43068);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(87590)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(83431)); //24
    caseQueue.insert(32241,82343);
    caseQueue.insert(23714,62949);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(32220,2379);
    myResult.push_back(caseQueue.getPriority(32220)); //26
    caseQueue.insert(41152,82221);
    caseQueue.insert(75718,71174);
    myResult.push_back(caseQueue.getPriority(76037)); //27
    caseQueue.insert(48192,96499);
    myResult.push_back(caseQueue.getPriority(16006)); //28
    caseQueue.updatePriority(41152, 24647);
    caseQueue.insert(33408,72145);
    caseQueue.updatePriority(67964, 19056);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(40008,25390);
    caseQueue.insert(54280,48779);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(16006)); //32
    caseQueue.insert(35644,54304);
    caseQueue.updatePriority(54280, 84050);
    myResult.push_back(caseQueue.getPriority(90706)); //33
    caseQueue.updatePriority(45816, 42889);
    caseQueue.insert(41062,7392);
    caseQueue.insert(18988,56169);
    caseQueue.insert(87083,97229);
    caseQueue.insert(80745,31754);
    myResult.push_back(caseQueue.getPriority(40008)); //34
    caseQueue.insert(69106,51790);
    myResult.push_back(caseQueue.getPriority(51110)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(69252)); //38
    caseQueue.insert(61186,30771);
    myResult.push_back(caseQueue.getPriority(35644)); //39
    caseQueue.insert(48471,99668);
    caseQueue.insert(95580,14508);
    caseQueue.updatePriority(25794, 64491);
    caseQueue.insert(99263,37862);
    caseQueue.updatePriority(17062, 3923);
    myResult.push_back(caseQueue.getPriority(16006)); //40
    myResult.push_back(caseQueue.getPriority(17062)); //41
    caseQueue.insert(6535,21115);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(46930, 78985);
    caseQueue.insert(49231,27856);
    caseQueue.updatePriority(69252, 35754);
    caseQueue.updatePriority(91506, 519);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(58385,80040);
    caseQueue.insert(57763,40553);
    myResult.push_back(caseQueue.getPriority(13500)); //45
    caseQueue.insert(6161,47829);
    caseQueue.insert(56944,14785);
    myResult.push_back(caseQueue.getPriority(6535)); //46
    caseQueue.updatePriority(47710, 2318);
    myResult.push_back(caseQueue.getPriority(48471)); //47
    caseQueue.insert(9920,67367);
    caseQueue.updatePriority(18988, 97809);
    caseQueue.insert(98130,3013);
    caseQueue.updatePriority(80745, 25533);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(60624,69393);
    myResult.push_back(caseQueue.getPriority(35644)); //50
    myResult.push_back(caseQueue.getPriority(45816)); //51
    caseQueue.updatePriority(33408, 88077);
    caseQueue.updatePriority(83431, 4282);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(67537,87444);
    caseQueue.updatePriority(45816, 15398);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(99263, 90916);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(69106, 75500);
    myResult.push_back(caseQueue.getPriority(60624)); //56
    caseQueue.updatePriority(54280, 90719);
    caseQueue.updatePriority(18988, 70163);
    myResult.push_back(caseQueue.getPriority(24038)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(88673,15834);
    caseQueue.insert(74373,82517);
    myResult.push_back(caseQueue.getPriority(48192)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(5218,73905);
    caseQueue.insert(85159,95004);
    caseQueue.insert(74721,96924);
    caseQueue.updatePriority(25794, 25239);
    caseQueue.insert(53884,39374);
    caseQueue.insert(89521,92292);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(24038)); //63
    myResult.push_back(caseQueue.getPriority(54280)); //64
    caseQueue.updatePriority(52374, 88308);
    caseQueue.insert(29603,7255);
    caseQueue.updatePriority(89521, 92455);
    caseQueue.insert(43034,77661);
    caseQueue.updatePriority(87590, 21929);
    myResult.push_back(caseQueue.getPriority(76037)); //65
    caseQueue.updatePriority(99263, 54685);
    caseQueue.insert(97469,62192);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(39799,78561);
    myResult.push_back(caseQueue.getPriority(60624)); //67
    caseQueue.insert(40197,33775);
    caseQueue.insert(1952,54344);
    caseQueue.insert(70334,35969);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(57763, 41801);
    caseQueue.insert(4884,33973);
    caseQueue.insert(5028,26816);
    myResult.push_back(caseQueue.getPriority(32241)); //69
    caseQueue.updatePriority(69252, 24804);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(48192)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(48192)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(29810, 52998);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    static const int resultListArray[] = {37756, 78561, 32028, 77362, 17325, 56711, 87340, 28682, 77362, 5308, 87995, 53872, 55901, 97981, 47629, 54, 68731, 59688, 96368, 33191, 93228, 52330, 59406, 55901, 42117, 2379, 90466, 95155, 32220, 67964, 41152, 95155, 58501, 25390, 76223, 41062, 40008, 28682, 54304, 95155, 3923, 17062, 95580, 91506, 33740, 21115, 99668, 47710, 98130, 54304, 42889, 83431, 56944, 45816, 6535, 69393, 62188, 80745, 96499, 88673, 49231, 25794, 62188, 90719, 90466, 29603, 69393, 87590, 82343, 69252, 96499, 5028, 61186, 13500, 96499, 40197, 4884, 70334, 99201}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(110): Basarili" << endl;
    else cout << "Case(110): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_111(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 101);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(32333, 61392);
    caseQueue.insert(2903,4466);
    myResult.push_back(caseQueue.getPriority(2903)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(22695,59342);
    caseQueue.insert(56581,52433);
    caseQueue.insert(69254,9994);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(1066,8097);
    caseQueue.insert(55245,13788);
    caseQueue.insert(6212,59786);
    caseQueue.insert(21720,76747);
    caseQueue.insert(52686,53478);
    caseQueue.updatePriority(6212, 59705);
    caseQueue.updatePriority(21720, 65393);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(21720, 52689);
    caseQueue.insert(20248,34195);
    caseQueue.updatePriority(52686, 21786);
    caseQueue.insert(91262,17694);
    myResult.push_back(caseQueue.getPriority(56581)); //7
    myResult.push_back(caseQueue.getPriority(91262)); //8
    caseQueue.insert(64169,72343);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(52686)); //10
    caseQueue.updatePriority(6212, 80096);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(17779,27744);
    caseQueue.insert(51935,58137);
    caseQueue.insert(75786,74215);
    caseQueue.insert(22079,78170);
    caseQueue.insert(23892,39838);
    myResult.push_back(caseQueue.getPriority(6212)); //12
    myResult.push_back(caseQueue.getPriority(17779)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(20248, 45157);
    caseQueue.updatePriority(51935, 15013);
    caseQueue.updatePriority(64169, 43705);
    myResult.push_back(caseQueue.getPriority(17779)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(69872,38752);
    caseQueue.insert(8360,78032);
    myResult.push_back(caseQueue.getPriority(8360)); //17
    caseQueue.insert(41921,86434);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(21720, 22587);
    caseQueue.insert(35141,79854);
    caseQueue.insert(95375,66144);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(5860,9551);
    caseQueue.insert(45975,33183);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(645,15119);
    caseQueue.insert(38532,80451);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(49225,21015);
    caseQueue.insert(883,96447);
    caseQueue.updatePriority(35141, 46447);
    caseQueue.insert(94030,85845);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(20248, 6481);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(31774,22102);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(45975, 24673);
    caseQueue.insert(44849,81437);
    caseQueue.insert(87979,98829);
    myResult.push_back(caseQueue.getPriority(69872)); //25
    caseQueue.insert(9204,45745);
    myResult.push_back(caseQueue.getPriority(56581)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(22695)); //29
    myResult.push_back(caseQueue.getPriority(95375)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(22079, 94392);
    myResult.push_back(caseQueue.getPriority(64169)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(94622,39229);
    caseQueue.updatePriority(94622, 86898);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(9024,58079);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(38615,64836);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(44849, 89576);
    caseQueue.insert(38236,70539);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(22079)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(22079, 30227);
    myResult.push_back(caseQueue.getPriority(38532)); //45
    myResult.push_back(caseQueue.getPriority(41921)); //46
    caseQueue.updatePriority(94030, 84948);
    static const int resultListArray[] = {-1, 4466, 2903, -1, 69254, 1066, 52433, 17694, 55245, 21786, 91262, 80096, 27744, 52686, 27744, 51935, 78032, 17779, 21720, 5860, 645, 49225, 20248, 31774, 38752, 52433, 45975, 69872, 59342, 66144, 23892, 43705, 64169, 9204, 35141, 56581, 9024, 22695, 38615, 95375, 38236, 94392, 75786, 8360, 80451, 86434}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(111): Basarili" << endl;
    else cout << "Case(111): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_112(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 135);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(44246,51935);
    caseQueue.insert(66479,14695);
    myResult.push_back(caseQueue.getPriority(66479)); //3
    caseQueue.insert(48659,60777);
    caseQueue.insert(90013,8762);
    myResult.push_back(caseQueue.getPriority(48659)); //4
    caseQueue.insert(37315,82065);
    caseQueue.insert(53904,18201);
    myResult.push_back(caseQueue.getPriority(37315)); //5
    caseQueue.updatePriority(44246, 66862);
    caseQueue.updatePriority(66479, 93224);
    caseQueue.updatePriority(48659, 26196);
    myResult.push_back(caseQueue.getPriority(66479)); //6
    caseQueue.updatePriority(37315, 13867);
    caseQueue.insert(36904,7517);
    caseQueue.insert(71405,38613);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(37315, 72621);
    caseQueue.insert(24515,94394);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(89175,60878);
    caseQueue.insert(15507,30527);
    caseQueue.insert(78491,32531);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(44246, 84098);
    caseQueue.insert(1127,24991);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(44246, 15712);
    caseQueue.insert(795,85404);
    caseQueue.insert(26661,98759);
    myResult.push_back(caseQueue.getPriority(795)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(24515)); //14
    caseQueue.updatePriority(24515, 58032);
    caseQueue.insert(52885,53787);
    myResult.push_back(caseQueue.getPriority(89175)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(24515, 64705);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(66479)); //18
    caseQueue.insert(24656,70840);
    caseQueue.updatePriority(71405, 99827);
    caseQueue.insert(61064,13802);
    caseQueue.insert(79826,57450);
    caseQueue.insert(63219,57521);
    caseQueue.insert(11932,93698);
    caseQueue.updatePriority(24656, 82471);
    myResult.push_back(caseQueue.getPriority(24656)); //19
    caseQueue.updatePriority(63219, 67833);
    caseQueue.updatePriority(66479, 40939);
    caseQueue.insert(8101,80318);
    caseQueue.updatePriority(71405, 37383);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(79826)); //21
    caseQueue.insert(17217,620);
    myResult.push_back(caseQueue.getPriority(795)); //22
    caseQueue.insert(26606,52949);
    caseQueue.insert(10625,86893);
    caseQueue.insert(93902,95349);
    caseQueue.insert(70727,94548);
    caseQueue.insert(85547,66330);
    caseQueue.insert(39742,29670);
    caseQueue.insert(27268,76294);
    myResult.push_back(caseQueue.getPriority(26661)); //23
    caseQueue.insert(28255,46475);
    myResult.push_back(caseQueue.getPriority(27268)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(76026,17497);
    myResult.push_back(caseQueue.getPriority(76026)); //26
    myResult.push_back(caseQueue.getPriority(71405)); //27
    myResult.push_back(caseQueue.getPriority(63219)); //28
    caseQueue.insert(40001,72925);
    caseQueue.insert(18877,70634);
    caseQueue.insert(92435,33717);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(96276,22869);
    caseQueue.insert(90070,45206);
    myResult.push_back(caseQueue.getPriority(71405)); //30
    myResult.push_back(caseQueue.getPriority(27268)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(24656)); //33
    caseQueue.updatePriority(28255, 25580);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(85547, 84321);
    caseQueue.insert(25240,34439);
    caseQueue.insert(61787,95039);
    myResult.push_back(caseQueue.getPriority(71405)); //35
    myResult.push_back(caseQueue.getPriority(25240)); //36
    caseQueue.insert(6091,46479);
    caseQueue.insert(51185,27173);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(73564,86364);
    caseQueue.insert(64645,97035);
    caseQueue.insert(50876,44540);
    myResult.push_back(caseQueue.getPriority(73564)); //38
    caseQueue.insert(22715,44349);
    caseQueue.updatePriority(40001, 90814);
    myResult.push_back(caseQueue.getPriority(64645)); //39
    caseQueue.insert(57317,29977);
    myResult.push_back(caseQueue.getPriority(26606)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(26821,33900);
    myResult.push_back(caseQueue.getPriority(64645)); //42
    caseQueue.insert(20066,17600);
    caseQueue.insert(22350,50359);
    caseQueue.insert(20796,13763);
    myResult.push_back(caseQueue.getPriority(26661)); //43
    caseQueue.updatePriority(8101, 75606);
    caseQueue.insert(19890,29662);
    myResult.push_back(caseQueue.getPriority(24656)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(8101)); //46
    caseQueue.insert(65661,88200);
    caseQueue.insert(21113,25706);
    caseQueue.insert(30145,50483);
    caseQueue.updatePriority(25240, 60282);
    caseQueue.updatePriority(26821, 7410);
    myResult.push_back(caseQueue.getPriority(26661)); //47
    caseQueue.insert(24649,13860);
    caseQueue.insert(72208,79731);
    caseQueue.insert(13168,76522);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(85547, 40204);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(24515)); //50
    caseQueue.updatePriority(13168, 8282);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(85547)); //52
    caseQueue.updatePriority(66479, 94704);
    myResult.push_back(caseQueue.getPriority(25240)); //53
    myResult.push_back(caseQueue.getPriority(795)); //54
    caseQueue.updatePriority(22715, 15734);
    static const int resultListArray[] = {-1, -1, 14695, 60777, 82065, 93224, 36904, 90013, 53904, 1127, 48659, 85404, 44246, 94394, 60878, 15507, 78491, 93224, 82471, 61064, 57450, 85404, 98759, 76294, 17217, 17497, 37383, 67833, 76026, 37383, 76294, 96276, 82471, 28255, 37383, 34439, 51185, 86364, 97035, 52949, 39742, 97035, 98759, 82471, 20796, 75606, 98759, 26821, 24649, 64705, 13168, 40204, 60282, 85404}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(112): Basarili" << endl;
    else cout << "Case(112): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_113(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 111);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(58566,42584);
    myResult.push_back(caseQueue.getPriority(58566)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(24338, 84344);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(7029, 87781);
    myResult.push_back(caseQueue.getPriority(21121)); //5
    caseQueue.insert(82338,28401);
    caseQueue.updatePriority(82338, 77623);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(77369)); //7
    caseQueue.insert(56328,48684);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(72716,84787);
    caseQueue.insert(31551,44225);
    caseQueue.insert(43931,90226);
    myResult.push_back(caseQueue.getPriority(31551)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(3220,56229);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(56185,60305);
    caseQueue.insert(71256,355);
    caseQueue.insert(70612,95699);
    myResult.push_back(caseQueue.getPriority(43931)); //12
    myResult.push_back(caseQueue.getPriority(43931)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(92149,65354);
    caseQueue.insert(67465,24428);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(56185)); //16
    caseQueue.insert(16251,4378);
    myResult.push_back(caseQueue.getPriority(16251)); //17
    caseQueue.insert(42753,33016);
    myResult.push_back(caseQueue.getPriority(56185)); //18
    caseQueue.insert(90040,20119);
    caseQueue.insert(8315,48452);
    caseQueue.insert(37650,53911);
    myResult.push_back(caseQueue.getPriority(43931)); //19
    caseQueue.updatePriority(70612, 52118);
    caseQueue.updatePriority(42753, 89910);
    caseQueue.insert(19663,37455);
    caseQueue.updatePriority(8315, 33586);
    myResult.push_back(caseQueue.getPriority(70612)); //20
    caseQueue.updatePriority(43931, 46496);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(92149)); //24
    caseQueue.insert(93885,77440);
    caseQueue.insert(659,90230);
    myResult.push_back(caseQueue.getPriority(92149)); //25
    caseQueue.insert(2208,24591);
    caseQueue.insert(63490,46386);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(42753)); //27
    caseQueue.updatePriority(659, 29508);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(63887,55385);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(92149)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(56185)); //33
    caseQueue.insert(33756,49530);
    caseQueue.insert(41947,59642);
    caseQueue.updatePriority(42753, 63290);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(72716)); //35
    caseQueue.insert(55436,67388);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(48705,24298);
    caseQueue.insert(37072,41924);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(63887, 80163);
    caseQueue.insert(78615,48728);
    myResult.push_back(caseQueue.getPriority(63887)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(32838,72545);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(13312,96347);
    caseQueue.insert(83911,60141);
    caseQueue.insert(54970,64686);
    myResult.push_back(caseQueue.getPriority(92149)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(72716, 5178);
    caseQueue.updatePriority(72716, 53451);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(83908,21070);
    caseQueue.insert(95552,43410);
    myResult.push_back(caseQueue.getPriority(56185)); //45
    caseQueue.insert(38906,52055);
    caseQueue.updatePriority(92149, 38840);
    caseQueue.insert(71171,32026);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(91038,53660);
    caseQueue.insert(46597,8344);
    caseQueue.insert(92643,58355);
    caseQueue.insert(95945,25083);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(48931,16885);
    caseQueue.insert(40108,67894);
    myResult.push_back(caseQueue.getPriority(32838)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(92643)); //52
    caseQueue.updatePriority(55436, 96516);
    caseQueue.updatePriority(38906, 65078);
    myResult.push_back(caseQueue.getPriority(95552)); //53
    static const int resultListArray[] = {-1, 42584, 58566, -1, -1, 82338, -1, 56328, 44225, 31551, 3220, 90226, 90226, 71256, 67465, 60305, 4378, 60305, 90226, 52118, 16251, 90040, 8315, 65354, 65354, 2208, 89910, 659, 19663, 63490, 65354, 43931, 60305, 33756, 84787, 70612, 48705, 80163, 37072, 78615, 37650, 65354, 41947, 72716, 60305, 83908, 71171, 92149, 46597, 72545, 48931, 58355, 43410}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(113): Basarili" << endl;
    else cout << "Case(113): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_114(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 132);

    vector<int> myResult; 
    caseQueue.insert(69501,91441);
    caseQueue.insert(80444,80035);
    caseQueue.insert(95669,23733);
    caseQueue.insert(67101,17934);
    caseQueue.insert(82792,12041);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(78698,65548);
    caseQueue.updatePriority(80444, 6499);
    caseQueue.insert(67405,18031);
    caseQueue.updatePriority(69501, 64785);
    myResult.push_back(caseQueue.getPriority(67405)); //3
    caseQueue.updatePriority(67405, 31399);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(48757,13420);
    caseQueue.insert(71066,58749);
    caseQueue.insert(49678,61968);
    caseQueue.insert(84510,85786);
    caseQueue.insert(53395,65045);
    caseQueue.insert(97986,70498);
    myResult.push_back(caseQueue.getPriority(97986)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(4101,24901);
    caseQueue.updatePriority(84510, 90386);
    caseQueue.insert(49535,83845);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(33622,46947);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(69363,21777);
    myResult.push_back(caseQueue.getPriority(49678)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(9481,78189);
    caseQueue.insert(24949,86624);
    caseQueue.insert(47601,83041);
    caseQueue.insert(25610,4659);
    caseQueue.insert(16167,66743);
    caseQueue.insert(80852,43303);
    caseQueue.insert(45373,98761);
    caseQueue.insert(18027,11008);
    myResult.push_back(caseQueue.getPriority(84510)); //13
    caseQueue.insert(56415,39378);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(69250,92593);
    caseQueue.updatePriority(97986, 85448);
    caseQueue.insert(20349,31927);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(36292,10128);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(63068,26108);
    caseQueue.updatePriority(78698, 11910);
    caseQueue.insert(85741,96841);
    caseQueue.insert(43604,27643);
    caseQueue.updatePriority(69250, 99623);
    caseQueue.insert(34809,77228);
    myResult.push_back(caseQueue.getPriority(69501)); //17
    caseQueue.insert(40832,28330);
    caseQueue.updatePriority(34809, 76484);
    caseQueue.insert(51809,44918);
    myResult.push_back(caseQueue.getPriority(71066)); //18
    caseQueue.insert(54424,5298);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(63068)); //20
    myResult.push_back(caseQueue.getPriority(84510)); //21
    myResult.push_back(caseQueue.getPriority(20349)); //22
    caseQueue.updatePriority(97986, 4468);
    caseQueue.updatePriority(40832, 38604);
    myResult.push_back(caseQueue.getPriority(49678)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(43604)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(80852, 1249);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(9481, 33038);
    caseQueue.insert(730,98105);
    myResult.push_back(caseQueue.getPriority(51809)); //30
    myResult.push_back(caseQueue.getPriority(69250)); //31
    caseQueue.insert(21251,89765);
    caseQueue.insert(85965,24080);
    caseQueue.insert(96293,36744);
    caseQueue.updatePriority(40832, 22557);
    caseQueue.insert(82954,25269);
    caseQueue.updatePriority(9481, 29205);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(81864,74594);
    myResult.push_back(caseQueue.getPriority(24949)); //34
    caseQueue.insert(88115,81340);
    myResult.push_back(caseQueue.getPriority(9481)); //35
    caseQueue.insert(73488,67687);
    myResult.push_back(caseQueue.getPriority(51809)); //36
    caseQueue.insert(1295,18171);
    caseQueue.insert(3769,61995);
    myResult.push_back(caseQueue.getPriority(88115)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(93458,53357);
    caseQueue.updatePriority(81864, 35180);
    myResult.push_back(caseQueue.getPriority(47601)); //39
    caseQueue.updatePriority(34809, 87597);
    caseQueue.insert(19211,19498);
    caseQueue.insert(37848,36432);
    myResult.push_back(caseQueue.getPriority(93458)); //40
    caseQueue.updatePriority(69250, 83061);
    myResult.push_back(caseQueue.getPriority(88115)); //41
    caseQueue.insert(97045,92174);
    caseQueue.updatePriority(3769, 99575);
    caseQueue.insert(3548,57786);
    caseQueue.insert(23817,33563);
    caseQueue.insert(58260,46150);
    caseQueue.insert(83820,39268);
    myResult.push_back(caseQueue.getPriority(84510)); //42
    caseQueue.updatePriority(56415, 80238);
    caseQueue.insert(85700,25331);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(21251)); //44
    caseQueue.updatePriority(24949, 78186);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(53395, 65068);
    caseQueue.updatePriority(51809, 8792);
    myResult.push_back(caseQueue.getPriority(34809)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(73488)); //49
    caseQueue.updatePriority(3769, 89013);
    caseQueue.insert(79824,48073);
    myResult.push_back(caseQueue.getPriority(88115)); //50
    caseQueue.insert(33981,60531);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(93458, 8412);
    static const int resultListArray[] = {82792, 67101, 18031, 80444, 70498, 48757, 95669, 4101, 61968, 69363, 67405, 33622, 90386, 25610, 18027, 36292, 64785, 58749, 54424, 26108, 90386, 31927, 61968, 97986, 27643, 78698, 63068, 80852, 43604, 44918, 99623, 40832, 85965, 86624, 29205, 44918, 81340, 1295, 83041, 53357, 81340, 90386, 19211, 89765, 82954, 85700, 87597, 51809, 67687, 81340, 9481}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(114): Basarili" << endl;
    else cout << "Case(114): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_115(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 179);

    vector<int> myResult; 
    caseQueue.insert(9409,9582);
    caseQueue.insert(28114,32217);
    caseQueue.insert(88552,20143);
    caseQueue.insert(8364,57128);
    caseQueue.insert(86957,12927);
    caseQueue.updatePriority(8364, 99617);
    caseQueue.updatePriority(28114, 25131);
    caseQueue.insert(62955,74305);
    caseQueue.updatePriority(28114, 41189);
    caseQueue.insert(83073,29491);
    caseQueue.insert(16844,65942);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(16844, 13562);
    caseQueue.insert(86908,74588);
    myResult.push_back(caseQueue.getPriority(86957)); //2
    caseQueue.insert(43598,30435);
    caseQueue.updatePriority(8364, 84527);
    caseQueue.updatePriority(62955, 79719);
    myResult.push_back(caseQueue.getPriority(8364)); //3
    caseQueue.insert(34237,83752);
    caseQueue.updatePriority(28114, 92033);
    caseQueue.insert(45256,17123);
    caseQueue.updatePriority(8364, 54618);
    caseQueue.updatePriority(28114, 51974);
    caseQueue.insert(53252,50861);
    caseQueue.updatePriority(45256, 68484);
    caseQueue.insert(84819,76054);
    caseQueue.updatePriority(28114, 77386);
    caseQueue.insert(20662,18770);
    caseQueue.updatePriority(43598, 69804);
    caseQueue.updatePriority(45256, 5670);
    myResult.push_back(caseQueue.getPriority(20662)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(34237)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(86908)); //8
    caseQueue.insert(41318,63742);
    caseQueue.insert(96162,52690);
    caseQueue.insert(22416,51023);
    myResult.push_back(caseQueue.getPriority(22416)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(8364)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(92077,41899);
    caseQueue.updatePriority(22416, 85550);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(10952,45953);
    caseQueue.insert(34862,4137);
    myResult.push_back(caseQueue.getPriority(34862)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(28114)); //19
    myResult.push_back(caseQueue.getPriority(22416)); //20
    caseQueue.insert(17998,93447);
    caseQueue.insert(88117,19646);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(9586,28687);
    caseQueue.insert(36137,64876);
    caseQueue.insert(59568,88325);
    myResult.push_back(caseQueue.getPriority(86908)); //22
    caseQueue.insert(1602,28764);
    caseQueue.insert(10856,2331);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(20933,32270);
    caseQueue.insert(54725,48377);
    myResult.push_back(caseQueue.getPriority(84819)); //24
    caseQueue.insert(9228,74778);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(86908, 29876);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(17998, 95566);
    caseQueue.insert(90487,86874);
    myResult.push_back(caseQueue.getPriority(36137)); //27
    myResult.push_back(caseQueue.getPriority(54725)); //28
    myResult.push_back(caseQueue.getPriority(36137)); //29
    myResult.push_back(caseQueue.getPriority(28114)); //30
    caseQueue.updatePriority(84819, 10629);
    myResult.push_back(caseQueue.getPriority(43598)); //31
    myResult.push_back(caseQueue.getPriority(20933)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(62955, 19966);
    myResult.push_back(caseQueue.getPriority(36137)); //34
    caseQueue.insert(24993,46580);
    myResult.push_back(caseQueue.getPriority(53252)); //35
    caseQueue.updatePriority(53252, 23382);
    myResult.push_back(caseQueue.getPriority(90487)); //36
    caseQueue.updatePriority(90487, 92109);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(28114, 20607);
    caseQueue.updatePriority(17998, 69058);
    myResult.push_back(caseQueue.getPriority(90487)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(34237, 28623);
    caseQueue.updatePriority(8364, 74923);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(86908, 88802);
    caseQueue.insert(55775,73478);
    myResult.push_back(caseQueue.getPriority(43598)); //42
    myResult.push_back(caseQueue.getPriority(17998)); //43
    caseQueue.updatePriority(22416, 81958);
    caseQueue.insert(45193,17657);
    caseQueue.updatePriority(9228, 11720);
    caseQueue.insert(27011,50044);
    myResult.push_back(caseQueue.getPriority(20933)); //44
    caseQueue.insert(2532,98015);
    caseQueue.insert(38872,13968);
    myResult.push_back(caseQueue.getPriority(41318)); //45
    caseQueue.updatePriority(22416, 25076);
    caseQueue.updatePriority(20933, 979);
    caseQueue.insert(41744,40193);
    caseQueue.insert(77708,26253);
    caseQueue.updatePriority(17998, 30580);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(73030,77736);
    caseQueue.insert(7787,39070);
    caseQueue.insert(48283,11289);
    caseQueue.insert(51728,17355);
    caseQueue.updatePriority(9228, 99757);
    caseQueue.insert(86837,12819);
    caseQueue.updatePriority(41318, 57236);
    caseQueue.updatePriority(24993, 19100);
    caseQueue.updatePriority(27011, 96557);
    caseQueue.insert(10866,87815);
    caseQueue.updatePriority(41744, 70378);
    caseQueue.updatePriority(22416, 41265);
    caseQueue.insert(1759,10767);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(24750,93740);
    caseQueue.insert(22638,94292);
    caseQueue.insert(84819,14433);
    caseQueue.insert(22605,56912);
    caseQueue.insert(60020,63623);
    caseQueue.updatePriority(77708, 35468);
    caseQueue.updatePriority(43598, 60697);
    caseQueue.insert(78770,11829);
    caseQueue.updatePriority(8364, 87585);
    caseQueue.insert(34640,92044);
    caseQueue.insert(62190,78253);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(10659,79368);
    caseQueue.insert(40784,89502);
    caseQueue.insert(68320,20310);
    caseQueue.insert(54197,99448);
    caseQueue.insert(95907,28224);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(13416,60980);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(39833,40397);
    myResult.push_back(caseQueue.getPriority(41744)); //51
    caseQueue.insert(64832,53778);
    myResult.push_back(caseQueue.getPriority(45193)); //52
    caseQueue.insert(45613,65758);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(96013,70357);
    myResult.push_back(caseQueue.getPriority(39833)); //55
    myResult.push_back(caseQueue.getPriority(45613)); //56
    caseQueue.insert(5672,57250);
    caseQueue.insert(79182,37387);
    caseQueue.updatePriority(7787, 9692);
    caseQueue.updatePriority(64832, 92617);
    caseQueue.insert(81339,83081);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(54725, 620);
    myResult.push_back(caseQueue.getPriority(9228)); //59
    caseQueue.insert(68723,10880);
    caseQueue.insert(87665,43769);
    caseQueue.insert(27825,60518);
    caseQueue.updatePriority(95907, 44174);
    caseQueue.insert(57014,18012);
    caseQueue.insert(1876,38713);
    caseQueue.insert(44139,99652);
    caseQueue.insert(88906,50221);
    caseQueue.insert(49822,30094);
    myResult.push_back(caseQueue.getPriority(95907)); //60
    static const int resultListArray[] = {9409, 12927, 84527, 18770, 45256, 83752, 86957, 74588, 51023, 16844, 20662, 54618, 88552, 83073, 92077, 4137, 34862, 10952, 77386, 85550, 88117, 74588, 10856, 76054, 9586, 1602, 64876, 48377, 64876, 77386, 69804, 32270, 84819, 64876, 50861, 86874, 62955, 92109, 28114, 53252, 34237, 69804, 69058, 32270, 63742, 20933, 1759, 48283, 78770, 86837, 70378, 17657, 38872, 84819, 40397, 65758, 7787, 51728, 99757, 44174}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(115): Basarili" << endl;
    else cout << "Case(115): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_116(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 137);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(66931)); //1
    caseQueue.insert(675,51840);
    caseQueue.insert(73664,89181);
    caseQueue.insert(71614,58151);
    caseQueue.insert(28264,89332);
    caseQueue.insert(57622,86619);
    caseQueue.updatePriority(675, 63790);
    caseQueue.insert(46799,7598);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(73664, 26084);
    caseQueue.updatePriority(73664, 96203);
    caseQueue.insert(19447,59127);
    caseQueue.insert(17754,99481);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(14506,92853);
    caseQueue.updatePriority(17754, 84989);
    caseQueue.insert(54517,15863);
    caseQueue.insert(69053,70477);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(28264, 61001);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(97509,94540);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(73664)); //9
    caseQueue.insert(93000,94048);
    myResult.push_back(caseQueue.getPriority(97509)); //10
    caseQueue.insert(37096,23188);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(17754)); //12
    caseQueue.insert(76772,33155);
    caseQueue.insert(55928,14986);
    caseQueue.insert(12588,54396);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(84690,1490);
    caseQueue.updatePriority(57622, 34581);
    myResult.push_back(caseQueue.getPriority(73664)); //14
    caseQueue.insert(58472,47003);
    myResult.push_back(caseQueue.getPriority(14506)); //15
    caseQueue.insert(74836,40068);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(14527,64728);
    caseQueue.insert(64857,76102);
    caseQueue.insert(19018,10298);
    myResult.push_back(caseQueue.getPriority(57622)); //18
    myResult.push_back(caseQueue.getPriority(64857)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(64857, 112);
    caseQueue.insert(58642,97329);
    caseQueue.updatePriority(93000, 61959);
    caseQueue.insert(68303,48549);
    caseQueue.updatePriority(93000, 53615);
    caseQueue.insert(28620,26222);
    myResult.push_back(caseQueue.getPriority(64857)); //22
    caseQueue.updatePriority(58642, 57938);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(12588)); //24
    caseQueue.insert(10479,89065);
    caseQueue.insert(59206,85572);
    caseQueue.insert(78221,79365);
    caseQueue.updatePriority(68303, 19506);
    caseQueue.insert(99705,71684);
    caseQueue.insert(8081,46685);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(21659,89321);
    myResult.push_back(caseQueue.getPriority(73664)); //26
    myResult.push_back(caseQueue.getPriority(97509)); //27
    caseQueue.insert(81758,8398);
    myResult.push_back(caseQueue.getPriority(93000)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(10479)); //30
    myResult.push_back(caseQueue.getPriority(73664)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(12588)); //33
    caseQueue.insert(21661,95494);
    myResult.push_back(caseQueue.getPriority(17754)); //34
    myResult.push_back(caseQueue.getPriority(17754)); //35
    caseQueue.updatePriority(8081, 46398);
    myResult.push_back(caseQueue.getPriority(58642)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(92641,14825);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(77165,62617);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(22785,57343);
    myResult.push_back(caseQueue.getPriority(77165)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(61650,22000);
    caseQueue.insert(38704,78096);
    caseQueue.insert(79325,94246);
    myResult.push_back(caseQueue.getPriority(38704)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(49829,89500);
    myResult.push_back(caseQueue.getPriority(99705)); //45
    caseQueue.insert(68999,57982);
    caseQueue.updatePriority(14527, 44261);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(84419,13054);
    caseQueue.insert(19650,73609);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(97509)); //49
    caseQueue.updatePriority(38704, 62918);
    myResult.push_back(caseQueue.getPriority(68999)); //50
    caseQueue.insert(59818,81312);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(19650)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(59206)); //55
    caseQueue.updatePriority(17754, 25836);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(21661)); //57
    caseQueue.insert(6155,75896);
    caseQueue.updatePriority(10479, 89715);
    caseQueue.insert(40271,65830);
    caseQueue.updatePriority(38704, 74735);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(14506)); //59
    caseQueue.updatePriority(59206, 18229);
    caseQueue.insert(19181,52175);
    caseQueue.updatePriority(99705, 47932);
    caseQueue.updatePriority(14506, 2227);
    caseQueue.insert(6118,22980);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(39890,79427);
    caseQueue.updatePriority(97509, 28173);
    caseQueue.insert(36135,41770);
    caseQueue.insert(26580,22256);
    myResult.push_back(caseQueue.getPriority(59818)); //61
    myResult.push_back(caseQueue.getPriority(78221)); //62
    caseQueue.updatePriority(19181, 69441);
    caseQueue.insert(25047,66216);
    static const int resultListArray[] = {-1, 46799, 71614, 19447, 675, 54517, 28264, 69053, 96203, 94540, 37096, 84989, 55928, 96203, 92853, 84690, 76772, 34581, 76102, 19018, 57622, 112, 64857, 54396, 68303, 96203, 94540, 53615, 81758, 89065, 96203, 28620, 54396, 84989, 84989, 57938, 74836, 92641, 8081, 58472, 62617, 93000, 78096, 61650, 71684, 14527, 12588, 84419, 94540, 57982, 22785, 73609, 58642, 68999, 85572, 17754, 95494, 77165, 92853, 14506, 81312, 79365}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(116): Basarili" << endl;
    else cout << "Case(116): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_117(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 219);

    vector<int> myResult; 
    caseQueue.insert(99633,79451);
    caseQueue.updatePriority(99633, 35631);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(66665,11918);
    caseQueue.insert(39188,45560);
    caseQueue.insert(18523,92388);
    caseQueue.updatePriority(18523, 8794);
    caseQueue.insert(87194,52699);
    caseQueue.insert(77048,74065);
    caseQueue.insert(16138,22689);
    caseQueue.insert(74540,24714);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(39188, 60465);
    myResult.push_back(caseQueue.getPriority(66665)); //4
    caseQueue.insert(2044,12396);
    caseQueue.insert(84993,73133);
    myResult.push_back(caseQueue.getPriority(74540)); //5
    caseQueue.updatePriority(2044, 71898);
    myResult.push_back(caseQueue.getPriority(84993)); //6
    caseQueue.insert(21956,16790);
    caseQueue.insert(61460,2501);
    myResult.push_back(caseQueue.getPriority(39188)); //7
    caseQueue.insert(98455,9047);
    caseQueue.insert(97767,69044);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(30558,98752);
    caseQueue.updatePriority(2044, 71675);
    myResult.push_back(caseQueue.getPriority(39188)); //9
    caseQueue.insert(19608,51325);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(45979,38137);
    caseQueue.updatePriority(2044, 6895);
    caseQueue.updatePriority(19608, 29006);
    caseQueue.insert(18005,28562);
    myResult.push_back(caseQueue.getPriority(87194)); //13
    caseQueue.insert(17480,48850);
    caseQueue.updatePriority(39188, 6896);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(87014,34594);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(74540)); //16
    myResult.push_back(caseQueue.getPriority(18005)); //17
    caseQueue.insert(58790,84441);
    myResult.push_back(caseQueue.getPriority(84993)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(84993)); //21
    caseQueue.updatePriority(30558, 21939);
    myResult.push_back(caseQueue.getPriority(19608)); //22
    caseQueue.updatePriority(97767, 44742);
    caseQueue.insert(40160,20658);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(78314,70149);
    caseQueue.insert(71871,37594);
    caseQueue.insert(29876,16465);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(3206,68999);
    caseQueue.insert(52762,18015);
    myResult.push_back(caseQueue.getPriority(87194)); //25
    myResult.push_back(caseQueue.getPriority(19608)); //26
    caseQueue.insert(88814,96021);
    myResult.push_back(caseQueue.getPriority(84993)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(77048, 92454);
    caseQueue.insert(45638,38913);
    caseQueue.insert(80318,7247);
    myResult.push_back(caseQueue.getPriority(80318)); //29
    caseQueue.insert(32948,56336);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(3206, 89872);
    caseQueue.insert(45133,44544);
    myResult.push_back(caseQueue.getPriority(19608)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(78365,56711);
    caseQueue.updatePriority(88814, 94870);
    myResult.push_back(caseQueue.getPriority(17480)); //33
    caseQueue.insert(52815,40472);
    caseQueue.insert(21275,12352);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(84993, 22957);
    myResult.push_back(caseQueue.getPriority(45133)); //35
    myResult.push_back(caseQueue.getPriority(17480)); //36
    caseQueue.updatePriority(78314, 18709);
    caseQueue.insert(98410,83202);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(70589,58480);
    caseQueue.insert(75149,82756);
    caseQueue.insert(92122,88799);
    caseQueue.updatePriority(19608, 25168);
    myResult.push_back(caseQueue.getPriority(18005)); //39
    caseQueue.insert(58629,47724);
    caseQueue.updatePriority(98410, 36525);
    caseQueue.updatePriority(45638, 30280);
    myResult.push_back(caseQueue.getPriority(19608)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(75831,22904);
    caseQueue.insert(69299,76223);
    caseQueue.updatePriority(92122, 67105);
    caseQueue.insert(83184,97193);
    myResult.push_back(caseQueue.getPriority(87014)); //42
    caseQueue.updatePriority(77048, 60483);
    caseQueue.insert(95526,43291);
    caseQueue.insert(86606,22184);
    caseQueue.insert(52361,60784);
    caseQueue.insert(58469,19011);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(45979)); //45
    caseQueue.insert(6624,29732);
    caseQueue.insert(89686,77040);
    caseQueue.insert(86461,76663);
    caseQueue.updatePriority(6624, 7935);
    caseQueue.insert(38194,90488);
    caseQueue.insert(11847,36930);
    myResult.push_back(caseQueue.getPriority(6624)); //46
    myResult.push_back(caseQueue.getPriority(70589)); //47
    caseQueue.insert(4771,5503);
    caseQueue.insert(19679,51681);
    caseQueue.insert(8194,43387);
    myResult.push_back(caseQueue.getPriority(87194)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(98410, 56663);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(86204,24117);
    myResult.push_back(caseQueue.getPriority(58790)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(45212,13953);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(45638, 65221);
    myResult.push_back(caseQueue.getPriority(78365)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(45638)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(51911,52138);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(58790, 67869);
    caseQueue.insert(22569,3249);
    caseQueue.insert(56708,85130);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(38469,1016);
    caseQueue.updatePriority(89686, 72290);
    caseQueue.insert(87660,6350);
    myResult.push_back(caseQueue.getPriority(75149)); //60
    caseQueue.insert(52280,75401);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(45235,25019);
    caseQueue.updatePriority(86461, 50571);
    caseQueue.insert(67506,89507);
    myResult.push_back(caseQueue.getPriority(56708)); //62
    caseQueue.insert(55260,66553);
    caseQueue.updatePriority(87660, 25739);
    caseQueue.insert(2572,61881);
    caseQueue.insert(53063,69183);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(78365)); //64
    caseQueue.updatePriority(52815, 62298);
    myResult.push_back(caseQueue.getPriority(58629)); //65
    caseQueue.insert(53919,6212);
    caseQueue.insert(82965,77095);
    caseQueue.insert(3095,38073);
    caseQueue.insert(24533,49717);
    caseQueue.updatePriority(52815, 96780);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(55260, 72457);
    caseQueue.insert(9436,62390);
    myResult.push_back(caseQueue.getPriority(58790)); //69
    caseQueue.insert(39258,46500);
    myResult.push_back(caseQueue.getPriority(86461)); //70
    caseQueue.updatePriority(51911, 81824);
    caseQueue.insert(70975,94361);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(25546,95538);
    caseQueue.insert(4189,65881);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(80152,8813);
    myResult.push_back(caseQueue.getPriority(55260)); //74
    myResult.push_back(caseQueue.getPriority(45133)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(67527,68008);
    myResult.push_back(caseQueue.getPriority(77048)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(89686)); //79
    caseQueue.updatePriority(38194, 84447);
    caseQueue.insert(44807,19522);
    caseQueue.insert(26815,15222);
    myResult.push_back(caseQueue.getPriority(92122)); //80
    caseQueue.updatePriority(77048, 89423);
    caseQueue.insert(31377,81717);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(32948, 38027);
    myResult.push_back(caseQueue.getPriority(67506)); //82
    caseQueue.insert(69288,96900);
    caseQueue.insert(61059,30968);
    myResult.push_back(caseQueue.getPriority(53063)); //83
    myResult.push_back(caseQueue.getPriority(25546)); //84
    caseQueue.updatePriority(97767, 47663);
    caseQueue.insert(20386,56685);
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(32283,96531);
    caseQueue.insert(22187,95196);
    caseQueue.insert(56047,2557);
    caseQueue.insert(26299,18598);
    caseQueue.insert(77449,27298);
    caseQueue.updatePriority(92122, 27949);
    myResult.push_back(caseQueue.getPriority(8194)); //86
    caseQueue.updatePriority(56708, 799);
    caseQueue.updatePriority(24533, 98788);
    myResult.push_back(caseQueue.getPriority(45638)); //87
    caseQueue.insert(33025,91898);
    caseQueue.insert(99585,33983);
    caseQueue.updatePriority(87194, 78555);
    myResult.push_back(caseQueue.getPriority(67527)); //88
    static const int resultListArray[] = {99633, -1, 18523, 11918, 24714, 73133, 60465, 61460, 60465, 98455, 66665, 21956, 52699, 2044, 39188, 24714, 28562, 73133, 16138, 74540, 73133, 29006, 40160, 29876, 52699, 29006, 73133, 52762, 7247, 80318, 29006, 30558, 48850, 21275, 44544, 48850, 78314, 84993, 28562, 25168, 19608, 34594, 58469, 86606, 38137, 7935, 58480, 52699, 4771, 6624, 84441, 75831, 45212, 56711, 86204, 65221, 18005, 87014, 22569, 82756, 38469, 85130, 45235, 56711, 47724, 53919, 87660, 11847, 67869, 50571, 71871, 3095, 45979, 72457, 44544, 80152, 60483, 95526, 72290, 67105, 26815, 89507, 69183, 95538, 44807, 43387, 65221, 68008}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(117): Basarili" << endl;
    else cout << "Case(117): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_118(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 120);

    vector<int> myResult; 
    caseQueue.insert(84600,94125);
    myResult.push_back(caseQueue.getPriority(84600)); //1
    caseQueue.insert(35437,16002);
    caseQueue.updatePriority(35437, 20016);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(59314, 19285);
    myResult.push_back(caseQueue.getPriority(94657)); //4
    caseQueue.insert(30006,25532);
    myResult.push_back(caseQueue.getPriority(30006)); //5
    caseQueue.updatePriority(30006, 76356);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(36544)); //7
    caseQueue.insert(68301,62466);
    myResult.push_back(caseQueue.getPriority(68301)); //8
    myResult.push_back(caseQueue.getPriority(68301)); //9
    caseQueue.insert(67493,97623);
    myResult.push_back(caseQueue.getPriority(67493)); //10
    caseQueue.insert(63918,7065);
    caseQueue.insert(33452,15426);
    caseQueue.updatePriority(63918, 23501);
    caseQueue.updatePriority(68301, 2030);
    myResult.push_back(caseQueue.getPriority(68301)); //11
    caseQueue.insert(1507,92929);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(63918)); //13
    caseQueue.insert(29068,91573);
    caseQueue.insert(68891,14691);
    caseQueue.insert(17686,6152);
    myResult.push_back(caseQueue.getPriority(17686)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(85672,54705);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(29394,644);
    caseQueue.insert(19309,3407);
    caseQueue.insert(63345,74348);
    myResult.push_back(caseQueue.getPriority(33452)); //17
    myResult.push_back(caseQueue.getPriority(63345)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(72974,33957);
    caseQueue.updatePriority(63918, 95675);
    myResult.push_back(caseQueue.getPriority(72974)); //20
    caseQueue.insert(75328,59755);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(36363,8651);
    caseQueue.updatePriority(75328, 85516);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(79737,86775);
    myResult.push_back(caseQueue.getPriority(72974)); //23
    caseQueue.insert(25391,7855);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(79737)); //25
    myResult.push_back(caseQueue.getPriority(72974)); //26
    caseQueue.insert(24894,48298);
    caseQueue.insert(25702,49626);
    caseQueue.insert(79825,39194);
    caseQueue.updatePriority(85672, 74717);
    caseQueue.updatePriority(79737, 75725);
    caseQueue.insert(45105,75128);
    caseQueue.updatePriority(25702, 53231);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(41542,66329);
    myResult.push_back(caseQueue.getPriority(72974)); //28
    caseQueue.updatePriority(29068, 12903);
    myResult.push_back(caseQueue.getPriority(24894)); //29
    caseQueue.updatePriority(29068, 82069);
    caseQueue.updatePriority(25702, 4836);
    myResult.push_back(caseQueue.getPriority(75328)); //30
    caseQueue.updatePriority(63918, 73831);
    myResult.push_back(caseQueue.getPriority(45105)); //31
    myResult.push_back(caseQueue.getPriority(67493)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(21135,96671);
    myResult.push_back(caseQueue.getPriority(75328)); //34
    caseQueue.updatePriority(72974, 42706);
    caseQueue.insert(29761,94754);
    caseQueue.insert(23242,22094);
    caseQueue.insert(18465,38680);
    caseQueue.updatePriority(23242, 45835);
    caseQueue.insert(62347,83145);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(79825)); //36
    caseQueue.updatePriority(79825, 33203);
    caseQueue.insert(9496,30153);
    caseQueue.updatePriority(45105, 49545);
    caseQueue.insert(30024,51209);
    caseQueue.insert(11784,33387);
    caseQueue.insert(84431,88182);
    caseQueue.insert(80545,67436);
    caseQueue.updatePriority(24894, 63967);
    caseQueue.updatePriority(85672, 63856);
    caseQueue.insert(74180,74232);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(59662,35623);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(95781,75906);
    caseQueue.updatePriority(29761, 32242);
    caseQueue.insert(28131,52417);
    caseQueue.insert(72779,95056);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(82902,16436);
    myResult.push_back(caseQueue.getPriority(95781)); //40
    caseQueue.insert(5795,80888);
    caseQueue.insert(61873,67075);
    myResult.push_back(caseQueue.getPriority(67493)); //41
    caseQueue.insert(63326,51274);
    caseQueue.updatePriority(45105, 36467);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(62347, 28855);
    caseQueue.insert(30326,20073);
    caseQueue.updatePriority(30024, 75833);
    caseQueue.updatePriority(85672, 40611);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(86865,62218);
    myResult.push_back(caseQueue.getPriority(80545)); //45
    caseQueue.updatePriority(95781, 55967);
    myResult.push_back(caseQueue.getPriority(41542)); //46
    caseQueue.updatePriority(45105, 10853);
    caseQueue.updatePriority(28131, 45426);
    static const int resultListArray[] = {94125, 35437, 84600, -1, 25532, 30006, -1, 62466, 62466, 97623, 2030, 68301, 23501, 6152, 17686, 68891, 15426, 74348, 29394, 33957, 19309, 36363, 33957, 25391, 86775, 33957, 33452, 33957, 48298, 85516, 75128, 97623, 25702, 85516, 18465, 39194, 9496, 79825, 29761, 75906, 97623, 82902, 30326, 62347, 67436, 66329}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(118): Basarili" << endl;
    else cout << "Case(118): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_119(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 188);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(90110)); //1
    caseQueue.insert(36867,62997);
    caseQueue.insert(50130,16670);
    myResult.push_back(caseQueue.getPriority(50130)); //2
    caseQueue.insert(21696,9111);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(29951,82795);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(36867, 64323);
    myResult.push_back(caseQueue.getPriority(36867)); //5
    caseQueue.updatePriority(29951, 46147);
    myResult.push_back(caseQueue.getPriority(29951)); //6
    caseQueue.updatePriority(36867, 51001);
    caseQueue.updatePriority(36867, 60358);
    caseQueue.insert(44884,81463);
    caseQueue.insert(93740,79866);
    caseQueue.insert(67358,28574);
    myResult.push_back(caseQueue.getPriority(67358)); //7
    myResult.push_back(caseQueue.getPriority(44884)); //8
    caseQueue.updatePriority(67358, 48600);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(42616,67029);
    myResult.push_back(caseQueue.getPriority(93740)); //10
    caseQueue.updatePriority(44884, 25182);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(69645,31065);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(42616, 60014);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(70000,20348);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(30044,38053);
    myResult.push_back(caseQueue.getPriority(36867)); //15
    caseQueue.insert(58547,30966);
    caseQueue.updatePriority(30044, 43538);
    myResult.push_back(caseQueue.getPriority(58547)); //16
    caseQueue.updatePriority(58547, 78552);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(58547)); //20
    myResult.push_back(caseQueue.getPriority(58547)); //21
    caseQueue.insert(73494,84945);
    caseQueue.insert(21216,15328);
    caseQueue.updatePriority(58547, 67511);
    myResult.push_back(caseQueue.getPriority(93740)); //22
    caseQueue.updatePriority(21216, 87718);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(93740)); //24
    caseQueue.insert(38652,1279);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(40692,2451);
    caseQueue.insert(97919,71193);
    caseQueue.updatePriority(73494, 67464);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(97919, 1724);
    caseQueue.insert(44686,81831);
    caseQueue.updatePriority(73494, 73558);
    myResult.push_back(caseQueue.getPriority(97919)); //28
    myResult.push_back(caseQueue.getPriority(21216)); //29
    caseQueue.insert(31121,85766);
    myResult.push_back(caseQueue.getPriority(31121)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(44686)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(72614,23513);
    myResult.push_back(caseQueue.getPriority(72614)); //34
    caseQueue.insert(12045,62827);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(59690,76048);
    caseQueue.updatePriority(59690, 10452);
    caseQueue.updatePriority(44686, 75364);
    caseQueue.insert(29749,15613);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(29749, 89027);
    caseQueue.insert(13259,99464);
    caseQueue.insert(33081,27768);
    caseQueue.insert(83063,61658);
    caseQueue.insert(79995,43158);
    caseQueue.insert(91107,75883);
    caseQueue.insert(69282,7310);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(88971,56551);
    caseQueue.updatePriority(83063, 2676);
    caseQueue.insert(74847,38140);
    myResult.push_back(caseQueue.getPriority(83063)); //38
    myResult.push_back(caseQueue.getPriority(33081)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(29749, 14119);
    caseQueue.insert(91479,3791);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(31121, 91823);
    caseQueue.updatePriority(21216, 94028);
    caseQueue.insert(53254,54246);
    caseQueue.updatePriority(91107, 27502);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(20278,86820);
    caseQueue.updatePriority(74847, 92943);
    caseQueue.insert(64879,92348);
    myResult.push_back(caseQueue.getPriority(44686)); //45
    caseQueue.insert(16703,25218);
    myResult.push_back(caseQueue.getPriority(20278)); //46
    caseQueue.insert(4561,26535);
    caseQueue.insert(37806,91274);
    myResult.push_back(caseQueue.getPriority(37806)); //47
    myResult.push_back(caseQueue.getPriority(21216)); //48
    caseQueue.updatePriority(20278, 61807);
    caseQueue.insert(32143,73471);
    caseQueue.insert(21065,74800);
    caseQueue.updatePriority(79995, 59325);
    caseQueue.insert(5865,89292);
    myResult.push_back(caseQueue.getPriority(21216)); //49
    caseQueue.insert(39085,63850);
    myResult.push_back(caseQueue.getPriority(79995)); //50
    caseQueue.insert(14434,73826);
    caseQueue.updatePriority(79995, 59180);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(88171,65620);
    caseQueue.insert(2112,48956);
    caseQueue.insert(39889,67693);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(80518,23358);
    myResult.push_back(caseQueue.getPriority(64879)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(74847)); //55
    caseQueue.updatePriority(88971, 52125);
    caseQueue.insert(71041,44910);
    myResult.push_back(caseQueue.getPriority(74847)); //56
    caseQueue.insert(9387,35891);
    caseQueue.insert(58709,57866);
    myResult.push_back(caseQueue.getPriority(88171)); //57
    myResult.push_back(caseQueue.getPriority(21065)); //58
    caseQueue.insert(99247,86016);
    caseQueue.insert(27926,30523);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(71041, 40559);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(39889, 99284);
    caseQueue.insert(33395,83754);
    caseQueue.updatePriority(39889, 23707);
    caseQueue.insert(17326,78443);
    myResult.push_back(caseQueue.getPriority(37806)); //61
    myResult.push_back(caseQueue.getPriority(39085)); //62
    caseQueue.updatePriority(74847, 36927);
    myResult.push_back(caseQueue.getPriority(17326)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(90957,11057);
    caseQueue.updatePriority(13259, 57978);
    caseQueue.updatePriority(58709, 20340);
    caseQueue.insert(74087,93517);
    caseQueue.updatePriority(14434, 39800);
    caseQueue.insert(87292,30014);
    myResult.push_back(caseQueue.getPriority(14434)); //65
    caseQueue.insert(42308,77935);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(64879)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(12620,59591);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(81042,81999);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(82970,4160);
    caseQueue.insert(39141,76236);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(39141)); //74
    caseQueue.updatePriority(13259, 85121);
    caseQueue.insert(14356,35614);
    myResult.push_back(caseQueue.getPriority(2112)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(88971)); //78
    myResult.push_back(caseQueue.getPriority(79995)); //79
    myResult.push_back(caseQueue.getPriority(64879)); //80
    caseQueue.insert(48792,53907);
    caseQueue.insert(7164,57583);
    myResult.push_back(caseQueue.getPriority(12620)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(39085, 79056);
    caseQueue.insert(38191,87717);
    caseQueue.insert(10681,92032);
    caseQueue.updatePriority(20278, 88310);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(39141, 66970);
    static const int resultListArray[] = {-1, 16670, 21696, 50130, 64323, 46147, 28574, 81463, 29951, 79866, 44884, 69645, 67358, 70000, 60358, 30966, 30044, 42616, 36867, 78552, 78552, 79866, 58547, 79866, 38652, 93740, 40692, 1724, 87718, 85766, 97919, 81831, 73494, 23513, 72614, 59690, 69282, 2676, 27768, 83063, 91479, 29749, 91107, 33081, 75364, 86820, 91274, 94028, 94028, 59325, 16703, 4561, 92348, 80518, 92943, 92943, 65620, 74800, 27926, 9387, 91274, 63850, 78443, 39889, 39800, 90957, 92348, 58709, 87292, 74847, 14434, 82970, 71041, 76236, 48956, 14356, 2112, 52125, 59180, 92348, 59591, 88971, 48792}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(119): Basarili" << endl;
    else cout << "Case(119): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_120(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 104);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(43448,73403);
    caseQueue.updatePriority(43448, 90488);
    caseQueue.updatePriority(43448, 97974);
    caseQueue.insert(13404,71307);
    caseQueue.updatePriority(13404, 65911);
    caseQueue.updatePriority(13404, 33519);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(95428, 5978);
    caseQueue.insert(55882,40413);
    caseQueue.insert(65765,45323);
    caseQueue.insert(75952,88488);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(75952, 37691);
    caseQueue.insert(61659,76553);
    caseQueue.insert(79001,39151);
    caseQueue.insert(94615,86514);
    myResult.push_back(caseQueue.getPriority(79001)); //5
    caseQueue.updatePriority(79001, 5525);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(65765)); //7
    caseQueue.insert(74247,36943);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(75952)); //9
    myResult.push_back(caseQueue.getPriority(65765)); //10
    caseQueue.updatePriority(94615, 96485);
    myResult.push_back(caseQueue.getPriority(61659)); //11
    caseQueue.updatePriority(94615, 13343);
    myResult.push_back(caseQueue.getPriority(65765)); //12
    caseQueue.updatePriority(75952, 1367);
    myResult.push_back(caseQueue.getPriority(75952)); //13
    myResult.push_back(caseQueue.getPriority(75952)); //14
    caseQueue.insert(9081,74090);
    caseQueue.updatePriority(9081, 65831);
    caseQueue.insert(16164,20472);
    myResult.push_back(caseQueue.getPriority(75952)); //15
    myResult.push_back(caseQueue.getPriority(9081)); //16
    caseQueue.insert(45408,67841);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(61659)); //18
    caseQueue.insert(92336,14091);
    myResult.push_back(caseQueue.getPriority(45408)); //19
    caseQueue.updatePriority(9081, 18942);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(97893,48191);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(65765, 18378);
    caseQueue.updatePriority(61659, 11723);
    caseQueue.insert(76776,88119);
    caseQueue.insert(3492,904);
    myResult.push_back(caseQueue.getPriority(45408)); //23
    caseQueue.insert(65254,88667);
    caseQueue.insert(68509,69180);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(76776, 81925);
    caseQueue.insert(74389,10242);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(58918,39404);
    myResult.push_back(caseQueue.getPriority(58918)); //27
    caseQueue.insert(63773,22218);
    caseQueue.insert(81103,15392);
    caseQueue.updatePriority(68509, 80138);
    caseQueue.updatePriority(68509, 10234);
    myResult.push_back(caseQueue.getPriority(97893)); //28
    myResult.push_back(caseQueue.getPriority(97893)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(78491,15267);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(63773, 57633);
    caseQueue.insert(69144,84598);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(80908,31731);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(63773)); //34
    caseQueue.updatePriority(69144, 26262);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(76776, 76086);
    caseQueue.insert(17927,65462);
    caseQueue.updatePriority(65254, 12650);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(30393,87979);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(1593,91900);
    myResult.push_back(caseQueue.getPriority(45408)); //38
    caseQueue.insert(93598,47169);
    caseQueue.insert(13111,31889);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(97893)); //40
    caseQueue.updatePriority(30393, 28274);
    caseQueue.updatePriority(58918, 30195);
    caseQueue.updatePriority(30393, 22258);
    caseQueue.insert(3399,43790);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(93506,6609);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(56227,84719);
    myResult.push_back(caseQueue.getPriority(3399)); //45
    caseQueue.updatePriority(63773, 33993);
    caseQueue.insert(20952,67491);
    static const int resultListArray[] = {-1, 13404, 43448, 55882, 39151, 79001, 45323, 74247, 37691, 45323, 76553, 45323, 1367, 1367, 1367, 65831, 75952, 76553, 67841, 94615, 92336, 9081, 67841, 3492, 74389, 61659, 39404, 48191, 48191, 68509, 78491, 81103, 65765, 57633, 16164, 65254, 69144, 67841, 80908, 48191, 30393, 93506, 58918, 13111, 43790}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(120): Basarili" << endl;
    else cout << "Case(120): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_121(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 117);

    vector<int> myResult; 
    caseQueue.insert(60398,86925);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(15019,92430);
    myResult.push_back(caseQueue.getPriority(15019)); //2
    caseQueue.updatePriority(15019, 35353);
    caseQueue.insert(54990,95446);
    myResult.push_back(caseQueue.getPriority(54990)); //3
    caseQueue.insert(57585,71865);
    caseQueue.updatePriority(15019, 64709);
    caseQueue.updatePriority(54990, 53457);
    caseQueue.insert(74298,13476);
    caseQueue.insert(67359,93273);
    caseQueue.insert(23501,49914);
    caseQueue.insert(13107,29971);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(57585, 66830);
    caseQueue.insert(42556,56517);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(83928,71772);
    caseQueue.insert(59710,17492);
    caseQueue.insert(51227,73650);
    caseQueue.insert(53570,47292);
    caseQueue.updatePriority(23501, 22995);
    caseQueue.updatePriority(83928, 5964);
    myResult.push_back(caseQueue.getPriority(53570)); //6
    caseQueue.updatePriority(51227, 42011);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(67359)); //9
    myResult.push_back(caseQueue.getPriority(54990)); //10
    caseQueue.updatePriority(42556, 61905);
    caseQueue.insert(47814,45318);
    caseQueue.updatePriority(67359, 66943);
    caseQueue.insert(55713,60369);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(57085,4286);
    myResult.push_back(caseQueue.getPriority(54990)); //12
    myResult.push_back(caseQueue.getPriority(55713)); //13
    caseQueue.updatePriority(67359, 54387);
    caseQueue.insert(46812,66296);
    caseQueue.updatePriority(46812, 99852);
    caseQueue.insert(37859,30132);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(51227, 30064);
    caseQueue.insert(72414,97064);
    myResult.push_back(caseQueue.getPriority(15019)); //16
    caseQueue.insert(22964,18218);
    caseQueue.insert(17673,393);
    caseQueue.updatePriority(46812, 45675);
    myResult.push_back(caseQueue.getPriority(47814)); //17
    myResult.push_back(caseQueue.getPriority(72414)); //18
    caseQueue.insert(47613,23049);
    caseQueue.insert(575,38350);
    myResult.push_back(caseQueue.getPriority(57585)); //19
    myResult.push_back(caseQueue.getPriority(72414)); //20
    caseQueue.insert(2035,47854);
    caseQueue.insert(74186,8644);
    caseQueue.updatePriority(15019, 67841);
    caseQueue.insert(53129,79521);
    caseQueue.insert(34219,13063);
    myResult.push_back(caseQueue.getPriority(57585)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(84636,69669);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(62966,9857);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(44053,26337);
    caseQueue.updatePriority(22964, 83409);
    caseQueue.insert(93151,95182);
    caseQueue.insert(87683,48289);
    caseQueue.insert(73271,79860);
    caseQueue.updatePriority(2035, 9227);
    caseQueue.insert(62665,24832);
    caseQueue.insert(48339,70570);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(30192,85104);
    caseQueue.updatePriority(575, 70648);
    caseQueue.updatePriority(48339, 32324);
    caseQueue.insert(15183,45404);
    caseQueue.updatePriority(57585, 97773);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(51227)); //29
    caseQueue.updatePriority(22964, 95065);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(92641,81551);
    caseQueue.insert(14607,47770);
    myResult.push_back(caseQueue.getPriority(87683)); //31
    caseQueue.insert(19266,19392);
    myResult.push_back(caseQueue.getPriority(30192)); //32
    caseQueue.updatePriority(87683, 69677);
    myResult.push_back(caseQueue.getPriority(22964)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(51227, 59673);
    caseQueue.insert(69168,40392);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(76630,37401);
    caseQueue.insert(19459,70921);
    caseQueue.insert(19940,5602);
    myResult.push_back(caseQueue.getPriority(15019)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(22964)); //38
    caseQueue.insert(26835,3880);
    caseQueue.insert(9,950);
    myResult.push_back(caseQueue.getPriority(22964)); //39
    caseQueue.insert(61761,93709);
    caseQueue.insert(64801,1555);
    caseQueue.insert(8306,67683);
    caseQueue.updatePriority(54990, 34770);
    caseQueue.insert(37455,88508);
    caseQueue.insert(42904,32076);
    myResult.push_back(caseQueue.getPriority(22964)); //40
    caseQueue.updatePriority(93151, 664);
    caseQueue.insert(54335,23489);
    myResult.push_back(caseQueue.deleteMin()); //41
    static const int resultListArray[] = {60398, 92430, 95446, 74298, 13107, 47292, 83928, 59710, 93273, 53457, 23501, 53457, 60369, 57085, 37859, 64709, 45318, 97064, 66830, 97064, 66830, 17673, 74186, 34219, 62966, 2035, 47613, 62665, 30064, 44053, 48289, 85104, 95065, 19266, 48339, 67841, 19940, 95065, 95065, 95065, 93151}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(121): Basarili" << endl;
    else cout << "Case(121): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_122(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 188);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(51052)); //1
    myResult.push_back(caseQueue.getPriority(1426)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(7283)); //4
    caseQueue.insert(60204,71485);
    caseQueue.updatePriority(60204, 92527);
    caseQueue.insert(53854,96507);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(53854, 58192);
    caseQueue.updatePriority(53854, 51627);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(27041, 2415);
    myResult.push_back(caseQueue.getPriority(70973)); //7
    caseQueue.insert(2296,73927);
    caseQueue.insert(9288,16717);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(2296)); //9
    myResult.push_back(caseQueue.getPriority(2296)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(95010, 65417);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(58913)); //14
    caseQueue.updatePriority(98412, 29227);
    caseQueue.updatePriority(88239, 77029);
    caseQueue.insert(15312,90227);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(74241)); //16
    caseQueue.updatePriority(86767, 219);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(72547)); //18
    caseQueue.insert(64585,46379);
    myResult.push_back(caseQueue.getPriority(64585)); //19
    caseQueue.updatePriority(64585, 12573);
    myResult.push_back(caseQueue.getPriority(64585)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(37636)); //22
    caseQueue.insert(97543,42941);
    myResult.push_back(caseQueue.getPriority(97543)); //23
    caseQueue.insert(78304,5375);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(97543, 99166);
    caseQueue.insert(31498,29939);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(73501,91102);
    caseQueue.insert(92193,70717);
    myResult.push_back(caseQueue.getPriority(73501)); //26
    caseQueue.updatePriority(73501, 50706);
    caseQueue.updatePriority(97543, 21136);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(73501)); //28
    caseQueue.insert(84349,38492);
    caseQueue.insert(71034,51899);
    myResult.push_back(caseQueue.getPriority(92193)); //29
    caseQueue.insert(90960,65312);
    caseQueue.insert(59952,46038);
    caseQueue.insert(58546,39892);
    myResult.push_back(caseQueue.getPriority(73501)); //30
    caseQueue.updatePriority(59952, 23919);
    caseQueue.insert(15485,61086);
    myResult.push_back(caseQueue.getPriority(58546)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(15485, 20600);
    myResult.push_back(caseQueue.getPriority(84349)); //33
    myResult.push_back(caseQueue.getPriority(15485)); //34
    caseQueue.insert(85690,30843);
    myResult.push_back(caseQueue.getPriority(84349)); //35
    caseQueue.insert(39208,79639);
    caseQueue.insert(75570,82467);
    caseQueue.insert(50980,39784);
    caseQueue.insert(7835,99223);
    myResult.push_back(caseQueue.getPriority(90960)); //36
    myResult.push_back(caseQueue.getPriority(85690)); //37
    caseQueue.updatePriority(39208, 54436);
    caseQueue.insert(19749,44518);
    myResult.push_back(caseQueue.getPriority(7835)); //38
    myResult.push_back(caseQueue.getPriority(75570)); //39
    caseQueue.insert(2976,51300);
    caseQueue.updatePriority(84349, 99976);
    myResult.push_back(caseQueue.getPriority(92193)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(92193, 88947);
    caseQueue.insert(16225,83560);
    caseQueue.updatePriority(19749, 57869);
    caseQueue.insert(40038,13863);
    caseQueue.insert(44460,37476);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(98891,26222);
    caseQueue.updatePriority(73501, 80915);
    caseQueue.updatePriority(73501, 83132);
    caseQueue.updatePriority(39208, 16475);
    myResult.push_back(caseQueue.getPriority(16225)); //44
    caseQueue.insert(22394,40587);
    caseQueue.insert(42351,21685);
    myResult.push_back(caseQueue.getPriority(92193)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(75570)); //47
    caseQueue.insert(15503,38200);
    myResult.push_back(caseQueue.getPriority(15503)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(73501)); //51
    caseQueue.insert(22402,35087);
    caseQueue.updatePriority(15503, 48135);
    caseQueue.updatePriority(15503, 33005);
    caseQueue.insert(24763,81854);
    caseQueue.insert(18265,75099);
    caseQueue.insert(12301,54575);
    caseQueue.insert(91468,44810);
    caseQueue.insert(86786,33279);
    caseQueue.insert(38242,60291);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(22394, 83218);
    caseQueue.insert(98851,7864);
    caseQueue.insert(71480,77436);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(22394, 83368);
    caseQueue.updatePriority(73501, 89569);
    caseQueue.updatePriority(44460, 62807);
    myResult.push_back(caseQueue.getPriority(71034)); //54
    caseQueue.updatePriority(75570, 11241);
    caseQueue.insert(23447,86665);
    caseQueue.insert(57445,23848);
    caseQueue.insert(66109,87070);
    caseQueue.insert(97890,2895);
    caseQueue.insert(70190,40197);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(41789,50391);
    caseQueue.updatePriority(19749, 37455);
    caseQueue.updatePriority(22402, 26590);
    myResult.push_back(caseQueue.getPriority(73501)); //57
    caseQueue.insert(49530,18054);
    caseQueue.insert(41365,20629);
    myResult.push_back(caseQueue.getPriority(66109)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(50980)); //61
    caseQueue.insert(71130,6995);
    caseQueue.insert(34298,62648);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(73677,45054);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(21519,67068);
    caseQueue.insert(70733,87189);
    caseQueue.insert(56661,15875);
    caseQueue.insert(34587,72570);
    caseQueue.updatePriority(91468, 37136);
    caseQueue.insert(11742,53968);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(19199,16472);
    caseQueue.updatePriority(16225, 40569);
    caseQueue.insert(79027,22619);
    caseQueue.updatePriority(50980, 71036);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(64173,81407);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(16225, 58085);
    caseQueue.insert(75361,839);
    caseQueue.updatePriority(44460, 51217);
    myResult.push_back(caseQueue.getPriority(19749)); //69
    caseQueue.updatePriority(22394, 54862);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(12301, 35548);
    myResult.push_back(caseQueue.getPriority(38242)); //71
    myResult.push_back(caseQueue.getPriority(34298)); //72
    caseQueue.insert(31762,11438);
    caseQueue.updatePriority(84349, 41978);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(71034)); //75
    caseQueue.insert(86765,4373);
    caseQueue.insert(77846,19939);
    caseQueue.insert(31111,34505);
    caseQueue.insert(85903,23563);
    myResult.push_back(caseQueue.getPriority(19749)); //76
    caseQueue.insert(14883,18908);
    myResult.push_back(caseQueue.getPriority(34298)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.updatePriority(18265, 5236);
    caseQueue.updatePriority(23447, 43315);
    caseQueue.updatePriority(70190, 33537);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    static const int resultListArray[] = {-1, -1, -1, -1, 60204, 53854, -1, 9288, 73927, 73927, 2296, -1, -1, -1, 15312, -1, -1, -1, 46379, 12573, 64585, -1, 42941, 78304, 31498, 91102, 97543, 50706, 70717, 50706, 39892, 59952, 38492, 20600, 38492, 65312, 30843, 99223, 82467, 70717, 15485, 85690, 40038, 83560, 88947, 39208, 82467, 38200, 42351, 98891, 83132, 15503, 98851, 51899, 97890, 75570, 89569, 87070, 49530, 41365, 39784, 71130, 57445, 22402, 56661, 86786, 19199, 79027, 37455, 75361, 60291, 62648, 31762, 12301, 51899, 37455, 62648, 86765, 18265, 14883, 77846}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(122): Basarili" << endl;
    else cout << "Case(122): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_123(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 230);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(8669)); //1
    caseQueue.insert(27533,32335);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(41100, 5982);
    myResult.push_back(caseQueue.getPriority(61565)); //3
    caseQueue.insert(80973,51573);
    caseQueue.insert(96553,77446);
    caseQueue.insert(39355,10239);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(96553)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(96553, 69169);
    caseQueue.updatePriority(96553, 77869);
    caseQueue.updatePriority(96553, 33232);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(29288, 47178);
    caseQueue.updatePriority(88186, 23348);
    caseQueue.updatePriority(7847, 67867);
    myResult.push_back(caseQueue.getPriority(67053)); //8
    caseQueue.insert(33759,85539);
    caseQueue.insert(90503,13491);
    caseQueue.insert(4618,73111);
    myResult.push_back(caseQueue.getPriority(4618)); //9
    caseQueue.updatePriority(4618, 21695);
    myResult.push_back(caseQueue.getPriority(33759)); //10
    caseQueue.insert(28554,59719);
    caseQueue.updatePriority(28554, 39655);
    caseQueue.insert(10589,38168);
    caseQueue.insert(98676,81120);
    caseQueue.insert(21098,25859);
    caseQueue.insert(98015,37904);
    caseQueue.insert(93460,34766);
    caseQueue.insert(55269,7805);
    myResult.push_back(caseQueue.getPriority(10589)); //11
    myResult.push_back(caseQueue.getPriority(33759)); //12
    caseQueue.updatePriority(93460, 50569);
    myResult.push_back(caseQueue.getPriority(55269)); //13
    caseQueue.insert(47242,78925);
    caseQueue.updatePriority(33759, 67184);
    caseQueue.insert(6085,9746);
    caseQueue.insert(48898,81065);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(10589, 95877);
    myResult.push_back(caseQueue.getPriority(28554)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(1969,32310);
    caseQueue.insert(62099,77377);
    caseQueue.insert(14469,14342);
    caseQueue.updatePriority(10589, 75570);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(93709,41153);
    caseQueue.insert(62488,63894);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(31552,95190);
    myResult.push_back(caseQueue.getPriority(93709)); //19
    caseQueue.insert(7717,31050);
    myResult.push_back(caseQueue.getPriority(93709)); //20
    caseQueue.insert(25828,32267);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(33759)); //22
    caseQueue.updatePriority(10589, 72198);
    caseQueue.updatePriority(93460, 48538);
    myResult.push_back(caseQueue.getPriority(10589)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(66026,87969);
    caseQueue.updatePriority(62099, 32732);
    caseQueue.insert(60817,56661);
    myResult.push_back(caseQueue.getPriority(98015)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(78276,74192);
    myResult.push_back(caseQueue.getPriority(93709)); //28
    myResult.push_back(caseQueue.getPriority(78276)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(48898, 50825);
    caseQueue.updatePriority(93709, 76700);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(98676)); //32
    caseQueue.insert(42808,97744);
    caseQueue.insert(27424,33450);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(47242, 57096);
    caseQueue.insert(43325,49811);
    caseQueue.insert(30908,6435);
    caseQueue.updatePriority(47242, 21328);
    myResult.push_back(caseQueue.getPriority(66026)); //34
    caseQueue.insert(8234,34500);
    myResult.push_back(caseQueue.getPriority(78276)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(93709, 52593);
    caseQueue.insert(73693,18618);
    myResult.push_back(caseQueue.getPriority(93709)); //37
    caseQueue.insert(45986,38979);
    caseQueue.updatePriority(78276, 53548);
    caseQueue.insert(5160,41701);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(78276, 56285);
    myResult.push_back(caseQueue.getPriority(66026)); //39
    caseQueue.insert(7480,3150);
    caseQueue.insert(29836,58450);
    caseQueue.updatePriority(8234, 15260);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(28554, 3892);
    caseQueue.updatePriority(45986, 64487);
    caseQueue.updatePriority(47242, 59716);
    caseQueue.insert(79750,5172);
    caseQueue.updatePriority(78276, 97712);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(705,67492);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(31552)); //43
    myResult.push_back(caseQueue.getPriority(98015)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(24648,34845);
    caseQueue.updatePriority(47242, 90017);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(74821,34779);
    caseQueue.updatePriority(78276, 77841);
    caseQueue.updatePriority(45986, 54636);
    caseQueue.insert(55983,22418);
    myResult.push_back(caseQueue.getPriority(93460)); //47
    caseQueue.insert(57997,38473);
    caseQueue.insert(9843,71423);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(94891,56894);
    caseQueue.insert(42989,17965);
    caseQueue.updatePriority(45986, 22398);
    caseQueue.insert(69145,98544);
    caseQueue.insert(70710,54029);
    myResult.push_back(caseQueue.getPriority(66026)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(69145)); //52
    caseQueue.insert(71680,54869);
    caseQueue.insert(65623,57362);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(66026, 34190);
    caseQueue.insert(90667,55103);
    caseQueue.updatePriority(5160, 81109);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(47242, 66063);
    caseQueue.insert(82533,97890);
    caseQueue.insert(98885,84659);
    caseQueue.insert(36959,90801);
    caseQueue.updatePriority(98676, 65316);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(36449,91129);
    caseQueue.insert(87945,76980);
    myResult.push_back(caseQueue.getPriority(62488)); //58
    caseQueue.insert(40100,34823);
    caseQueue.insert(30874,28413);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(705, 23348);
    caseQueue.insert(6718,64790);
    caseQueue.insert(78645,60127);
    caseQueue.insert(19293,92340);
    caseQueue.insert(36546,68246);
    myResult.push_back(caseQueue.getPriority(5160)); //60
    caseQueue.insert(56793,28139);
    caseQueue.insert(38653,55705);
    myResult.push_back(caseQueue.getPriority(36959)); //61
    myResult.push_back(caseQueue.getPriority(62488)); //62
    caseQueue.updatePriority(38653, 93310);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(60817)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.updatePriority(90667, 5487);
    caseQueue.updatePriority(19293, 38189);
    caseQueue.updatePriority(48898, 8859);
    myResult.push_back(caseQueue.getPriority(19293)); //67
    caseQueue.insert(27831,96990);
    caseQueue.updatePriority(27831, 10262);
    myResult.push_back(caseQueue.getPriority(71680)); //68
    caseQueue.insert(8417,13915);
    caseQueue.insert(4526,71363);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(43325, 43388);
    caseQueue.insert(13214,250);
    caseQueue.updatePriority(60817, 8241);
    caseQueue.updatePriority(36546, 4123);
    caseQueue.updatePriority(29836, 36106);
    caseQueue.insert(40527,96981);
    caseQueue.updatePriority(71680, 39412);
    caseQueue.insert(17116,19386);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(98885)); //74
    caseQueue.updatePriority(6718, 52509);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(57741,74115);
    caseQueue.insert(4399,43421);
    caseQueue.updatePriority(36449, 11564);
    caseQueue.updatePriority(33759, 55095);
    caseQueue.insert(3979,72968);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(67555,17242);
    myResult.push_back(caseQueue.getPriority(19293)); //77
    caseQueue.insert(61728,80462);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(10951,59954);
    myResult.push_back(caseQueue.getPriority(69145)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(32124,95932);
    caseQueue.insert(17151,77482);
    caseQueue.insert(85502,35901);
    caseQueue.insert(18083,15810);
    caseQueue.insert(53336,85643);
    caseQueue.insert(1715,14818);
    myResult.push_back(caseQueue.getPriority(82533)); //82
    caseQueue.updatePriority(57741, 7795);
    caseQueue.updatePriority(29836, 43279);
    caseQueue.insert(50564,10854);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(85502, 45433);
    caseQueue.updatePriority(78645, 94505);
    caseQueue.insert(3288,67468);
    caseQueue.insert(56718,61296);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.updatePriority(4526, 2889);
    myResult.push_back(caseQueue.getPriority(40527)); //85
    caseQueue.insert(24036,51753);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.updatePriority(87945, 19684);
    caseQueue.insert(4004,59900);
    static const int resultListArray[] = {-1, 27533, -1, 39355, 77446, 80973, 96553, -1, 73111, 85539, 38168, 85539, 7805, 55269, 39655, 6085, 90503, 14469, 41153, 41153, 4618, 67184, 72198, 21098, 37904, 7717, 25828, 41153, 74192, 1969, 62099, 81120, 27424, 87969, 74192, 30908, 52593, 73693, 87969, 7480, 28554, 79750, 95190, 37904, 8234, 24648, 48538, 55983, 74821, 87969, 42989, 98544, 45986, 66026, 98015, 57997, 93460, 63894, 30874, 81109, 90801, 63894, 705, 56661, 56793, 40100, 38189, 54869, 90667, 48898, 13214, 36546, 60817, 84659, 27831, 36449, 38189, 8417, 98544, 67555, 17116, 97890, 57741, 50564, 96981, 4526}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(123): Basarili" << endl;
    else cout << "Case(123): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_124(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 170);

    vector<int> myResult; 
    caseQueue.insert(64661,31989);
    caseQueue.insert(56339,52812);
    myResult.push_back(caseQueue.getPriority(64661)); //1
    caseQueue.insert(5421,60138);
    caseQueue.insert(28239,51667);
    caseQueue.insert(13197,39703);
    caseQueue.insert(11698,83892);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(54732,84447);
    caseQueue.insert(16703,70140);
    caseQueue.insert(98347,31372);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(5421, 91950);
    caseQueue.updatePriority(56339, 77976);
    myResult.push_back(caseQueue.getPriority(56339)); //5
    myResult.push_back(caseQueue.getPriority(16703)); //6
    caseQueue.insert(99062,97604);
    caseQueue.insert(90789,4931);
    caseQueue.updatePriority(28239, 69684);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(45563,83201);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(45563, 73926);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(54732, 28368);
    caseQueue.updatePriority(99062, 12036);
    caseQueue.insert(81510,48545);
    myResult.push_back(caseQueue.getPriority(81510)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(5421, 76852);
    caseQueue.updatePriority(81510, 89774);
    caseQueue.updatePriority(11698, 27457);
    caseQueue.insert(57506,55257);
    caseQueue.updatePriority(57506, 15651);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(42149,5887);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(56339)); //15
    caseQueue.insert(17075,92871);
    caseQueue.updatePriority(17075, 97418);
    caseQueue.updatePriority(56339, 27384);
    caseQueue.insert(46100,66300);
    caseQueue.insert(7398,31828);
    caseQueue.updatePriority(11698, 36959);
    caseQueue.updatePriority(5421, 89252);
    caseQueue.insert(8719,71680);
    caseQueue.insert(76416,69582);
    caseQueue.updatePriority(56339, 50283);
    caseQueue.updatePriority(46100, 75979);
    myResult.push_back(caseQueue.getPriority(11698)); //16
    caseQueue.insert(18876,76879);
    caseQueue.insert(74281,872);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(17075, 94197);
    caseQueue.insert(98669,1125);
    caseQueue.insert(10364,87654);
    caseQueue.insert(81492,28432);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(62843,98998);
    caseQueue.insert(12964,86041);
    caseQueue.insert(17221,97437);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(9431,6853);
    caseQueue.insert(98146,37449);
    caseQueue.insert(86309,61154);
    caseQueue.insert(39684,59095);
    caseQueue.updatePriority(9431, 37592);
    caseQueue.insert(47320,14902);
    caseQueue.insert(60133,12433);
    caseQueue.updatePriority(62843, 13219);
    caseQueue.insert(76521,84543);
    caseQueue.insert(46785,87505);
    caseQueue.insert(89914,48185);
    caseQueue.insert(53882,73980);
    caseQueue.insert(87806,4753);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(56339, 74437);
    myResult.push_back(caseQueue.getPriority(46785)); //23
    myResult.push_back(caseQueue.getPriority(56339)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(46785)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(17754,4666);
    caseQueue.updatePriority(86309, 41663);
    myResult.push_back(caseQueue.getPriority(98146)); //29
    caseQueue.updatePriority(98146, 14856);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(97859,70952);
    caseQueue.insert(11240,29901);
    caseQueue.updatePriority(12964, 66437);
    caseQueue.insert(17849,73720);
    caseQueue.updatePriority(17221, 57299);
    caseQueue.insert(57560,1017);
    caseQueue.insert(15899,10728);
    caseQueue.updatePriority(11698, 26371);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(39684)); //33
    caseQueue.insert(70140,46378);
    caseQueue.insert(11639,66876);
    caseQueue.updatePriority(76521, 54016);
    caseQueue.insert(93861,64511);
    myResult.push_back(caseQueue.getPriority(86309)); //34
    caseQueue.updatePriority(11639, 75881);
    myResult.push_back(caseQueue.getPriority(56339)); //35
    caseQueue.insert(48474,15371);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(12638,69776);
    caseQueue.insert(37731,89533);
    myResult.push_back(caseQueue.getPriority(89914)); //37
    caseQueue.insert(73278,47728);
    caseQueue.insert(42463,99708);
    caseQueue.insert(38055,67433);
    caseQueue.insert(7131,57539);
    myResult.push_back(caseQueue.getPriority(11698)); //38
    caseQueue.insert(11881,10752);
    caseQueue.insert(87320,73133);
    caseQueue.updatePriority(56339, 49304);
    caseQueue.insert(42349,22537);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(82495,14053);
    caseQueue.insert(8568,83827);
    caseQueue.insert(53615,59794);
    caseQueue.updatePriority(97859, 25130);
    caseQueue.updatePriority(56339, 3201);
    myResult.push_back(caseQueue.getPriority(53882)); //41
    myResult.push_back(caseQueue.getPriority(93861)); //42
    myResult.push_back(caseQueue.getPriority(17849)); //43
    caseQueue.insert(91688,76508);
    caseQueue.insert(87463,73497);
    caseQueue.insert(88470,92107);
    myResult.push_back(caseQueue.getPriority(46100)); //44
    caseQueue.insert(23414,93812);
    caseQueue.insert(38225,11252);
    caseQueue.insert(83379,50245);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(61198,99949);
    myResult.push_back(caseQueue.getPriority(12638)); //46
    myResult.push_back(caseQueue.getPriority(86309)); //47
    caseQueue.insert(32738,45996);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(84682,12888);
    myResult.push_back(caseQueue.getPriority(7131)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(36079,64933);
    caseQueue.updatePriority(81510, 56595);
    caseQueue.updatePriority(12638, 97243);
    caseQueue.updatePriority(18876, 94370);
    caseQueue.updatePriority(10364, 95038);
    myResult.push_back(caseQueue.getPriority(87320)); //51
    caseQueue.insert(40204,34066);
    myResult.push_back(caseQueue.getPriority(42349)); //52
    myResult.push_back(caseQueue.getPriority(76521)); //53
    caseQueue.updatePriority(11240, 66487);
    caseQueue.insert(77121,55898);
    caseQueue.updatePriority(81510, 81303);
    caseQueue.insert(23633,13391);
    caseQueue.insert(153,86863);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(77121)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(76416)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(13305,60967);
    static const int resultListArray[] = {31989, 64661, 98347, 13197, 77976, 70140, 90789, 28239, 16703, 45563, 48545, 99062, 57506, 42149, 77976, 36959, 74281, 98669, 54732, 81492, 7398, 87806, 87505, 74437, 60133, 87505, 62843, 47320, 37449, 17754, 57560, 15899, 59095, 41663, 74437, 98146, 48185, 26371, 11881, 48474, 73980, 64511, 73720, 75979, 56339, 69776, 41663, 38225, 57539, 84682, 73133, 22537, 54016, 23633, 55898, 82495, 69582, 42349}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(124): Basarili" << endl;
    else cout << "Case(124): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_125(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 148);

    vector<int> myResult; 
    caseQueue.insert(98283,7911);
    caseQueue.updatePriority(98283, 43179);
    caseQueue.updatePriority(98283, 61365);
    caseQueue.updatePriority(98283, 63415);
    caseQueue.updatePriority(98283, 94239);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(62894, 98828);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(31013, 38002);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(88752, 76150);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(47073)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(20084,50974);
    caseQueue.updatePriority(20084, 11304);
    caseQueue.updatePriority(20084, 68822);
    caseQueue.insert(2025,30946);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(20084, 43059);
    caseQueue.insert(37539,82093);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(54395,25001);
    caseQueue.updatePriority(54395, 77317);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(37539, 37501);
    caseQueue.updatePriority(37539, 17503);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(54499,98576);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(48211)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(2039, 87894);
    caseQueue.insert(2221,35596);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(74193)); //19
    caseQueue.insert(62101,63186);
    caseQueue.insert(56643,5370);
    myResult.push_back(caseQueue.getPriority(56643)); //20
    caseQueue.updatePriority(62101, 77559);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(71567,67034);
    caseQueue.insert(38033,84788);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(25021,246);
    caseQueue.insert(2340,92435);
    caseQueue.updatePriority(25021, 65271);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(38033, 61573);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(62101)); //25
    myResult.push_back(caseQueue.getPriority(62101)); //26
    caseQueue.updatePriority(62101, 32099);
    caseQueue.updatePriority(62101, 97065);
    caseQueue.updatePriority(2340, 42645);
    caseQueue.insert(91397,73766);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(62101, 35657);
    caseQueue.updatePriority(62101, 77259);
    caseQueue.updatePriority(62101, 29977);
    myResult.push_back(caseQueue.getPriority(62101)); //29
    caseQueue.updatePriority(62101, 45504);
    caseQueue.insert(51765,20192);
    caseQueue.updatePriority(51765, 81204);
    caseQueue.insert(24860,52254);
    caseQueue.updatePriority(62101, 12742);
    caseQueue.insert(13355,92994);
    caseQueue.updatePriority(51765, 26065);
    myResult.push_back(caseQueue.getPriority(51765)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(59895,62606);
    caseQueue.insert(52932,730);
    caseQueue.insert(30532,29791);
    caseQueue.insert(91380,67037);
    caseQueue.insert(26614,460);
    myResult.push_back(caseQueue.getPriority(30532)); //32
    caseQueue.insert(39686,32359);
    myResult.push_back(caseQueue.getPriority(51765)); //33
    caseQueue.insert(74414,7568);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(59895)); //35
    caseQueue.insert(72300,49989);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(47895,42464);
    myResult.push_back(caseQueue.getPriority(72300)); //38
    caseQueue.updatePriority(24860, 3235);
    myResult.push_back(caseQueue.getPriority(47895)); //39
    caseQueue.insert(66746,94980);
    myResult.push_back(caseQueue.getPriority(39686)); //40
    caseQueue.insert(57645,60076);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(59895)); //42
    caseQueue.insert(49611,90570);
    caseQueue.insert(29995,95469);
    caseQueue.insert(35382,90449);
    caseQueue.insert(43714,94541);
    myResult.push_back(caseQueue.getPriority(49611)); //43
    caseQueue.insert(3497,13423);
    caseQueue.insert(24686,94869);
    myResult.push_back(caseQueue.getPriority(29995)); //44
    caseQueue.insert(46570,59670);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(25744,54545);
    myResult.push_back(caseQueue.getPriority(43714)); //48
    myResult.push_back(caseQueue.getPriority(91380)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(29995)); //51
    caseQueue.updatePriority(13355, 48382);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(51926,99906);
    caseQueue.updatePriority(49611, 95722);
    caseQueue.insert(84906,36774);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(80231,63429);
    myResult.push_back(caseQueue.getPriority(59895)); //55
    myResult.push_back(caseQueue.getPriority(35382)); //56
    caseQueue.insert(8510,94181);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(29995)); //58
    caseQueue.insert(71893,42405);
    caseQueue.insert(71964,2135);
    myResult.push_back(caseQueue.getPriority(25744)); //59
    caseQueue.insert(50827,32915);
    caseQueue.insert(88494,16753);
    caseQueue.updatePriority(50827, 68252);
    caseQueue.updatePriority(66746, 11030);
    myResult.push_back(caseQueue.getPriority(59895)); //60
    caseQueue.insert(23794,38274);
    myResult.push_back(caseQueue.getPriority(57645)); //61
    caseQueue.insert(36217,29532);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(423,64205);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(35382, 46375);
    myResult.push_back(caseQueue.getPriority(91380)); //64
    caseQueue.insert(52375,56364);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(36217)); //66
    caseQueue.insert(81820,25044);
    static const int resultListArray[] = {98283, -1, -1, -1, -1, -1, -1, -1, 2025, 20084, 54395, 37539, -1, 54499, -1, -1, -1, 2221, -1, 5370, 56643, 71567, 25021, 38033, 77559, 77559, 2340, 91397, 29977, 26065, 62101, 29791, 26065, 26614, 62606, 52932, 74414, 49989, 42464, 32359, 24860, 62606, 90570, 95469, 3497, 51765, 30532, 94541, 67037, 39686, 95469, 47895, 84906, 13355, 62606, 90449, 72300, 95469, 54545, 62606, 60076, 71964, 66746, 67037, 88494, 29532}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(125): Basarili" << endl;
    else cout << "Case(125): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_126(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 168);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(71452)); //1
    caseQueue.insert(62808,61528);
    myResult.push_back(caseQueue.getPriority(62808)); //2
    caseQueue.insert(20189,40142);
    caseQueue.insert(81145,63072);
    myResult.push_back(caseQueue.getPriority(20189)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(18484,23890);
    caseQueue.updatePriority(62808, 63665);
    caseQueue.updatePriority(81145, 75820);
    caseQueue.updatePriority(81145, 76371);
    caseQueue.insert(5097,82865);
    caseQueue.insert(31206,74632);
    caseQueue.updatePriority(81145, 51153);
    myResult.push_back(caseQueue.getPriority(31206)); //5
    myResult.push_back(caseQueue.getPriority(5097)); //6
    caseQueue.insert(94932,45463);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(2119,32400);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(69517,86848);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(5097, 32311);
    caseQueue.updatePriority(5097, 12568);
    myResult.push_back(caseQueue.getPriority(69517)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(52328,17755);
    myResult.push_back(caseQueue.getPriority(69517)); //15
    caseQueue.updatePriority(69517, 43330);
    caseQueue.insert(77745,44930);
    caseQueue.insert(99644,17588);
    myResult.push_back(caseQueue.getPriority(99644)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(69517)); //18
    caseQueue.insert(69245,85127);
    caseQueue.insert(832,883);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(85965,75297);
    caseQueue.insert(64501,91093);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(88449,48191);
    caseQueue.insert(938,67448);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(18129,43093);
    caseQueue.insert(4504,10834);
    caseQueue.insert(978,31915);
    myResult.push_back(caseQueue.getPriority(69245)); //22
    caseQueue.insert(23866,36457);
    caseQueue.insert(8530,86388);
    caseQueue.insert(53378,91580);
    caseQueue.insert(75843,33184);
    myResult.push_back(caseQueue.getPriority(938)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(99257,24224);
    caseQueue.updatePriority(64501, 60491);
    myResult.push_back(caseQueue.getPriority(64501)); //25
    caseQueue.insert(87291,89796);
    caseQueue.insert(2589,7539);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(29519,5110);
    caseQueue.insert(69735,75908);
    caseQueue.insert(60583,67343);
    caseQueue.insert(40198,42864);
    caseQueue.updatePriority(53378, 70018);
    caseQueue.updatePriority(69245, 67604);
    caseQueue.insert(22506,71875);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(60583, 94469);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(8530)); //30
    myResult.push_back(caseQueue.getPriority(75843)); //31
    myResult.push_back(caseQueue.getPriority(69735)); //32
    caseQueue.insert(9664,39124);
    myResult.push_back(caseQueue.getPriority(60583)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(60583)); //35
    caseQueue.insert(28655,90406);
    myResult.push_back(caseQueue.getPriority(87291)); //36
    myResult.push_back(caseQueue.getPriority(88449)); //37
    caseQueue.insert(60280,80902);
    caseQueue.updatePriority(85965, 54602);
    caseQueue.updatePriority(22506, 5897);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(85965)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(60583)); //42
    caseQueue.insert(57015,14295);
    caseQueue.updatePriority(85965, 71526);
    caseQueue.updatePriority(938, 49684);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(41811,69915);
    myResult.push_back(caseQueue.getPriority(69735)); //44
    caseQueue.insert(95833,87446);
    caseQueue.insert(4485,89048);
    caseQueue.insert(10895,99741);
    caseQueue.insert(61260,4612);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(938, 15431);
    caseQueue.insert(11183,32294);
    caseQueue.insert(94484,62353);
    caseQueue.insert(42021,98226);
    caseQueue.updatePriority(53378, 58293);
    caseQueue.insert(34363,21375);
    caseQueue.insert(28456,52982);
    caseQueue.updatePriority(42021, 29190);
    myResult.push_back(caseQueue.getPriority(69245)); //46
    caseQueue.updatePriority(8530, 17301);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(60583)); //48
    caseQueue.insert(28358,6308);
    caseQueue.insert(38029,47800);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(72833,35721);
    myResult.push_back(caseQueue.getPriority(38029)); //50
    caseQueue.updatePriority(38029, 26209);
    caseQueue.insert(43876,30221);
    caseQueue.updatePriority(87291, 26249);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(77745)); //53
    caseQueue.insert(27727,25413);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(21411,6773);
    caseQueue.updatePriority(18129, 1743);
    caseQueue.insert(22256,57779);
    caseQueue.updatePriority(60583, 79715);
    caseQueue.insert(15125,48127);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(87291, 84111);
    caseQueue.insert(44080,42966);
    myResult.push_back(caseQueue.getPriority(10895)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(54706,80692);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(75043,75101);
    caseQueue.insert(30306,22325);
    caseQueue.insert(30529,18382);
    caseQueue.updatePriority(54706, 49075);
    myResult.push_back(caseQueue.getPriority(10895)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(31228,96211);
    myResult.push_back(caseQueue.getPriority(87291)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(5365,93360);
    caseQueue.insert(46061,11934);
    caseQueue.insert(31650,98966);
    caseQueue.updatePriority(54706, 50023);
    caseQueue.updatePriority(75043, 60255);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(71088,44058);
    myResult.push_back(caseQueue.getPriority(69735)); //65
    caseQueue.insert(26473,7486);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(60583)); //68
    myResult.push_back(caseQueue.getPriority(31228)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(15125, 58071);
    caseQueue.updatePriority(40198, 10765);
    caseQueue.insert(73895,24984);
    caseQueue.insert(4398,38867);
    myResult.push_back(caseQueue.deleteMin()); //71
    static const int resultListArray[] = {-1, 61528, 40142, 20189, 74632, 82865, 18484, 2119, 94932, 81145, 62808, 31206, 86848, 5097, 86848, 17588, 99644, 43330, 832, 52328, 69517, 85127, 67448, 4504, 60491, 2589, 99257, 29519, 978, 86388, 33184, 75908, 94469, 75843, 94469, 89796, 48191, 22506, 23866, 54602, 9664, 94469, 57015, 75908, 61260, 67604, 938, 94469, 28358, 47800, 8530, 34363, 44930, 27727, 18129, 99741, 21411, 38029, 99741, 30529, 30306, 84111, 42021, 46061, 75908, 26473, 43876, 79715, 96211, 11183, 40198}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(126): Basarili" << endl;
    else cout << "Case(126): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_127(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 115);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(44405,74471);
    caseQueue.insert(11355,29957);
    myResult.push_back(caseQueue.getPriority(11355)); //2
    caseQueue.insert(98394,56020);
    myResult.push_back(caseQueue.getPriority(44405)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(4066,13554);
    caseQueue.insert(82459,6219);
    caseQueue.updatePriority(44405, 58137);
    myResult.push_back(caseQueue.getPriority(4066)); //5
    caseQueue.updatePriority(82459, 86417);
    caseQueue.updatePriority(98394, 63520);
    caseQueue.insert(51419,61106);
    caseQueue.insert(24854,6311);
    myResult.push_back(caseQueue.getPriority(44405)); //6
    caseQueue.updatePriority(82459, 73196);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(67402,37468);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(82459)); //9
    caseQueue.insert(85296,11935);
    caseQueue.updatePriority(44405, 36102);
    caseQueue.insert(98695,3468);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(67548,17353);
    caseQueue.insert(10898,76381);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(82459)); //12
    caseQueue.updatePriority(51419, 29635);
    caseQueue.insert(98325,40887);
    caseQueue.insert(300,46065);
    caseQueue.insert(20496,65189);
    caseQueue.updatePriority(67548, 64203);
    caseQueue.insert(80845,57906);
    caseQueue.insert(22485,45004);
    myResult.push_back(caseQueue.getPriority(51419)); //13
    caseQueue.insert(80525,13454);
    myResult.push_back(caseQueue.getPriority(82459)); //14
    caseQueue.insert(21172,29016);
    caseQueue.updatePriority(22485, 36776);
    myResult.push_back(caseQueue.getPriority(67402)); //15
    myResult.push_back(caseQueue.getPriority(44405)); //16
    caseQueue.updatePriority(44405, 80007);
    caseQueue.insert(10993,97970);
    caseQueue.updatePriority(10993, 41206);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(51867,82044);
    myResult.push_back(caseQueue.getPriority(22485)); //18
    myResult.push_back(caseQueue.getPriority(44405)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(30689,76364);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(17816,87948);
    caseQueue.insert(42364,53678);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(67402, 42126);
    myResult.push_back(caseQueue.getPriority(10898)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(6343,89251);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(80845, 31369);
    caseQueue.updatePriority(20496, 59631);
    myResult.push_back(caseQueue.getPriority(300)); //26
    caseQueue.insert(81007,46989);
    myResult.push_back(caseQueue.getPriority(44405)); //27
    myResult.push_back(caseQueue.getPriority(6343)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(10898, 93372);
    caseQueue.insert(24034,20914);
    caseQueue.updatePriority(6343, 38508);
    caseQueue.updatePriority(20496, 19889);
    caseQueue.insert(34204,86913);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(46886,1575);
    caseQueue.insert(21359,69142);
    myResult.push_back(caseQueue.getPriority(98394)); //31
    caseQueue.updatePriority(30689, 31154);
    caseQueue.updatePriority(6343, 89234);
    caseQueue.insert(99718,975);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(56401,21096);
    caseQueue.insert(88333,32901);
    caseQueue.insert(42435,75635);
    caseQueue.insert(56263,40171);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(34204)); //34
    caseQueue.insert(27430,76788);
    caseQueue.insert(51880,99677);
    caseQueue.insert(17365,4673);
    myResult.push_back(caseQueue.getPriority(56401)); //35
    caseQueue.insert(52305,93784);
    caseQueue.insert(88583,41228);
    myResult.push_back(caseQueue.getPriority(82459)); //36
    myResult.push_back(caseQueue.getPriority(34204)); //37
    caseQueue.updatePriority(67402, 26578);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(42364)); //39
    myResult.push_back(caseQueue.getPriority(67548)); //40
    caseQueue.insert(54823,57345);
    caseQueue.updatePriority(88583, 99548);
    caseQueue.insert(99915,73264);
    caseQueue.insert(56984,46556);
    myResult.push_back(caseQueue.getPriority(98394)); //41
    caseQueue.insert(70328,81949);
    caseQueue.insert(50860,60457);
    caseQueue.insert(92471,61651);
    caseQueue.insert(39504,53313);
    myResult.push_back(caseQueue.getPriority(34204)); //42
    caseQueue.insert(23654,70021);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(53512,48793);
    caseQueue.updatePriority(39504, 64012);
    myResult.push_back(caseQueue.getPriority(39504)); //44
    caseQueue.insert(61580,86737);
    static const int resultListArray[] = {-1, 29957, 74471, 11355, 13554, 58137, 24854, 4066, 73196, 98695, 85296, 73196, 29635, 73196, 37468, 36102, 80525, 36776, 80007, 21172, 51419, 22485, 76381, 98325, 10993, 46065, 80007, 89251, 80845, 20496, 63520, 99718, 46886, 86913, 21096, 73196, 86913, 17365, 53678, 64203, 63520, 86913, 24034, 64012}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(127): Basarili" << endl;
    else cout << "Case(127): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_128(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 139);

    vector<int> myResult; 
    caseQueue.insert(27477,21533);
    myResult.push_back(caseQueue.getPriority(27477)); //1
    caseQueue.insert(47189,75082);
    caseQueue.insert(90228,69985);
    caseQueue.insert(99945,646);
    caseQueue.insert(7252,25236);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(90080,39260);
    myResult.push_back(caseQueue.getPriority(7252)); //4
    caseQueue.insert(63299,37726);
    caseQueue.updatePriority(90080, 24648);
    caseQueue.insert(44218,21866);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(90228)); //6
    caseQueue.insert(69091,25784);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(69091, 51790);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(47189)); //9
    caseQueue.insert(23892,16475);
    caseQueue.insert(23598,52625);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(90228)); //12
    caseQueue.insert(71826,2612);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(90228, 90994);
    caseQueue.updatePriority(90228, 49402);
    caseQueue.insert(36805,77628);
    caseQueue.insert(82750,28739);
    caseQueue.updatePriority(47189, 35417);
    caseQueue.insert(96814,22115);
    myResult.push_back(caseQueue.getPriority(90228)); //14
    caseQueue.insert(49009,93964);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(27765,20055);
    caseQueue.insert(24588,45355);
    caseQueue.insert(92233,38695);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(9112,82745);
    myResult.push_back(caseQueue.getPriority(69091)); //18
    caseQueue.insert(93918,28576);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(69091, 17862);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(24588, 46713);
    myResult.push_back(caseQueue.getPriority(47189)); //21
    myResult.push_back(caseQueue.getPriority(92233)); //22
    myResult.push_back(caseQueue.getPriority(90228)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(36805, 34781);
    caseQueue.insert(65119,62430);
    caseQueue.insert(48492,99969);
    caseQueue.insert(2531,62573);
    caseQueue.updatePriority(9112, 59729);
    caseQueue.updatePriority(90228, 72558);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(49009)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(9112, 3442);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(63726,50189);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(67285,85946);
    caseQueue.insert(63011,29625);
    myResult.push_back(caseQueue.getPriority(63011)); //30
    myResult.push_back(caseQueue.getPriority(49009)); //31
    caseQueue.insert(9338,69563);
    myResult.push_back(caseQueue.getPriority(63726)); //32
    caseQueue.updatePriority(48492, 90865);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(27938,21334);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(65119, 25630);
    caseQueue.insert(69402,13543);
    caseQueue.insert(17380,62617);
    myResult.push_back(caseQueue.getPriority(69402)); //35
    caseQueue.insert(80928,28768);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(17380)); //37
    caseQueue.insert(81733,52041);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(48492, 97388);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(84609,86250);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(89689,55239);
    caseQueue.insert(43156,52915);
    caseQueue.insert(94320,74807);
    myResult.push_back(caseQueue.getPriority(23598)); //42
    caseQueue.updatePriority(48492, 60557);
    caseQueue.insert(45426,41582);
    caseQueue.insert(96178,71186);
    caseQueue.insert(90384,74184);
    caseQueue.insert(97697,79478);
    myResult.push_back(caseQueue.getPriority(89689)); //43
    caseQueue.updatePriority(49009, 635);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(89689)); //45
    myResult.push_back(caseQueue.getPriority(9338)); //46
    caseQueue.insert(41512,39);
    caseQueue.updatePriority(97697, 88252);
    caseQueue.insert(5570,21113);
    caseQueue.insert(68985,9613);
    caseQueue.insert(42197,53407);
    caseQueue.updatePriority(17380, 99914);
    caseQueue.updatePriority(9338, 61142);
    myResult.push_back(caseQueue.getPriority(42197)); //47
    caseQueue.updatePriority(94320, 21271);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(95593,83050);
    caseQueue.insert(16508,14054);
    caseQueue.updatePriority(84609, 21757);
    myResult.push_back(caseQueue.getPriority(23598)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(83119,86625);
    caseQueue.updatePriority(2531, 64245);
    myResult.push_back(caseQueue.getPriority(48492)); //51
    caseQueue.insert(52165,14009);
    myResult.push_back(caseQueue.getPriority(5570)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(83119, 37267);
    caseQueue.updatePriority(67285, 13354);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(89689, 61978);
    myResult.push_back(caseQueue.getPriority(94320)); //55
    caseQueue.insert(69950,3598);
    myResult.push_back(caseQueue.getPriority(94320)); //56
    caseQueue.updatePriority(90384, 2843);
    caseQueue.insert(72767,61208);
    myResult.push_back(caseQueue.getPriority(9338)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(2531, 76723);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(22820,69550);
    static const int resultListArray[] = {21533, 99945, 27477, 25236, 44218, 69985, 90080, 7252, 75082, 23892, 63299, 69985, 71826, 49402, 96814, 27765, 82750, 51790, 93918, 69091, 35417, 38695, 49402, 47189, 36805, 93964, 92233, 9112, 24588, 29625, 93964, 50189, 63011, 27938, 13543, 69402, 62617, 65119, 80928, 63726, 81733, 52625, 55239, 49009, 55239, 69563, 53407, 41512, 52625, 68985, 60557, 21113, 52165, 67285, 21271, 21271, 61142, 90384, 69950, 16508}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(128): Basarili" << endl;
    else cout << "Case(128): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_129(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 213);

    vector<int> myResult; 
    caseQueue.insert(32246,57636);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(15599,15600);
    myResult.push_back(caseQueue.getPriority(15599)); //2
    caseQueue.updatePriority(15599, 47913);
    caseQueue.updatePriority(15599, 58068);
    myResult.push_back(caseQueue.getPriority(15599)); //3
    caseQueue.insert(56332,24165);
    caseQueue.insert(99801,56599);
    caseQueue.insert(34421,83611);
    caseQueue.updatePriority(56332, 25189);
    myResult.push_back(caseQueue.getPriority(56332)); //4
    caseQueue.updatePriority(99801, 8429);
    caseQueue.insert(55012,1898);
    caseQueue.insert(50697,98416);
    caseQueue.insert(40317,28642);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(40317, 28611);
    caseQueue.insert(84,82744);
    caseQueue.insert(88364,57673);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(15599)); //7
    myResult.push_back(caseQueue.getPriority(56332)); //8
    caseQueue.insert(21295,83547);
    caseQueue.updatePriority(21295, 65346);
    caseQueue.insert(10588,23489);
    caseQueue.insert(74297,47844);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(74297, 73282);
    caseQueue.updatePriority(84, 29844);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(15599)); //11
    caseQueue.updatePriority(84, 37214);
    caseQueue.insert(57714,28064);
    myResult.push_back(caseQueue.getPriority(84)); //12
    myResult.push_back(caseQueue.getPriority(57714)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(5607,61110);
    myResult.push_back(caseQueue.getPriority(40317)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(5607, 24008);
    caseQueue.insert(24465,16034);
    caseQueue.updatePriority(15599, 97481);
    caseQueue.updatePriority(74297, 42859);
    myResult.push_back(caseQueue.getPriority(5607)); //17
    caseQueue.updatePriority(21295, 9614);
    caseQueue.updatePriority(34421, 88993);
    caseQueue.insert(72012,8470);
    caseQueue.insert(20817,55959);
    myResult.push_back(caseQueue.getPriority(84)); //18
    myResult.push_back(caseQueue.getPriority(24465)); //19
    caseQueue.insert(8143,42294);
    caseQueue.updatePriority(34421, 55798);
    caseQueue.updatePriority(34421, 45741);
    caseQueue.updatePriority(5607, 39236);
    myResult.push_back(caseQueue.getPriority(24465)); //20
    caseQueue.insert(18150,61828);
    caseQueue.updatePriority(24465, 92141);
    caseQueue.insert(88153,76578);
    caseQueue.updatePriority(8143, 98479);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(15599, 11173);
    caseQueue.insert(25209,97145);
    caseQueue.insert(32459,40221);
    caseQueue.insert(78628,28657);
    caseQueue.insert(18057,53955);
    myResult.push_back(caseQueue.getPriority(20817)); //22
    caseQueue.insert(32560,34594);
    caseQueue.updatePriority(5607, 44448);
    caseQueue.updatePriority(15599, 39605);
    caseQueue.insert(76459,80221);
    myResult.push_back(caseQueue.getPriority(20817)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(23111,70614);
    caseQueue.updatePriority(74297, 64620);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(36249,48484);
    myResult.push_back(caseQueue.getPriority(50697)); //26
    caseQueue.updatePriority(88364, 35677);
    myResult.push_back(caseQueue.getPriority(34421)); //27
    myResult.push_back(caseQueue.getPriority(50697)); //28
    caseQueue.updatePriority(5607, 52304);
    caseQueue.updatePriority(23111, 14739);
    caseQueue.updatePriority(74297, 7188);
    caseQueue.updatePriority(88364, 67472);
    caseQueue.insert(28627,78561);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(88364)); //30
    caseQueue.insert(57930,69453);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(49210,14134);
    caseQueue.insert(32717,55433);
    caseQueue.insert(51395,48956);
    caseQueue.insert(1262,84417);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(24183,98629);
    caseQueue.updatePriority(50697, 10381);
    caseQueue.insert(3087,13098);
    myResult.push_back(caseQueue.getPriority(8143)); //33
    myResult.push_back(caseQueue.getPriority(76459)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(16363,23617);
    caseQueue.insert(71046,41255);
    caseQueue.insert(72390,34820);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(25209, 9488);
    myResult.push_back(caseQueue.getPriority(1262)); //37
    caseQueue.updatePriority(28627, 47682);
    caseQueue.insert(70413,22942);
    caseQueue.insert(43525,27664);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(85439,87679);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(85439, 56038);
    caseQueue.insert(82573,69283);
    myResult.push_back(caseQueue.getPriority(36249)); //40
    caseQueue.insert(92490,54929);
    caseQueue.insert(62893,14169);
    caseQueue.insert(59519,60432);
    caseQueue.insert(69987,75515);
    caseQueue.insert(46575,52404);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(16066,1250);
    myResult.push_back(caseQueue.getPriority(32459)); //42
    caseQueue.insert(74747,38793);
    caseQueue.insert(18080,84159);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(12617,68416);
    caseQueue.insert(43477,77069);
    caseQueue.insert(18423,63257);
    caseQueue.insert(60477,27863);
    myResult.push_back(caseQueue.getPriority(28627)); //44
    caseQueue.updatePriority(36249, 59779);
    caseQueue.insert(25226,30999);
    caseQueue.insert(42869,22333);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(43525)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(66107,91416);
    caseQueue.updatePriority(59519, 33628);
    myResult.push_back(caseQueue.getPriority(76459)); //48
    caseQueue.updatePriority(92490, 64205);
    caseQueue.insert(91488,84743);
    myResult.push_back(caseQueue.getPriority(88364)); //49
    caseQueue.insert(96601,63425);
    caseQueue.insert(46475,68643);
    myResult.push_back(caseQueue.getPriority(34421)); //50
    caseQueue.insert(94127,72946);
    myResult.push_back(caseQueue.getPriority(28627)); //51
    caseQueue.insert(79904,56290);
    caseQueue.updatePriority(69987, 57042);
    myResult.push_back(caseQueue.getPriority(24183)); //52
    caseQueue.insert(31455,91840);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(25226, 68856);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(74747, 63190);
    caseQueue.insert(66233,50742);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(51395)); //56
    caseQueue.insert(7990,49773);
    caseQueue.updatePriority(46475, 19004);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(7990, 85800);
    myResult.push_back(caseQueue.getPriority(74747)); //58
    caseQueue.updatePriority(57930, 75442);
    caseQueue.insert(63514,82055);
    caseQueue.insert(58979,86234);
    caseQueue.insert(5252,52114);
    myResult.push_back(caseQueue.getPriority(74747)); //59
    caseQueue.updatePriority(5607, 2801);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(72447,23219);
    caseQueue.insert(90336,30476);
    caseQueue.insert(30792,48166);
    myResult.push_back(caseQueue.getPriority(84)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(24183, 67616);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(23312,54100);
    caseQueue.insert(26235,68004);
    myResult.push_back(caseQueue.getPriority(18423)); //64
    caseQueue.updatePriority(82573, 45144);
    caseQueue.insert(19706,30480);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(56060,79765);
    caseQueue.insert(79827,16848);
    caseQueue.insert(51888,29710);
    caseQueue.updatePriority(94127, 4097);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(24046,69192);
    myResult.push_back(caseQueue.getPriority(30792)); //67
    myResult.push_back(caseQueue.getPriority(85439)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(22112,78652);
    caseQueue.insert(55244,28972);
    caseQueue.insert(2329,44778);
    caseQueue.updatePriority(46575, 63065);
    myResult.push_back(caseQueue.getPriority(63514)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(24183)); //72
    caseQueue.insert(61089,1970);
    caseQueue.insert(89910,14598);
    caseQueue.insert(19041,7173);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(40686,1456);
    caseQueue.insert(21234,42781);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(47392,67928);
    caseQueue.insert(91554,1003);
    myResult.push_back(caseQueue.getPriority(63514)); //75
    caseQueue.updatePriority(22112, 35482);
    caseQueue.updatePriority(7990, 23596);
    static const int resultListArray[] = {32246, 15600, 58068, 25189, 55012, 99801, 58068, 25189, 10588, 56332, 58068, 37214, 28064, 57714, 28611, 40317, 24008, 37214, 16034, 16034, 72012, 55959, 55959, 21295, 78628, 98416, 45741, 98416, 74297, 67472, 23111, 49210, 98479, 80221, 50697, 3087, 84417, 25209, 70413, 48484, 62893, 40221, 16066, 47682, 42869, 27664, 16363, 80221, 67472, 45741, 47682, 98629, 43525, 60477, 59519, 48956, 46475, 63190, 63190, 5607, 37214, 72447, 90336, 63257, 19706, 94127, 48166, 56038, 79827, 82055, 55244, 67616, 61089, 40686, 82055}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(129): Basarili" << endl;
    else cout << "Case(129): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_130(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 123);

    vector<int> myResult; 
    caseQueue.insert(26923,66293);
    caseQueue.insert(21848,99450);
    caseQueue.updatePriority(21848, 16899);
    caseQueue.insert(18839,37204);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(94207,66032);
    caseQueue.insert(47731,96315);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(58213,13458);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(79653,41693);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(94207, 92305);
    caseQueue.insert(45178,82936);
    caseQueue.insert(5497,47078);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(65485,98345);
    caseQueue.insert(53010,77806);
    caseQueue.insert(41364,2665);
    caseQueue.insert(86782,28463);
    caseQueue.insert(16850,14380);
    caseQueue.insert(27898,51221);
    myResult.push_back(caseQueue.getPriority(94207)); //6
    myResult.push_back(caseQueue.getPriority(94207)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(27898)); //10
    caseQueue.insert(76294,39577);
    caseQueue.insert(4840,20850);
    myResult.push_back(caseQueue.getPriority(86782)); //11
    myResult.push_back(caseQueue.getPriority(4840)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(68594,25725);
    caseQueue.updatePriority(68594, 41747);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(95959,94743);
    caseQueue.insert(5673,87783);
    caseQueue.updatePriority(65485, 82294);
    caseQueue.insert(18893,20705);
    caseQueue.updatePriority(94207, 15525);
    myResult.push_back(caseQueue.getPriority(94207)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(96021,78432);
    caseQueue.insert(29518,42265);
    caseQueue.insert(75833,93101);
    caseQueue.updatePriority(75833, 38817);
    caseQueue.insert(64940,57581);
    caseQueue.insert(11670,26253);
    caseQueue.updatePriority(45178, 11503);
    myResult.push_back(caseQueue.getPriority(96021)); //21
    caseQueue.insert(86412,16351);
    caseQueue.insert(45331,61688);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(45331)); //24
    caseQueue.updatePriority(65485, 95252);
    caseQueue.insert(32480,96243);
    caseQueue.insert(24637,33413);
    myResult.push_back(caseQueue.getPriority(45331)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(67233,56179);
    caseQueue.insert(50307,79954);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(9442,32000);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(38555,59087);
    caseQueue.insert(44004,95957);
    caseQueue.insert(49685,35156);
    caseQueue.updatePriority(65485, 42331);
    caseQueue.insert(58494,76824);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(69941,97706);
    myResult.push_back(caseQueue.getPriority(5673)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(58494)); //33
    caseQueue.updatePriority(44004, 53101);
    caseQueue.updatePriority(50307, 9032);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(53010, 50382);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(67233)); //37
    caseQueue.insert(46450,46167);
    caseQueue.insert(30821,76121);
    caseQueue.insert(83461,18860);
    caseQueue.insert(3375,90146);
    caseQueue.updatePriority(44004, 80442);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(74443,55645);
    caseQueue.insert(11221,67102);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(11221)); //40
    caseQueue.updatePriority(45331, 26989);
    myResult.push_back(caseQueue.getPriority(26923)); //41
    caseQueue.insert(90095,99173);
    caseQueue.updatePriority(69941, 72897);
    caseQueue.insert(25759,73593);
    myResult.push_back(caseQueue.getPriority(32480)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(1581,52883);
    caseQueue.updatePriority(11221, 57646);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(95959, 80405);
    caseQueue.updatePriority(32480, 72215);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(58494)); //48
    myResult.push_back(caseQueue.getPriority(96021)); //49
    myResult.push_back(caseQueue.getPriority(47731)); //50
    caseQueue.insert(28688,98970);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(25759, 5641);
    myResult.push_back(caseQueue.getPriority(3375)); //52
    caseQueue.updatePriority(25759, 31373);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(87359,17116);
    myResult.push_back(caseQueue.getPriority(96021)); //54
    static const int resultListArray[] = {21848, 18839, 58213, 79653, 5497, 92305, 92305, 41364, 16850, 51221, 28463, 20850, 4840, 86782, 76294, 27898, 68594, 15525, 94207, 18893, 78432, 45178, 86412, 61688, 61688, 11670, 24637, 9442, 49685, 75833, 87783, 29518, 76824, 50307, 65485, 53010, 56179, 83461, 46450, 67102, 66293, 96243, 45331, 1581, 74443, 67233, 64940, 76824, 78432, 96315, 11221, 90146, 25759, 78432}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(130): Basarili" << endl;
    else cout << "Case(130): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_131(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 102);

    vector<int> myResult; 
    caseQueue.insert(78949,73274);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(7296,35272);
    caseQueue.insert(7823,12005);
    caseQueue.updatePriority(7296, 11320);
    caseQueue.insert(94693,76185);
    caseQueue.insert(91103,42245);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(7823, 22391);
    caseQueue.updatePriority(7823, 54376);
    caseQueue.insert(68915,42904);
    caseQueue.insert(39835,39637);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(91103)); //4
    caseQueue.insert(94664,91020);
    caseQueue.updatePriority(91103, 21204);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(94664)); //6
    caseQueue.insert(38596,31194);
    myResult.push_back(caseQueue.getPriority(94664)); //7
    caseQueue.updatePriority(94693, 45528);
    myResult.push_back(caseQueue.getPriority(94664)); //8
    myResult.push_back(caseQueue.getPriority(7823)); //9
    caseQueue.insert(88054,31799);
    myResult.push_back(caseQueue.getPriority(88054)); //10
    caseQueue.insert(91979,27367);
    myResult.push_back(caseQueue.getPriority(94664)); //11
    myResult.push_back(caseQueue.getPriority(88054)); //12
    caseQueue.insert(50424,36684);
    caseQueue.updatePriority(38596, 72834);
    caseQueue.updatePriority(94693, 1580);
    caseQueue.insert(84060,77898);
    caseQueue.insert(13116,22281);
    caseQueue.insert(19840,51145);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(7823, 55743);
    caseQueue.insert(87802,11691);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(89019,71666);
    caseQueue.insert(38170,62408);
    myResult.push_back(caseQueue.getPriority(68915)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(38596)); //18
    caseQueue.insert(38181,57234);
    caseQueue.insert(65264,45513);
    caseQueue.insert(86994,4864);
    caseQueue.insert(62939,58287);
    caseQueue.updatePriority(68915, 21727);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(25660,23319);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(65264)); //21
    caseQueue.insert(39274,58661);
    caseQueue.insert(26748,77846);
    caseQueue.updatePriority(39274, 75788);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(19840)); //23
    myResult.push_back(caseQueue.getPriority(88054)); //24
    caseQueue.insert(76243,57036);
    myResult.push_back(caseQueue.getPriority(7823)); //25
    caseQueue.insert(65821,45457);
    caseQueue.insert(92149,34129);
    caseQueue.insert(76163,82433);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(15299,49199);
    caseQueue.updatePriority(89019, 20825);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(25004,6264);
    caseQueue.insert(33958,72925);
    caseQueue.insert(51881,47112);
    caseQueue.insert(31068,19497);
    myResult.push_back(caseQueue.getPriority(33958)); //28
    caseQueue.updatePriority(26748, 73467);
    myResult.push_back(caseQueue.getPriority(19840)); //29
    caseQueue.insert(78723,49365);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(51414,19213);
    myResult.push_back(caseQueue.getPriority(15299)); //32
    caseQueue.insert(62342,62545);
    caseQueue.insert(46563,20080);
    myResult.push_back(caseQueue.getPriority(50424)); //33
    caseQueue.updatePriority(51881, 5184);
    caseQueue.insert(19259,34338);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(26748)); //35
    caseQueue.insert(95551,17400);
    caseQueue.updatePriority(94664, 4860);
    myResult.push_back(caseQueue.getPriority(7823)); //36
    caseQueue.insert(60796,51786);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(76163, 21361);
    caseQueue.insert(30481,63167);
    caseQueue.insert(82774,850);
    myResult.push_back(caseQueue.getPriority(19259)); //38
    caseQueue.updatePriority(46563, 34883);
    myResult.push_back(caseQueue.getPriority(46563)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(79445,83439);
    caseQueue.updatePriority(76243, 11202);
    myResult.push_back(caseQueue.getPriority(62342)); //41
    static const int resultListArray[] = {78949, 7296, 39835, 42245, 91103, 91020, 91020, 91020, 54376, 31799, 91020, 31799, 94693, 13116, 87802, 42904, 91979, 72834, 86994, 68915, 45513, 25660, 51145, 31799, 55743, 88054, 89019, 72925, 51145, 25004, 31068, 49199, 36684, 51881, 73467, 55743, 94664, 34338, 34883, 82774, 62545}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(131): Basarili" << endl;
    else cout << "Case(131): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_132(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 125);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(90234,31226);
    caseQueue.insert(56248,64241);
    myResult.push_back(caseQueue.getPriority(90234)); //2
    caseQueue.insert(47364,90904);
    caseQueue.updatePriority(56248, 81882);
    caseQueue.updatePriority(56248, 5142);
    caseQueue.insert(73910,10747);
    caseQueue.updatePriority(90234, 60654);
    caseQueue.updatePriority(90234, 50467);
    caseQueue.insert(44345,31666);
    caseQueue.insert(65119,98204);
    caseQueue.updatePriority(47364, 66207);
    caseQueue.insert(25178,84437);
    caseQueue.updatePriority(25178, 50769);
    caseQueue.updatePriority(25178, 41014);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(44345, 24854);
    caseQueue.insert(32935,75880);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(65119, 50725);
    caseQueue.insert(61076,27839);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(5603,72184);
    myResult.push_back(caseQueue.getPriority(25178)); //6
    myResult.push_back(caseQueue.getPriority(65119)); //7
    caseQueue.updatePriority(47364, 39169);
    myResult.push_back(caseQueue.getPriority(65119)); //8
    caseQueue.updatePriority(65119, 59237);
    myResult.push_back(caseQueue.getPriority(47364)); //9
    caseQueue.insert(37525,29912);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(65119)); //11
    caseQueue.insert(74562,26067);
    myResult.push_back(caseQueue.getPriority(5603)); //12
    caseQueue.insert(80534,45737);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(65343,1779);
    myResult.push_back(caseQueue.getPriority(65119)); //15
    myResult.push_back(caseQueue.getPriority(65343)); //16
    caseQueue.insert(10623,64070);
    caseQueue.updatePriority(80534, 9651);
    myResult.push_back(caseQueue.getPriority(10623)); //17
    caseQueue.insert(56216,79481);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(25178)); //19
    caseQueue.insert(54808,44579);
    caseQueue.insert(48611,99462);
    caseQueue.insert(65326,74718);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(7418,78488);
    caseQueue.insert(16810,72173);
    myResult.push_back(caseQueue.getPriority(54808)); //22
    caseQueue.updatePriority(54808, 22624);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(10623, 69346);
    caseQueue.insert(57248,75088);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(57248, 3503);
    caseQueue.insert(67284,3950);
    caseQueue.insert(5272,7046);
    caseQueue.insert(74686,79372);
    caseQueue.insert(98503,56723);
    caseQueue.insert(98091,88868);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(16810, 10261);
    caseQueue.updatePriority(48611, 27826);
    caseQueue.insert(90301,70572);
    caseQueue.insert(75647,45233);
    caseQueue.insert(97057,62069);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(13548,67660);
    caseQueue.updatePriority(16810, 39059);
    myResult.push_back(caseQueue.getPriority(32935)); //27
    caseQueue.updatePriority(65119, 72615);
    caseQueue.insert(63105,7717);
    caseQueue.insert(17887,39160);
    caseQueue.insert(46665,29475);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(83468,32652);
    caseQueue.insert(22093,10692);
    caseQueue.insert(58657,79884);
    caseQueue.insert(69401,71160);
    myResult.push_back(caseQueue.getPriority(90301)); //29
    caseQueue.insert(84275,30780);
    myResult.push_back(caseQueue.getPriority(22093)); //30
    caseQueue.updatePriority(5603, 75191);
    caseQueue.insert(79219,62009);
    caseQueue.insert(95531,50063);
    caseQueue.insert(9371,96434);
    caseQueue.insert(9724,63906);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(12004,62947);
    caseQueue.updatePriority(84275, 39879);
    caseQueue.insert(11058,27608);
    caseQueue.insert(20837,84649);
    caseQueue.updatePriority(95531, 75893);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(46665)); //35
    caseQueue.insert(30433,69702);
    caseQueue.insert(19700,67348);
    caseQueue.updatePriority(10623, 61228);
    caseQueue.updatePriority(16810, 62785);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(74686, 90651);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(79219)); //40
    caseQueue.insert(70666,39647);
    myResult.push_back(caseQueue.getPriority(9724)); //41
    caseQueue.insert(54788,37381);
    caseQueue.insert(3571,88683);
    caseQueue.updatePriority(90301, 1997);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(54788)); //43
    caseQueue.insert(89807,83146);
    myResult.push_back(caseQueue.getPriority(20837)); //44
    caseQueue.insert(26036,93920);
    caseQueue.insert(96870,43171);
    caseQueue.updatePriority(9724, 57298);
    static const int resultListArray[] = {-1, 31226, 56248, 73910, 44345, 41014, 50725, 50725, 39169, 61076, 59237, 72184, 74562, 37525, 59237, 1779, 64070, 65343, 41014, 80534, 47364, 44579, 54808, 25178, 57248, 67284, 75880, 5272, 70572, 10692, 63105, 22093, 48611, 11058, 29475, 46665, 83468, 17887, 84275, 62009, 63906, 90301, 37381, 84649}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(132): Basarili" << endl;
    else cout << "Case(132): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_133(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 181);

    vector<int> myResult; 
    caseQueue.insert(34330,13808);
    caseQueue.updatePriority(34330, 90880);
    caseQueue.insert(48258,23136);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(16709, 76715);
    caseQueue.insert(74815,13234);
    caseQueue.updatePriority(74815, 74086);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(48818, 24284);
    myResult.push_back(caseQueue.getPriority(62478)); //4
    caseQueue.insert(49865,35564);
    caseQueue.updatePriority(49865, 80429);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(99567, 63726);
    caseQueue.updatePriority(4636, 91303);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(33578)); //7
    caseQueue.insert(34473,94682);
    caseQueue.insert(34319,62064);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(22892,40858);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(33194,10412);
    caseQueue.insert(55847,5187);
    caseQueue.updatePriority(33194, 85552);
    caseQueue.updatePriority(55847, 42952);
    caseQueue.insert(69096,68766);
    myResult.push_back(caseQueue.getPriority(34473)); //10
    caseQueue.insert(52445,54196);
    caseQueue.insert(49700,86548);
    caseQueue.insert(88691,94232);
    myResult.push_back(caseQueue.getPriority(69096)); //11
    caseQueue.insert(31642,27154);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(10236,49206);
    myResult.push_back(caseQueue.getPriority(55847)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(67663,30352);
    caseQueue.insert(17253,97221);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(17253)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(98657,4734);
    myResult.push_back(caseQueue.getPriority(33194)); //18
    caseQueue.insert(45679,98376);
    caseQueue.updatePriority(98657, 10359);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(33194)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(92777,87197);
    caseQueue.insert(84502,94941);
    myResult.push_back(caseQueue.getPriority(45679)); //22
    caseQueue.insert(12063,70082);
    caseQueue.updatePriority(33194, 74724);
    caseQueue.insert(64547,17936);
    myResult.push_back(caseQueue.getPriority(17253)); //23
    caseQueue.updatePriority(12063, 74358);
    caseQueue.updatePriority(17253, 78446);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(69096)); //25
    caseQueue.insert(95512,13533);
    caseQueue.insert(57237,50449);
    caseQueue.insert(34910,47436);
    caseQueue.insert(91746,52524);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(57237)); //28
    caseQueue.insert(6316,83006);
    caseQueue.insert(4259,70632);
    caseQueue.updatePriority(33194, 60207);
    caseQueue.insert(3601,54634);
    caseQueue.updatePriority(69096, 60471);
    myResult.push_back(caseQueue.getPriority(84502)); //29
    caseQueue.insert(46860,81277);
    myResult.push_back(caseQueue.getPriority(84502)); //30
    caseQueue.insert(32365,51158);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(26838,21192);
    myResult.push_back(caseQueue.getPriority(49700)); //32
    caseQueue.insert(75986,47764);
    caseQueue.updatePriority(69096, 35262);
    caseQueue.updatePriority(6316, 18251);
    myResult.push_back(caseQueue.getPriority(69096)); //33
    caseQueue.insert(80807,53707);
    caseQueue.insert(90762,94789);
    caseQueue.updatePriority(80807, 61048);
    caseQueue.updatePriority(33194, 40630);
    caseQueue.updatePriority(3601, 62251);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(49700)); //35
    caseQueue.updatePriority(26838, 17156);
    caseQueue.updatePriority(46860, 53760);
    caseQueue.insert(20465,68335);
    caseQueue.insert(63627,87571);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(45495,31690);
    myResult.push_back(caseQueue.getPriority(88691)); //37
    myResult.push_back(caseQueue.getPriority(92777)); //38
    caseQueue.insert(23630,32982);
    caseQueue.updatePriority(23630, 5630);
    caseQueue.updatePriority(92777, 35561);
    caseQueue.insert(93627,7454);
    caseQueue.insert(53677,84801);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(84502, 99004);
    caseQueue.updatePriority(32365, 95116);
    caseQueue.insert(86625,17241);
    caseQueue.insert(61071,65290);
    myResult.push_back(caseQueue.getPriority(53677)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(36549,3628);
    caseQueue.insert(8995,34467);
    caseQueue.insert(13211,73956);
    caseQueue.updatePriority(61071, 66705);
    caseQueue.insert(32648,71177);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(53677)); //46
    caseQueue.insert(92861,4515);
    myResult.push_back(caseQueue.getPriority(91746)); //47
    myResult.push_back(caseQueue.getPriority(3601)); //48
    myResult.push_back(caseQueue.getPriority(90762)); //49
    caseQueue.insert(28028,92378);
    caseQueue.updatePriority(12063, 73462);
    myResult.push_back(caseQueue.getPriority(45679)); //50
    caseQueue.insert(19728,88476);
    myResult.push_back(caseQueue.getPriority(90762)); //51
    caseQueue.insert(2256,81094);
    caseQueue.updatePriority(33194, 53607);
    caseQueue.updatePriority(32648, 1818);
    caseQueue.insert(79628,7764);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(24483,96549);
    caseQueue.insert(97838,82362);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(72827,82599);
    myResult.push_back(caseQueue.getPriority(13211)); //54
    caseQueue.updatePriority(69096, 52971);
    myResult.push_back(caseQueue.getPriority(80807)); //55
    myResult.push_back(caseQueue.getPriority(75986)); //56
    caseQueue.insert(82508,49475);
    caseQueue.updatePriority(12063, 7128);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(65302,19390);
    caseQueue.updatePriority(33194, 58119);
    caseQueue.insert(70089,1148);
    caseQueue.insert(84688,1959);
    caseQueue.updatePriority(28028, 59044);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(65302)); //59
    caseQueue.updatePriority(2256, 40435);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(72827, 93810);
    caseQueue.insert(65972,38755);
    caseQueue.updatePriority(3601, 74598);
    myResult.push_back(caseQueue.getPriority(34473)); //61
    myResult.push_back(caseQueue.getPriority(90762)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(63627)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(63627)); //66
    caseQueue.updatePriority(65972, 7824);
    myResult.push_back(caseQueue.getPriority(13211)); //67
    caseQueue.insert(67787,27836);
    caseQueue.updatePriority(33194, 57166);
    caseQueue.insert(36237,70526);
    caseQueue.updatePriority(13211, 52782);
    caseQueue.insert(20652,40889);
    caseQueue.insert(81544,38651);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(74778,44319);
    caseQueue.insert(30240,13481);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(20465)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(22718,49702);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(16905,60857);
    static const int resultListArray[] = {48258, 34330, 74815, -1, 49865, -1, -1, 34319, 22892, 94682, 68766, 31642, 42952, 55847, 67663, 97221, 10236, 85552, 98657, 85552, 52445, 98376, 97221, 64547, 68766, 95512, 34910, 50449, 94941, 94941, 57237, 86548, 35262, 6316, 86548, 26838, 94232, 87197, 23630, 84801, 93627, 36549, 86625, 45495, 8995, 84801, 52524, 62251, 94789, 98376, 94789, 32648, 92861, 73956, 61048, 47764, 12063, 70089, 19390, 84688, 94682, 94789, 79628, 87571, 65302, 87571, 73956, 65972, 30240, 68335, 67787, 92777}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(133): Basarili" << endl;
    else cout << "Case(133): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_134(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 198);

    vector<int> myResult; 
    caseQueue.updatePriority(39273, 86289);
    caseQueue.insert(45514,17895);
    caseQueue.insert(8415,6249);
    caseQueue.insert(8183,45373);
    caseQueue.insert(65284,75292);
    caseQueue.insert(28695,54736);
    caseQueue.updatePriority(65284, 36506);
    myResult.push_back(caseQueue.getPriority(8415)); //1
    caseQueue.updatePriority(8415, 28375);
    myResult.push_back(caseQueue.getPriority(65284)); //2
    myResult.push_back(caseQueue.getPriority(8415)); //3
    caseQueue.insert(51078,39794);
    myResult.push_back(caseQueue.getPriority(65284)); //4
    caseQueue.insert(62141,23224);
    caseQueue.insert(70426,57251);
    caseQueue.insert(27098,99544);
    myResult.push_back(caseQueue.getPriority(65284)); //5
    caseQueue.insert(26624,87020);
    caseQueue.updatePriority(28695, 10403);
    myResult.push_back(caseQueue.getPriority(27098)); //6
    caseQueue.updatePriority(62141, 63405);
    caseQueue.insert(84305,37413);
    caseQueue.insert(32943,14525);
    caseQueue.updatePriority(65284, 57568);
    caseQueue.updatePriority(28695, 87012);
    caseQueue.insert(41761,24996);
    myResult.push_back(caseQueue.getPriority(62141)); //7
    myResult.push_back(caseQueue.getPriority(65284)); //8
    myResult.push_back(caseQueue.getPriority(70426)); //9
    caseQueue.updatePriority(27098, 7234);
    myResult.push_back(caseQueue.getPriority(41761)); //10
    caseQueue.updatePriority(32943, 14062);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(87200,48737);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(87200, 92550);
    myResult.push_back(caseQueue.getPriority(28695)); //15
    caseQueue.insert(2781,18879);
    caseQueue.updatePriority(65284, 11445);
    caseQueue.updatePriority(8183, 2999);
    caseQueue.updatePriority(2781, 91136);
    myResult.push_back(caseQueue.getPriority(28695)); //16
    caseQueue.updatePriority(2781, 11776);
    caseQueue.updatePriority(65284, 47677);
    myResult.push_back(caseQueue.getPriority(84305)); //17
    caseQueue.updatePriority(84305, 41100);
    caseQueue.insert(48573,7295);
    caseQueue.updatePriority(8183, 93195);
    caseQueue.insert(21076,42633);
    myResult.push_back(caseQueue.getPriority(84305)); //18
    caseQueue.insert(1901,90604);
    caseQueue.insert(93749,61569);
    myResult.push_back(caseQueue.getPriority(28695)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(1901, 12731);
    caseQueue.insert(44823,30975);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(93749)); //23
    caseQueue.insert(18037,30663);
    myResult.push_back(caseQueue.getPriority(93749)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(18037)); //26
    caseQueue.insert(6038,74177);
    myResult.push_back(caseQueue.getPriority(21076)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(76869,53939);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(65284, 75588);
    caseQueue.insert(39566,34480);
    caseQueue.updatePriority(8183, 65536);
    caseQueue.insert(2610,44867);
    caseQueue.insert(39471,27979);
    caseQueue.insert(50560,24035);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(58098,55321);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(72510,37376);
    caseQueue.updatePriority(84305, 72586);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(65284)); //35
    caseQueue.updatePriority(65284, 683);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(70426, 20676);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(8183)); //38
    caseQueue.updatePriority(84305, 8764);
    caseQueue.insert(13697,93622);
    myResult.push_back(caseQueue.getPriority(2610)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(62141, 18162);
    caseQueue.updatePriority(13697, 94345);
    caseQueue.insert(5438,16966);
    caseQueue.updatePriority(62141, 93952);
    caseQueue.updatePriority(62141, 28566);
    myResult.push_back(caseQueue.getPriority(26624)); //41
    caseQueue.insert(88104,12351);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(21076, 70674);
    caseQueue.updatePriority(87200, 54557);
    caseQueue.insert(57888,4961);
    caseQueue.insert(24768,75266);
    myResult.push_back(caseQueue.getPriority(2610)); //45
    caseQueue.insert(11768,80706);
    caseQueue.insert(92861,84256);
    caseQueue.insert(89379,32810);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(55170,64243);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(8183)); //48
    myResult.push_back(caseQueue.getPriority(87200)); //49
    caseQueue.updatePriority(87200, 15799);
    caseQueue.insert(4715,62648);
    caseQueue.insert(5452,48735);
    myResult.push_back(caseQueue.getPriority(2610)); //50
    myResult.push_back(caseQueue.getPriority(28695)); //51
    caseQueue.insert(48656,82816);
    myResult.push_back(caseQueue.getPriority(4715)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(26800,99635);
    caseQueue.insert(84266,77239);
    caseQueue.insert(53282,51962);
    caseQueue.updatePriority(26624, 47577);
    caseQueue.updatePriority(76869, 28368);
    myResult.push_back(caseQueue.getPriority(4715)); //54
    caseQueue.updatePriority(24768, 7778);
    caseQueue.insert(92007,12805);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(80098,10922);
    caseQueue.updatePriority(92861, 81477);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(1691,20180);
    caseQueue.insert(21518,2761);
    caseQueue.insert(54357,88299);
    caseQueue.insert(82914,30668);
    caseQueue.insert(25356,49142);
    myResult.push_back(caseQueue.getPriority(11768)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(11077,24202);
    caseQueue.updatePriority(4715, 38273);
    caseQueue.insert(1233,22254);
    caseQueue.insert(974,73260);
    caseQueue.updatePriority(55170, 8376);
    caseQueue.updatePriority(93749, 22730);
    myResult.push_back(caseQueue.getPriority(6038)); //59
    caseQueue.insert(46051,43702);
    caseQueue.insert(83752,11180);
    caseQueue.insert(53391,91550);
    caseQueue.updatePriority(26624, 3865);
    caseQueue.updatePriority(26800, 35732);
    caseQueue.insert(23677,48638);
    myResult.push_back(caseQueue.getPriority(48656)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(17246,68138);
    caseQueue.updatePriority(53391, 95065);
    caseQueue.updatePriority(46051, 94585);
    caseQueue.insert(61073,54583);
    caseQueue.insert(57932,55481);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(28695, 43553);
    caseQueue.insert(65050,45779);
    caseQueue.insert(93753,23387);
    myResult.push_back(caseQueue.getPriority(11768)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(92861, 799);
    caseQueue.insert(82057,61373);
    caseQueue.insert(22829,42681);
    caseQueue.updatePriority(25356, 53415);
    caseQueue.insert(28828,92000);
    caseQueue.updatePriority(57932, 93888);
    caseQueue.insert(52151,41567);
    caseQueue.insert(81249,59654);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.updatePriority(76869, 93736);
    caseQueue.insert(35546,74239);
    myResult.push_back(caseQueue.getPriority(11768)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(35546)); //69
    caseQueue.updatePriority(26800, 12514);
    myResult.push_back(caseQueue.getPriority(28695)); //70
    caseQueue.updatePriority(6038, 60210);
    caseQueue.insert(94698,33763);
    caseQueue.updatePriority(82914, 22437);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(11483,6905);
    caseQueue.updatePriority(28828, 17456);
    myResult.push_back(caseQueue.getPriority(974)); //72
    caseQueue.updatePriority(82057, 97134);
    caseQueue.updatePriority(53391, 528);
    caseQueue.insert(72100,15914);
    caseQueue.insert(4480,69566);
    static const int resultListArray[] = {6249, 36506, 28375, 36506, 36506, 99544, 63405, 57568, 57251, 24996, 27098, 32943, 45514, 41761, 87012, 87012, 37413, 41100, 87012, 48573, 2781, 1901, 61569, 61569, 8415, 30663, 42633, 18037, 44823, 50560, 39471, 39566, 72510, 51078, 75588, 65284, 70426, 65536, 44867, 84305, 87020, 88104, 5438, 62141, 44867, 57888, 89379, 65536, 54557, 44867, 87012, 62648, 87200, 62648, 24768, 80098, 80706, 21518, 74177, 82816, 26624, 55170, 83752, 80706, 92007, 92861, 80706, 1691, 74239, 43553, 26800, 73260}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(134): Basarili" << endl;
    else cout << "Case(134): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_135(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 214);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(69599,32645);
    caseQueue.updatePriority(69599, 54225);
    caseQueue.insert(1792,88262);
    caseQueue.insert(49661,3121);
    caseQueue.insert(11270,36211);
    caseQueue.updatePriority(11270, 58368);
    myResult.push_back(caseQueue.getPriority(69599)); //2
    caseQueue.insert(4474,3347);
    caseQueue.updatePriority(49661, 26675);
    myResult.push_back(caseQueue.getPriority(4474)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(81455,21314);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(9040,31229);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(11270)); //8
    myResult.push_back(caseQueue.getPriority(69599)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(73657,14804);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(16761,95852);
    myResult.push_back(caseQueue.getPriority(16761)); //12
    myResult.push_back(caseQueue.getPriority(11270)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(1792, 13613);
    myResult.push_back(caseQueue.getPriority(1792)); //15
    myResult.push_back(caseQueue.getPriority(16761)); //16
    caseQueue.updatePriority(1792, 44024);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(85221,88083);
    caseQueue.insert(27110,9953);
    caseQueue.insert(20426,55773);
    caseQueue.insert(66667,55171);
    caseQueue.insert(97213,21166);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(44563,42429);
    myResult.push_back(caseQueue.getPriority(85221)); //19
    caseQueue.insert(41275,21034);
    caseQueue.insert(69954,88609);
    caseQueue.updatePriority(69954, 96412);
    myResult.push_back(caseQueue.getPriority(69954)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(85221, 11021);
    myResult.push_back(caseQueue.getPriority(69954)); //22
    caseQueue.updatePriority(20426, 82998);
    caseQueue.updatePriority(44563, 64526);
    caseQueue.insert(58689,91298);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(96739,39328);
    caseQueue.updatePriority(97213, 85155);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(16761)); //25
    caseQueue.insert(97242,22494);
    caseQueue.insert(22158,42043);
    myResult.push_back(caseQueue.getPriority(44563)); //26
    myResult.push_back(caseQueue.getPriority(58689)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(69954)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(35318,75954);
    myResult.push_back(caseQueue.getPriority(69954)); //31
    caseQueue.insert(62262,25770);
    caseQueue.insert(72906,18283);
    myResult.push_back(caseQueue.getPriority(72906)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(41616,45249);
    caseQueue.updatePriority(44563, 21405);
    caseQueue.insert(38779,59724);
    myResult.push_back(caseQueue.getPriority(69954)); //35
    caseQueue.insert(46296,27288);
    caseQueue.insert(57563,48808);
    caseQueue.insert(8474,88596);
    caseQueue.insert(83809,81441);
    caseQueue.insert(32806,24498);
    myResult.push_back(caseQueue.getPriority(97213)); //36
    caseQueue.insert(97049,97777);
    myResult.push_back(caseQueue.getPriority(66667)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(50834,83221);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(38779)); //41
    caseQueue.insert(85683,34696);
    caseQueue.updatePriority(50834, 40812);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(50834)); //43
    caseQueue.insert(19118,18394);
    myResult.push_back(caseQueue.getPriority(83809)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(19856,6889);
    caseQueue.updatePriority(97049, 99721);
    caseQueue.insert(43704,93845);
    myResult.push_back(caseQueue.getPriority(19856)); //46
    caseQueue.updatePriority(57563, 23803);
    myResult.push_back(caseQueue.getPriority(66667)); //47
    caseQueue.insert(69809,98607);
    myResult.push_back(caseQueue.getPriority(43704)); //48
    caseQueue.updatePriority(57563, 6568);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(54092,58974);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(97213)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(69525,63712);
    myResult.push_back(caseQueue.getPriority(16761)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(77293,39545);
    caseQueue.insert(9177,89751);
    myResult.push_back(caseQueue.getPriority(35318)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(43704, 73504);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(83809)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(69954)); //64
    caseQueue.updatePriority(97213, 27799);
    caseQueue.updatePriority(97213, 62215);
    myResult.push_back(caseQueue.getPriority(58689)); //65
    caseQueue.updatePriority(9177, 51205);
    caseQueue.insert(39633,67738);
    caseQueue.insert(22559,71019);
    caseQueue.insert(96482,75253);
    caseQueue.insert(81919,22292);
    myResult.push_back(caseQueue.getPriority(81919)); //66
    caseQueue.insert(84702,33722);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(79376,35750);
    caseQueue.insert(53970,59670);
    caseQueue.insert(75515,884);
    caseQueue.insert(92422,78654);
    caseQueue.insert(42033,48669);
    caseQueue.updatePriority(69809, 96683);
    caseQueue.updatePriority(22559, 27115);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(97213)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(69954, 68222);
    myResult.push_back(caseQueue.getPriority(97213)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(83809, 54138);
    caseQueue.insert(5115,93694);
    myResult.push_back(caseQueue.getPriority(8474)); //73
    caseQueue.insert(39087,87365);
    caseQueue.insert(19022,5311);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.updatePriority(39087, 13658);
    myResult.push_back(caseQueue.getPriority(16761)); //75
    caseQueue.updatePriority(92422, 12276);
    caseQueue.insert(50424,31157);
    caseQueue.insert(19278,67037);
    caseQueue.updatePriority(20426, 88419);
    caseQueue.insert(30885,53866);
    caseQueue.updatePriority(96482, 28746);
    myResult.push_back(caseQueue.getPriority(69809)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(50424)); //78
    caseQueue.insert(77152,86887);
    caseQueue.updatePriority(96482, 65651);
    caseQueue.insert(27455,77042);
    caseQueue.insert(68040,19300);
    caseQueue.updatePriority(16761, 50681);
    caseQueue.updatePriority(97213, 80612);
    myResult.push_back(caseQueue.getPriority(27455)); //79
    caseQueue.updatePriority(97213, 71790);
    myResult.push_back(caseQueue.getPriority(42033)); //80
    caseQueue.insert(35805,90380);
    myResult.push_back(caseQueue.getPriority(16761)); //81
    caseQueue.insert(98137,17603);
    caseQueue.insert(70910,37635);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.getPriority(79376)); //83
    myResult.push_back(caseQueue.getPriority(83809)); //84
    caseQueue.insert(91767,51027);
    caseQueue.insert(49490,16849);
    caseQueue.insert(35146,88787);
    caseQueue.insert(42489,81515);
    caseQueue.insert(58125,43686);
    myResult.push_back(caseQueue.getPriority(69809)); //85
    caseQueue.updatePriority(77152, 60139);
    myResult.push_back(caseQueue.getPriority(35146)); //86
    caseQueue.updatePriority(77152, 74770);
    caseQueue.insert(96228,51671);
    myResult.push_back(caseQueue.getPriority(79376)); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(51494,26904);
    caseQueue.insert(82941,74610);
    myResult.push_back(caseQueue.getPriority(16761)); //89
    caseQueue.insert(19590,97059);
    caseQueue.insert(69879,44481);
    caseQueue.insert(1231,28482);
    caseQueue.insert(42941,50360);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.updatePriority(77152, 81242);
    caseQueue.updatePriority(19278, 81530);
    caseQueue.updatePriority(97049, 63029);
    caseQueue.updatePriority(39633, 54447);
    myResult.push_back(caseQueue.getPriority(35146)); //91
    caseQueue.updatePriority(51494, 38974);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(30301,62662);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(28742,46549);
    myResult.push_back(caseQueue.getPriority(51494)); //94
    caseQueue.insert(71920,47441);
    myResult.push_back(caseQueue.getPriority(69809)); //95
    caseQueue.updatePriority(20426, 7549);
    caseQueue.insert(6578,70003);
    static const int resultListArray[] = {-1, 54225, 3347, 4474, 81455, 49661, 9040, 58368, 54225, 69599, 73657, 95852, 58368, 11270, 13613, 95852, 1792, 27110, 88083, 96412, 41275, 96412, 85221, 96739, 95852, 64526, 91298, 97242, 96412, 22158, 96412, 18283, 72906, 62262, 96412, 85155, 55171, 44563, 32806, 46296, 59724, 85683, 40812, 81441, 19118, 6889, 55171, 93845, 57563, 19856, 85155, 50834, 95852, 41616, 66667, 75954, 77293, 54092, 38779, 69525, 81441, 43704, 35318, 96412, 91298, 22292, 81919, 75515, 62215, 22559, 62215, 84702, 88596, 19022, 95852, 96683, 92422, 31157, 77042, 48669, 50681, 39087, 35750, 54138, 96683, 88787, 35750, 49490, 50681, 98137, 88787, 68040, 1231, 38974, 96683}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(135): Basarili" << endl;
    else cout << "Case(135): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_136(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 228);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(84130)); //1
    caseQueue.updatePriority(64865, 2031);
    myResult.push_back(caseQueue.getPriority(95868)); //2
    caseQueue.insert(31498,91312);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(64958,29963);
    caseQueue.insert(93287,97109);
    myResult.push_back(caseQueue.getPriority(64958)); //4
    caseQueue.updatePriority(64958, 96632);
    caseQueue.updatePriority(64958, 31115);
    caseQueue.updatePriority(64958, 17289);
    caseQueue.updatePriority(64958, 97425);
    caseQueue.updatePriority(93287, 72293);
    myResult.push_back(caseQueue.getPriority(64958)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(64958, 56961);
    myResult.push_back(caseQueue.getPriority(64958)); //7
    myResult.push_back(caseQueue.getPriority(64958)); //8
    myResult.push_back(caseQueue.getPriority(64958)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(4312,7989);
    caseQueue.insert(73317,75789);
    myResult.push_back(caseQueue.getPriority(4312)); //12
    caseQueue.insert(48159,95213);
    caseQueue.insert(49686,17319);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(99017,85818);
    caseQueue.updatePriority(49686, 71663);
    caseQueue.insert(78373,85219);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(99017)); //16
    caseQueue.insert(49835,64818);
    caseQueue.insert(99258,23728);
    myResult.push_back(caseQueue.getPriority(48159)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(46688,76959);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(46688)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(99017)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(99017, 95100);
    myResult.push_back(caseQueue.getPriority(99017)); //24
    caseQueue.insert(384,29171);
    myResult.push_back(caseQueue.getPriority(48159)); //25
    caseQueue.updatePriority(384, 10374);
    myResult.push_back(caseQueue.getPriority(99017)); //26
    caseQueue.updatePriority(48159, 99045);
    caseQueue.insert(3927,8785);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(99017)); //29
    caseQueue.insert(71158,87035);
    caseQueue.insert(86341,34759);
    caseQueue.updatePriority(99017, 16273);
    caseQueue.updatePriority(86341, 59143);
    caseQueue.updatePriority(86341, 47483);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(48159, 56006);
    caseQueue.insert(90605,18255);
    caseQueue.insert(4133,87554);
    caseQueue.insert(76653,61758);
    caseQueue.insert(57429,57533);
    caseQueue.updatePriority(57429, 13644);
    caseQueue.updatePriority(76653, 42633);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(76653, 92202);
    myResult.push_back(caseQueue.getPriority(48159)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(4133)); //36
    caseQueue.insert(88697,78806);
    caseQueue.insert(99265,55539);
    caseQueue.insert(2193,5602);
    caseQueue.updatePriority(4133, 17438);
    caseQueue.insert(78884,95659);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(48159, 25889);
    caseQueue.insert(35745,81712);
    caseQueue.insert(63442,45903);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(80313,69830);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(78884, 81828);
    caseQueue.insert(91522,20177);
    caseQueue.insert(57978,19322);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(35745)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(76653, 24492);
    myResult.push_back(caseQueue.getPriority(99265)); //43
    myResult.push_back(caseQueue.getPriority(76653)); //44
    caseQueue.insert(37804,70044);
    caseQueue.insert(1480,12083);
    caseQueue.updatePriority(99265, 18994);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(88697)); //46
    caseQueue.insert(29946,36006);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(41556,6240);
    myResult.push_back(caseQueue.getPriority(80313)); //48
    caseQueue.insert(89938,77131);
    myResult.push_back(caseQueue.getPriority(78884)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(62050,37834);
    caseQueue.updatePriority(62050, 59501);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(35745)); //52
    caseQueue.updatePriority(89938, 46372);
    myResult.push_back(caseQueue.getPriority(63442)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(61691,87247);
    caseQueue.insert(60599,92959);
    caseQueue.insert(4030,48069);
    caseQueue.insert(23104,5928);
    caseQueue.insert(97048,40114);
    caseQueue.updatePriority(97048, 78608);
    caseQueue.insert(12036,97097);
    caseQueue.insert(92750,65442);
    caseQueue.updatePriority(12036, 74740);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(97048, 65693);
    caseQueue.updatePriority(88697, 59036);
    caseQueue.insert(87836,11511);
    caseQueue.insert(14650,40068);
    caseQueue.updatePriority(97048, 5790);
    myResult.push_back(caseQueue.getPriority(14650)); //57
    caseQueue.insert(84767,76632);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(80313)); //59
    caseQueue.insert(59347,28499);
    myResult.push_back(caseQueue.getPriority(14650)); //60
    caseQueue.insert(6232,8727);
    caseQueue.updatePriority(62050, 52436);
    caseQueue.insert(5352,48498);
    caseQueue.updatePriority(35745, 82762);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(33771,31088);
    caseQueue.updatePriority(59347, 79224);
    caseQueue.insert(75665,77798);
    caseQueue.insert(61834,49490);
    myResult.push_back(caseQueue.getPriority(61691)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(85766,365);
    caseQueue.insert(15125,32660);
    myResult.push_back(caseQueue.getPriority(12036)); //65
    caseQueue.updatePriority(88697, 1227);
    myResult.push_back(caseQueue.getPriority(60599)); //66
    caseQueue.insert(24359,52588);
    caseQueue.insert(50093,29103);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(76952,38043);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(51769,14623);
    caseQueue.insert(42379,38487);
    caseQueue.updatePriority(78884, 68692);
    caseQueue.updatePriority(78884, 62753);
    caseQueue.insert(30276,15915);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(24359)); //72
    myResult.push_back(caseQueue.getPriority(5352)); //73
    caseQueue.insert(3242,90123);
    caseQueue.updatePriority(12036, 20043);
    myResult.push_back(caseQueue.getPriority(89938)); //74
    caseQueue.updatePriority(60599, 28140);
    caseQueue.insert(20326,49840);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(79666,25561);
    caseQueue.insert(59079,97959);
    caseQueue.insert(1696,25196);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(4030)); //79
    caseQueue.insert(55939,76092);
    caseQueue.updatePriority(59079, 67420);
    caseQueue.insert(7811,34910);
    caseQueue.updatePriority(59347, 77042);
    myResult.push_back(caseQueue.getPriority(89938)); //80
    caseQueue.insert(15168,98652);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(80313, 7299);
    caseQueue.insert(81965,5931);
    caseQueue.insert(30790,83618);
    myResult.push_back(caseQueue.getPriority(20326)); //83
    caseQueue.updatePriority(61691, 26835);
    caseQueue.insert(83175,78538);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(49790,88095);
    caseQueue.updatePriority(89938, 10380);
    myResult.push_back(caseQueue.getPriority(55939)); //85
    myResult.push_back(caseQueue.getPriority(55939)); //86
    caseQueue.insert(63874,16403);
    myResult.push_back(caseQueue.getPriority(5352)); //87
    caseQueue.updatePriority(30790, 89806);
    caseQueue.insert(42951,34580);
    myResult.push_back(caseQueue.getPriority(59079)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(36667,75698);
    caseQueue.updatePriority(30790, 80237);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(68446,7801);
    myResult.push_back(caseQueue.deleteMin()); //91
    myResult.push_back(caseQueue.getPriority(42379)); //92
    myResult.push_back(caseQueue.getPriority(78884)); //93
    caseQueue.insert(30488,8735);
    myResult.push_back(caseQueue.getPriority(59347)); //94
    caseQueue.insert(70569,15579);
    caseQueue.updatePriority(92750, 54357);
    caseQueue.insert(91406,27633);
    myResult.push_back(caseQueue.getPriority(55939)); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.getPriority(42951)); //97
    caseQueue.updatePriority(76952, 53221);
    myResult.push_back(caseQueue.deleteMin()); //98
    myResult.push_back(caseQueue.getPriority(36667)); //99
    myResult.push_back(caseQueue.deleteMin()); //100
    caseQueue.insert(77793,70148);
    myResult.push_back(caseQueue.deleteMin()); //101
    myResult.push_back(caseQueue.deleteMin()); //102
    static const int resultListArray[] = {-1, -1, 31498, 29963, 97425, 93287, 56961, 56961, 56961, 64958, -1, 7989, 4312, 49686, 73317, 85818, 95213, 99258, 49835, 76959, 46688, 85818, 78373, 95100, 95213, 95100, 3927, 384, 95100, 99017, 86341, 71158, 57429, 56006, 90605, 87554, 2193, 4133, 48159, 57978, 81712, 91522, 55539, 24492, 1480, 78806, 99265, 69830, 81828, 41556, 76653, 81712, 45903, 29946, 63442, 23104, 40068, 97048, 69830, 40068, 6232, 87247, 87836, 33771, 74740, 92959, 85766, 88697, 50093, 15125, 51769, 52588, 48498, 46372, 30276, 12036, 1696, 79666, 48069, 46372, 60599, 7811, 49840, 81965, 76092, 76092, 48498, 67420, 80313, 89938, 68446, 38487, 62753, 77042, 76092, 30488, 34580, 70569, 75698, 63874, 61691, 91406}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(136): Basarili" << endl;
    else cout << "Case(136): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_137(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 137);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(50159)); //1
    caseQueue.insert(52386,57516);
    myResult.push_back(caseQueue.getPriority(52386)); //2
    caseQueue.insert(56227,12381);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(52386)); //4
    caseQueue.insert(48615,24627);
    caseQueue.updatePriority(52386, 35462);
    caseQueue.insert(92218,19530);
    caseQueue.updatePriority(48615, 35675);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(48615, 5743);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(52386, 48610);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(27706)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(6075,60176);
    caseQueue.insert(18137,56533);
    caseQueue.insert(48882,57420);
    myResult.push_back(caseQueue.getPriority(6075)); //11
    caseQueue.insert(7645,11805);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(48882)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(6075, 25595);
    myResult.push_back(caseQueue.getPriority(48882)); //15
    caseQueue.insert(12631,38627);
    caseQueue.updatePriority(12631, 23148);
    caseQueue.insert(35429,70679);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(24706,41737);
    caseQueue.insert(1163,90351);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(73316,46350);
    myResult.push_back(caseQueue.getPriority(73316)); //18
    caseQueue.insert(79505,60412);
    caseQueue.insert(26711,88553);
    caseQueue.updatePriority(48882, 94087);
    caseQueue.insert(4192,22785);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(56107,57184);
    caseQueue.insert(47244,29059);
    myResult.push_back(caseQueue.getPriority(26711)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(55531,49839);
    caseQueue.insert(14293,33604);
    caseQueue.updatePriority(79505, 54279);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(40615,96056);
    caseQueue.updatePriority(26711, 68633);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(26711, 78256);
    caseQueue.updatePriority(1163, 40689);
    myResult.push_back(caseQueue.getPriority(55531)); //25
    myResult.push_back(caseQueue.getPriority(55531)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(26711)); //28
    caseQueue.updatePriority(40615, 7661);
    myResult.push_back(caseQueue.getPriority(35429)); //29
    myResult.push_back(caseQueue.getPriority(48882)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(82491,50253);
    caseQueue.insert(86211,26847);
    myResult.push_back(caseQueue.getPriority(26711)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(24902,77434);
    caseQueue.updatePriority(24902, 60268);
    myResult.push_back(caseQueue.getPriority(35429)); //34
    caseQueue.updatePriority(55531, 98217);
    caseQueue.updatePriority(35429, 78026);
    caseQueue.insert(56070,22514);
    caseQueue.insert(85271,16248);
    caseQueue.updatePriority(24902, 1207);
    myResult.push_back(caseQueue.getPriority(79505)); //35
    caseQueue.insert(23082,33138);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(56070)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(1265,24189);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(86412,11250);
    caseQueue.insert(82424,37290);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(55531, 67970);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(35429)); //42
    caseQueue.insert(85698,49162);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(79505, 42288);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(48882)); //45
    caseQueue.insert(56199,46394);
    caseQueue.insert(98681,55860);
    caseQueue.insert(90617,50974);
    caseQueue.insert(96924,93103);
    caseQueue.insert(57564,13768);
    caseQueue.insert(26552,55628);
    caseQueue.insert(60166,10335);
    caseQueue.insert(81227,46740);
    caseQueue.insert(71981,14195);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(50533,40512);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(87022,9661);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(19429,16880);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(53226,94985);
    caseQueue.insert(8624,96976);
    myResult.push_back(caseQueue.getPriority(85698)); //50
    caseQueue.updatePriority(56107, 49857);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(77858,18535);
    caseQueue.insert(57672,5099);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(51271,99657);
    caseQueue.insert(91509,31738);
    myResult.push_back(caseQueue.getPriority(77858)); //53
    caseQueue.insert(75974,20702);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(10929,11490);
    caseQueue.insert(9845,92705);
    caseQueue.insert(75870,19203);
    caseQueue.insert(25409,50866);
    caseQueue.insert(72064,95550);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(90008,41984);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(56199, 37867);
    myResult.push_back(caseQueue.getPriority(72064)); //59
    myResult.push_back(caseQueue.getPriority(26552)); //60
    myResult.push_back(caseQueue.getPriority(51271)); //61
    static const int resultListArray[] = {-1, 57516, 56227, 57516, 92218, 48615, 52386, -1, -1, -1, 60176, 7645, 57420, 18137, 57420, 12631, 6075, 46350, 4192, 88553, 47244, 14293, 24706, 73316, 49839, 49839, 1163, 78256, 70679, 94087, 40615, 78256, 86211, 70679, 54279, 24902, 22514, 85271, 56070, 86412, 1265, 78026, 23082, 82424, 94087, 60166, 57564, 87022, 71981, 49162, 19429, 57672, 18535, 77858, 10929, 75870, 75974, 91509, 95550, 55628, 99657}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(137): Basarili" << endl;
    else cout << "Case(137): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_138(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 109);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(72954, 81312);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(55960,51990);
    myResult.push_back(caseQueue.getPriority(55960)); //3
    caseQueue.updatePriority(55960, 84988);
    myResult.push_back(caseQueue.getPriority(55960)); //4
    myResult.push_back(caseQueue.getPriority(55960)); //5
    caseQueue.updatePriority(55960, 76204);
    caseQueue.insert(36611,21688);
    caseQueue.insert(30280,6237);
    myResult.push_back(caseQueue.getPriority(36611)); //6
    caseQueue.updatePriority(30280, 99938);
    caseQueue.updatePriority(36611, 99335);
    caseQueue.insert(82211,11168);
    caseQueue.insert(54756,12745);
    myResult.push_back(caseQueue.getPriority(82211)); //7
    myResult.push_back(caseQueue.getPriority(30280)); //8
    myResult.push_back(caseQueue.getPriority(30280)); //9
    myResult.push_back(caseQueue.getPriority(82211)); //10
    caseQueue.insert(15696,21105);
    caseQueue.insert(65251,86335);
    caseQueue.updatePriority(82211, 11051);
    caseQueue.updatePriority(54756, 75340);
    caseQueue.insert(58431,31535);
    caseQueue.insert(66569,57522);
    caseQueue.insert(52207,43879);
    myResult.push_back(caseQueue.getPriority(36611)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(58040,75927);
    caseQueue.updatePriority(66569, 65188);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(98549,14063);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(66569)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(65251)); //19
    caseQueue.insert(31461,29945);
    caseQueue.updatePriority(54756, 44336);
    caseQueue.insert(16219,59374);
    myResult.push_back(caseQueue.getPriority(31461)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(74031,13209);
    caseQueue.insert(47608,79503);
    caseQueue.updatePriority(74031, 28924);
    caseQueue.insert(55555,66319);
    myResult.push_back(caseQueue.getPriority(55555)); //22
    caseQueue.updatePriority(74031, 56957);
    caseQueue.insert(91009,51185);
    caseQueue.updatePriority(36611, 25895);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(16219, 22343);
    caseQueue.updatePriority(16219, 37134);
    caseQueue.updatePriority(16219, 10334);
    caseQueue.insert(55379,82352);
    caseQueue.updatePriority(16219, 27146);
    myResult.push_back(caseQueue.getPriority(74031)); //24
    caseQueue.insert(93876,27950);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(58040, 87505);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(38646,14074);
    myResult.push_back(caseQueue.getPriority(55960)); //27
    caseQueue.insert(23298,57582);
    myResult.push_back(caseQueue.getPriority(91009)); //28
    caseQueue.updatePriority(55379, 52628);
    caseQueue.insert(75683,2717);
    myResult.push_back(caseQueue.getPriority(91009)); //29
    myResult.push_back(caseQueue.getPriority(65251)); //30
    caseQueue.insert(61700,53065);
    myResult.push_back(caseQueue.getPriority(55555)); //31
    myResult.push_back(caseQueue.getPriority(58040)); //32
    caseQueue.insert(17648,23079);
    caseQueue.insert(83084,97380);
    caseQueue.updatePriority(30280, 92124);
    caseQueue.insert(22147,49509);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(13728,50553);
    caseQueue.updatePriority(55555, 91313);
    caseQueue.updatePriority(74031, 64153);
    caseQueue.updatePriority(47608, 1880);
    caseQueue.insert(56862,56070);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(23298)); //36
    myResult.push_back(caseQueue.getPriority(83084)); //37
    caseQueue.insert(93740,89603);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(13728, 45166);
    myResult.push_back(caseQueue.getPriority(83084)); //39
    myResult.push_back(caseQueue.getPriority(22147)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(61700)); //42
    myResult.push_back(caseQueue.getPriority(56862)); //43
    caseQueue.updatePriority(91009, 70593);
    caseQueue.insert(57995,12896);
    caseQueue.insert(77111,27569);
    caseQueue.updatePriority(55379, 89005);
    caseQueue.updatePriority(13728, 20975);
    caseQueue.insert(45413,46492);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(50234,28151);
    caseQueue.updatePriority(58040, 91546);
    caseQueue.insert(54924,40918);
    caseQueue.insert(81889,21068);
    myResult.push_back(caseQueue.getPriority(58040)); //46
    static const int resultListArray[] = {-1, -1, 51990, 84988, 84988, 21688, 11168, 99938, 99938, 11168, 99335, 82211, 15696, 58431, 52207, 98549, 65188, 66569, 86335, 29945, 31461, 66319, 36611, 56957, 16219, 93876, 76204, 51185, 51185, 86335, 66319, 87505, 75683, 47608, 38646, 57582, 97380, 17648, 97380, 49509, 54756, 53065, 56070, 57995, 13728, 91546}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(138): Basarili" << endl;
    else cout << "Case(138): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_139(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 143);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(94680)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(35046,78528);
    caseQueue.insert(89966,96345);
    caseQueue.updatePriority(89966, 36335);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(35046, 91590);
    caseQueue.insert(75388,49300);
    caseQueue.insert(37796,864);
    caseQueue.insert(78113,48100);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(78113)); //5
    caseQueue.insert(74589,40435);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(35046)); //7
    caseQueue.insert(24270,19225);
    caseQueue.insert(14552,79181);
    caseQueue.updatePriority(24270, 15889);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(16647,99814);
    caseQueue.updatePriority(75388, 71242);
    myResult.push_back(caseQueue.getPriority(78113)); //9
    myResult.push_back(caseQueue.getPriority(35046)); //10
    myResult.push_back(caseQueue.getPriority(35046)); //11
    caseQueue.insert(86276,67910);
    myResult.push_back(caseQueue.getPriority(14552)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(75388, 48203);
    myResult.push_back(caseQueue.getPriority(14552)); //14
    caseQueue.insert(70785,87920);
    caseQueue.insert(40817,94098);
    caseQueue.insert(65813,48412);
    caseQueue.updatePriority(86276, 26233);
    caseQueue.insert(29330,62439);
    caseQueue.updatePriority(75388, 3559);
    caseQueue.insert(56862,87792);
    caseQueue.updatePriority(16647, 72755);
    caseQueue.insert(16724,71223);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(86276)); //16
    caseQueue.insert(96844,87114);
    myResult.push_back(caseQueue.getPriority(29330)); //17
    caseQueue.insert(83448,4634);
    caseQueue.updatePriority(35046, 74009);
    caseQueue.insert(32658,9732);
    myResult.push_back(caseQueue.getPriority(83448)); //18
    caseQueue.updatePriority(86276, 81366);
    myResult.push_back(caseQueue.getPriority(16647)); //19
    caseQueue.updatePriority(32658, 92092);
    caseQueue.insert(63372,10341);
    caseQueue.insert(82387,58322);
    caseQueue.insert(16097,79243);
    myResult.push_back(caseQueue.getPriority(63372)); //20
    caseQueue.insert(19625,48513);
    caseQueue.insert(2147,44820);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(55500,25429);
    caseQueue.insert(5874,24438);
    caseQueue.insert(98989,46492);
    caseQueue.insert(81808,57628);
    caseQueue.updatePriority(16724, 43273);
    caseQueue.updatePriority(32658, 37162);
    caseQueue.updatePriority(55500, 40227);
    caseQueue.insert(24625,43858);
    caseQueue.insert(31652,65765);
    caseQueue.insert(63026,9002);
    caseQueue.insert(84257,43750);
    caseQueue.insert(30019,58754);
    caseQueue.insert(26671,38572);
    caseQueue.updatePriority(35046, 68733);
    caseQueue.insert(85294,10140);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(85294, 3614);
    myResult.push_back(caseQueue.getPriority(24625)); //23
    caseQueue.insert(24111,71878);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(31659,63322);
    caseQueue.insert(97570,34961);
    caseQueue.updatePriority(63372, 3734);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(82387, 21597);
    caseQueue.updatePriority(86276, 23641);
    myResult.push_back(caseQueue.getPriority(29330)); //26
    caseQueue.insert(45292,30580);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(56862)); //28
    myResult.push_back(caseQueue.getPriority(19625)); //29
    myResult.push_back(caseQueue.getPriority(26671)); //30
    myResult.push_back(caseQueue.getPriority(86276)); //31
    caseQueue.insert(36117,49910);
    caseQueue.insert(64293,25907);
    caseQueue.insert(92016,48084);
    caseQueue.insert(46728,60155);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(36203,42446);
    caseQueue.updatePriority(24625, 6140);
    caseQueue.insert(96347,77662);
    caseQueue.insert(38002,39741);
    caseQueue.updatePriority(96347, 60029);
    caseQueue.insert(88427,30990);
    myResult.push_back(caseQueue.getPriority(35046)); //33
    myResult.push_back(caseQueue.getPriority(16724)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(35602,97436);
    caseQueue.insert(38852,20410);
    caseQueue.insert(45024,29307);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(37706,39066);
    caseQueue.updatePriority(56862, 8591);
    caseQueue.insert(49189,40787);
    caseQueue.insert(65368,48552);
    caseQueue.updatePriority(56862, 74120);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(61886,8611);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(88947,20068);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(47393,11163);
    caseQueue.updatePriority(65813, 13369);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(12100,7495);
    caseQueue.insert(57313,72982);
    myResult.push_back(caseQueue.getPriority(16097)); //41
    myResult.push_back(caseQueue.getPriority(65813)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(24138,69269);
    caseQueue.updatePriority(16097, 6697);
    caseQueue.insert(64955,73994);
    caseQueue.insert(74605,25106);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(18612,57085);
    caseQueue.insert(29811,29559);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(70785)); //47
    caseQueue.insert(58909,51216);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(14552)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(49189, 70957);
    myResult.push_back(caseQueue.getPriority(46728)); //52
    caseQueue.insert(57467,77844);
    static const int resultListArray[] = {-1, -1, 89966, 37796, 48100, 74589, 91590, 24270, 48100, 91590, 91590, 79181, 78113, 79181, 75388, 26233, 62439, 4634, 72755, 10341, 83448, 63026, 43858, 85294, 63372, 62439, 82387, 87792, 48513, 38572, 23641, 86276, 68733, 43273, 24625, 38852, 5874, 61886, 88947, 47393, 79243, 13369, 12100, 65813, 16097, 74605, 87920, 64293, 45024, 79181, 29811, 60155}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(139): Basarili" << endl;
    else cout << "Case(139): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_140(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 206);

    vector<int> myResult; 
    caseQueue.updatePriority(94106, 22465);
    caseQueue.insert(43453,16720);
    caseQueue.insert(75607,75391);
    caseQueue.updatePriority(43453, 37019);
    caseQueue.insert(39161,80505);
    myResult.push_back(caseQueue.getPriority(43453)); //1
    caseQueue.insert(16289,99237);
    caseQueue.insert(17073,82860);
    caseQueue.updatePriority(39161, 18830);
    caseQueue.updatePriority(75607, 10258);
    myResult.push_back(caseQueue.getPriority(75607)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(16289)); //4
    caseQueue.updatePriority(16289, 99621);
    myResult.push_back(caseQueue.getPriority(17073)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(43453)); //7
    caseQueue.insert(53200,25800);
    caseQueue.updatePriority(17073, 62210);
    caseQueue.insert(30374,95901);
    caseQueue.insert(97408,72911);
    caseQueue.updatePriority(97408, 97098);
    myResult.push_back(caseQueue.getPriority(97408)); //8
    caseQueue.insert(35331,49410);
    caseQueue.insert(91238,78121);
    caseQueue.insert(58083,10209);
    caseQueue.updatePriority(30374, 23819);
    myResult.push_back(caseQueue.getPriority(17073)); //9
    caseQueue.updatePriority(43453, 4310);
    caseQueue.insert(88983,63608);
    caseQueue.insert(89025,36636);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(97811,28684);
    myResult.push_back(caseQueue.getPriority(30374)); //11
    caseQueue.updatePriority(16289, 1202);
    caseQueue.insert(51540,6276);
    caseQueue.insert(3597,66333);
    caseQueue.insert(88122,43861);
    caseQueue.updatePriority(16289, 70563);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(35331, 99986);
    myResult.push_back(caseQueue.getPriority(97408)); //13
    caseQueue.updatePriority(91238, 16198);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(3597)); //16
    myResult.push_back(caseQueue.getPriority(30374)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(17073)); //19
    caseQueue.updatePriority(35331, 79157);
    caseQueue.insert(20544,47909);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(88983, 97594);
    myResult.push_back(caseQueue.getPriority(20544)); //22
    caseQueue.insert(61149,17167);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(88983, 44771);
    caseQueue.insert(57576,8009);
    caseQueue.updatePriority(35331, 36875);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(88983, 36117);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(65556,34263);
    caseQueue.updatePriority(89025, 88222);
    caseQueue.updatePriority(17073, 29169);
    myResult.push_back(caseQueue.getPriority(16289)); //26
    caseQueue.insert(5998,96425);
    caseQueue.insert(21299,86448);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(3597, 91146);
    caseQueue.updatePriority(3597, 47382);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(96146,72489);
    myResult.push_back(caseQueue.getPriority(35331)); //29
    caseQueue.updatePriority(3597, 69668);
    caseQueue.insert(33000,52979);
    caseQueue.updatePriority(33000, 38278);
    caseQueue.insert(59880,46693);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(20544, 28089);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(99781,98763);
    caseQueue.updatePriority(5998, 21490);
    caseQueue.updatePriority(3597, 7904);
    caseQueue.insert(88138,8968);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(89025)); //35
    caseQueue.updatePriority(88138, 55449);
    myResult.push_back(caseQueue.getPriority(89025)); //36
    caseQueue.insert(76263,17246);
    caseQueue.updatePriority(21299, 21126);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(21299)); //38
    caseQueue.insert(47635,13202);
    myResult.push_back(caseQueue.getPriority(5998)); //39
    myResult.push_back(caseQueue.getPriority(47635)); //40
    caseQueue.updatePriority(96146, 69812);
    caseQueue.updatePriority(89025, 61287);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(5998, 146);
    myResult.push_back(caseQueue.getPriority(5998)); //42
    caseQueue.insert(31271,36401);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(96146, 53252);
    caseQueue.updatePriority(88138, 47340);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(89025)); //48
    caseQueue.updatePriority(99781, 45687);
    myResult.push_back(caseQueue.getPriority(97408)); //49
    caseQueue.updatePriority(99781, 1014);
    myResult.push_back(caseQueue.getPriority(96146)); //50
    caseQueue.insert(73743,1614);
    myResult.push_back(caseQueue.getPriority(97408)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(96146)); //53
    caseQueue.insert(65196,15307);
    myResult.push_back(caseQueue.getPriority(65196)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(16289)); //58
    caseQueue.insert(60803,67028);
    caseQueue.insert(86838,76868);
    caseQueue.insert(85141,46695);
    caseQueue.insert(4559,50760);
    caseQueue.insert(98141,33341);
    caseQueue.insert(23059,29318);
    myResult.push_back(caseQueue.getPriority(98141)); //59
    caseQueue.insert(22570,48162);
    myResult.push_back(caseQueue.getPriority(22570)); //60
    caseQueue.updatePriority(60803, 66786);
    myResult.push_back(caseQueue.getPriority(86838)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(89025)); //63
    myResult.push_back(caseQueue.getPriority(97408)); //64
    myResult.push_back(caseQueue.getPriority(22570)); //65
    caseQueue.insert(18582,10714);
    caseQueue.insert(84425,58703);
    caseQueue.insert(6829,60089);
    caseQueue.updatePriority(84425, 13605);
    myResult.push_back(caseQueue.getPriority(89025)); //66
    myResult.push_back(caseQueue.getPriority(16289)); //67
    caseQueue.updatePriority(89025, 71788);
    caseQueue.insert(30188,27470);
    caseQueue.insert(21147,40541);
    caseQueue.updatePriority(84425, 22976);
    caseQueue.insert(23309,5191);
    caseQueue.insert(12536,25922);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(78590,76625);
    caseQueue.updatePriority(30188, 4957);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(24535,36729);
    caseQueue.insert(79219,92074);
    caseQueue.updatePriority(60803, 55963);
    myResult.push_back(caseQueue.getPriority(98141)); //70
    caseQueue.updatePriority(85141, 33952);
    myResult.push_back(caseQueue.getPriority(12536)); //71
    caseQueue.updatePriority(86838, 1524);
    caseQueue.insert(71428,1473);
    caseQueue.updatePriority(4559, 81039);
    caseQueue.updatePriority(6829, 36396);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(30423,67567);
    caseQueue.updatePriority(85141, 70943);
    caseQueue.insert(2976,18101);
    caseQueue.updatePriority(60803, 11031);
    myResult.push_back(caseQueue.getPriority(12536)); //73
    caseQueue.insert(38228,45967);
    caseQueue.updatePriority(21147, 90251);
    caseQueue.insert(65444,12930);
    caseQueue.updatePriority(21147, 30265);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(74590,32761);
    caseQueue.updatePriority(89025, 75026);
    caseQueue.insert(40420,261);
    caseQueue.insert(64352,23734);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(97408, 55392);
    caseQueue.insert(23227,31335);
    caseQueue.insert(45414,97567);
    caseQueue.updatePriority(84425, 16386);
    caseQueue.insert(11166,38942);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(11166, 1056);
    caseQueue.insert(89967,94896);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(45701,69999);
    caseQueue.insert(85194,2523);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(15304,38330);
    caseQueue.insert(63946,83095);
    caseQueue.updatePriority(79219, 26814);
    caseQueue.insert(21598,85851);
    caseQueue.insert(73001,73717);
    caseQueue.insert(87972,20182);
    myResult.push_back(caseQueue.getPriority(16289)); //81
    myResult.push_back(caseQueue.getPriority(78590)); //82
    static const int resultListArray[] = {37019, 10258, 75607, 99237, 82860, 39161, 37019, 97098, 62210, 43453, 23819, 51540, 97098, 58083, 91238, 66333, 23819, 30374, 62210, 53200, 97811, 47909, 61149, 57576, 88983, 70563, 17073, 65556, 36875, 35331, 20544, 33000, 88122, 3597, 88222, 88222, 76263, 21126, 21490, 13202, 47635, 146, 5998, 21299, 31271, 59880, 88138, 61287, 97098, 53252, 97098, 99781, 53252, 15307, 73743, 65196, 96146, 70563, 33341, 48162, 76868, 23059, 61287, 97098, 48162, 61287, 70563, 23309, 30188, 33341, 25922, 71428, 25922, 86838, 40420, 18582, 60803, 11166, 85194, 65444, 70563, 76625}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(140): Basarili" << endl;
    else cout << "Case(140): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_141(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 215);

    vector<int> myResult; 
    caseQueue.insert(50518,27027);
    caseQueue.updatePriority(50518, 93603);
    caseQueue.insert(42375,9032);
    caseQueue.insert(93367,79667);
    caseQueue.insert(83577,99218);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(76398,25842);
    caseQueue.insert(59517,78742);
    caseQueue.insert(39982,96444);
    myResult.push_back(caseQueue.getPriority(83577)); //2
    caseQueue.updatePriority(76398, 88156);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(83577, 57199);
    caseQueue.insert(81983,21577);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(76398)); //6
    myResult.push_back(caseQueue.getPriority(83577)); //7
    caseQueue.insert(59337,723);
    caseQueue.updatePriority(83577, 56063);
    caseQueue.insert(80589,42554);
    caseQueue.insert(22845,3718);
    caseQueue.updatePriority(50518, 25672);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(80589)); //9
    myResult.push_back(caseQueue.getPriority(39982)); //10
    caseQueue.updatePriority(83577, 57155);
    caseQueue.updatePriority(83577, 32720);
    caseQueue.updatePriority(50518, 381);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(11109,43872);
    caseQueue.insert(57313,95655);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(24804,70987);
    caseQueue.insert(59286,58007);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(86883,63690);
    caseQueue.insert(33813,98049);
    myResult.push_back(caseQueue.getPriority(11109)); //14
    myResult.push_back(caseQueue.getPriority(57313)); //15
    caseQueue.insert(79317,12791);
    caseQueue.insert(52903,34296);
    myResult.push_back(caseQueue.getPriority(79317)); //16
    caseQueue.insert(67783,3577);
    caseQueue.insert(95189,83248);
    caseQueue.insert(9962,16074);
    caseQueue.updatePriority(86883, 26593);
    caseQueue.updatePriority(95189, 31616);
    caseQueue.updatePriority(33813, 53771);
    myResult.push_back(caseQueue.getPriority(33813)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(57313)); //19
    myResult.push_back(caseQueue.getPriority(95189)); //20
    caseQueue.insert(12790,53292);
    caseQueue.insert(97344,82417);
    myResult.push_back(caseQueue.getPriority(33813)); //21
    caseQueue.insert(43730,48849);
    myResult.push_back(caseQueue.getPriority(33813)); //22
    myResult.push_back(caseQueue.getPriority(12790)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(91186,23445);
    myResult.push_back(caseQueue.getPriority(11109)); //25
    caseQueue.updatePriority(52903, 57030);
    myResult.push_back(caseQueue.getPriority(52903)); //26
    caseQueue.insert(384,44772);
    caseQueue.updatePriority(76398, 30524);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(59286)); //28
    caseQueue.updatePriority(86883, 17962);
    caseQueue.insert(11142,84254);
    caseQueue.insert(40106,28815);
    caseQueue.insert(38266,50059);
    caseQueue.insert(97025,26210);
    caseQueue.updatePriority(24804, 13936);
    myResult.push_back(caseQueue.getPriority(43730)); //29
    caseQueue.insert(29564,27419);
    caseQueue.insert(36262,68612);
    myResult.push_back(caseQueue.getPriority(24804)); //30
    caseQueue.insert(75948,68946);
    caseQueue.updatePriority(91186, 44645);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(29564)); //32
    caseQueue.updatePriority(33813, 31);
    myResult.push_back(caseQueue.getPriority(39982)); //33
    myResult.push_back(caseQueue.getPriority(384)); //34
    caseQueue.updatePriority(97344, 8655);
    caseQueue.insert(39272,2137);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(97025)); //36
    myResult.push_back(caseQueue.getPriority(12790)); //37
    myResult.push_back(caseQueue.getPriority(80589)); //38
    myResult.push_back(caseQueue.getPriority(95189)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(57313)); //41
    myResult.push_back(caseQueue.getPriority(52903)); //42
    caseQueue.insert(45271,85452);
    caseQueue.insert(49952,62191);
    caseQueue.insert(15095,93612);
    caseQueue.insert(53248,60406);
    caseQueue.insert(73380,14327);
    myResult.push_back(caseQueue.getPriority(45271)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(11109)); //45
    myResult.push_back(caseQueue.getPriority(384)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(80589, 35942);
    caseQueue.insert(51069,35387);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(39982)); //50
    myResult.push_back(caseQueue.getPriority(40106)); //51
    caseQueue.insert(61923,81796);
    caseQueue.insert(54227,19184);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(20472,69832);
    myResult.push_back(caseQueue.getPriority(20472)); //53
    myResult.push_back(caseQueue.getPriority(384)); //54
    caseQueue.insert(34843,34820);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(49952, 46841);
    caseQueue.insert(22384,32241);
    myResult.push_back(caseQueue.getPriority(80589)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(98093,5124);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(20537,27384);
    myResult.push_back(caseQueue.getPriority(45271)); //59
    myResult.push_back(caseQueue.getPriority(91186)); //60
    myResult.push_back(caseQueue.getPriority(15095)); //61
    caseQueue.insert(66570,39928);
    caseQueue.insert(7397,80654);
    caseQueue.insert(8578,3223);
    caseQueue.insert(4956,87418);
    caseQueue.insert(75076,38251);
    caseQueue.insert(78259,48219);
    caseQueue.insert(25018,9967);
    caseQueue.insert(22270,78733);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(67058,88906);
    caseQueue.insert(62523,13379);
    caseQueue.insert(1098,860);
    caseQueue.insert(81736,4540);
    caseQueue.insert(44191,34546);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(62240,46766);
    caseQueue.insert(94663,23125);
    caseQueue.insert(86999,71459);
    caseQueue.updatePriority(78259, 20604);
    caseQueue.insert(1632,65597);
    caseQueue.updatePriority(86999, 944);
    myResult.push_back(caseQueue.getPriority(86999)); //64
    caseQueue.insert(82848,8285);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(384, 2748);
    caseQueue.insert(87814,84698);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(80334,58172);
    caseQueue.insert(79080,86188);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(90937,20945);
    caseQueue.updatePriority(22384, 42018);
    caseQueue.updatePriority(22384, 76389);
    myResult.push_back(caseQueue.getPriority(12790)); //68
    caseQueue.insert(64744,63836);
    myResult.push_back(caseQueue.getPriority(22384)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(44191, 98674);
    caseQueue.insert(24346,12349);
    myResult.push_back(caseQueue.getPriority(61923)); //71
    caseQueue.insert(62045,7394);
    myResult.push_back(caseQueue.getPriority(52903)); //72
    caseQueue.insert(80580,37);
    myResult.push_back(caseQueue.getPriority(91186)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.updatePriority(57313, 84410);
    myResult.push_back(caseQueue.getPriority(53248)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(40071,45454);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(34843)); //79
    caseQueue.insert(73988,9077);
    caseQueue.updatePriority(20472, 83061);
    caseQueue.updatePriority(57313, 78747);
    caseQueue.insert(78596,87849);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(75076, 22569);
    myResult.push_back(caseQueue.getPriority(57313)); //82
    caseQueue.insert(56945,87276);
    caseQueue.insert(57984,3339);
    caseQueue.updatePriority(15095, 84768);
    caseQueue.insert(78319,55974);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(34473,5290);
    caseQueue.updatePriority(4956, 95288);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.updatePriority(4956, 13234);
    caseQueue.insert(69167,83699);
    myResult.push_back(caseQueue.getPriority(22270)); //87
    caseQueue.insert(26049,73812);
    caseQueue.insert(69900,51628);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(42957,7642);
    caseQueue.updatePriority(95189, 3271);
    caseQueue.updatePriority(26049, 99885);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(25728,28020);
    caseQueue.insert(78602,55964);
    caseQueue.insert(788,74579);
    caseQueue.updatePriority(36262, 23055);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(70922,50823);
    static const int resultListArray[] = {42375, 99218, 59517, 93367, 81983, 88156, 57199, 59337, 42554, 96444, 50518, 22845, 83577, 43872, 95655, 12791, 53771, 67783, 95655, 31616, 53771, 53771, 53292, 79317, 43872, 57030, 9962, 58007, 48849, 13936, 24804, 27419, 96444, 44772, 33813, 26210, 53292, 42554, 31616, 39272, 95655, 57030, 85452, 97344, 43872, 44772, 73380, 86883, 97025, 96444, 28815, 54227, 69832, 44772, 29564, 35942, 40106, 98093, 85452, 44645, 93612, 8578, 1098, 944, 86999, 384, 81736, 53292, 76389, 82848, 81796, 57030, 44645, 80580, 60406, 62045, 25018, 24346, 34820, 73988, 62523, 78747, 57984, 34473, 78259, 90937, 78733, 4956, 95189, 42957}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(141): Basarili" << endl;
    else cout << "Case(141): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_142(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 161);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(32156,62293);
    caseQueue.insert(89757,40214);
    myResult.push_back(caseQueue.getPriority(32156)); //2
    caseQueue.insert(35490,74655);
    caseQueue.insert(10196,36600);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(32156, 50925);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(75214,57544);
    caseQueue.insert(41336,69110);
    myResult.push_back(caseQueue.getPriority(75214)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(41336)); //8
    caseQueue.updatePriority(35490, 4534);
    caseQueue.insert(57258,60965);
    caseQueue.insert(26027,95735);
    myResult.push_back(caseQueue.getPriority(57258)); //9
    caseQueue.updatePriority(41336, 24849);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(41336, 29158);
    caseQueue.insert(88773,20828);
    caseQueue.insert(197,96298);
    myResult.push_back(caseQueue.getPriority(26027)); //11
    caseQueue.insert(50872,93348);
    caseQueue.insert(32237,62453);
    myResult.push_back(caseQueue.getPriority(32237)); //12
    caseQueue.insert(16069,74576);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(79035,28449);
    myResult.push_back(caseQueue.getPriority(50872)); //15
    caseQueue.insert(18026,7779);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(56128,45692);
    caseQueue.updatePriority(79035, 24824);
    caseQueue.updatePriority(32237, 43498);
    myResult.push_back(caseQueue.getPriority(57258)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(73838,35537);
    myResult.push_back(caseQueue.getPriority(73838)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(93516,3293);
    caseQueue.insert(55301,19347);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(18472,93375);
    caseQueue.insert(48754,78033);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(51410,36298);
    caseQueue.insert(29850,85583);
    caseQueue.updatePriority(51410, 41327);
    caseQueue.insert(18969,21764);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(18472)); //31
    caseQueue.updatePriority(197, 93043);
    myResult.push_back(caseQueue.getPriority(26027)); //32
    myResult.push_back(caseQueue.getPriority(29850)); //33
    caseQueue.insert(67994,74716);
    caseQueue.updatePriority(197, 99190);
    caseQueue.insert(42678,91186);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(63840,24016);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(94492,57166);
    caseQueue.insert(48103,63440);
    caseQueue.insert(2346,8988);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(197)); //38
    caseQueue.insert(76606,91538);
    myResult.push_back(caseQueue.getPriority(18472)); //39
    myResult.push_back(caseQueue.getPriority(48103)); //40
    caseQueue.insert(77281,12906);
    caseQueue.insert(51466,27865);
    myResult.push_back(caseQueue.getPriority(197)); //41
    caseQueue.insert(60203,93444);
    myResult.push_back(caseQueue.getPriority(60203)); //42
    caseQueue.insert(53547,67503);
    caseQueue.insert(13089,18208);
    caseQueue.insert(88721,92210);
    caseQueue.insert(73444,31386);
    caseQueue.insert(53197,3903);
    caseQueue.insert(17157,63401);
    myResult.push_back(caseQueue.getPriority(197)); //43
    myResult.push_back(caseQueue.getPriority(17157)); //44
    caseQueue.insert(13923,94213);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(98955,484);
    caseQueue.insert(64610,18981);
    myResult.push_back(caseQueue.getPriority(76606)); //47
    caseQueue.insert(31711,54732);
    myResult.push_back(caseQueue.getPriority(88721)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(42678)); //51
    myResult.push_back(caseQueue.getPriority(51466)); //52
    caseQueue.insert(26015,79913);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(51466, 6416);
    caseQueue.insert(75474,86116);
    caseQueue.updatePriority(51466, 39935);
    caseQueue.insert(31603,55433);
    myResult.push_back(caseQueue.getPriority(31603)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(197, 9673);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(53547, 52502);
    myResult.push_back(caseQueue.getPriority(18472)); //59
    myResult.push_back(caseQueue.getPriority(88721)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(27813,6796);
    caseQueue.insert(46603,9682);
    caseQueue.insert(65786,66854);
    caseQueue.insert(4195,51218);
    caseQueue.updatePriority(42678, 46773);
    caseQueue.insert(58238,13423);
    caseQueue.insert(90151,15826);
    caseQueue.insert(24895,65440);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(25870,91650);
    caseQueue.insert(19061,45840);
    caseQueue.insert(17263,63392);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(40638,72479);
    caseQueue.updatePriority(88721, 20870);
    caseQueue.insert(86245,68478);
    myResult.push_back(caseQueue.getPriority(26027)); //66
    caseQueue.insert(63546,33927);
    caseQueue.updatePriority(75474, 6665);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(86245)); //68
    caseQueue.insert(96753,25268);
    caseQueue.updatePriority(40638, 61747);
    caseQueue.insert(57854,73429);
    caseQueue.updatePriority(26027, 21604);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(29126,96354);
    caseQueue.updatePriority(42678, 88419);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(49324,79535);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(24684,92316);
    caseQueue.insert(51139,30561);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(86245)); //76
    static const int resultListArray[] = {-1, 62293, 10196, 89757, 32156, 57544, 75214, 69110, 60965, 35490, 95735, 62453, 88773, 41336, 93348, 18026, 60965, 79035, 35537, 73838, 93516, 55301, 32237, 56128, 57258, 16069, 48754, 50872, 18969, 51410, 93375, 95735, 85583, 67994, 63840, 2346, 94492, 99190, 93375, 63440, 99190, 93444, 99190, 63401, 53197, 77281, 91538, 92210, 98955, 13089, 91186, 27865, 64610, 55433, 73444, 51466, 31711, 197, 93375, 92210, 53547, 31603, 27813, 46603, 58238, 95735, 75474, 68478, 90151, 88721, 26027, 96753, 63546, 51139, 19061, 68478}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(142): Basarili" << endl;
    else cout << "Case(142): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_143(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 242);

    vector<int> myResult; 
    caseQueue.updatePriority(55097, 15590);
    myResult.push_back(caseQueue.getPriority(39257)); //1
    caseQueue.insert(89495,89102);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(96932,14815);
    caseQueue.insert(22137,33812);
    caseQueue.insert(69394,95484);
    caseQueue.insert(25913,68695);
    caseQueue.insert(34234,82143);
    myResult.push_back(caseQueue.getPriority(69394)); //3
    caseQueue.updatePriority(96932, 42083);
    caseQueue.insert(46661,55941);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(53402,18326);
    caseQueue.insert(94657,65691);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(34234)); //7
    myResult.push_back(caseQueue.getPriority(25913)); //8
    caseQueue.updatePriority(94657, 72293);
    caseQueue.insert(72325,98848);
    caseQueue.insert(50315,21121);
    caseQueue.updatePriority(25913, 38463);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(34234)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(94657)); //12
    myResult.push_back(caseQueue.getPriority(34234)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(69394, 9775);
    caseQueue.insert(57172,62490);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(34234, 6566);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(72325, 70410);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(80683, 81425);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(11623)); //22
    caseQueue.insert(98309,95558);
    myResult.push_back(caseQueue.getPriority(98309)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(43253, 28717);
    myResult.push_back(caseQueue.getPriority(53156)); //25
    myResult.push_back(caseQueue.getPriority(11510)); //26
    caseQueue.updatePriority(94504, 23538);
    caseQueue.insert(47850,73389);
    caseQueue.insert(72213,48206);
    caseQueue.updatePriority(47850, 55893);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(47850, 64002);
    caseQueue.updatePriority(47850, 32809);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(25665)); //29
    caseQueue.insert(18946,12695);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(23545,41045);
    caseQueue.insert(74632,84594);
    myResult.push_back(caseQueue.getPriority(23545)); //31
    caseQueue.insert(32684,92175);
    caseQueue.insert(93173,38447);
    caseQueue.updatePriority(32684, 99324);
    myResult.push_back(caseQueue.getPriority(74632)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(32684)); //34
    myResult.push_back(caseQueue.getPriority(32684)); //35
    myResult.push_back(caseQueue.getPriority(23545)); //36
    caseQueue.insert(88446,88046);
    caseQueue.insert(50495,84430);
    caseQueue.insert(173,95469);
    myResult.push_back(caseQueue.getPriority(74632)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(81810,9330);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(74632, 45984);
    caseQueue.insert(35678,31271);
    caseQueue.updatePriority(173, 29888);
    caseQueue.insert(20297,89083);
    caseQueue.insert(82698,39467);
    myResult.push_back(caseQueue.getPriority(82698)); //41
    myResult.push_back(caseQueue.getPriority(88446)); //42
    caseQueue.insert(10605,51882);
    caseQueue.updatePriority(74632, 54787);
    caseQueue.insert(80811,67927);
    caseQueue.updatePriority(80811, 54656);
    caseQueue.insert(65554,46613);
    caseQueue.updatePriority(88446, 61655);
    caseQueue.updatePriority(65554, 87138);
    caseQueue.updatePriority(35678, 90402);
    caseQueue.insert(98902,38266);
    caseQueue.insert(51837,24789);
    myResult.push_back(caseQueue.getPriority(74632)); //43
    caseQueue.insert(75425,22150);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(64138,35181);
    caseQueue.insert(30490,34151);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(35678, 7710);
    caseQueue.updatePriority(64138, 39395);
    caseQueue.insert(42720,32896);
    caseQueue.insert(94582,25032);
    caseQueue.updatePriority(82698, 93350);
    caseQueue.insert(76583,67972);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(30490)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(20297, 22492);
    caseQueue.insert(69084,29625);
    caseQueue.updatePriority(74632, 92764);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(55744,43853);
    myResult.push_back(caseQueue.getPriority(64138)); //50
    caseQueue.insert(58956,13440);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(64138)); //52
    caseQueue.updatePriority(76583, 51570);
    caseQueue.updatePriority(30490, 93069);
    myResult.push_back(caseQueue.getPriority(64138)); //53
    caseQueue.updatePriority(88446, 10524);
    caseQueue.updatePriority(69084, 68218);
    caseQueue.insert(32301,69224);
    caseQueue.insert(98919,38663);
    caseQueue.insert(31554,53602);
    caseQueue.insert(96304,54773);
    caseQueue.insert(29975,37944);
    myResult.push_back(caseQueue.getPriority(98902)); //54
    caseQueue.insert(34943,70141);
    caseQueue.insert(66470,850);
    caseQueue.updatePriority(80811, 37925);
    myResult.push_back(caseQueue.getPriority(74632)); //55
    caseQueue.insert(77101,89714);
    myResult.push_back(caseQueue.getPriority(173)); //56
    caseQueue.insert(21333,84298);
    caseQueue.insert(74629,20697);
    myResult.push_back(caseQueue.getPriority(31554)); //57
    caseQueue.updatePriority(65554, 88724);
    caseQueue.insert(75694,60684);
    caseQueue.insert(65647,41348);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(76583, 30713);
    caseQueue.updatePriority(32301, 84640);
    caseQueue.updatePriority(34943, 82391);
    caseQueue.insert(62712,36531);
    caseQueue.insert(20588,18159);
    caseQueue.insert(22300,71100);
    caseQueue.insert(13341,96549);
    myResult.push_back(caseQueue.getPriority(80811)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(96304)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(31103,12275);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(86393,65109);
    caseQueue.insert(8442,5631);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(10525,23479);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.updatePriority(77101, 10923);
    caseQueue.insert(76119,71482);
    myResult.push_back(caseQueue.getPriority(76119)); //67
    myResult.push_back(caseQueue.getPriority(76119)); //68
    myResult.push_back(caseQueue.getPriority(74632)); //69
    caseQueue.updatePriority(96304, 15791);
    myResult.push_back(caseQueue.getPriority(30490)); //70
    caseQueue.insert(54200,152);
    myResult.push_back(caseQueue.getPriority(86393)); //71
    caseQueue.insert(68223,42406);
    caseQueue.insert(49762,9428);
    caseQueue.insert(79467,44500);
    caseQueue.updatePriority(65647, 48291);
    myResult.push_back(caseQueue.getPriority(69084)); //72
    myResult.push_back(caseQueue.getPriority(98919)); //73
    caseQueue.insert(46979,17275);
    caseQueue.insert(27818,98291);
    caseQueue.insert(20441,60772);
    caseQueue.insert(9457,30543);
    myResult.push_back(caseQueue.getPriority(10605)); //74
    caseQueue.insert(71344,8710);
    caseQueue.insert(82145,30138);
    caseQueue.insert(8012,5616);
    caseQueue.insert(93689,38346);
    caseQueue.insert(93284,69120);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(65554, 85093);
    caseQueue.insert(28751,86419);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(93284)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(10865,99897);
    caseQueue.updatePriority(68223, 7520);
    caseQueue.insert(62146,83663);
    caseQueue.insert(42856,4332);
    caseQueue.insert(18755,59669);
    caseQueue.insert(62163,88845);
    caseQueue.insert(72150,75312);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.updatePriority(69084, 87657);
    myResult.push_back(caseQueue.getPriority(77101)); //81
    caseQueue.updatePriority(13341, 46423);
    caseQueue.insert(76852,22821);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.getPriority(76119)); //84
    caseQueue.insert(91943,20182);
    caseQueue.updatePriority(98919, 86800);
    caseQueue.insert(22628,5027);
    caseQueue.insert(63747,85793);
    caseQueue.insert(53673,23177);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(63747)); //87
    caseQueue.insert(17292,37020);
    caseQueue.insert(93026,77913);
    caseQueue.updatePriority(27818, 3892);
    caseQueue.insert(11371,16480);
    caseQueue.insert(50255,2770);
    myResult.push_back(caseQueue.getPriority(82145)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(87452,22729);
    caseQueue.insert(56180,19718);
    myResult.push_back(caseQueue.getPriority(28751)); //91
    myResult.push_back(caseQueue.getPriority(20441)); //92
    caseQueue.updatePriority(11371, 62699);
    caseQueue.insert(67708,84180);
    caseQueue.insert(65097,59371);
    myResult.push_back(caseQueue.deleteMin()); //93
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.updatePriority(82698, 84680);
    caseQueue.insert(8442,78033);
    caseQueue.insert(1183,60251);
    myResult.push_back(caseQueue.getPriority(32684)); //95
    myResult.push_back(caseQueue.getPriority(13341)); //96
    caseQueue.insert(38724,51883);
    caseQueue.insert(93268,77168);
    myResult.push_back(caseQueue.deleteMin()); //97
    static const int resultListArray[] = {-1, 89495, 95484, 22137, 96932, 53402, 82143, 68695, 50315, 82143, 25913, 72293, 82143, 46661, 69394, 57172, 34234, 94657, 72325, -1, -1, -1, 95558, 98309, -1, -1, 72213, 47850, -1, 18946, 41045, 84594, 93173, 99324, 99324, 41045, 84594, 23545, 50495, 81810, 39467, 88046, 54787, 75425, 51837, 35678, 34151, 94582, 20297, 39395, 58956, 39395, 39395, 38266, 92764, 29888, 53602, 66470, 37925, 88446, 54773, 20588, 74629, 31103, 8442, 10525, 71482, 71482, 92764, 93069, 65109, 68218, 38663, 51882, 54200, 8012, 69120, 71344, 49762, 42856, 10923, 68223, 77101, 71482, 22628, 96304, 85793, 30138, 50255, 27818, 86419, 60772, 46979, 56180, 99324, 46423, 91943}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(143): Basarili" << endl;
    else cout << "Case(143): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_144(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 165);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(66797,45187);
    myResult.push_back(caseQueue.getPriority(66797)); //2
    caseQueue.insert(8343,73930);
    caseQueue.insert(10749,28358);
    caseQueue.updatePriority(66797, 2250);
    caseQueue.insert(4283,89565);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(25625,5093);
    caseQueue.updatePriority(10749, 51953);
    caseQueue.insert(15464,44768);
    caseQueue.updatePriority(15464, 95229);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(39368,67230);
    caseQueue.insert(94165,64546);
    caseQueue.insert(30820,29676);
    caseQueue.insert(10443,1884);
    caseQueue.insert(94352,67243);
    caseQueue.insert(29265,96199);
    caseQueue.insert(33121,42140);
    caseQueue.updatePriority(94352, 17990);
    caseQueue.updatePriority(33121, 48321);
    caseQueue.updatePriority(8343, 11821);
    caseQueue.insert(40636,94186);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(17498,26841);
    caseQueue.insert(2367,37076);
    caseQueue.insert(8122,977);
    caseQueue.insert(14284,26945);
    caseQueue.insert(35840,56715);
    caseQueue.updatePriority(17498, 20815);
    caseQueue.updatePriority(14284, 82937);
    caseQueue.insert(90864,88870);
    caseQueue.insert(29627,12327);
    caseQueue.updatePriority(15464, 62044);
    caseQueue.updatePriority(94165, 1790);
    caseQueue.insert(63477,10364);
    caseQueue.insert(15698,79077);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(60481,21288);
    caseQueue.insert(64540,88146);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(92623,35847);
    caseQueue.updatePriority(64540, 91406);
    myResult.push_back(caseQueue.getPriority(64540)); //8
    caseQueue.updatePriority(94352, 41250);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(92623, 74346);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(35840)); //11
    caseQueue.insert(90816,37311);
    myResult.push_back(caseQueue.getPriority(39368)); //12
    caseQueue.updatePriority(40636, 32699);
    caseQueue.insert(68771,87792);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(17498)); //14
    caseQueue.updatePriority(90864, 31537);
    caseQueue.updatePriority(60481, 75);
    caseQueue.insert(33084,50131);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(64540)); //16
    caseQueue.updatePriority(92623, 37458);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(9131,3362);
    myResult.push_back(caseQueue.getPriority(10749)); //18
    caseQueue.updatePriority(30820, 77261);
    caseQueue.updatePriority(15698, 20619);
    caseQueue.updatePriority(33084, 11478);
    caseQueue.insert(307,94136);
    myResult.push_back(caseQueue.getPriority(90816)); //19
    myResult.push_back(caseQueue.getPriority(39368)); //20
    myResult.push_back(caseQueue.getPriority(68771)); //21
    caseQueue.insert(23320,45416);
    caseQueue.insert(42347,80570);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(30820, 69674);
    caseQueue.updatePriority(307, 82669);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(29265)); //27
    caseQueue.updatePriority(10749, 71826);
    caseQueue.updatePriority(307, 51794);
    caseQueue.updatePriority(14284, 72195);
    myResult.push_back(caseQueue.getPriority(4283)); //28
    caseQueue.insert(91361,22062);
    caseQueue.insert(2003,36146);
    caseQueue.insert(91076,88984);
    caseQueue.updatePriority(91076, 5196);
    myResult.push_back(caseQueue.getPriority(90816)); //29
    caseQueue.insert(66572,92875);
    caseQueue.updatePriority(307, 91546);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(2003)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(74795,50001);
    caseQueue.insert(9885,38343);
    caseQueue.updatePriority(92623, 3081);
    caseQueue.updatePriority(307, 58159);
    caseQueue.insert(89909,78908);
    caseQueue.insert(71838,71090);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(29265, 65529);
    caseQueue.insert(98114,15100);
    caseQueue.insert(29655,86440);
    caseQueue.insert(40002,73163);
    myResult.push_back(caseQueue.getPriority(30820)); //34
    caseQueue.insert(94114,17090);
    myResult.push_back(caseQueue.getPriority(2367)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(14284)); //37
    myResult.push_back(caseQueue.getPriority(64540)); //38
    myResult.push_back(caseQueue.getPriority(64540)); //39
    myResult.push_back(caseQueue.getPriority(2367)); //40
    caseQueue.updatePriority(94352, 98180);
    caseQueue.updatePriority(14284, 56484);
    caseQueue.updatePriority(29655, 19659);
    caseQueue.insert(42768,36025);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(96185,22587);
    caseQueue.insert(19690,72355);
    myResult.push_back(caseQueue.getPriority(33121)); //42
    caseQueue.insert(23002,33250);
    myResult.push_back(caseQueue.getPriority(23320)); //43
    caseQueue.insert(98065,25583);
    caseQueue.insert(81325,75054);
    caseQueue.insert(41387,44707);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(97413,16417);
    caseQueue.updatePriority(2003, 47088);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(10749)); //46
    caseQueue.insert(81242,32990);
    caseQueue.insert(33199,62620);
    caseQueue.insert(20333,6959);
    caseQueue.insert(6087,36031);
    caseQueue.insert(36257,33301);
    myResult.push_back(caseQueue.getPriority(15464)); //47
    caseQueue.insert(10363,26591);
    caseQueue.insert(13049,90794);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(66572)); //53
    caseQueue.insert(13976,98437);
    caseQueue.insert(26696,62578);
    myResult.push_back(caseQueue.getPriority(2003)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(65412,64017);
    caseQueue.insert(30136,50336);
    myResult.push_back(caseQueue.getPriority(41387)); //57
    caseQueue.insert(59784,32918);
    caseQueue.insert(92443,44317);
    caseQueue.updatePriority(10749, 34735);
    caseQueue.insert(34819,13342);
    caseQueue.updatePriority(4283, 99282);
    caseQueue.insert(28311,28432);
    caseQueue.insert(71007,97200);
    myResult.push_back(caseQueue.getPriority(2003)); //58
    caseQueue.updatePriority(33121, 1902);
    caseQueue.updatePriority(13976, 28333);
    static const int resultListArray[] = {-1, 45187, 66797, 25625, 10443, 8122, 94165, 91406, 63477, 8343, 56715, 67230, 29627, 20815, 60481, 91406, 17498, 51953, 37311, 67230, 87792, 9131, 33084, 15698, 90864, 40636, 96199, 89565, 37311, 91076, 36146, 91361, 92623, 69674, 37076, 98114, 72195, 91406, 91406, 37076, 94114, 48321, 45416, 29655, 97413, 71826, 62044, 20333, 96185, 98065, 10363, 81242, 92875, 47088, 23002, 36257, 44707, 47088}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(144): Basarili" << endl;
    else cout << "Case(144): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_145(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 214);

    vector<int> myResult; 
    caseQueue.insert(47555,2272);
    caseQueue.updatePriority(47555, 41043);
    caseQueue.insert(13924,88818);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(13924, 94859);
    caseQueue.insert(68072,24000);
    caseQueue.updatePriority(13924, 5914);
    caseQueue.insert(7254,56884);
    myResult.push_back(caseQueue.getPriority(68072)); //2
    caseQueue.insert(33854,71066);
    myResult.push_back(caseQueue.getPriority(33854)); //3
    myResult.push_back(caseQueue.getPriority(68072)); //4
    caseQueue.insert(8101,8211);
    caseQueue.updatePriority(7254, 93360);
    myResult.push_back(caseQueue.getPriority(8101)); //5
    caseQueue.updatePriority(8101, 86368);
    caseQueue.insert(31450,22728);
    caseQueue.insert(66787,29689);
    caseQueue.insert(49008,20619);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(81437,9733);
    caseQueue.updatePriority(31450, 85199);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(28763,5777);
    caseQueue.updatePriority(28763, 86889);
    myResult.push_back(caseQueue.getPriority(28763)); //8
    caseQueue.updatePriority(31450, 11492);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(68072)); //10
    caseQueue.insert(38354,16487);
    caseQueue.insert(73107,91145);
    caseQueue.updatePriority(73107, 83685);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(6363,30519);
    caseQueue.insert(9733,10163);
    caseQueue.insert(15393,25497);
    caseQueue.updatePriority(68072, 26646);
    caseQueue.updatePriority(66787, 87826);
    caseQueue.insert(39690,3242);
    caseQueue.insert(595,34918);
    caseQueue.updatePriority(39690, 77051);
    caseQueue.insert(46189,95007);
    caseQueue.insert(75199,82156);
    caseQueue.updatePriority(68072, 57254);
    caseQueue.insert(94497,34376);
    myResult.push_back(caseQueue.getPriority(595)); //12
    caseQueue.insert(956,45274);
    myResult.push_back(caseQueue.getPriority(46189)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(7254, 40230);
    caseQueue.updatePriority(15393, 85893);
    caseQueue.updatePriority(595, 25593);
    caseQueue.insert(40921,8631);
    caseQueue.updatePriority(66787, 66725);
    caseQueue.insert(23443,23902);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(63265,78703);
    caseQueue.insert(86826,46258);
    caseQueue.updatePriority(595, 73202);
    myResult.push_back(caseQueue.getPriority(63265)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(75199)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(32175,9519);
    caseQueue.updatePriority(15393, 2807);
    caseQueue.insert(75196,92344);
    caseQueue.insert(27431,72602);
    caseQueue.insert(47165,63630);
    caseQueue.insert(61041,62960);
    caseQueue.insert(8475,31814);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(30706,30457);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(61041)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(28763, 80530);
    caseQueue.insert(61526,36647);
    caseQueue.insert(39951,23263);
    caseQueue.insert(18614,22278);
    caseQueue.updatePriority(28763, 74565);
    caseQueue.updatePriority(86826, 86047);
    caseQueue.updatePriority(66787, 78457);
    caseQueue.insert(57248,24870);
    caseQueue.updatePriority(595, 80164);
    myResult.push_back(caseQueue.getPriority(47165)); //26
    myResult.push_back(caseQueue.getPriority(63265)); //27
    caseQueue.updatePriority(86826, 83734);
    caseQueue.updatePriority(27431, 54744);
    caseQueue.updatePriority(595, 59894);
    caseQueue.insert(87450,40159);
    caseQueue.updatePriority(73107, 40048);
    caseQueue.insert(95831,59560);
    caseQueue.insert(29492,95477);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(73107)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(92097,53551);
    myResult.push_back(caseQueue.getPriority(46189)); //31
    myResult.push_back(caseQueue.getPriority(61041)); //32
    caseQueue.updatePriority(75196, 13349);
    caseQueue.insert(45944,11288);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(73107, 25044);
    myResult.push_back(caseQueue.getPriority(33854)); //36
    caseQueue.updatePriority(39690, 43693);
    caseQueue.insert(83886,75162);
    caseQueue.insert(25551,10642);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(15982,24839);
    caseQueue.insert(83691,28924);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(72701,7414);
    caseQueue.insert(85531,73811);
    myResult.push_back(caseQueue.getPriority(8475)); //39
    caseQueue.updatePriority(61526, 94449);
    caseQueue.insert(21451,9629);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(39690)); //41
    caseQueue.updatePriority(21451, 73241);
    caseQueue.updatePriority(68072, 21113);
    caseQueue.insert(14827,58321);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(14827)); //43
    caseQueue.updatePriority(73107, 8745);
    myResult.push_back(caseQueue.getPriority(27431)); //44
    caseQueue.insert(44388,59373);
    caseQueue.insert(89426,5357);
    caseQueue.updatePriority(92097, 17640);
    caseQueue.insert(33979,43359);
    myResult.push_back(caseQueue.getPriority(8101)); //45
    caseQueue.insert(49542,23270);
    myResult.push_back(caseQueue.getPriority(28763)); //46
    myResult.push_back(caseQueue.getPriority(956)); //47
    caseQueue.updatePriority(29492, 27050);
    myResult.push_back(caseQueue.getPriority(95831)); //48
    myResult.push_back(caseQueue.getPriority(49542)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(78752,90392);
    caseQueue.updatePriority(83691, 39205);
    caseQueue.updatePriority(75199, 30982);
    caseQueue.updatePriority(95831, 92180);
    caseQueue.updatePriority(78752, 62007);
    myResult.push_back(caseQueue.getPriority(44388)); //52
    caseQueue.insert(58024,19343);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(86826)); //54
    caseQueue.updatePriority(95831, 52);
    myResult.push_back(caseQueue.getPriority(66787)); //55
    caseQueue.insert(75720,97743);
    caseQueue.updatePriority(14827, 54679);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(72574,40668);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(46189, 24911);
    myResult.push_back(caseQueue.getPriority(21451)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(130,66029);
    caseQueue.updatePriority(47165, 64171);
    myResult.push_back(caseQueue.getPriority(83691)); //60
    myResult.push_back(caseQueue.getPriority(130)); //61
    caseQueue.updatePriority(8101, 18717);
    caseQueue.updatePriority(21451, 3330);
    caseQueue.updatePriority(83886, 22058);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(130, 67581);
    myResult.push_back(caseQueue.getPriority(63265)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(8475)); //65
    caseQueue.insert(80233,51312);
    caseQueue.insert(55800,51771);
    caseQueue.insert(84338,56670);
    myResult.push_back(caseQueue.getPriority(75720)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(595)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(53922,61626);
    myResult.push_back(caseQueue.getPriority(66787)); //70
    caseQueue.insert(52410,416);
    myResult.push_back(caseQueue.getPriority(39690)); //71
    caseQueue.updatePriority(595, 9195);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(29351,98047);
    myResult.push_back(caseQueue.getPriority(75720)); //75
    caseQueue.updatePriority(61526, 36068);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(956)); //77
    caseQueue.insert(2305,51822);
    caseQueue.insert(11469,92733);
    caseQueue.insert(31035,82417);
    caseQueue.insert(83037,54003);
    caseQueue.insert(56926,82798);
    caseQueue.insert(24437,7760);
    caseQueue.updatePriority(66787, 23307);
    caseQueue.insert(79186,8692);
    myResult.push_back(caseQueue.getPriority(61526)); //78
    caseQueue.insert(2033,93254);
    myResult.push_back(caseQueue.getPriority(55800)); //79
    caseQueue.insert(68259,12768);
    myResult.push_back(caseQueue.getPriority(68259)); //80
    caseQueue.updatePriority(72574, 15062);
    myResult.push_back(caseQueue.getPriority(2305)); //81
    caseQueue.insert(6383,40115);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(75720, 92360);
    caseQueue.insert(94469,14184);
    myResult.push_back(caseQueue.getPriority(956)); //83
    caseQueue.insert(2745,11599);
    static const int resultListArray[] = {47555, 24000, 71066, 24000, 8211, 13924, 81437, 86889, 31450, 24000, 38354, 34918, 95007, 9733, 40921, 49008, 78703, 23443, 82156, 6363, 94497, 15393, 32175, 62960, 30706, 63630, 78703, 18614, 40048, 39951, 95007, 62960, 45944, 75196, 57248, 71066, 25551, 15982, 31814, 72701, 43693, 68072, 58321, 54744, 86368, 74565, 45274, 59560, 23270, 89426, 73107, 59373, 92097, 83734, 78457, 95831, 58024, 73241, 49542, 39205, 66029, 21451, 78703, 8101, 31814, 97743, 83886, 59894, 46189, 78457, 43693, 52410, 595, 29492, 97743, 75199, 45274, 36068, 51771, 12768, 51822, 24437, 45274}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(145): Basarili" << endl;
    else cout << "Case(145): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_146(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 236);

    vector<int> myResult; 
    caseQueue.updatePriority(71682, 80111);
    myResult.push_back(caseQueue.getPriority(15309)); //1
    myResult.push_back(caseQueue.getPriority(25060)); //2
    myResult.push_back(caseQueue.getPriority(79077)); //3
    caseQueue.updatePriority(83542, 54205);
    caseQueue.updatePriority(42769, 13782);
    caseQueue.insert(60952,60235);
    myResult.push_back(caseQueue.getPriority(60952)); //4
    caseQueue.insert(18859,15773);
    caseQueue.insert(75241,2058);
    caseQueue.insert(86688,38574);
    caseQueue.updatePriority(18859, 47163);
    caseQueue.updatePriority(75241, 54446);
    caseQueue.updatePriority(18859, 30240);
    caseQueue.insert(21210,89963);
    caseQueue.updatePriority(60952, 29339);
    caseQueue.updatePriority(75241, 15464);
    caseQueue.updatePriority(60952, 14710);
    caseQueue.insert(94644,88811);
    caseQueue.updatePriority(94644, 69937);
    caseQueue.updatePriority(86688, 85458);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(12427,81848);
    caseQueue.insert(96514,15615);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(24563,42345);
    caseQueue.updatePriority(24563, 33851);
    caseQueue.insert(67139,83813);
    caseQueue.insert(36884,53631);
    myResult.push_back(caseQueue.getPriority(21210)); //8
    caseQueue.updatePriority(86688, 54806);
    caseQueue.insert(33204,13963);
    myResult.push_back(caseQueue.getPriority(24563)); //9
    caseQueue.insert(56646,63261);
    caseQueue.updatePriority(18859, 75209);
    caseQueue.insert(33711,37332);
    myResult.push_back(caseQueue.getPriority(21210)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(40053,64562);
    myResult.push_back(caseQueue.getPriority(56646)); //12
    myResult.push_back(caseQueue.getPriority(36884)); //13
    caseQueue.updatePriority(24563, 56779);
    caseQueue.insert(83261,72669);
    myResult.push_back(caseQueue.getPriority(83261)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(18859, 34620);
    caseQueue.insert(84057,95667);
    myResult.push_back(caseQueue.getPriority(40053)); //16
    caseQueue.updatePriority(40053, 88119);
    caseQueue.insert(368,51806);
    caseQueue.insert(17020,56296);
    caseQueue.insert(61490,39820);
    caseQueue.updatePriority(56646, 47082);
    caseQueue.insert(69801,7309);
    caseQueue.updatePriority(18859, 82583);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(2491,79180);
    caseQueue.insert(68568,55771);
    caseQueue.insert(76866,13144);
    caseQueue.insert(60752,84730);
    caseQueue.updatePriority(17020, 75959);
    caseQueue.insert(39386,75256);
    myResult.push_back(caseQueue.getPriority(84057)); //18
    caseQueue.insert(3907,40076);
    myResult.push_back(caseQueue.getPriority(12427)); //19
    myResult.push_back(caseQueue.getPriority(60752)); //20
    caseQueue.updatePriority(40053, 40458);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(39386, 29703);
    caseQueue.insert(84841,48174);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(12427, 19351);
    caseQueue.insert(13203,10439);
    caseQueue.updatePriority(17020, 22124);
    caseQueue.insert(80040,12043);
    caseQueue.updatePriority(84841, 38485);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(25536,49418);
    caseQueue.insert(70679,19666);
    caseQueue.updatePriority(60752, 93831);
    caseQueue.updatePriority(84057, 10406);
    myResult.push_back(caseQueue.getPriority(12427)); //24
    caseQueue.updatePriority(68568, 2714);
    caseQueue.insert(56330,41651);
    myResult.push_back(caseQueue.getPriority(94644)); //25
    caseQueue.updatePriority(56330, 43331);
    myResult.push_back(caseQueue.getPriority(94644)); //26
    myResult.push_back(caseQueue.getPriority(67139)); //27
    caseQueue.insert(70845,4233);
    caseQueue.insert(99736,41249);
    myResult.push_back(caseQueue.getPriority(67139)); //28
    caseQueue.insert(72952,6076);
    caseQueue.updatePriority(84057, 37827);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(20165,65353);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(18859, 52202);
    caseQueue.updatePriority(83261, 26960);
    caseQueue.insert(64197,13616);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(60246,9308);
    caseQueue.insert(94646,39618);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(17020)); //33
    myResult.push_back(caseQueue.getPriority(3907)); //34
    caseQueue.insert(50888,29708);
    caseQueue.insert(43365,54166);
    caseQueue.insert(56962,81946);
    myResult.push_back(caseQueue.getPriority(94646)); //35
    myResult.push_back(caseQueue.getPriority(3907)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(10282,90666);
    caseQueue.insert(41819,7146);
    myResult.push_back(caseQueue.getPriority(17020)); //38
    myResult.push_back(caseQueue.getPriority(12427)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(40053, 1594);
    myResult.push_back(caseQueue.getPriority(3907)); //41
    myResult.push_back(caseQueue.getPriority(24563)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(17020, 5255);
    caseQueue.updatePriority(56330, 15053);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(36884)); //47
    caseQueue.insert(15744,21007);
    caseQueue.insert(29365,99948);
    caseQueue.insert(78503,96306);
    myResult.push_back(caseQueue.getPriority(18859)); //48
    caseQueue.insert(41377,49697);
    myResult.push_back(caseQueue.getPriority(60752)); //49
    caseQueue.updatePriority(78503, 8829);
    caseQueue.insert(68310,40156);
    caseQueue.insert(43105,81651);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(83261)); //52
    caseQueue.updatePriority(25536, 66907);
    caseQueue.insert(60421,24140);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(83072,65971);
    myResult.push_back(caseQueue.getPriority(15744)); //54
    caseQueue.insert(83492,36506);
    caseQueue.insert(56431,70994);
    caseQueue.updatePriority(18859, 65634);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(41569,52497);
    caseQueue.insert(4371,90474);
    caseQueue.insert(43860,75988);
    caseQueue.updatePriority(2491, 36462);
    myResult.push_back(caseQueue.getPriority(29365)); //56
    caseQueue.updatePriority(18859, 85365);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(20887,63777);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(36055,16339);
    myResult.push_back(caseQueue.getPriority(21210)); //59
    caseQueue.insert(97655,32422);
    caseQueue.updatePriority(2491, 63935);
    caseQueue.updatePriority(43105, 39750);
    myResult.push_back(caseQueue.getPriority(10282)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(22892,14083);
    caseQueue.insert(55542,1059);
    caseQueue.updatePriority(84057, 81522);
    caseQueue.updatePriority(22892, 1173);
    myResult.push_back(caseQueue.getPriority(24563)); //62
    caseQueue.insert(69823,29220);
    caseQueue.insert(55827,35153);
    myResult.push_back(caseQueue.getPriority(83492)); //63
    caseQueue.insert(99221,77365);
    caseQueue.updatePriority(25536, 47431);
    caseQueue.insert(91214,47188);
    myResult.push_back(caseQueue.getPriority(99736)); //64
    myResult.push_back(caseQueue.getPriority(94644)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(55664,79776);
    myResult.push_back(caseQueue.getPriority(10282)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(3907)); //69
    caseQueue.insert(44933,61158);
    caseQueue.updatePriority(55664, 1943);
    caseQueue.insert(36531,69665);
    caseQueue.insert(12312,74096);
    myResult.push_back(caseQueue.getPriority(83072)); //70
    myResult.push_back(caseQueue.getPriority(60752)); //71
    caseQueue.updatePriority(3907, 83762);
    myResult.push_back(caseQueue.getPriority(24563)); //72
    caseQueue.updatePriority(12312, 55865);
    caseQueue.insert(6727,68996);
    caseQueue.insert(35684,68572);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(60752)); //74
    caseQueue.updatePriority(41569, 57208);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(56431)); //76
    caseQueue.insert(26698,97031);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(99805,31294);
    caseQueue.insert(98362,46639);
    caseQueue.updatePriority(84057, 81428);
    caseQueue.insert(99116,98813);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(39344,73962);
    myResult.push_back(caseQueue.getPriority(84841)); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(83723,23791);
    caseQueue.insert(64614,19580);
    myResult.push_back(caseQueue.getPriority(44933)); //83
    caseQueue.updatePriority(20887, 31800);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.updatePriority(86688, 15989);
    caseQueue.insert(12278,26728);
    myResult.push_back(caseQueue.getPriority(29365)); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(4371)); //87
    caseQueue.updatePriority(39344, 70161);
    myResult.push_back(caseQueue.getPriority(67139)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(28837,94810);
    myResult.push_back(caseQueue.getPriority(29365)); //90
    myResult.push_back(caseQueue.getPriority(43365)); //91
    caseQueue.insert(18332,88622);
    caseQueue.updatePriority(67139, 59162);
    caseQueue.updatePriority(83072, 49325);
    caseQueue.insert(49809,91880);
    caseQueue.insert(75966,60129);
    caseQueue.insert(797,75495);
    caseQueue.updatePriority(28837, 91614);
    caseQueue.updatePriority(56646, 28497);
    caseQueue.insert(83258,97172);
    myResult.push_back(caseQueue.deleteMin()); //92
    static const int resultListArray[] = {-1, -1, -1, 60235, 60952, 75241, 96514, 89963, 33851, 89963, 33204, 63261, 53631, 72669, 33711, 64562, 69801, 95667, 81848, 84730, 76866, 39386, 13203, 19351, 69937, 69937, 83813, 83813, 68568, 70845, 72952, 60246, 22124, 40076, 39618, 40076, 80040, 22124, 19351, 41819, 40076, 56779, 40053, 17020, 64197, 56330, 53631, 52202, 93831, 78503, 12427, 26960, 70679, 21007, 15744, 99948, 60421, 83261, 89963, 90666, 36055, 56779, 36506, 41249, 69937, 55542, 90666, 22892, 40076, 65971, 93831, 56779, 55664, 93831, 69823, 70994, 50888, 97655, 99805, 38485, 55827, 83492, 61158, 64614, 99948, 86688, 90474, 83813, 83723, 99948, 54166, 12278}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(146): Basarili" << endl;
    else cout << "Case(146): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_147(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 121);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(63977)); //1
    caseQueue.updatePriority(85042, 2275);
    myResult.push_back(caseQueue.getPriority(8858)); //2
    myResult.push_back(caseQueue.getPriority(7345)); //3
    caseQueue.updatePriority(71334, 24230);
    caseQueue.updatePriority(2281, 60060);
    caseQueue.insert(88135,17032);
    caseQueue.updatePriority(88135, 60483);
    caseQueue.updatePriority(88135, 8380);
    caseQueue.insert(14041,27373);
    myResult.push_back(caseQueue.getPriority(14041)); //4
    caseQueue.updatePriority(14041, 72842);
    myResult.push_back(caseQueue.getPriority(14041)); //5
    myResult.push_back(caseQueue.getPriority(88135)); //6
    caseQueue.insert(1806,69354);
    caseQueue.updatePriority(14041, 57024);
    caseQueue.insert(14711,68528);
    caseQueue.insert(14583,15203);
    caseQueue.insert(78078,36603);
    caseQueue.insert(76596,7153);
    caseQueue.insert(72154,2319);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(39689,68050);
    caseQueue.insert(60737,72567);
    caseQueue.insert(49168,93938);
    caseQueue.updatePriority(49168, 60469);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(14041)); //11
    caseQueue.insert(25982,7924);
    caseQueue.updatePriority(14711, 19689);
    caseQueue.insert(69881,63021);
    caseQueue.insert(20815,16460);
    caseQueue.insert(37179,16311);
    caseQueue.insert(99100,6233);
    caseQueue.updatePriority(69881, 88042);
    caseQueue.insert(52060,62289);
    caseQueue.insert(49674,76626);
    caseQueue.insert(18027,59782);
    caseQueue.insert(23062,63991);
    caseQueue.updatePriority(25982, 78508);
    caseQueue.insert(42940,40990);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(52060, 42178);
    caseQueue.updatePriority(18027, 88035);
    myResult.push_back(caseQueue.getPriority(39689)); //15
    caseQueue.insert(60795,81070);
    caseQueue.updatePriority(23062, 74518);
    caseQueue.insert(46343,76813);
    caseQueue.updatePriority(1806, 53972);
    myResult.push_back(caseQueue.getPriority(25982)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(36642,20037);
    caseQueue.insert(60890,68665);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(1088,79490);
    myResult.push_back(caseQueue.getPriority(39689)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(49168, 24375);
    myResult.push_back(caseQueue.getPriority(52060)); //22
    caseQueue.insert(27643,6784);
    caseQueue.insert(39045,13509);
    caseQueue.insert(61995,66099);
    caseQueue.insert(60062,25079);
    caseQueue.insert(99869,51716);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(94332,10838);
    caseQueue.insert(66622,41873);
    caseQueue.insert(43888,53301);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(61995)); //26
    caseQueue.insert(98223,41558);
    caseQueue.insert(68968,95594);
    caseQueue.updatePriority(14041, 72578);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(23062, 51787);
    caseQueue.insert(80111,19028);
    caseQueue.insert(34773,46451);
    caseQueue.updatePriority(60737, 46040);
    myResult.push_back(caseQueue.getPriority(60795)); //28
    myResult.push_back(caseQueue.getPriority(23062)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(65847,1295);
    caseQueue.updatePriority(1088, 77565);
    myResult.push_back(caseQueue.getPriority(52060)); //31
    caseQueue.insert(41948,54007);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(97898,7147);
    caseQueue.insert(93328,2978);
    caseQueue.insert(67354,7163);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(42656,28518);
    caseQueue.insert(33637,8902);
    caseQueue.insert(40194,67209);
    caseQueue.insert(85698,79372);
    caseQueue.updatePriority(60890, 67123);
    caseQueue.insert(96312,93614);
    caseQueue.insert(96523,17165);
    caseQueue.insert(8287,88385);
    caseQueue.updatePriority(8287, 68635);
    caseQueue.insert(89261,62425);
    caseQueue.insert(37503,71211);
    caseQueue.insert(63830,77011);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(86854,98113);
    caseQueue.updatePriority(66622, 72997);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(86563,85406);
    myResult.push_back(caseQueue.getPriority(25982)); //37
    caseQueue.insert(58837,83692);
    caseQueue.insert(41947,65074);
    caseQueue.insert(96286,91796);
    caseQueue.insert(66172,69531);
    caseQueue.insert(55136,13660);
    caseQueue.insert(64383,56696);
    static const int resultListArray[] = {-1, -1, -1, 27373, 72842, 8380, 72154, 76596, 88135, 14583, 57024, 99100, 37179, 20815, 68050, 78508, 14711, 36642, 78078, 68050, 42940, 42178, 27643, 39045, 94332, 66099, 49168, 81070, 51787, 80111, 42178, 65847, 93328, 97898, 67354, 33637, 78508}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(147): Basarili" << endl;
    else cout << "Case(147): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_148(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 153);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(38725)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(21161, 851);
    caseQueue.insert(91662,54257);
    caseQueue.insert(28161,22598);
    caseQueue.insert(58803,70904);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(97823,57096);
    caseQueue.insert(29880,46103);
    caseQueue.insert(45695,71611);
    caseQueue.insert(63741,48139);
    caseQueue.updatePriority(97823, 594);
    caseQueue.insert(61419,69529);
    caseQueue.insert(82029,35658);
    myResult.push_back(caseQueue.getPriority(58803)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(46849,9763);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(49015,23147);
    caseQueue.insert(72396,82947);
    caseQueue.insert(86009,18005);
    myResult.push_back(caseQueue.getPriority(63741)); //10
    myResult.push_back(caseQueue.getPriority(45695)); //11
    caseQueue.updatePriority(86009, 97600);
    caseQueue.insert(15866,96134);
    myResult.push_back(caseQueue.getPriority(86009)); //12
    caseQueue.insert(67017,42551);
    caseQueue.insert(95069,53144);
    caseQueue.insert(46923,27258);
    caseQueue.insert(37871,35064);
    caseQueue.insert(86807,61626);
    caseQueue.updatePriority(58803, 26192);
    myResult.push_back(caseQueue.getPriority(49015)); //13
    caseQueue.updatePriority(37871, 8668);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(67017)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(90143,31588);
    caseQueue.insert(45236,19724);
    caseQueue.insert(99515,92737);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(45695)); //19
    caseQueue.updatePriority(86807, 94819);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(27116,80170);
    caseQueue.insert(82708,21365);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(93192,13947);
    caseQueue.insert(70425,81893);
    caseQueue.updatePriority(15866, 67167);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(99515)); //23
    caseQueue.insert(15196,36429);
    caseQueue.updatePriority(61419, 68771);
    caseQueue.insert(42696,65186);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(86009, 12143);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(27116, 19822);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(67017)); //27
    caseQueue.updatePriority(45695, 19920);
    caseQueue.insert(6058,66283);
    myResult.push_back(caseQueue.getPriority(86807)); //28
    caseQueue.insert(13516,7688);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(20072,95859);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(72396, 15235);
    caseQueue.insert(76380,63163);
    caseQueue.insert(23754,95840);
    myResult.push_back(caseQueue.getPriority(67017)); //31
    caseQueue.updatePriority(15866, 6649);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(72658,92331);
    caseQueue.updatePriority(20072, 1305);
    myResult.push_back(caseQueue.getPriority(42696)); //33
    caseQueue.updatePriority(23754, 88183);
    caseQueue.insert(35436,67684);
    caseQueue.insert(87593,74611);
    caseQueue.insert(13524,70271);
    myResult.push_back(caseQueue.getPriority(72658)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(80348,77166);
    caseQueue.insert(70614,10718);
    myResult.push_back(caseQueue.getPriority(99515)); //36
    myResult.push_back(caseQueue.getPriority(95069)); //37
    myResult.push_back(caseQueue.getPriority(13524)); //38
    caseQueue.updatePriority(35436, 57569);
    caseQueue.updatePriority(72396, 48475);
    myResult.push_back(caseQueue.getPriority(72658)); //39
    myResult.push_back(caseQueue.getPriority(99515)); //40
    caseQueue.insert(39117,11345);
    caseQueue.insert(52050,95854);
    caseQueue.insert(89374,78997);
    caseQueue.insert(11857,29640);
    caseQueue.insert(39559,44372);
    caseQueue.updatePriority(70425, 17142);
    caseQueue.insert(55511,12934);
    caseQueue.insert(17455,56280);
    caseQueue.insert(24825,87883);
    caseQueue.insert(41232,27471);
    myResult.push_back(caseQueue.getPriority(35436)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(7957,41798);
    myResult.push_back(caseQueue.getPriority(7957)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(37966,32040);
    caseQueue.updatePriority(13524, 33532);
    myResult.push_back(caseQueue.getPriority(99515)); //45
    caseQueue.insert(29913,89543);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(99129,98998);
    myResult.push_back(caseQueue.getPriority(52050)); //47
    caseQueue.insert(83475,73049);
    caseQueue.insert(76859,25920);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(41232, 41615);
    myResult.push_back(caseQueue.getPriority(72658)); //49
    caseQueue.updatePriority(39559, 27154);
    caseQueue.updatePriority(41232, 72834);
    caseQueue.updatePriority(83475, 61768);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(83010,98702);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(29880)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(29913, 24120);
    myResult.push_back(caseQueue.getPriority(6058)); //55
    caseQueue.insert(11299,93194);
    caseQueue.insert(64275,68806);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(99129)); //58
    myResult.push_back(caseQueue.getPriority(24825)); //59
    caseQueue.insert(90144,50385);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(11299, 84499);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(90543,17125);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(74134,22809);
    caseQueue.insert(43156,3872);
    myResult.push_back(caseQueue.getPriority(86807)); //65
    caseQueue.insert(80676,30948);
    caseQueue.insert(84925,43028);
    static const int resultListArray[] = {-1, -1, -1, 28161, 91662, 70904, 97823, 82029, 46849, 48139, 71611, 97600, 23147, 37871, 42551, 49015, 45236, 58803, 71611, 46923, 82708, 93192, 92737, 90143, 86009, 27116, 42551, 94819, 13516, 45695, 42551, 15866, 65186, 92331, 20072, 92737, 53144, 70271, 92331, 92737, 57569, 70614, 41798, 39117, 92737, 55511, 95854, 70425, 92331, 76859, 39559, 11857, 46103, 37966, 66283, 29913, 13524, 98998, 87883, 15196, 7957, 90543, 67017, 29880, 94819}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(148): Basarili" << endl;
    else cout << "Case(148): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_149(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 181);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(51525)); //2
    caseQueue.insert(33199,4136);
    caseQueue.insert(24451,49386);
    caseQueue.updatePriority(33199, 43859);
    caseQueue.insert(86036,77210);
    caseQueue.insert(50702,17763);
    caseQueue.insert(44841,68744);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(24451, 35124);
    caseQueue.insert(71042,21892);
    caseQueue.insert(13764,96773);
    caseQueue.insert(45476,52667);
    myResult.push_back(caseQueue.getPriority(71042)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(86036, 4576);
    caseQueue.insert(56726,8567);
    caseQueue.insert(3378,34305);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(36283,73621);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(33222,69571);
    caseQueue.insert(21230,12320);
    caseQueue.insert(63305,52299);
    caseQueue.insert(97839,3869);
    caseQueue.updatePriority(97839, 56742);
    caseQueue.insert(11883,73419);
    myResult.push_back(caseQueue.getPriority(24451)); //9
    caseQueue.insert(3924,91155);
    caseQueue.insert(60067,59178);
    myResult.push_back(caseQueue.getPriority(24451)); //10
    myResult.push_back(caseQueue.getPriority(36283)); //11
    caseQueue.updatePriority(11883, 47338);
    caseQueue.updatePriority(11883, 75132);
    myResult.push_back(caseQueue.getPriority(45476)); //12
    caseQueue.insert(81791,41685);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(86839,38275);
    caseQueue.insert(18978,29938);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(34096,92781);
    caseQueue.updatePriority(24451, 62421);
    caseQueue.updatePriority(36283, 26102);
    caseQueue.updatePriority(86839, 10896);
    myResult.push_back(caseQueue.getPriority(81791)); //15
    caseQueue.updatePriority(3378, 50185);
    caseQueue.insert(68438,412);
    caseQueue.updatePriority(60067, 49961);
    caseQueue.updatePriority(97839, 32021);
    caseQueue.insert(48532,28553);
    caseQueue.updatePriority(44841, 31821);
    caseQueue.updatePriority(63305, 97508);
    caseQueue.updatePriority(11883, 54956);
    caseQueue.insert(61019,11402);
    myResult.push_back(caseQueue.getPriority(24451)); //16
    myResult.push_back(caseQueue.getPriority(68438)); //17
    caseQueue.updatePriority(86839, 54725);
    myResult.push_back(caseQueue.getPriority(24451)); //18
    caseQueue.updatePriority(63305, 81975);
    myResult.push_back(caseQueue.getPriority(61019)); //19
    caseQueue.insert(57129,69738);
    caseQueue.insert(75177,71563);
    myResult.push_back(caseQueue.getPriority(33222)); //20
    myResult.push_back(caseQueue.getPriority(3924)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(34096)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(86839)); //26
    caseQueue.insert(71359,85867);
    caseQueue.insert(95520,34613);
    caseQueue.insert(9226,58333);
    caseQueue.updatePriority(95520, 74090);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(13764, 55444);
    caseQueue.insert(10132,36664);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(86839)); //31
    caseQueue.updatePriority(63305, 43348);
    myResult.push_back(caseQueue.getPriority(81791)); //32
    caseQueue.insert(52778,69144);
    caseQueue.updatePriority(57129, 47578);
    caseQueue.insert(93872,22582);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(75177)); //34
    caseQueue.insert(68685,90185);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(63305)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(49070,26645);
    caseQueue.insert(12545,17136);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(60067)); //41
    caseQueue.insert(14923,61404);
    caseQueue.insert(23994,91452);
    caseQueue.updatePriority(23994, 26251);
    caseQueue.updatePriority(68685, 85463);
    caseQueue.insert(51380,88742);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(24451)); //43
    caseQueue.insert(49809,71490);
    myResult.push_back(caseQueue.getPriority(3924)); //44
    caseQueue.updatePriority(95520, 51578);
    myResult.push_back(caseQueue.getPriority(24451)); //45
    caseQueue.updatePriority(49809, 11019);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(39916,74613);
    caseQueue.insert(39076,69484);
    caseQueue.insert(52067,13362);
    caseQueue.updatePriority(95520, 85335);
    caseQueue.insert(48183,69837);
    caseQueue.insert(65422,78457);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(3924, 12250);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(88745,50691);
    caseQueue.updatePriority(71359, 20938);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(63831,68130);
    caseQueue.insert(5463,29143);
    caseQueue.insert(89004,46629);
    myResult.push_back(caseQueue.getPriority(33222)); //51
    caseQueue.updatePriority(39076, 93704);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(43395,4863);
    caseQueue.insert(7928,30907);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(68249,99124);
    caseQueue.insert(59104,12087);
    myResult.push_back(caseQueue.getPriority(65422)); //54
    caseQueue.insert(96255,93536);
    caseQueue.insert(36294,32373);
    caseQueue.insert(85869,42749);
    caseQueue.insert(60089,39268);
    myResult.push_back(caseQueue.getPriority(34096)); //55
    myResult.push_back(caseQueue.getPriority(63831)); //56
    caseQueue.insert(98850,68229);
    caseQueue.insert(86294,95949);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(7928, 87388);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(55866,83009);
    caseQueue.insert(96846,21588);
    caseQueue.insert(76245,82189);
    caseQueue.insert(52607,79855);
    caseQueue.updatePriority(52778, 62883);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(14923, 39487);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(50474,2866);
    caseQueue.insert(84172,95540);
    caseQueue.insert(64193,81679);
    caseQueue.insert(65561,60551);
    caseQueue.insert(74047,39591);
    caseQueue.updatePriority(52778, 76252);
    caseQueue.insert(55632,2979);
    caseQueue.insert(29215,13262);
    caseQueue.insert(11532,88372);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(39765,25620);
    caseQueue.insert(28198,4074);
    myResult.push_back(caseQueue.getPriority(89004)); //62
    caseQueue.insert(16212,64779);
    caseQueue.updatePriority(14923, 32218);
    caseQueue.insert(40179,19054);
    caseQueue.insert(21221,37171);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(85869)); //64
    myResult.push_back(caseQueue.getPriority(89004)); //65
    caseQueue.insert(24259,9397);
    caseQueue.insert(11868,17693);
    caseQueue.insert(82571,94958);
    caseQueue.insert(66624,63479);
    caseQueue.updatePriority(65561, 46349);
    myResult.push_back(caseQueue.deleteMin()); //66
    static const int resultListArray[] = {-1, -1, 50702, 33199, 21892, 71042, 86036, 56726, 35124, 35124, 73621, 52667, 21230, 18978, 41685, 62421, 412, 62421, 11402, 69571, 91155, 68438, 61019, 92781, 36283, 54725, 48532, 44841, 97839, 10132, 54725, 41685, 93872, 71563, 81791, 43348, 63305, 57129, 12545, 49070, 49961, 23994, 62421, 91155, 62421, 49809, 60067, 52067, 3924, 71359, 69571, 5463, 43395, 78457, 92781, 68130, 59104, 36294, 96846, 60089, 50474, 46629, 55632, 42749, 46629, 28198}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(149): Basarili" << endl;
    else cout << "Case(149): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_150(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 145);

    vector<int> myResult; 
    caseQueue.insert(56820,89239);
    caseQueue.insert(12251,94601);
    caseQueue.updatePriority(56820, 53739);
    caseQueue.insert(89837,27766);
    caseQueue.updatePriority(56820, 18435);
    caseQueue.insert(11808,4863);
    caseQueue.insert(35273,17250);
    myResult.push_back(caseQueue.getPriority(35273)); //1
    caseQueue.updatePriority(89837, 8603);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(12692,183);
    caseQueue.updatePriority(89837, 66985);
    caseQueue.insert(98331,2905);
    caseQueue.insert(27726,81953);
    myResult.push_back(caseQueue.getPriority(12692)); //3
    myResult.push_back(caseQueue.getPriority(27726)); //4
    myResult.push_back(caseQueue.getPriority(12251)); //5
    myResult.push_back(caseQueue.getPriority(56820)); //6
    caseQueue.insert(17299,41480);
    caseQueue.insert(17314,43620);
    caseQueue.insert(14976,22835);
    caseQueue.insert(33942,96092);
    caseQueue.updatePriority(17299, 26752);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(27726)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(33942, 8550);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(40471,81568);
    caseQueue.insert(31051,15778);
    caseQueue.insert(33154,71854);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(84884,46093);
    caseQueue.insert(42352,98704);
    myResult.push_back(caseQueue.getPriority(17299)); //13
    myResult.push_back(caseQueue.getPriority(14976)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(84884, 58686);
    caseQueue.insert(19640,57733);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(12251)); //17
    caseQueue.updatePriority(33154, 82501);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(22321,51310);
    caseQueue.insert(89741,94676);
    caseQueue.updatePriority(40471, 4466);
    caseQueue.insert(6558,32141);
    caseQueue.insert(31435,68869);
    caseQueue.updatePriority(89837, 55027);
    caseQueue.updatePriority(12251, 35820);
    caseQueue.insert(25814,6398);
    caseQueue.insert(78972,58319);
    caseQueue.insert(45822,65595);
    caseQueue.insert(46348,66370);
    caseQueue.updatePriority(40471, 99221);
    caseQueue.insert(59844,6275);
    caseQueue.insert(20728,11748);
    caseQueue.insert(92296,71750);
    caseQueue.updatePriority(89741, 17007);
    caseQueue.insert(1568,68779);
    caseQueue.insert(65838,83690);
    caseQueue.insert(64020,99091);
    caseQueue.updatePriority(6558, 48951);
    caseQueue.updatePriority(65838, 82525);
    myResult.push_back(caseQueue.getPriority(45822)); //21
    caseQueue.insert(65848,42646);
    caseQueue.insert(62626,28849);
    caseQueue.insert(24653,28146);
    caseQueue.updatePriority(59844, 95211);
    caseQueue.insert(29600,36358);
    caseQueue.insert(53375,3957);
    myResult.push_back(caseQueue.getPriority(33154)); //22
    caseQueue.insert(79293,40214);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(9602,94359);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(31435, 22260);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(22321, 68650);
    caseQueue.insert(84425,66690);
    myResult.push_back(caseQueue.getPriority(40471)); //29
    myResult.push_back(caseQueue.getPriority(59844)); //30
    myResult.push_back(caseQueue.getPriority(9602)); //31
    myResult.push_back(caseQueue.getPriority(12251)); //32
    caseQueue.insert(2216,99125);
    caseQueue.insert(3627,37189);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(34980,21024);
    caseQueue.updatePriority(65848, 66118);
    myResult.push_back(caseQueue.getPriority(78972)); //34
    caseQueue.insert(40433,72120);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(2216)); //36
    caseQueue.insert(91663,61951);
    myResult.push_back(caseQueue.getPriority(89837)); //37
    caseQueue.insert(4788,62918);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(89837)); //39
    caseQueue.updatePriority(1568, 52017);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(3712,93395);
    myResult.push_back(caseQueue.getPriority(84425)); //41
    caseQueue.insert(90803,59859);
    caseQueue.updatePriority(40433, 72410);
    caseQueue.insert(84930,65849);
    caseQueue.insert(83893,59695);
    myResult.push_back(caseQueue.getPriority(27726)); //42
    myResult.push_back(caseQueue.getPriority(40471)); //43
    myResult.push_back(caseQueue.getPriority(40433)); //44
    caseQueue.insert(20773,39520);
    caseQueue.updatePriority(9602, 46209);
    caseQueue.insert(67332,9267);
    caseQueue.insert(54413,35481);
    myResult.push_back(caseQueue.getPriority(1568)); //45
    caseQueue.insert(42001,46158);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(23559,60492);
    caseQueue.insert(97378,56962);
    caseQueue.insert(93882,81135);
    caseQueue.insert(14706,32685);
    myResult.push_back(caseQueue.getPriority(6558)); //48
    myResult.push_back(caseQueue.getPriority(65838)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(4788, 9661);
    caseQueue.insert(56353,42494);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(16745,77117);
    caseQueue.updatePriority(93882, 9874);
    myResult.push_back(caseQueue.getPriority(40433)); //53
    myResult.push_back(caseQueue.getPriority(42352)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(42352)); //56
    caseQueue.updatePriority(16745, 19789);
    caseQueue.insert(53208,75343);
    myResult.push_back(caseQueue.getPriority(84884)); //57
    caseQueue.updatePriority(84930, 23073);
    caseQueue.insert(24360,54054);
    static const int resultListArray[] = {17250, 11808, 183, 81953, 94601, 18435, 12692, 81953, 98331, 33942, 31051, 35273, 26752, 22835, 56820, 14976, 94601, 17299, 17314, 19640, 65595, 82501, 53375, 25814, 20728, 89741, 31435, 24653, 99221, 95211, 94359, 35820, 62626, 58319, 34980, 99125, 55027, 12251, 55027, 29600, 66690, 81953, 99221, 72410, 52017, 67332, 54413, 48951, 82525, 14706, 4788, 3627, 72410, 98704, 93882, 98704, 58686}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(150): Basarili" << endl;
    else cout << "Case(150): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_151(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 224);

    vector<int> myResult; 
    caseQueue.updatePriority(38507, 45241);
    caseQueue.insert(77719,55725);
    caseQueue.insert(83921,45479);
    myResult.push_back(caseQueue.getPriority(83921)); //1
    caseQueue.insert(71234,95390);
    myResult.push_back(caseQueue.getPriority(83921)); //2
    caseQueue.insert(91572,91529);
    myResult.push_back(caseQueue.getPriority(71234)); //3
    caseQueue.insert(19376,90857);
    caseQueue.insert(52759,35007);
    caseQueue.insert(24137,45876);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(24137)); //5
    caseQueue.updatePriority(91572, 77859);
    caseQueue.insert(7378,27005);
    caseQueue.insert(18147,34806);
    caseQueue.updatePriority(77719, 88261);
    myResult.push_back(caseQueue.getPriority(77719)); //6
    myResult.push_back(caseQueue.getPriority(83921)); //7
    myResult.push_back(caseQueue.getPriority(77719)); //8
    caseQueue.insert(27377,82488);
    myResult.push_back(caseQueue.getPriority(77719)); //9
    caseQueue.insert(84386,48552);
    caseQueue.updatePriority(27377, 17435);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(7378, 54722);
    caseQueue.updatePriority(7378, 72929);
    caseQueue.insert(71600,87986);
    myResult.push_back(caseQueue.getPriority(71600)); //11
    caseQueue.insert(34871,55025);
    caseQueue.insert(97838,43196);
    caseQueue.insert(38258,60846);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(34871, 22326);
    myResult.push_back(caseQueue.getPriority(19376)); //13
    caseQueue.updatePriority(19376, 30540);
    caseQueue.updatePriority(83921, 46058);
    caseQueue.insert(67882,80257);
    myResult.push_back(caseQueue.getPriority(24137)); //14
    caseQueue.insert(34282,8207);
    caseQueue.insert(62878,61442);
    caseQueue.updatePriority(7378, 87149);
    caseQueue.insert(67713,76830);
    caseQueue.insert(27503,62857);
    caseQueue.updatePriority(27503, 41264);
    myResult.push_back(caseQueue.getPriority(34282)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(30165,83984);
    caseQueue.insert(91338,46957);
    caseQueue.insert(99784,24956);
    myResult.push_back(caseQueue.getPriority(19376)); //17
    caseQueue.updatePriority(30165, 10702);
    myResult.push_back(caseQueue.getPriority(24137)); //18
    caseQueue.insert(92400,74661);
    myResult.push_back(caseQueue.getPriority(71600)); //19
    caseQueue.updatePriority(71234, 71531);
    caseQueue.updatePriority(19376, 2972);
    caseQueue.updatePriority(30165, 14403);
    caseQueue.updatePriority(91572, 59195);
    myResult.push_back(caseQueue.getPriority(62878)); //20
    caseQueue.insert(35890,66749);
    caseQueue.insert(32480,42797);
    myResult.push_back(caseQueue.getPriority(91338)); //21
    myResult.push_back(caseQueue.getPriority(71234)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(24137, 2470);
    caseQueue.insert(4845,32735);
    myResult.push_back(caseQueue.getPriority(77719)); //25
    caseQueue.insert(74581,42513);
    caseQueue.insert(68975,48804);
    caseQueue.updatePriority(67713, 99274);
    caseQueue.updatePriority(7378, 73716);
    caseQueue.updatePriority(24137, 10147);
    caseQueue.insert(17037,74705);
    caseQueue.insert(51200,9785);
    caseQueue.insert(73331,31769);
    myResult.push_back(caseQueue.getPriority(32480)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(15774,58023);
    myResult.push_back(caseQueue.getPriority(73331)); //28
    caseQueue.insert(24820,67955);
    caseQueue.updatePriority(4845, 4187);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(71600)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(81921,63780);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(83921)); //34
    caseQueue.insert(84728,56447);
    myResult.push_back(caseQueue.getPriority(27503)); //35
    caseQueue.insert(90679,15818);
    caseQueue.insert(49436,39053);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(11668,43342);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(97838, 36752);
    myResult.push_back(caseQueue.getPriority(67882)); //38
    caseQueue.insert(90284,79856);
    caseQueue.updatePriority(32480, 4061);
    caseQueue.insert(29579,56964);
    caseQueue.insert(18931,64920);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(32153,70950);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(65379,55822);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(87530,44752);
    myResult.push_back(caseQueue.getPriority(67882)); //42
    caseQueue.insert(82626,93250);
    caseQueue.updatePriority(84386, 7648);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(81921)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(53623,56376);
    caseQueue.updatePriority(18931, 31036);
    myResult.push_back(caseQueue.getPriority(71234)); //46
    myResult.push_back(caseQueue.getPriority(38258)); //47
    caseQueue.insert(18412,22625);
    caseQueue.updatePriority(38258, 89172);
    caseQueue.insert(56058,92215);
    caseQueue.insert(77877,88123);
    caseQueue.updatePriority(18412, 93863);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(65030,27665);
    myResult.push_back(caseQueue.getPriority(77877)); //49
    caseQueue.insert(17461,24974);
    caseQueue.insert(94205,78490);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(47943,81430);
    caseQueue.updatePriority(91572, 93264);
    myResult.push_back(caseQueue.getPriority(68975)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(7378, 28986);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(17037, 34348);
    caseQueue.insert(14583,61733);
    caseQueue.insert(86397,79026);
    caseQueue.insert(99009,98575);
    caseQueue.updatePriority(68975, 97688);
    caseQueue.updatePriority(24820, 18833);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(38258, 98698);
    caseQueue.insert(47686,74029);
    caseQueue.updatePriority(67713, 16364);
    caseQueue.insert(33023,91533);
    caseQueue.insert(78232,48597);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(65379)); //56
    caseQueue.insert(56653,45535);
    caseQueue.insert(46215,31412);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(33023)); //58
    caseQueue.insert(17266,89382);
    caseQueue.updatePriority(90284, 12055);
    myResult.push_back(caseQueue.getPriority(14583)); //59
    caseQueue.insert(1790,68118);
    myResult.push_back(caseQueue.getPriority(74581)); //60
    myResult.push_back(caseQueue.getPriority(18412)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(87530)); //63
    caseQueue.insert(18791,53898);
    myResult.push_back(caseQueue.getPriority(74581)); //64
    caseQueue.insert(59212,83325);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(91338)); //67
    caseQueue.insert(60175,7828);
    caseQueue.insert(43737,29471);
    caseQueue.updatePriority(77719, 62047);
    caseQueue.insert(49195,25622);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(87530, 84908);
    myResult.push_back(caseQueue.getPriority(47686)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(95941,38060);
    myResult.push_back(caseQueue.getPriority(43737)); //71
    caseQueue.insert(56385,9401);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(18412)); //73
    myResult.push_back(caseQueue.getPriority(47943)); //74
    caseQueue.insert(68558,41285);
    caseQueue.insert(20253,1054);
    caseQueue.insert(98137,88536);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(23257,4105);
    caseQueue.updatePriority(15774, 84255);
    myResult.push_back(caseQueue.getPriority(98137)); //76
    caseQueue.insert(21776,5790);
    caseQueue.insert(66627,77013);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(35890)); //78
    caseQueue.updatePriority(38258, 65449);
    caseQueue.insert(98210,46154);
    caseQueue.insert(11359,29690);
    caseQueue.insert(11959,10615);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(83921)); //80
    caseQueue.insert(55987,4170);
    caseQueue.insert(96806,60350);
    caseQueue.updatePriority(71600, 62437);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(8847,42946);
    myResult.push_back(caseQueue.getPriority(86397)); //82
    caseQueue.insert(77674,18727);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(39346,76242);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(28098,97889);
    caseQueue.insert(60505,60689);
    myResult.push_back(caseQueue.getPriority(82626)); //85
    caseQueue.insert(10854,45127);
    caseQueue.insert(52117,92939);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(36746,23774);
    caseQueue.insert(54818,43316);
    caseQueue.insert(1015,14001);
    caseQueue.updatePriority(39346, 89849);
    caseQueue.updatePriority(96806, 26989);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(6436,24665);
    caseQueue.insert(81376,63519);
    myResult.push_back(caseQueue.deleteMin()); //88
    static const int resultListArray[] = {45479, 45479, 95390, 52759, 45876, 88261, 45479, 88261, 88261, 27377, 87986, 18147, 90857, 45876, 8207, 34282, 30540, 45876, 87986, 61442, 46957, 71531, 19376, 30165, 88261, 42797, 51200, 31769, 4845, 24137, 87986, 34871, 99784, 46058, 41264, 90679, 73331, 80257, 32480, 97838, 49436, 80257, 84386, 63780, 27503, 71531, 60846, 18931, 88123, 17461, 48804, 65030, 7378, 24820, 67713, 55822, 46215, 91533, 61733, 42513, 93863, 90284, 44752, 42513, 17037, 74581, 46957, 60175, 74029, 49195, 29471, 56385, 93863, 81430, 20253, 88536, 23257, 66749, 21776, 46058, 55987, 79026, 11959, 77674, 93250, 43737, 1015, 36746}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(151): Basarili" << endl;
    else cout << "Case(151): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_152(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 174);

    vector<int> myResult; 
    caseQueue.insert(96838,94776);
    myResult.push_back(caseQueue.getPriority(96838)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(32030,73078);
    myResult.push_back(caseQueue.getPriority(32030)); //4
    caseQueue.insert(54252,34964);
    caseQueue.insert(96077,70216);
    myResult.push_back(caseQueue.getPriority(32030)); //5
    caseQueue.updatePriority(32030, 57089);
    caseQueue.insert(24073,49285);
    caseQueue.insert(3028,78874);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(14909,88153);
    caseQueue.insert(76162,40607);
    caseQueue.updatePriority(96077, 9127);
    myResult.push_back(caseQueue.getPriority(76162)); //9
    caseQueue.updatePriority(14909, 37528);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(25264,54628);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(3028, 38579);
    caseQueue.insert(31219,67458);
    caseQueue.insert(60577,20854);
    caseQueue.insert(74211,3953);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(90816,37592);
    caseQueue.insert(14748,880);
    myResult.push_back(caseQueue.getPriority(90816)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(98319,62891);
    myResult.push_back(caseQueue.getPriority(90816)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(6272,30967);
    caseQueue.insert(22625,75110);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(22625, 78746);
    caseQueue.insert(68242,95248);
    caseQueue.insert(36836,30871);
    caseQueue.updatePriority(68242, 37871);
    caseQueue.insert(77854,94699);
    caseQueue.insert(32999,2019);
    caseQueue.insert(45216,49283);
    caseQueue.insert(68938,4953);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(45216, 92049);
    caseQueue.insert(16712,75);
    caseQueue.insert(45256,51059);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(80594,99933);
    caseQueue.insert(13111,96600);
    caseQueue.updatePriority(77854, 66362);
    caseQueue.updatePriority(22625, 16496);
    caseQueue.insert(22079,20808);
    myResult.push_back(caseQueue.getPriority(45216)); //24
    caseQueue.updatePriority(80594, 41758);
    caseQueue.updatePriority(98319, 21564);
    caseQueue.insert(46766,44428);
    caseQueue.updatePriority(98319, 43207);
    myResult.push_back(caseQueue.getPriority(46766)); //25
    myResult.push_back(caseQueue.getPriority(22079)); //26
    myResult.push_back(caseQueue.getPriority(36836)); //27
    myResult.push_back(caseQueue.getPriority(77854)); //28
    caseQueue.insert(90466,85019);
    caseQueue.insert(16965,16758);
    caseQueue.insert(69116,63505);
    caseQueue.insert(12192,35235);
    myResult.push_back(caseQueue.getPriority(36836)); //29
    myResult.push_back(caseQueue.getPriority(31219)); //30
    caseQueue.insert(99932,31079);
    myResult.push_back(caseQueue.getPriority(22625)); //31
    caseQueue.insert(26982,16595);
    myResult.push_back(caseQueue.getPriority(69116)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(77854, 84017);
    caseQueue.updatePriority(45216, 7584);
    caseQueue.updatePriority(45256, 19290);
    caseQueue.insert(17722,91821);
    caseQueue.insert(90098,89003);
    caseQueue.insert(3324,84465);
    caseQueue.insert(73333,9535);
    caseQueue.updatePriority(98319, 52555);
    caseQueue.insert(4139,96107);
    caseQueue.updatePriority(22625, 72045);
    caseQueue.insert(51524,39536);
    myResult.push_back(caseQueue.getPriority(13111)); //34
    caseQueue.insert(2874,13217);
    caseQueue.updatePriority(46766, 79052);
    caseQueue.updatePriority(36836, 1413);
    caseQueue.updatePriority(17722, 19522);
    caseQueue.insert(89681,92123);
    caseQueue.insert(94119,71064);
    myResult.push_back(caseQueue.getPriority(36836)); //35
    caseQueue.insert(66983,11218);
    caseQueue.insert(31284,52191);
    caseQueue.insert(55912,75352);
    caseQueue.updatePriority(36836, 52741);
    caseQueue.updatePriority(90466, 62955);
    caseQueue.insert(98908,56848);
    caseQueue.insert(65766,42860);
    caseQueue.insert(66880,57318);
    caseQueue.updatePriority(68242, 71377);
    caseQueue.updatePriority(73333, 10499);
    caseQueue.insert(46044,67934);
    caseQueue.insert(69668,96476);
    caseQueue.insert(62386,55177);
    caseQueue.insert(32331,70110);
    myResult.push_back(caseQueue.getPriority(77854)); //36
    caseQueue.updatePriority(13111, 14752);
    myResult.push_back(caseQueue.getPriority(66983)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(13111, 4946);
    caseQueue.updatePriority(66880, 12954);
    caseQueue.updatePriority(65766, 76366);
    caseQueue.updatePriority(13111, 32151);
    caseQueue.insert(97543,27328);
    caseQueue.insert(64570,98959);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(46526,82416);
    myResult.push_back(caseQueue.getPriority(36836)); //40
    caseQueue.insert(66916,24583);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(98460,59053);
    caseQueue.insert(31941,44650);
    caseQueue.updatePriority(46526, 63566);
    caseQueue.insert(76848,61051);
    myResult.push_back(caseQueue.getPriority(89681)); //42
    caseQueue.updatePriority(90098, 95087);
    caseQueue.insert(3309,79715);
    myResult.push_back(caseQueue.getPriority(4139)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(20562,88635);
    caseQueue.insert(2483,50671);
    caseQueue.updatePriority(76848, 48247);
    caseQueue.insert(46393,30866);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(69116, 89228);
    caseQueue.updatePriority(69116, 82892);
    caseQueue.insert(40371,26647);
    caseQueue.updatePriority(99932, 59542);
    caseQueue.insert(79725,76971);
    myResult.push_back(caseQueue.getPriority(31941)); //46
    caseQueue.insert(26406,93984);
    myResult.push_back(caseQueue.getPriority(46044)); //47
    caseQueue.updatePriority(94119, 22822);
    myResult.push_back(caseQueue.getPriority(46393)); //48
    caseQueue.insert(16161,3489);
    caseQueue.insert(52366,75272);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(96204,33411);
    caseQueue.updatePriority(22625, 79914);
    myResult.push_back(caseQueue.getPriority(45256)); //50
    myResult.push_back(caseQueue.getPriority(46044)); //51
    caseQueue.insert(95337,35213);
    caseQueue.updatePriority(97543, 91467);
    caseQueue.updatePriority(76848, 69343);
    myResult.push_back(caseQueue.getPriority(3324)); //52
    caseQueue.insert(74343,42077);
    caseQueue.insert(38339,60511);
    caseQueue.updatePriority(2483, 60710);
    caseQueue.insert(23349,88325);
    caseQueue.insert(99489,86327);
    myResult.push_back(caseQueue.getPriority(69116)); //53
    caseQueue.insert(61677,92365);
    caseQueue.insert(23715,17552);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(99932)); //55
    caseQueue.updatePriority(69116, 97566);
    static const int resultListArray[] = {94776, 96838, -1, 73078, 73078, 54252, 24073, 32030, 40607, 96077, 14909, 76162, 25264, 74211, 37592, 14748, 37592, 60577, 6272, 90816, 3028, 32999, 16712, 92049, 44428, 20808, 30871, 66362, 30871, 67458, 16496, 63505, 68938, 96600, 1413, 84017, 11218, 45216, 73333, 52741, 66983, 92123, 96107, 66880, 2874, 44650, 67934, 30866, 16161, 19290, 67934, 84465, 82892, 26982, 59542}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(152): Basarili" << endl;
    else cout << "Case(152): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_153(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 164);

    vector<int> myResult; 
    caseQueue.insert(41557,59803);
    caseQueue.insert(49616,78706);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(49616, 52013);
    myResult.push_back(caseQueue.getPriority(49616)); //2
    caseQueue.insert(23394,24301);
    caseQueue.insert(56517,7156);
    caseQueue.updatePriority(23394, 81905);
    caseQueue.insert(18343,87844);
    caseQueue.insert(64994,35388);
    myResult.push_back(caseQueue.getPriority(64994)); //3
    myResult.push_back(caseQueue.getPriority(64994)); //4
    myResult.push_back(caseQueue.getPriority(23394)); //5
    myResult.push_back(caseQueue.getPriority(18343)); //6
    myResult.push_back(caseQueue.getPriority(56517)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(5168,43040);
    caseQueue.insert(72378,60945);
    caseQueue.updatePriority(64994, 1032);
    myResult.push_back(caseQueue.getPriority(5168)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(72378)); //11
    caseQueue.updatePriority(72378, 63684);
    caseQueue.insert(26876,91938);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(97593,24268);
    caseQueue.updatePriority(72378, 30429);
    caseQueue.updatePriority(26876, 72841);
    caseQueue.updatePriority(26876, 80662);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(92393,39769);
    caseQueue.updatePriority(49616, 30042);
    caseQueue.insert(96979,48092);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(18343)); //15
    caseQueue.insert(20044,94510);
    caseQueue.insert(58989,94139);
    myResult.push_back(caseQueue.getPriority(96979)); //16
    caseQueue.insert(8327,93357);
    caseQueue.insert(69923,90522);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(69923)); //19
    caseQueue.updatePriority(18343, 70586);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(38778,32321);
    caseQueue.insert(91772,34242);
    caseQueue.insert(43971,63018);
    myResult.push_back(caseQueue.getPriority(58989)); //21
    caseQueue.insert(13442,35474);
    caseQueue.updatePriority(43971, 62178);
    myResult.push_back(caseQueue.getPriority(23394)); //22
    caseQueue.updatePriority(18343, 90774);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(58989)); //24
    caseQueue.insert(62977,9856);
    myResult.push_back(caseQueue.getPriority(8327)); //25
    myResult.push_back(caseQueue.getPriority(20044)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(41674,97775);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(12760,22587);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(41674, 16133);
    caseQueue.insert(61822,36355);
    myResult.push_back(caseQueue.getPriority(43971)); //30
    caseQueue.insert(84743,37465);
    caseQueue.insert(7622,45979);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(8327)); //32
    caseQueue.updatePriority(69923, 35614);
    caseQueue.insert(74585,81408);
    caseQueue.insert(39309,4476);
    myResult.push_back(caseQueue.getPriority(26876)); //33
    caseQueue.updatePriority(20044, 76265);
    caseQueue.insert(93748,32317);
    myResult.push_back(caseQueue.getPriority(84743)); //34
    caseQueue.insert(71126,56745);
    myResult.push_back(caseQueue.getPriority(58989)); //35
    caseQueue.insert(39506,23430);
    myResult.push_back(caseQueue.getPriority(26876)); //36
    caseQueue.insert(90714,99352);
    caseQueue.insert(51652,54690);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(7622, 45630);
    caseQueue.insert(54996,66102);
    caseQueue.insert(13512,84643);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(74601,17761);
    caseQueue.insert(32462,32);
    myResult.push_back(caseQueue.getPriority(90714)); //39
    caseQueue.insert(52582,48448);
    caseQueue.insert(68519,60984);
    myResult.push_back(caseQueue.getPriority(32462)); //40
    caseQueue.updatePriority(93748, 58809);
    myResult.push_back(caseQueue.getPriority(52582)); //41
    caseQueue.insert(12525,72475);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(88631,29511);
    caseQueue.updatePriority(71126, 12464);
    caseQueue.insert(32098,98266);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(97661,32749);
    myResult.push_back(caseQueue.getPriority(74601)); //44
    caseQueue.insert(94098,40781);
    myResult.push_back(caseQueue.getPriority(51652)); //45
    myResult.push_back(caseQueue.getPriority(20044)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(84743, 23331);
    caseQueue.updatePriority(18343, 38541);
    myResult.push_back(caseQueue.getPriority(93748)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(91410,55950);
    caseQueue.insert(98650,71296);
    caseQueue.insert(87144,38979);
    caseQueue.insert(47282,37354);
    myResult.push_back(caseQueue.getPriority(13442)); //50
    caseQueue.updatePriority(97661, 50203);
    caseQueue.updatePriority(13512, 28869);
    caseQueue.insert(59443,26984);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(28199,4969);
    caseQueue.insert(93400,52730);
    caseQueue.insert(41047,25307);
    myResult.push_back(caseQueue.getPriority(13442)); //52
    caseQueue.updatePriority(61822, 70729);
    caseQueue.insert(15610,37594);
    myResult.push_back(caseQueue.getPriority(98650)); //53
    caseQueue.insert(30188,8018);
    caseQueue.insert(50247,96724);
    caseQueue.insert(51399,24531);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(54996, 44178);
    myResult.push_back(caseQueue.getPriority(91410)); //55
    caseQueue.insert(40998,43239);
    myResult.push_back(caseQueue.getPriority(87144)); //56
    caseQueue.insert(39370,83555);
    myResult.push_back(caseQueue.getPriority(93748)); //57
    caseQueue.updatePriority(61822, 62075);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(94098, 39902);
    caseQueue.updatePriority(18343, 32427);
    myResult.push_back(caseQueue.getPriority(61822)); //59
    caseQueue.insert(84506,22830);
    caseQueue.updatePriority(12525, 51329);
    caseQueue.insert(50595,78403);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(7046,24313);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(13512)); //64
    myResult.push_back(caseQueue.getPriority(23394)); //65
    myResult.push_back(caseQueue.getPriority(58989)); //66
    myResult.push_back(caseQueue.getPriority(32098)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(98650)); //70
    caseQueue.insert(44994,61025);
    myResult.push_back(caseQueue.getPriority(47282)); //71
    myResult.push_back(caseQueue.getPriority(90714)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(93400)); //74
    caseQueue.updatePriority(50247, 84975);
    static const int resultListArray[] = {41557, 52013, 35388, 35388, 81905, 87844, 7156, 56517, 43040, 64994, 60945, 5168, 97593, 49616, 87844, 48092, 72378, 92393, 90522, 96979, 94139, 81905, 38778, 94139, 93357, 94510, 62977, 91772, 12760, 62178, 41674, 93357, 80662, 37465, 94139, 80662, 39309, 39506, 99352, 32, 48448, 32462, 71126, 17761, 54690, 76265, 74601, 58809, 84743, 35474, 59443, 35474, 71296, 28199, 55950, 38979, 58809, 30188, 62075, 84506, 7046, 51399, 41047, 28869, 81905, 94139, 98266, 13512, 88631, 71296, 37354, 99352, 18343, 52730}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(153): Basarili" << endl;
    else cout << "Case(153): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_154(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 240);

    vector<int> myResult; 
    caseQueue.insert(34988,2472);
    caseQueue.insert(1702,14883);
    myResult.push_back(caseQueue.getPriority(1702)); //1
    caseQueue.insert(35857,83217);
    caseQueue.insert(38522,66796);
    caseQueue.updatePriority(1702, 74191);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(1702, 75102);
    caseQueue.updatePriority(35857, 71644);
    caseQueue.updatePriority(1702, 30397);
    caseQueue.insert(72170,81694);
    caseQueue.updatePriority(35857, 9964);
    caseQueue.updatePriority(35857, 81753);
    caseQueue.insert(16069,25475);
    caseQueue.insert(42000,33685);
    caseQueue.insert(1471,34569);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(90258,95509);
    caseQueue.insert(36271,89592);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(36271)); //5
    myResult.push_back(caseQueue.getPriority(35857)); //6
    caseQueue.insert(47033,30889);
    myResult.push_back(caseQueue.getPriority(38522)); //7
    caseQueue.updatePriority(47033, 98554);
    caseQueue.updatePriority(47033, 80638);
    caseQueue.insert(34469,1571);
    myResult.push_back(caseQueue.getPriority(42000)); //8
    myResult.push_back(caseQueue.getPriority(35857)); //9
    caseQueue.insert(22136,57202);
    caseQueue.insert(62610,70415);
    caseQueue.insert(93656,55177);
    caseQueue.insert(71444,61562);
    caseQueue.updatePriority(47033, 56681);
    myResult.push_back(caseQueue.getPriority(38522)); //10
    caseQueue.updatePriority(93656, 96131);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(72170, 98097);
    myResult.push_back(caseQueue.getPriority(42000)); //12
    caseQueue.insert(48638,34845);
    myResult.push_back(caseQueue.getPriority(93656)); //13
    caseQueue.insert(9076,57371);
    caseQueue.insert(50096,78915);
    myResult.push_back(caseQueue.getPriority(42000)); //14
    myResult.push_back(caseQueue.getPriority(72170)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(27009,56091);
    caseQueue.insert(25237,74114);
    caseQueue.insert(25229,40467);
    caseQueue.insert(63440,58582);
    caseQueue.insert(53552,46915);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(6507,20422);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(36271, 40263);
    caseQueue.updatePriority(25237, 61791);
    myResult.push_back(caseQueue.getPriority(62610)); //19
    myResult.push_back(caseQueue.getPriority(90258)); //20
    caseQueue.insert(53929,78595);
    caseQueue.insert(14673,64905);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(63757,23475);
    caseQueue.updatePriority(25229, 9428);
    caseQueue.updatePriority(71444, 78396);
    myResult.push_back(caseQueue.getPriority(38522)); //22
    caseQueue.insert(30222,66512);
    caseQueue.updatePriority(47033, 53394);
    caseQueue.insert(11181,31879);
    caseQueue.updatePriority(63440, 8555);
    caseQueue.updatePriority(71444, 59736);
    caseQueue.updatePriority(47033, 35647);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(9076, 23126);
    myResult.push_back(caseQueue.getPriority(62610)); //24
    caseQueue.insert(86571,24712);
    caseQueue.updatePriority(50096, 41300);
    caseQueue.updatePriority(53552, 29966);
    myResult.push_back(caseQueue.getPriority(30222)); //25
    caseQueue.insert(34416,84698);
    caseQueue.insert(62377,8408);
    myResult.push_back(caseQueue.getPriority(62377)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(93656)); //29
    caseQueue.insert(78796,87921);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(9343,75299);
    caseQueue.insert(75564,35949);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(93789,85787);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(47033, 79380);
    caseQueue.updatePriority(62610, 86704);
    caseQueue.insert(90061,3977);
    caseQueue.insert(54930,72462);
    caseQueue.insert(30911,23607);
    caseQueue.updatePriority(35857, 57330);
    caseQueue.insert(64653,8245);
    caseQueue.insert(1445,14760);
    caseQueue.insert(86205,47451);
    caseQueue.updatePriority(9343, 41655);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(54930)); //34
    caseQueue.updatePriority(93656, 87633);
    myResult.push_back(caseQueue.getPriority(25237)); //35
    caseQueue.updatePriority(78796, 4251);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(4862,82560);
    caseQueue.insert(36638,9584);
    myResult.push_back(caseQueue.getPriority(30911)); //37
    caseQueue.updatePriority(35857, 32960);
    caseQueue.insert(61356,32294);
    caseQueue.insert(90780,83606);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(92472,86035);
    myResult.push_back(caseQueue.getPriority(71444)); //39
    caseQueue.insert(61194,41969);
    caseQueue.updatePriority(25237, 59815);
    caseQueue.insert(94799,79797);
    caseQueue.updatePriority(47033, 10337);
    caseQueue.updatePriority(86205, 39935);
    caseQueue.insert(70555,56231);
    caseQueue.insert(76593,19702);
    caseQueue.insert(76754,26360);
    caseQueue.insert(85331,35423);
    myResult.push_back(caseQueue.getPriority(76593)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(47033)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(4933,98364);
    caseQueue.insert(16213,84600);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(30222, 27028);
    myResult.push_back(caseQueue.getPriority(53552)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(14673)); //48
    caseQueue.updatePriority(92472, 19015);
    caseQueue.updatePriority(61356, 11444);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(18978,48364);
    caseQueue.insert(74053,56902);
    myResult.push_back(caseQueue.getPriority(62610)); //50
    caseQueue.insert(53075,11901);
    myResult.push_back(caseQueue.getPriority(53929)); //51
    caseQueue.updatePriority(14673, 2369);
    caseQueue.insert(89698,28151);
    caseQueue.updatePriority(4933, 59570);
    caseQueue.insert(50798,76385);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(53929)); //53
    caseQueue.insert(22817,16057);
    myResult.push_back(caseQueue.getPriority(53552)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(4862, 92296);
    myResult.push_back(caseQueue.getPriority(25237)); //56
    caseQueue.insert(59405,84083);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(36271)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(86205, 98404);
    caseQueue.insert(72793,98315);
    myResult.push_back(caseQueue.getPriority(93789)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(85331, 36771);
    caseQueue.updatePriority(4933, 39347);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(85331, 81528);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(35857, 86875);
    caseQueue.insert(72588,46795);
    caseQueue.insert(41428,84811);
    caseQueue.insert(19312,98320);
    caseQueue.updatePriority(61194, 34496);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(54559,10343);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(53929)); //67
    caseQueue.insert(7404,77739);
    caseQueue.insert(66841,23949);
    caseQueue.updatePriority(4933, 47721);
    caseQueue.insert(64099,59926);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(94799, 44543);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(95892,39661);
    caseQueue.insert(5550,56744);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(51999,90364);
    caseQueue.updatePriority(5550, 66089);
    myResult.push_back(caseQueue.getPriority(62610)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(54930)); //74
    myResult.push_back(caseQueue.getPriority(4862)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(57027,82090);
    myResult.push_back(caseQueue.getPriority(62610)); //77
    caseQueue.insert(31526,55636);
    caseQueue.updatePriority(7404, 52329);
    myResult.push_back(caseQueue.getPriority(22136)); //78
    caseQueue.updatePriority(85331, 89180);
    caseQueue.insert(4117,31601);
    caseQueue.insert(9371,78534);
    caseQueue.updatePriority(54930, 23917);
    caseQueue.insert(81848,54131);
    caseQueue.insert(29055,94037);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(25237, 50504);
    caseQueue.insert(16160,14959);
    myResult.push_back(caseQueue.getPriority(93789)); //80
    caseQueue.insert(24865,42534);
    caseQueue.insert(92971,92803);
    caseQueue.insert(11543,84461);
    caseQueue.updatePriority(9343, 91814);
    caseQueue.insert(39490,79376);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(10777,23114);
    caseQueue.insert(41062,92374);
    caseQueue.insert(53213,43679);
    caseQueue.insert(66586,92570);
    caseQueue.insert(15480,65021);
    caseQueue.updatePriority(9371, 57907);
    caseQueue.updatePriority(19312, 97104);
    myResult.push_back(caseQueue.getPriority(85331)); //83
    myResult.push_back(caseQueue.getPriority(92971)); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(94580,27046);
    caseQueue.insert(62144,21546);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(73999,57009);
    caseQueue.insert(65588,45840);
    caseQueue.insert(18456,74728);
    caseQueue.updatePriority(81848, 86489);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(79278,11885);
    caseQueue.insert(66867,18867);
    static const int resultListArray[] = {14883, 34988, 16069, 1702, 89592, 81753, 66796, 33685, 81753, 66796, 34469, 33685, 96131, 33685, 98097, 42000, 1471, 6507, 70415, 95509, 48638, 66796, 63440, 70415, 66512, 8408, 62377, 25229, 96131, 9076, 63757, 86571, 90061, 72462, 61791, 78796, 23607, 64653, 59736, 19702, 36638, 10337, 47033, 1445, 76593, 29966, 30911, 64905, 61356, 86704, 78595, 14673, 78595, 29966, 53075, 59815, 22817, 40263, 92472, 85787, 76754, 30222, 89698, 53552, 54559, 11181, 78595, 66841, 61194, 75564, 95892, 86704, 36271, 72462, 92296, 50096, 86704, 57202, 54930, 85787, 16160, 4117, 89180, 92803, 10777, 62144, 94580, 24865}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(154): Basarili" << endl;
    else cout << "Case(154): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_155(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 182);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(32644)); //1
    myResult.push_back(caseQueue.getPriority(85312)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(83668,56216);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(6174,73980);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(83761, 93809);
    myResult.push_back(caseQueue.getPriority(34080)); //6
    myResult.push_back(caseQueue.getPriority(18339)); //7
    myResult.push_back(caseQueue.getPriority(14396)); //8
    caseQueue.insert(70124,45536);
    caseQueue.insert(12847,67793);
    caseQueue.insert(50497,29203);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(77073,32073);
    caseQueue.insert(9,56803);
    myResult.push_back(caseQueue.getPriority(9)); //11
    myResult.push_back(caseQueue.getPriority(12847)); //12
    caseQueue.insert(34323,81769);
    caseQueue.insert(12582,6353);
    caseQueue.updatePriority(77073, 38518);
    myResult.push_back(caseQueue.getPriority(12582)); //13
    caseQueue.insert(94818,33837);
    caseQueue.updatePriority(94818, 41716);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(93815,45523);
    caseQueue.insert(9838,27891);
    caseQueue.updatePriority(34323, 75696);
    caseQueue.updatePriority(9, 81660);
    caseQueue.updatePriority(9838, 64760);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(34323)); //17
    caseQueue.insert(74583,33825);
    caseQueue.insert(46015,33182);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(42389,65588);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(12847)); //21
    caseQueue.updatePriority(12847, 41853);
    caseQueue.insert(29777,29652);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(9)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(42389)); //25
    caseQueue.insert(82159,92114);
    caseQueue.updatePriority(9, 73701);
    caseQueue.insert(97001,97335);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(34323, 22467);
    myResult.push_back(caseQueue.getPriority(9)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(42389, 91294);
    myResult.push_back(caseQueue.getPriority(9)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(42389, 40097);
    caseQueue.insert(34251,57454);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(43650,2263);
    myResult.push_back(caseQueue.getPriority(34251)); //32
    caseQueue.updatePriority(97001, 85380);
    caseQueue.updatePriority(43650, 46665);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(86822,1781);
    caseQueue.insert(88913,82431);
    caseQueue.insert(37346,39137);
    myResult.push_back(caseQueue.getPriority(34251)); //34
    caseQueue.insert(3310,6378);
    caseQueue.updatePriority(34251, 29484);
    caseQueue.insert(30232,65411);
    myResult.push_back(caseQueue.getPriority(88913)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(90743,30640);
    caseQueue.insert(1998,63430);
    caseQueue.updatePriority(88913, 3300);
    caseQueue.updatePriority(90743, 3747);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(21751,77181);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(1998)); //40
    myResult.push_back(caseQueue.getPriority(30232)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(82159, 26777);
    caseQueue.insert(47136,85815);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(30232)); //44
    caseQueue.insert(53630,9176);
    caseQueue.updatePriority(53630, 26291);
    caseQueue.updatePriority(30232, 60573);
    caseQueue.insert(48304,40614);
    caseQueue.insert(10953,44881);
    caseQueue.insert(25578,13795);
    caseQueue.insert(96405,48516);
    caseQueue.updatePriority(48304, 4373);
    caseQueue.insert(88748,31088);
    caseQueue.updatePriority(37346, 39284);
    caseQueue.updatePriority(37346, 23983);
    caseQueue.insert(6637,47428);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(47136, 67131);
    caseQueue.insert(86008,32960);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(97001, 7007);
    myResult.push_back(caseQueue.getPriority(21751)); //48
    caseQueue.insert(56512,94573);
    caseQueue.updatePriority(6637, 1635);
    myResult.push_back(caseQueue.getPriority(47136)); //49
    caseQueue.insert(54582,71336);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(87719,86802);
    caseQueue.insert(56845,13952);
    caseQueue.insert(380,80703);
    myResult.push_back(caseQueue.getPriority(380)); //51
    caseQueue.updatePriority(21751, 55789);
    myResult.push_back(caseQueue.getPriority(54582)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(54582, 12425);
    caseQueue.insert(82185,76437);
    caseQueue.insert(66141,83960);
    caseQueue.insert(37119,11298);
    caseQueue.updatePriority(47136, 98909);
    myResult.push_back(caseQueue.getPriority(47136)); //54
    caseQueue.updatePriority(37119, 94919);
    caseQueue.insert(42103,4391);
    caseQueue.insert(27758,47590);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(37119)); //56
    caseQueue.updatePriority(66141, 18082);
    caseQueue.insert(68056,93036);
    myResult.push_back(caseQueue.getPriority(96405)); //57
    caseQueue.updatePriority(37119, 50549);
    myResult.push_back(caseQueue.getPriority(1998)); //58
    caseQueue.insert(60945,32332);
    myResult.push_back(caseQueue.getPriority(88748)); //59
    myResult.push_back(caseQueue.getPriority(27758)); //60
    caseQueue.updatePriority(54582, 29910);
    caseQueue.insert(75189,95324);
    caseQueue.updatePriority(87719, 61497);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(1998, 11382);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(82365,26226);
    caseQueue.updatePriority(47136, 66737);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(96405)); //64
    caseQueue.updatePriority(21751, 5521);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(53630)); //66
    caseQueue.updatePriority(86008, 86560);
    myResult.push_back(caseQueue.getPriority(96405)); //67
    caseQueue.insert(34782,78237);
    caseQueue.insert(34008,5432);
    caseQueue.insert(4797,32767);
    caseQueue.updatePriority(96405, 62452);
    caseQueue.insert(7853,2343);
    myResult.push_back(caseQueue.getPriority(87719)); //68
    caseQueue.insert(88033,2573);
    myResult.push_back(caseQueue.getPriority(82185)); //69
    caseQueue.updatePriority(10953, 81004);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(87719, 87746);
    caseQueue.insert(19447,55041);
    caseQueue.insert(40752,6672);
    caseQueue.insert(76947,79224);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(96405, 82339);
    myResult.push_back(caseQueue.getPriority(87719)); //72
    caseQueue.insert(77066,33568);
    myResult.push_back(caseQueue.getPriority(76947)); //73
    caseQueue.insert(97183,99511);
    caseQueue.updatePriority(47136, 78984);
    caseQueue.insert(64602,3984);
    myResult.push_back(caseQueue.getPriority(27758)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(69041,63933);
    caseQueue.updatePriority(82365, 85178);
    caseQueue.updatePriority(69041, 95558);
    static const int resultListArray[] = {-1, -1, -1, 83668, 6174, -1, -1, -1, 50497, 70124, 56803, 67793, 6353, 12582, 77073, 94818, 75696, 46015, 74583, 93815, 67793, 29777, 81660, 12847, 65588, 9838, 73701, 34323, 73701, 9, 42389, 57454, 43650, 57454, 82431, 86822, 88913, 90743, 3310, 63430, 65411, 34251, 82159, 65411, 48304, 25578, 37346, 77181, 67131, 6637, 80703, 71336, 97001, 98909, 42103, 94919, 48516, 63430, 31088, 47590, 56845, 1998, 66141, 48516, 21751, 26291, 48516, 61497, 76437, 7853, 88033, 87746, 79224, 47590, 64602}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(155): Basarili" << endl;
    else cout << "Case(155): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_156(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 138);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(42783,86144);
    caseQueue.insert(78190,51282);
    caseQueue.updatePriority(78190, 81810);
    myResult.push_back(caseQueue.getPriority(78190)); //2
    myResult.push_back(caseQueue.getPriority(78190)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(49303,72502);
    caseQueue.updatePriority(49303, 4983);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(42783, 23632);
    caseQueue.insert(97105,76508);
    caseQueue.updatePriority(97105, 40331);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(97105)); //7
    caseQueue.updatePriority(97105, 98805);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(82355, 34640);
    caseQueue.insert(91138,21487);
    caseQueue.insert(85091,16795);
    caseQueue.insert(94966,4500);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(25011,88501);
    caseQueue.insert(35309,38699);
    caseQueue.insert(24807,55359);
    caseQueue.insert(44957,2338);
    caseQueue.insert(62847,71143);
    caseQueue.updatePriority(85091, 93621);
    caseQueue.updatePriority(44957, 24712);
    caseQueue.insert(58147,51620);
    caseQueue.updatePriority(62847, 49001);
    caseQueue.insert(25323,18077);
    caseQueue.insert(93322,84216);
    caseQueue.insert(91852,68267);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(85091)); //12
    myResult.push_back(caseQueue.getPriority(58147)); //13
    caseQueue.insert(88766,23808);
    myResult.push_back(caseQueue.getPriority(62847)); //14
    caseQueue.insert(30792,76134);
    myResult.push_back(caseQueue.getPriority(25011)); //15
    myResult.push_back(caseQueue.getPriority(85091)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(24807, 16718);
    caseQueue.updatePriority(85091, 92446);
    caseQueue.insert(79947,66666);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(25011, 81221);
    caseQueue.insert(53964,31110);
    myResult.push_back(caseQueue.getPriority(91852)); //20
    caseQueue.updatePriority(25011, 70289);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(91852)); //22
    caseQueue.insert(71372,83096);
    myResult.push_back(caseQueue.getPriority(79947)); //23
    caseQueue.insert(43657,72480);
    caseQueue.updatePriority(93322, 62001);
    caseQueue.updatePriority(79947, 85267);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(71372)); //25
    caseQueue.updatePriority(30792, 94868);
    caseQueue.insert(10201,56165);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(41453,69511);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(79681,81996);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(73660,51425);
    caseQueue.updatePriority(91852, 72816);
    caseQueue.updatePriority(43657, 65959);
    caseQueue.updatePriority(93322, 17991);
    myResult.push_back(caseQueue.getPriority(91852)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(84312,73101);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(43657, 93274);
    caseQueue.updatePriority(43657, 77587);
    caseQueue.updatePriority(79947, 17190);
    myResult.push_back(caseQueue.getPriority(41453)); //32
    caseQueue.updatePriority(91852, 22175);
    caseQueue.updatePriority(84312, 20226);
    caseQueue.updatePriority(71372, 42874);
    caseQueue.insert(41858,18785);
    caseQueue.insert(89444,50722);
    caseQueue.insert(89439,25557);
    caseQueue.insert(71188,67461);
    caseQueue.updatePriority(85091, 61722);
    caseQueue.updatePriority(71188, 99160);
    caseQueue.insert(33002,42841);
    myResult.push_back(caseQueue.getPriority(43657)); //33
    caseQueue.insert(82105,62295);
    caseQueue.insert(95276,43291);
    caseQueue.insert(23993,47451);
    caseQueue.updatePriority(33002, 48180);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(85091, 33333);
    myResult.push_back(caseQueue.getPriority(41858)); //35
    myResult.push_back(caseQueue.getPriority(41453)); //36
    myResult.push_back(caseQueue.getPriority(82105)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(20906,3086);
    caseQueue.insert(52974,79580);
    caseQueue.insert(37973,94597);
    myResult.push_back(caseQueue.getPriority(23993)); //39
    caseQueue.insert(83538,66794);
    caseQueue.insert(44544,20178);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(41453, 92448);
    caseQueue.insert(12385,3422);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(75514,75126);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(58407,2144);
    caseQueue.updatePriority(83538, 1123);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(10270,96612);
    myResult.push_back(caseQueue.getPriority(30792)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(93197,95835);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(90327,43183);
    caseQueue.insert(20583,50732);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(33002)); //51
    caseQueue.insert(35410,34196);
    caseQueue.insert(81704,43457);
    caseQueue.insert(28737,33491);
    caseQueue.insert(5773,56180);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(90327, 84236);
    caseQueue.insert(4562,41013);
    caseQueue.updatePriority(23993, 47029);
    static const int resultListArray[] = {-1, 81810, 81810, 78190, 49303, 42783, 40331, 97105, 94966, 25323, 91138, 93621, 51620, 49001, 88501, 93621, 88766, 44957, 24807, 68267, 53964, 68267, 66666, 35309, 83096, 62847, 58147, 10201, 72816, 93322, 73660, 69511, 77587, 79947, 18785, 69511, 62295, 41858, 47451, 20906, 44544, 12385, 84312, 91852, 83538, 58407, 94868, 89439, 85091, 71372, 48180, 28737, 35410}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(156): Basarili" << endl;
    else cout << "Case(156): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_157(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 154);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(20321)); //2
    caseQueue.insert(84654,9363);
    caseQueue.insert(28271,73420);
    caseQueue.insert(79084,27549);
    myResult.push_back(caseQueue.getPriority(84654)); //3
    myResult.push_back(caseQueue.getPriority(84654)); //4
    caseQueue.updatePriority(84654, 74869);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(96805,75166);
    caseQueue.updatePriority(96805, 12510);
    caseQueue.insert(76034,54541);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(76034)); //9
    myResult.push_back(caseQueue.getPriority(76034)); //10
    caseQueue.updatePriority(76034, 34719);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(78724, 84456);
    caseQueue.insert(52047,53947);
    myResult.push_back(caseQueue.getPriority(52047)); //12
    caseQueue.updatePriority(52047, 69598);
    myResult.push_back(caseQueue.getPriority(52047)); //13
    caseQueue.updatePriority(52047, 95591);
    caseQueue.updatePriority(52047, 60943);
    caseQueue.updatePriority(52047, 70899);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(62048,78113);
    caseQueue.insert(28661,53601);
    caseQueue.insert(85769,72793);
    caseQueue.insert(34654,67588);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(58113,55811);
    caseQueue.updatePriority(85769, 97169);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(85769)); //18
    caseQueue.updatePriority(62048, 13759);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(88228,86260);
    caseQueue.updatePriority(85769, 86981);
    caseQueue.insert(90143,4058);
    caseQueue.insert(34167,10417);
    caseQueue.updatePriority(88228, 80014);
    caseQueue.updatePriority(85769, 96972);
    caseQueue.insert(95318,31131);
    caseQueue.insert(53853,2856);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(66435,56416);
    caseQueue.insert(94668,61766);
    caseQueue.updatePriority(88228, 30698);
    caseQueue.updatePriority(90143, 55173);
    caseQueue.insert(54059,58143);
    caseQueue.updatePriority(90143, 81701);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(26428,40512);
    myResult.push_back(caseQueue.getPriority(54059)); //22
    caseQueue.insert(881,21252);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(94668)); //24
    caseQueue.updatePriority(85769, 18202);
    caseQueue.insert(7156,33807);
    caseQueue.insert(39633,7849);
    caseQueue.updatePriority(85769, 33907);
    caseQueue.insert(80540,56611);
    caseQueue.insert(28601,32157);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(92167,98778);
    caseQueue.updatePriority(88228, 37296);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(14720,85493);
    caseQueue.updatePriority(28601, 45163);
    caseQueue.insert(36346,36810);
    caseQueue.insert(22593,63850);
    caseQueue.insert(36101,61719);
    myResult.push_back(caseQueue.getPriority(36101)); //27
    caseQueue.insert(14499,94222);
    caseQueue.insert(31213,54049);
    caseQueue.updatePriority(28601, 30969);
    caseQueue.updatePriority(80540, 91585);
    caseQueue.insert(732,27520);
    caseQueue.insert(8914,94241);
    caseQueue.updatePriority(85769, 30603);
    caseQueue.insert(99920,27156);
    caseQueue.updatePriority(80540, 12694);
    caseQueue.insert(86190,87701);
    caseQueue.updatePriority(94668, 33863);
    caseQueue.insert(95119,1802);
    caseQueue.insert(64737,7492);
    caseQueue.updatePriority(88228, 42082);
    caseQueue.insert(89430,64562);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(70666,54931);
    myResult.push_back(caseQueue.getPriority(90143)); //30
    myResult.push_back(caseQueue.getPriority(26428)); //31
    caseQueue.updatePriority(99920, 95544);
    myResult.push_back(caseQueue.getPriority(85769)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(85769)); //35
    caseQueue.insert(9125,31908);
    myResult.push_back(caseQueue.getPriority(26428)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(26911,85705);
    caseQueue.updatePriority(26911, 80037);
    caseQueue.updatePriority(89430, 79971);
    caseQueue.updatePriority(22593, 52563);
    caseQueue.updatePriority(14720, 71363);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(70666)); //41
    myResult.push_back(caseQueue.getPriority(26428)); //42
    myResult.push_back(caseQueue.getPriority(66435)); //43
    myResult.push_back(caseQueue.getPriority(94668)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(36101, 77423);
    caseQueue.insert(95667,72905);
    caseQueue.insert(87472,94867);
    caseQueue.updatePriority(26911, 52683);
    myResult.push_back(caseQueue.getPriority(54059)); //46
    caseQueue.insert(64947,15938);
    caseQueue.insert(18467,30028);
    caseQueue.insert(14990,45535);
    myResult.push_back(caseQueue.getPriority(36101)); //47
    caseQueue.updatePriority(64947, 60124);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(14990)); //50
    caseQueue.insert(75998,79605);
    caseQueue.updatePriority(89430, 27842);
    caseQueue.updatePriority(90143, 50994);
    myResult.push_back(caseQueue.getPriority(36101)); //51
    caseQueue.updatePriority(66435, 17631);
    caseQueue.insert(97393,80962);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(90143)); //53
    caseQueue.insert(36960,44109);
    caseQueue.insert(78807,6929);
    caseQueue.insert(80603,78168);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(81146,6895);
    caseQueue.updatePriority(80603, 959);
    caseQueue.updatePriority(92167, 85731);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(22380,38358);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(93388,5550);
    caseQueue.insert(30128,19896);
    myResult.push_back(caseQueue.getPriority(90143)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    static const int resultListArray[] = {-1, -1, 9363, 9363, 79084, 28271, 84654, 96805, 54541, 54541, 76034, 53947, 69598, 52047, 28661, 58113, 34654, 97169, 62048, 53853, 34167, 58143, 881, 61766, 39633, 95318, 61719, 95119, 64737, 81701, 40512, 30603, 80540, 732, 30603, 40512, 85769, 28601, 9125, 7156, 54931, 40512, 56416, 33863, 94668, 58143, 77423, 18467, 36346, 45535, 77423, 66435, 50994, 78807, 80603, 81146, 50994, 93388, 30128}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(157): Basarili" << endl;
    else cout << "Case(157): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_158(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 187);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(4142,51862);
    caseQueue.updatePriority(4142, 15015);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(66053,93617);
    myResult.push_back(caseQueue.getPriority(66053)); //5
    myResult.push_back(caseQueue.getPriority(66053)); //6
    myResult.push_back(caseQueue.getPriority(66053)); //7
    caseQueue.updatePriority(66053, 88196);
    caseQueue.insert(97298,98571);
    caseQueue.updatePriority(66053, 37783);
    myResult.push_back(caseQueue.getPriority(66053)); //8
    caseQueue.updatePriority(97298, 1471);
    caseQueue.updatePriority(66053, 46953);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(25554,24796);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(66053, 89868);
    caseQueue.insert(46923,45577);
    myResult.push_back(caseQueue.getPriority(66053)); //11
    myResult.push_back(caseQueue.getPriority(46923)); //12
    caseQueue.insert(24524,94046);
    caseQueue.insert(65435,71609);
    myResult.push_back(caseQueue.getPriority(24524)); //13
    caseQueue.insert(11600,58816);
    caseQueue.insert(16088,74958);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(58899,9047);
    caseQueue.updatePriority(66053, 29490);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(16088, 16692);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(26878,69345);
    caseQueue.insert(94009,94627);
    caseQueue.updatePriority(26878, 11704);
    caseQueue.insert(44837,69687);
    caseQueue.insert(32471,97166);
    caseQueue.insert(97922,61619);
    caseQueue.insert(12654,37539);
    caseQueue.insert(34262,63997);
    caseQueue.updatePriority(94009, 21366);
    caseQueue.insert(88381,92086);
    caseQueue.insert(93002,50967);
    caseQueue.insert(5214,34795);
    caseQueue.insert(3085,3794);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(14104,3440);
    caseQueue.updatePriority(94009, 48750);
    caseQueue.insert(14674,36552);
    myResult.push_back(caseQueue.getPriority(24524)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(28016,72420);
    caseQueue.insert(74890,49208);
    caseQueue.insert(23761,47276);
    caseQueue.insert(20732,57581);
    caseQueue.insert(53427,30858);
    caseQueue.updatePriority(28016, 39485);
    caseQueue.updatePriority(34262, 23893);
    caseQueue.insert(71183,54249);
    caseQueue.insert(86538,15805);
    caseQueue.insert(47578,56650);
    caseQueue.insert(98782,50970);
    caseQueue.insert(19595,78029);
    caseQueue.insert(51872,90183);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(5214)); //24
    caseQueue.insert(50962,13091);
    caseQueue.updatePriority(47578, 35957);
    myResult.push_back(caseQueue.getPriority(28016)); //25
    caseQueue.updatePriority(94009, 16011);
    myResult.push_back(caseQueue.getPriority(23761)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(53427)); //28
    caseQueue.updatePriority(12654, 96909);
    caseQueue.insert(61522,51474);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(24524)); //30
    caseQueue.updatePriority(74890, 42591);
    caseQueue.insert(69395,46151);
    myResult.push_back(caseQueue.getPriority(19595)); //31
    caseQueue.insert(42366,69737);
    caseQueue.updatePriority(93002, 68679);
    caseQueue.updatePriority(20732, 14294);
    caseQueue.insert(66752,78117);
    caseQueue.updatePriority(71183, 62768);
    caseQueue.insert(48988,28032);
    myResult.push_back(caseQueue.getPriority(97922)); //32
    caseQueue.insert(99138,92623);
    caseQueue.updatePriority(93002, 8962);
    caseQueue.insert(89636,53268);
    caseQueue.insert(69247,34097);
    caseQueue.insert(28,93039);
    caseQueue.insert(16307,90125);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(45342,85597);
    myResult.push_back(caseQueue.getPriority(44837)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(69395)); //37
    caseQueue.insert(86983,69393);
    caseQueue.updatePriority(28016, 53359);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(28, 78244);
    caseQueue.updatePriority(89636, 2331);
    caseQueue.insert(42608,73478);
    myResult.push_back(caseQueue.getPriority(12654)); //39
    caseQueue.insert(30977,17083);
    caseQueue.updatePriority(69395, 19962);
    caseQueue.insert(23946,60746);
    caseQueue.insert(85265,65570);
    caseQueue.insert(26125,45709);
    caseQueue.updatePriority(24524, 59124);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(60556,15357);
    caseQueue.insert(25002,2664);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(81978,93532);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(99138, 88293);
    myResult.push_back(caseQueue.getPriority(14674)); //43
    caseQueue.updatePriority(97922, 79758);
    caseQueue.insert(63823,13995);
    caseQueue.updatePriority(19595, 78274);
    myResult.push_back(caseQueue.getPriority(12654)); //44
    caseQueue.insert(18404,86706);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(28016)); //46
    caseQueue.insert(25334,4100);
    caseQueue.insert(52469,38618);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(11852,28943);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(85425,54164);
    myResult.push_back(caseQueue.getPriority(28016)); //49
    myResult.push_back(caseQueue.getPriority(26125)); //50
    caseQueue.updatePriority(24524, 57906);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(71366,75410);
    caseQueue.updatePriority(81978, 16563);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(71183, 79249);
    caseQueue.insert(88327,50713);
    caseQueue.insert(16880,50514);
    caseQueue.insert(74788,763);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(58644,68090);
    caseQueue.insert(73379,13503);
    caseQueue.insert(59652,92973);
    caseQueue.insert(27759,71922);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(47951,77262);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(48860,60701);
    myResult.push_back(caseQueue.getPriority(44837)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(21622,30504);
    caseQueue.updatePriority(18404, 17924);
    caseQueue.updatePriority(23946, 39936);
    myResult.push_back(caseQueue.getPriority(44837)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(71183)); //60
    caseQueue.insert(72699,34803);
    caseQueue.updatePriority(69247, 48102);
    caseQueue.insert(68691,19476);
    caseQueue.insert(66145,93777);
    caseQueue.insert(20870,90573);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(27759)); //62
    caseQueue.updatePriority(53427, 88096);
    myResult.push_back(caseQueue.getPriority(42366)); //63
    caseQueue.updatePriority(52469, 54674);
    caseQueue.insert(89369,52016);
    myResult.push_back(caseQueue.getPriority(47951)); //64
    caseQueue.insert(6459,65052);
    caseQueue.insert(71704,42396);
    myResult.push_back(caseQueue.getPriority(48860)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(48977,66570);
    caseQueue.insert(34642,19916);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(42441,41150);
    caseQueue.updatePriority(88327, 64750);
    static const int resultListArray[] = {-1, -1, 4142, -1, 93617, 93617, 93617, 37783, 97298, 25554, 89868, 45577, 94046, 46923, 11600, 58899, 66053, 16088, 65435, 3085, 94046, 14104, 26878, 34795, 39485, 47276, 50962, 30858, 86538, 94046, 78029, 61619, 93002, 20732, 69687, 94009, 46151, 34262, 96909, 89636, 25002, 60556, 36552, 96909, 63823, 53359, 25334, 30977, 53359, 45709, 69395, 81978, 74788, 73379, 48988, 69687, 11852, 69687, 18404, 79249, 68691, 71922, 69737, 77262, 60701, 21622, 34642}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(158): Basarili" << endl;
    else cout << "Case(158): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_159(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 237);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(56021)); //1
    myResult.push_back(caseQueue.getPriority(61047)); //2
    caseQueue.updatePriority(74770, 80157);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(95637, 74807);
    caseQueue.insert(44470,64529);
    caseQueue.insert(88846,9466);
    caseQueue.insert(87472,56652);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(44470, 47676);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(2299,99176);
    caseQueue.insert(6372,88676);
    caseQueue.insert(16716,64472);
    caseQueue.insert(48582,35747);
    caseQueue.insert(19170,32578);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(11516,34741);
    caseQueue.updatePriority(11516, 7319);
    myResult.push_back(caseQueue.getPriority(6372)); //8
    caseQueue.updatePriority(6372, 24072);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(16716)); //10
    caseQueue.insert(35613,37352);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(51841,42795);
    caseQueue.insert(69470,95413);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(22464,91487);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(43265,15047);
    caseQueue.updatePriority(43265, 6739);
    caseQueue.insert(1220,13300);
    myResult.push_back(caseQueue.getPriority(51841)); //14
    caseQueue.updatePriority(1220, 25485);
    caseQueue.insert(75672,27139);
    caseQueue.insert(64662,61487);
    caseQueue.updatePriority(16716, 89227);
    myResult.push_back(caseQueue.getPriority(69470)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(24453,75007);
    myResult.push_back(caseQueue.getPriority(64662)); //17
    caseQueue.insert(97309,31926);
    caseQueue.updatePriority(24453, 21952);
    caseQueue.insert(30690,65291);
    caseQueue.insert(5009,89533);
    caseQueue.insert(99392,70556);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(3406,4211);
    caseQueue.insert(47179,76206);
    caseQueue.insert(84412,49349);
    caseQueue.updatePriority(84412, 3963);
    caseQueue.insert(60799,51832);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(20059,36164);
    myResult.push_back(caseQueue.getPriority(30690)); //21
    caseQueue.insert(87923,78178);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(8303,25584);
    caseQueue.insert(99756,21438);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(30285,33996);
    caseQueue.updatePriority(64662, 34596);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(11342,56125);
    myResult.push_back(caseQueue.getPriority(60799)); //27
    caseQueue.insert(2773,3811);
    caseQueue.insert(51656,1469);
    myResult.push_back(caseQueue.getPriority(5009)); //28
    myResult.push_back(caseQueue.getPriority(2773)); //29
    caseQueue.insert(21566,68327);
    myResult.push_back(caseQueue.getPriority(2299)); //30
    caseQueue.insert(97582,82396);
    myResult.push_back(caseQueue.getPriority(51656)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(95313,70572);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(18753,65725);
    caseQueue.insert(36379,39675);
    caseQueue.insert(97103,7901);
    caseQueue.insert(90066,36424);
    caseQueue.insert(40457,96966);
    caseQueue.insert(25066,93843);
    caseQueue.insert(94751,4758);
    caseQueue.insert(71533,54652);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(31230,91887);
    myResult.push_back(caseQueue.getPriority(18753)); //35
    caseQueue.insert(61175,51476);
    caseQueue.insert(88632,4285);
    caseQueue.updatePriority(2299, 8942);
    myResult.push_back(caseQueue.getPriority(22464)); //36
    caseQueue.insert(13898,58218);
    caseQueue.insert(56918,82352);
    caseQueue.updatePriority(61175, 87677);
    caseQueue.insert(91883,640);
    myResult.push_back(caseQueue.getPriority(5009)); //37
    caseQueue.updatePriority(88632, 33572);
    caseQueue.updatePriority(25066, 58511);
    caseQueue.insert(17143,26539);
    caseQueue.insert(94408,54510);
    caseQueue.insert(8118,15154);
    caseQueue.insert(91321,43453);
    caseQueue.insert(21496,38005);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(64662, 51880);
    caseQueue.insert(27676,89082);
    caseQueue.insert(9456,16653);
    caseQueue.insert(37354,49198);
    caseQueue.insert(82507,3248);
    caseQueue.updatePriority(40457, 80690);
    caseQueue.updatePriority(21496, 90201);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(21496, 95328);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(99392, 40794);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(97582)); //42
    caseQueue.insert(11556,91497);
    caseQueue.insert(46103,87498);
    caseQueue.insert(45663,66589);
    caseQueue.updatePriority(25066, 82585);
    caseQueue.insert(82278,30185);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(64136,80989);
    caseQueue.updatePriority(30690, 83365);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(96411,62921);
    caseQueue.insert(19640,65204);
    myResult.push_back(caseQueue.getPriority(90066)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(16716, 73909);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(36379, 64217);
    caseQueue.insert(12140,33482);
    caseQueue.updatePriority(99392, 31492);
    caseQueue.insert(32439,71878);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(96249,65598);
    myResult.push_back(caseQueue.getPriority(27676)); //49
    caseQueue.insert(35501,61835);
    caseQueue.insert(11564,32042);
    caseQueue.insert(22014,90550);
    caseQueue.insert(51895,97672);
    caseQueue.updatePriority(47179, 36515);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(94408)); //51
    caseQueue.insert(82458,42974);
    myResult.push_back(caseQueue.getPriority(60799)); //52
    caseQueue.updatePriority(11556, 55114);
    caseQueue.insert(79511,73553);
    myResult.push_back(caseQueue.getPriority(51841)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(21566, 1887);
    caseQueue.insert(25878,12114);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(77783,49798);
    caseQueue.updatePriority(61175, 30663);
    caseQueue.insert(81546,39631);
    caseQueue.updatePriority(36379, 71468);
    myResult.push_back(caseQueue.getPriority(21496)); //56
    myResult.push_back(caseQueue.getPriority(96411)); //57
    caseQueue.insert(88555,27747);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(21496)); //59
    caseQueue.updatePriority(16716, 4747);
    caseQueue.updatePriority(35501, 98126);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(61175, 81940);
    caseQueue.updatePriority(82458, 25380);
    caseQueue.insert(26245,31561);
    myResult.push_back(caseQueue.getPriority(88632)); //61
    caseQueue.insert(52469,55745);
    caseQueue.insert(29074,3289);
    caseQueue.insert(81610,39860);
    caseQueue.insert(81777,38116);
    caseQueue.insert(54903,7039);
    caseQueue.updatePriority(69470, 39825);
    myResult.push_back(caseQueue.getPriority(51895)); //62
    myResult.push_back(caseQueue.getPriority(30285)); //63
    caseQueue.updatePriority(29074, 76520);
    caseQueue.insert(4560,28903);
    myResult.push_back(caseQueue.getPriority(88555)); //64
    caseQueue.insert(86981,53446);
    caseQueue.insert(72742,66504);
    caseQueue.insert(37804,68608);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(37804)); //66
    caseQueue.insert(1135,57403);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(87923)); //68
    caseQueue.insert(89951,69087);
    myResult.push_back(caseQueue.getPriority(32439)); //69
    myResult.push_back(caseQueue.getPriority(95313)); //70
    caseQueue.insert(49539,38816);
    myResult.push_back(caseQueue.getPriority(36379)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(91321)); //75
    caseQueue.updatePriority(52469, 80061);
    caseQueue.insert(6961,64637);
    caseQueue.insert(92444,39307);
    caseQueue.insert(74182,24052);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(82300,6501);
    caseQueue.insert(55261,17369);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(60799)); //78
    caseQueue.insert(39669,4099);
    caseQueue.insert(21840,49283);
    caseQueue.insert(41170,96346);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(79511, 51411);
    caseQueue.insert(80751,12735);
    caseQueue.insert(31531,19238);
    caseQueue.insert(60000,15543);
    caseQueue.updatePriority(40457, 78216);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(88293,68649);
    caseQueue.insert(85514,76264);
    myResult.push_back(caseQueue.getPriority(64136)); //81
    caseQueue.insert(15382,47778);
    caseQueue.updatePriority(94408, 92236);
    caseQueue.insert(91219,39434);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(81546, 99795);
    myResult.push_back(caseQueue.getPriority(55261)); //83
    myResult.push_back(caseQueue.getPriority(22014)); //84
    myResult.push_back(caseQueue.getPriority(37804)); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(25038,59713);
    caseQueue.insert(35124,17547);
    static const int resultListArray[] = {-1, -1, -1, 88846, 87472, 44470, 19170, 88676, 11516, 64472, 6372, 48582, 35613, 42795, 95413, 43265, 61487, 24453, 84412, 3406, 65291, 1220, 75672, 99756, 8303, 97309, 51832, 89533, 3811, 99176, 1469, 51656, 2773, 94751, 65725, 91487, 89533, 91883, 82507, 97103, 2299, 82396, 8118, 9456, 36424, 17143, 82278, 99392, 89082, 11564, 54510, 51832, 42795, 12140, 21566, 95328, 62921, 25878, 95328, 16716, 33572, 97672, 33996, 27747, 54903, 68608, 82458, 78178, 71878, 70572, 71468, 88555, 4560, 26245, 43453, 74182, 82300, 51832, 39669, 80751, 80989, 60000, 17369, 90550, 68608, 55261}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(159): Basarili" << endl;
    else cout << "Case(159): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_160(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 238);

    vector<int> myResult; 
    caseQueue.insert(3420,94879);
    myResult.push_back(caseQueue.getPriority(3420)); //1
    myResult.push_back(caseQueue.getPriority(3420)); //2
    caseQueue.updatePriority(3420, 26902);
    caseQueue.insert(27942,76150);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(40119, 21734);
    myResult.push_back(caseQueue.getPriority(42334)); //5
    caseQueue.insert(10092,81317);
    myResult.push_back(caseQueue.getPriority(10092)); //6
    caseQueue.insert(92263,51924);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(10092, 99757);
    caseQueue.insert(93546,82043);
    caseQueue.insert(11290,70912);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(93546, 29797);
    caseQueue.insert(23332,43998);
    myResult.push_back(caseQueue.getPriority(10092)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(24762,74172);
    caseQueue.insert(93574,71189);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(44877,28069);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(10092)); //13
    caseQueue.insert(6202,10721);
    caseQueue.insert(14467,83890);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(14467, 8260);
    caseQueue.insert(21787,63603);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(93565,43382);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(10092)); //20
    caseQueue.insert(2964,34250);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(11717,32321);
    caseQueue.updatePriority(11717, 62962);
    caseQueue.updatePriority(11717, 15827);
    myResult.push_back(caseQueue.getPriority(10092)); //22
    caseQueue.insert(30113,20233);
    caseQueue.insert(79967,34142);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(10092)); //26
    caseQueue.updatePriority(10092, 85546);
    caseQueue.insert(59822,1914);
    caseQueue.insert(61763,63005);
    caseQueue.insert(60327,15162);
    caseQueue.insert(32923,78933);
    caseQueue.insert(72400,7615);
    myResult.push_back(caseQueue.getPriority(60327)); //27
    caseQueue.insert(62599,24742);
    caseQueue.insert(73402,63544);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(2135,99807);
    caseQueue.insert(54755,22736);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(60327)); //30
    caseQueue.updatePriority(62599, 13095);
    myResult.push_back(caseQueue.getPriority(62599)); //31
    myResult.push_back(caseQueue.getPriority(60327)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(44840,36490);
    caseQueue.insert(85674,45735);
    caseQueue.insert(34175,30808);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(13389,7260);
    caseQueue.insert(46841,120);
    caseQueue.insert(33783,31223);
    myResult.push_back(caseQueue.getPriority(34175)); //36
    myResult.push_back(caseQueue.getPriority(33783)); //37
    caseQueue.updatePriority(32923, 70234);
    myResult.push_back(caseQueue.getPriority(2135)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(89536,65812);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(66937,42771);
    caseQueue.insert(45750,30667);
    myResult.push_back(caseQueue.getPriority(44840)); //41
    myResult.push_back(caseQueue.getPriority(44840)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(73402)); //44
    caseQueue.insert(19552,49989);
    caseQueue.insert(58502,89618);
    caseQueue.insert(75081,43855);
    caseQueue.insert(33292,4829);
    myResult.push_back(caseQueue.getPriority(58502)); //45
    caseQueue.insert(27785,87384);
    caseQueue.insert(10028,29364);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(4742,71002);
    myResult.push_back(caseQueue.getPriority(85674)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(10092)); //49
    myResult.push_back(caseQueue.getPriority(66937)); //50
    caseQueue.insert(476,65498);
    caseQueue.insert(23558,16115);
    caseQueue.updatePriority(32923, 1605);
    myResult.push_back(caseQueue.getPriority(66937)); //51
    caseQueue.updatePriority(27785, 44350);
    caseQueue.updatePriority(73402, 88711);
    myResult.push_back(caseQueue.getPriority(34175)); //52
    caseQueue.insert(79861,8215);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(27196,54874);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(34175)); //55
    caseQueue.insert(90002,93433);
    caseQueue.updatePriority(44840, 54493);
    caseQueue.updatePriority(44840, 17921);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(44694,69209);
    caseQueue.insert(39670,34492);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(85674, 20756);
    caseQueue.insert(63284,41836);
    myResult.push_back(caseQueue.getPriority(75081)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(27196)); //61
    caseQueue.updatePriority(2135, 66313);
    caseQueue.insert(82888,93655);
    caseQueue.insert(23563,16420);
    myResult.push_back(caseQueue.getPriority(82888)); //62
    caseQueue.insert(84787,91137);
    myResult.push_back(caseQueue.getPriority(89536)); //63
    caseQueue.insert(41499,72013);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(28006,9075);
    caseQueue.insert(76242,22134);
    caseQueue.insert(66665,80063);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(10092)); //67
    caseQueue.insert(18766,68205);
    caseQueue.insert(46011,95553);
    caseQueue.insert(66425,54636);
    caseQueue.updatePriority(4742, 72942);
    caseQueue.insert(71094,40999);
    myResult.push_back(caseQueue.getPriority(41499)); //68
    caseQueue.insert(84055,24716);
    caseQueue.updatePriority(90002, 80028);
    myResult.push_back(caseQueue.getPriority(44694)); //69
    myResult.push_back(caseQueue.getPriority(33783)); //70
    caseQueue.updatePriority(2135, 60641);
    caseQueue.insert(65793,97247);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(73793,4179);
    caseQueue.updatePriority(476, 90305);
    myResult.push_back(caseQueue.getPriority(27785)); //73
    myResult.push_back(caseQueue.getPriority(89536)); //74
    myResult.push_back(caseQueue.getPriority(58502)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(84787, 64501);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(21642,43393);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(34747,8568);
    myResult.push_back(caseQueue.getPriority(84787)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.getPriority(65793)); //81
    caseQueue.updatePriority(66937, 84302);
    caseQueue.updatePriority(27785, 58910);
    myResult.push_back(caseQueue.getPriority(61763)); //82
    caseQueue.insert(96724,18259);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(22709,13784);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(87614,18503);
    myResult.push_back(caseQueue.getPriority(4742)); //85
    caseQueue.insert(9029,96272);
    caseQueue.insert(43175,7069);
    caseQueue.insert(54611,4855);
    caseQueue.updatePriority(27785, 57848);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(78114,33223);
    caseQueue.insert(77233,60200);
    caseQueue.insert(18708,3306);
    caseQueue.updatePriority(18708, 40145);
    myResult.push_back(caseQueue.getPriority(27785)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(49278,96491);
    myResult.push_back(caseQueue.deleteMin()); //90
    myResult.push_back(caseQueue.getPriority(66425)); //91
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.updatePriority(66665, 86686);
    caseQueue.insert(55827,93200);
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.getPriority(65793)); //97
    caseQueue.insert(38507,46400);
    caseQueue.updatePriority(84787, 56236);
    caseQueue.insert(40184,58217);
    caseQueue.insert(54255,12173);
    caseQueue.insert(82799,99343);
    myResult.push_back(caseQueue.getPriority(73402)); //98
    myResult.push_back(caseQueue.getPriority(82888)); //99
    caseQueue.updatePriority(82888, 31847);
    myResult.push_back(caseQueue.deleteMin()); //100
    myResult.push_back(caseQueue.getPriority(89536)); //101
    caseQueue.insert(57338,39273);
    myResult.push_back(caseQueue.getPriority(66665)); //102
    myResult.push_back(caseQueue.deleteMin()); //103
    caseQueue.insert(85974,12801);
    myResult.push_back(caseQueue.deleteMin()); //104
    myResult.push_back(caseQueue.deleteMin()); //105
    myResult.push_back(caseQueue.deleteMin()); //106
    myResult.push_back(caseQueue.deleteMin()); //107
    caseQueue.updatePriority(66665, 47132);
    myResult.push_back(caseQueue.getPriority(84787)); //108
    caseQueue.insert(39559,97281);
    caseQueue.insert(41411,70732);
    caseQueue.insert(15683,74847);
    myResult.push_back(caseQueue.getPriority(65793)); //109
    caseQueue.insert(3627,6044);
    myResult.push_back(caseQueue.deleteMin()); //110
    caseQueue.insert(52996,63742);
    myResult.push_back(caseQueue.getPriority(18766)); //111
    myResult.push_back(caseQueue.getPriority(49278)); //112
    caseQueue.insert(88211,49273);
    caseQueue.insert(87286,98359);
    myResult.push_back(caseQueue.deleteMin()); //113
    caseQueue.insert(6153,5482);
    myResult.push_back(caseQueue.deleteMin()); //114
    caseQueue.insert(76385,20695);
    caseQueue.insert(46408,96781);
    static const int resultListArray[] = {94879, 94879, 3420, 27942, -1, 81317, 92263, 11290, 99757, 93546, 23332, 44877, 99757, 6202, 14467, 93565, 21787, 93574, 24762, 99757, 2964, 99757, 11717, 30113, 79967, 99757, 15162, 59822, 72400, 15162, 13095, 15162, 62599, 60327, 54755, 30808, 31223, 99807, 46841, 13389, 36490, 36490, 45750, 63544, 89618, 33292, 45735, 10028, 85546, 42771, 42771, 30808, 32923, 79861, 30808, 23558, 44840, 43855, 85674, 34175, 54874, 93655, 65812, 23563, 28006, 76242, 85546, 72013, 69209, 31223, 84055, 33783, 44350, 65812, 89618, 73793, 39670, 71094, 64501, 34747, 97247, 63005, 96724, 22709, 72942, 54611, 43175, 57848, 87614, 78114, 54636, 18708, 63284, 21642, 75081, 19552, 97247, 88711, 93655, 54255, 65812, 86686, 82888, 85974, 57338, 38507, 66425, 56236, 97247, 3627, 68205, 96491, 66665, 6153}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(160): Basarili" << endl;
    else cout << "Case(160): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_161(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 214);

    vector<int> myResult; 
    caseQueue.updatePriority(79815, 3585);
    myResult.push_back(caseQueue.getPriority(63494)); //1
    caseQueue.insert(99909,67633);
    caseQueue.insert(79081,70370);
    caseQueue.updatePriority(79081, 59539);
    myResult.push_back(caseQueue.getPriority(99909)); //2
    myResult.push_back(caseQueue.getPriority(79081)); //3
    myResult.push_back(caseQueue.getPriority(99909)); //4
    caseQueue.insert(12900,36637);
    caseQueue.insert(20389,57228);
    caseQueue.updatePriority(79081, 8485);
    caseQueue.updatePriority(12900, 90291);
    caseQueue.updatePriority(20389, 27235);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(78657,44678);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(58189,28193);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(26638,29512);
    caseQueue.insert(1575,11735);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(61430,23757);
    caseQueue.updatePriority(78657, 8046);
    myResult.push_back(caseQueue.getPriority(12900)); //10
    caseQueue.insert(65645,83882);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(65645, 35323);
    myResult.push_back(caseQueue.getPriority(99909)); //13
    caseQueue.updatePriority(12900, 57964);
    caseQueue.insert(51460,13074);
    caseQueue.insert(11656,12474);
    caseQueue.insert(71088,18479);
    caseQueue.insert(99935,27933);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(51460, 13070);
    caseQueue.insert(39086,89504);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(99909, 76746);
    caseQueue.updatePriority(99909, 30186);
    caseQueue.insert(81857,88980);
    caseQueue.insert(983,84827);
    caseQueue.insert(9933,11520);
    myResult.push_back(caseQueue.getPriority(65645)); //16
    myResult.push_back(caseQueue.getPriority(65645)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(99909)); //20
    caseQueue.insert(18010,64165);
    caseQueue.updatePriority(81857, 14048);
    caseQueue.insert(50550,71441);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(65645)); //22
    myResult.push_back(caseQueue.getPriority(50550)); //23
    myResult.push_back(caseQueue.getPriority(12900)); //24
    caseQueue.insert(55133,87114);
    caseQueue.updatePriority(99909, 25609);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(12900, 35396);
    caseQueue.insert(53458,47344);
    myResult.push_back(caseQueue.getPriority(65645)); //27
    caseQueue.updatePriority(55133, 83673);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(39086)); //29
    caseQueue.insert(85336,91043);
    caseQueue.insert(31685,61736);
    caseQueue.insert(55841,7907);
    caseQueue.updatePriority(55841, 60798);
    caseQueue.insert(86454,49241);
    caseQueue.updatePriority(55841, 51321);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(77056,49956);
    caseQueue.insert(98938,43602);
    caseQueue.insert(62609,2874);
    myResult.push_back(caseQueue.getPriority(53458)); //31
    caseQueue.updatePriority(53458, 81369);
    caseQueue.insert(94249,92103);
    caseQueue.insert(97862,39701);
    caseQueue.insert(19431,65630);
    caseQueue.updatePriority(983, 70604);
    caseQueue.insert(39959,53533);
    myResult.push_back(caseQueue.getPriority(50550)); //32
    caseQueue.insert(85586,49941);
    myResult.push_back(caseQueue.getPriority(97862)); //33
    caseQueue.insert(66880,50485);
    caseQueue.updatePriority(62609, 36811);
    caseQueue.insert(82402,94674);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(1149,10825);
    myResult.push_back(caseQueue.getPriority(50550)); //35
    myResult.push_back(caseQueue.getPriority(18010)); //36
    myResult.push_back(caseQueue.getPriority(85586)); //37
    myResult.push_back(caseQueue.getPriority(19431)); //38
    caseQueue.updatePriority(50550, 93210);
    caseQueue.insert(79280,46456);
    caseQueue.insert(64614,30619);
    myResult.push_back(caseQueue.getPriority(79280)); //39
    caseQueue.insert(54957,69408);
    caseQueue.insert(47191,65930);
    caseQueue.updatePriority(98938, 3067);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(71596,74171);
    myResult.push_back(caseQueue.getPriority(983)); //41
    caseQueue.insert(75156,12434);
    caseQueue.insert(14782,21191);
    myResult.push_back(caseQueue.getPriority(94249)); //42
    caseQueue.insert(29175,4138);
    caseQueue.insert(89403,6791);
    myResult.push_back(caseQueue.getPriority(75156)); //43
    caseQueue.insert(74788,10631);
    caseQueue.insert(33949,60877);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(10374,17562);
    caseQueue.insert(22716,3983);
    myResult.push_back(caseQueue.getPriority(39959)); //45
    caseQueue.updatePriority(75156, 66625);
    caseQueue.updatePriority(54957, 14681);
    caseQueue.insert(30610,85193);
    caseQueue.insert(83993,5376);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(71596, 48582);
    myResult.push_back(caseQueue.getPriority(50550)); //47
    caseQueue.insert(40397,82366);
    caseQueue.insert(91970,24451);
    caseQueue.insert(3748,34026);
    caseQueue.insert(95779,39326);
    caseQueue.updatePriority(33949, 7999);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(91687,21260);
    caseQueue.updatePriority(86454, 54404);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(20542,30889);
    caseQueue.insert(30475,65516);
    caseQueue.insert(35335,10541);
    caseQueue.insert(20854,35774);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(5959,30051);
    caseQueue.insert(22607,89199);
    caseQueue.insert(69937,31742);
    caseQueue.insert(89412,66274);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(50550, 67515);
    caseQueue.updatePriority(47191, 58185);
    caseQueue.insert(81888,48956);
    caseQueue.updatePriority(66880, 2915);
    caseQueue.insert(66133,58830);
    caseQueue.insert(86215,71696);
    myResult.push_back(caseQueue.getPriority(66133)); //53
    myResult.push_back(caseQueue.getPriority(22607)); //54
    caseQueue.insert(62038,97637);
    caseQueue.updatePriority(55841, 37548);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(55841)); //56
    caseQueue.updatePriority(20854, 59746);
    myResult.push_back(caseQueue.getPriority(30610)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(7572,97098);
    myResult.push_back(caseQueue.getPriority(55133)); //59
    myResult.push_back(caseQueue.getPriority(85336)); //60
    caseQueue.insert(67163,62326);
    caseQueue.insert(7028,5983);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(89892,53166);
    caseQueue.insert(87081,68683);
    caseQueue.insert(88084,5727);
    caseQueue.insert(73155,47217);
    caseQueue.insert(42668,32578);
    caseQueue.updatePriority(88084, 81263);
    caseQueue.insert(27868,17555);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(91810,88113);
    caseQueue.insert(66809,50107);
    caseQueue.insert(6825,83103);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(33536,44843);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(63870,2427);
    caseQueue.updatePriority(47191, 5517);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(67163, 97153);
    caseQueue.insert(99794,93894);
    caseQueue.insert(71835,5914);
    caseQueue.insert(30827,70287);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(48048,75315);
    myResult.push_back(caseQueue.getPriority(69937)); //67
    caseQueue.insert(39906,96075);
    myResult.push_back(caseQueue.getPriority(50550)); //68
    caseQueue.updatePriority(55133, 57200);
    caseQueue.insert(20434,46537);
    caseQueue.insert(90846,69204);
    caseQueue.insert(24622,4702);
    caseQueue.insert(33347,83529);
    caseQueue.updatePriority(86454, 58453);
    caseQueue.updatePriority(85586, 79874);
    caseQueue.insert(67547,53765);
    caseQueue.insert(32077,20100);
    caseQueue.insert(79865,43480);
    myResult.push_back(caseQueue.getPriority(31685)); //69
    caseQueue.insert(56715,82945);
    caseQueue.insert(90908,12358);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(71516,6236);
    caseQueue.insert(39096,88791);
    caseQueue.updatePriority(88084, 71863);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(55445,27825);
    caseQueue.insert(33283,22708);
    caseQueue.insert(31278,41459);
    caseQueue.insert(69320,4087);
    static const int resultListArray[] = {-1, 67633, 59539, 67633, 79081, 20389, 58189, 1575, 26638, 90291, 78657, 61430, 67633, 11656, 51460, 35323, 35323, 9933, 71088, 30186, 81857, 35323, 71441, 57964, 99909, 99935, 35323, 65645, 89504, 12900, 47344, 71441, 39701, 62609, 71441, 64165, 49941, 65630, 46456, 98938, 70604, 92103, 12434, 29175, 53533, 22716, 93210, 83993, 89403, 33949, 35335, 74788, 58830, 89199, 66880, 37548, 85193, 1149, 83673, 91043, 7028, 54957, 27868, 10374, 63870, 47191, 31742, 67515, 61736, 24622, 71835, 71516}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(161): Basarili" << endl;
    else cout << "Case(161): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_162(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 134);

    vector<int> myResult; 
    caseQueue.insert(61003,23824);
    caseQueue.updatePriority(61003, 71989);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(58051,65902);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(60779,26197);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(36076,24990);
    caseQueue.insert(25645,78825);
    caseQueue.updatePriority(25645, 61314);
    myResult.push_back(caseQueue.getPriority(36076)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(86394,66978);
    myResult.push_back(caseQueue.getPriority(25645)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(86394)); //8
    myResult.push_back(caseQueue.getPriority(86394)); //9
    myResult.push_back(caseQueue.getPriority(86394)); //10
    caseQueue.insert(85484,78723);
    caseQueue.insert(48943,10102);
    caseQueue.insert(7429,39643);
    caseQueue.insert(63412,78302);
    caseQueue.insert(55460,7338);
    caseQueue.updatePriority(85484, 49396);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(99603,63710);
    caseQueue.insert(93852,90152);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(63412)); //13
    caseQueue.insert(60537,5467);
    caseQueue.insert(69217,53747);
    caseQueue.insert(19815,39475);
    myResult.push_back(caseQueue.getPriority(7429)); //14
    myResult.push_back(caseQueue.getPriority(99603)); //15
    caseQueue.insert(86225,26281);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(63375,22074);
    caseQueue.insert(2298,97897);
    myResult.push_back(caseQueue.getPriority(19815)); //18
    myResult.push_back(caseQueue.getPriority(63375)); //19
    caseQueue.updatePriority(99603, 90285);
    caseQueue.insert(18713,88734);
    caseQueue.insert(71254,89767);
    caseQueue.updatePriority(85484, 54275);
    caseQueue.insert(18846,25365);
    caseQueue.updatePriority(2298, 9973);
    myResult.push_back(caseQueue.getPriority(2298)); //20
    caseQueue.updatePriority(19815, 58679);
    caseQueue.updatePriority(85484, 85756);
    myResult.push_back(caseQueue.getPriority(93852)); //21
    myResult.push_back(caseQueue.getPriority(18846)); //22
    caseQueue.updatePriority(86394, 73436);
    myResult.push_back(caseQueue.getPriority(18713)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(63412)); //25
    caseQueue.insert(33952,26132);
    caseQueue.updatePriority(7429, 95622);
    caseQueue.updatePriority(19815, 51455);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(6962,23128);
    myResult.push_back(caseQueue.getPriority(18713)); //27
    caseQueue.insert(70870,61683);
    caseQueue.updatePriority(19815, 26123);
    caseQueue.updatePriority(99603, 6762);
    caseQueue.updatePriority(19815, 61413);
    caseQueue.updatePriority(6962, 35138);
    caseQueue.updatePriority(86394, 5036);
    caseQueue.insert(52585,46914);
    caseQueue.updatePriority(63412, 54855);
    caseQueue.insert(37215,57475);
    caseQueue.updatePriority(37215, 62396);
    myResult.push_back(caseQueue.getPriority(86394)); //28
    myResult.push_back(caseQueue.getPriority(69217)); //29
    caseQueue.insert(82070,27340);
    caseQueue.insert(46317,87542);
    myResult.push_back(caseQueue.getPriority(7429)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(9891,73065);
    myResult.push_back(caseQueue.getPriority(33952)); //32
    caseQueue.updatePriority(46317, 85748);
    caseQueue.insert(43802,58887);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(29697,71570);
    caseQueue.insert(12275,62281);
    myResult.push_back(caseQueue.getPriority(33952)); //34
    myResult.push_back(caseQueue.getPriority(7429)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(46317, 17992);
    myResult.push_back(caseQueue.getPriority(93852)); //37
    caseQueue.insert(36872,21935);
    myResult.push_back(caseQueue.getPriority(71254)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(78003,11791);
    caseQueue.updatePriority(78003, 32589);
    caseQueue.updatePriority(85484, 7581);
    caseQueue.insert(19560,10229);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(89739,43292);
    caseQueue.insert(94291,45151);
    caseQueue.insert(1778,76558);
    caseQueue.insert(94698,44390);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(65637,5431);
    caseQueue.insert(45284,13228);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(93401,86882);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(21212,50616);
    caseQueue.insert(26821,71439);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(1778)); //48
    caseQueue.updatePriority(93401, 41734);
    myResult.push_back(caseQueue.getPriority(19815)); //49
    caseQueue.updatePriority(1778, 4789);
    caseQueue.insert(64534,64029);
    caseQueue.insert(38218,85304);
    caseQueue.updatePriority(37215, 42245);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(18713)); //51
    myResult.push_back(caseQueue.getPriority(7429)); //52
    caseQueue.insert(15903,24263);
    myResult.push_back(caseQueue.getPriority(69217)); //53
    caseQueue.insert(1971,47338);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(19815)); //55
    caseQueue.insert(38241,35006);
    myResult.push_back(caseQueue.getPriority(19815)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(7429)); //58
    caseQueue.insert(17687,9963);
    static const int resultListArray[] = {61003, 58051, 60779, 24990, 36076, 61314, 25645, 66978, 66978, 66978, 55460, 48943, 78302, 39643, 63710, 60537, 86225, 39475, 22074, 9973, 90152, 25365, 88734, 2298, 78302, 63375, 88734, 5036, 53747, 95622, 86394, 26132, 99603, 26132, 95622, 18846, 90152, 89767, 46317, 85484, 19560, 36872, 33952, 82070, 65637, 45284, 78003, 76558, 61413, 1778, 88734, 95622, 53747, 15903, 61413, 61413, 38241, 95622}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(162): Basarili" << endl;
    else cout << "Case(162): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_163(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 118);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(53279, 52795);
    myResult.push_back(caseQueue.getPriority(7078)); //4
    caseQueue.insert(2692,950);
    myResult.push_back(caseQueue.getPriority(2692)); //5
    myResult.push_back(caseQueue.getPriority(2692)); //6
    caseQueue.insert(46291,62317);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(46291, 61972);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(51362, 38269);
    caseQueue.updatePriority(10253, 15697);
    caseQueue.insert(37798,1072);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(83746,265);
    myResult.push_back(caseQueue.getPriority(83746)); //10
    caseQueue.insert(4791,15359);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(4791, 83090);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(78854)); //13
    myResult.push_back(caseQueue.getPriority(76895)); //14
    caseQueue.insert(99569,92272);
    caseQueue.insert(6075,66942);
    myResult.push_back(caseQueue.getPriority(6075)); //15
    caseQueue.updatePriority(6075, 28457);
    caseQueue.insert(842,12830);
    caseQueue.insert(25278,5192);
    caseQueue.insert(47193,92206);
    caseQueue.insert(79612,1313);
    caseQueue.insert(90960,53000);
    caseQueue.insert(54464,86195);
    myResult.push_back(caseQueue.getPriority(79612)); //16
    myResult.push_back(caseQueue.getPriority(842)); //17
    caseQueue.insert(43085,59531);
    caseQueue.insert(83527,76823);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(20753,32422);
    caseQueue.updatePriority(47193, 75759);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(20753)); //20
    myResult.push_back(caseQueue.getPriority(90960)); //21
    caseQueue.updatePriority(90960, 22804);
    myResult.push_back(caseQueue.getPriority(43085)); //22
    caseQueue.insert(29393,38852);
    myResult.push_back(caseQueue.getPriority(29393)); //23
    caseQueue.insert(57454,11581);
    caseQueue.insert(50451,74131);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(4886,27367);
    caseQueue.updatePriority(20753, 62268);
    caseQueue.updatePriority(4886, 87128);
    caseQueue.insert(12549,70925);
    caseQueue.insert(40729,86656);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(30962,199);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(4886, 45310);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(55059,87934);
    caseQueue.insert(42318,81388);
    myResult.push_back(caseQueue.getPriority(40729)); //30
    caseQueue.insert(25769,77981);
    caseQueue.updatePriority(43085, 94552);
    caseQueue.insert(97969,3935);
    caseQueue.updatePriority(99569, 39065);
    caseQueue.updatePriority(20753, 71821);
    myResult.push_back(caseQueue.getPriority(42318)); //31
    caseQueue.insert(9180,32726);
    myResult.push_back(caseQueue.getPriority(83527)); //32
    caseQueue.updatePriority(54464, 1309);
    caseQueue.insert(37806,45068);
    myResult.push_back(caseQueue.getPriority(97969)); //33
    myResult.push_back(caseQueue.getPriority(54464)); //34
    caseQueue.insert(50644,33094);
    caseQueue.updatePriority(25769, 62988);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(47656,70103);
    myResult.push_back(caseQueue.getPriority(83527)); //36
    caseQueue.insert(87506,33317);
    myResult.push_back(caseQueue.getPriority(20753)); //37
    myResult.push_back(caseQueue.getPriority(47656)); //38
    myResult.push_back(caseQueue.getPriority(47193)); //39
    caseQueue.updatePriority(40729, 32892);
    caseQueue.insert(12991,46031);
    caseQueue.updatePriority(25769, 52790);
    caseQueue.insert(6471,2199);
    caseQueue.updatePriority(42318, 95404);
    myResult.push_back(caseQueue.getPriority(47193)); //40
    caseQueue.insert(84286,73149);
    caseQueue.insert(27476,27163);
    caseQueue.insert(97849,23461);
    myResult.push_back(caseQueue.getPriority(97849)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(12991)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(15300,28689);
    myResult.push_back(caseQueue.getPriority(83527)); //46
    myResult.push_back(caseQueue.getPriority(9180)); //47
    myResult.push_back(caseQueue.getPriority(37806)); //48
    caseQueue.insert(29382,20979);
    caseQueue.insert(45364,60644);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(27476, 61596);
    caseQueue.updatePriority(99569, 60774);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(50410,97179);
    caseQueue.updatePriority(87506, 15467);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(84109,3857);
    myResult.push_back(caseQueue.getPriority(9180)); //52
    caseQueue.insert(22059,92939);
    caseQueue.insert(25370,43369);
    static const int resultListArray[] = {-1, -1, -1, -1, 950, 950, 2692, 46291, 37798, 265, 83746, 4791, -1, -1, 66942, 1313, 12830, 79612, 25278, 32422, 53000, 59531, 38852, 57454, 842, 30962, 90960, 6075, 29393, 86656, 81388, 76823, 3935, 1309, 54464, 76823, 71821, 70103, 75759, 75759, 23461, 6471, 97969, 46031, 97849, 76823, 32726, 45068, 29382, 15300, 87506, 32726}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(163): Basarili" << endl;
    else cout << "Case(163): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_164(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 119);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(1730)); //1
    myResult.push_back(caseQueue.getPriority(48103)); //2
    caseQueue.insert(66072,4461);
    caseQueue.updatePriority(66072, 68768);
    caseQueue.updatePriority(66072, 60317);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(2257, 17967);
    caseQueue.insert(74613,33888);
    caseQueue.insert(44462,93530);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(44462)); //5
    caseQueue.updatePriority(44462, 99203);
    caseQueue.insert(48070,61351);
    myResult.push_back(caseQueue.getPriority(48070)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(44462, 92810);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(9690, 54012);
    caseQueue.insert(38229,61110);
    myResult.push_back(caseQueue.getPriority(38229)); //9
    caseQueue.updatePriority(38229, 90733);
    caseQueue.insert(9781,89695);
    caseQueue.updatePriority(38229, 43219);
    caseQueue.insert(98887,42671);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(65743,86490);
    myResult.push_back(caseQueue.getPriority(9781)); //12
    caseQueue.insert(65618,34661);
    caseQueue.insert(70889,65033);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(51087,16265);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(9781)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(64919,28328);
    caseQueue.insert(31001,26433);
    caseQueue.insert(18111,66579);
    caseQueue.insert(86226,11979);
    caseQueue.updatePriority(86226, 20208);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(55826,45278);
    caseQueue.insert(46410,32143);
    caseQueue.insert(27555,41327);
    caseQueue.insert(40502,26269);
    caseQueue.insert(45247,27170);
    myResult.push_back(caseQueue.getPriority(55826)); //20
    caseQueue.updatePriority(45247, 40775);
    caseQueue.insert(78544,74920);
    caseQueue.updatePriority(46410, 85818);
    caseQueue.updatePriority(18111, 88317);
    myResult.push_back(caseQueue.getPriority(55826)); //21
    caseQueue.insert(11440,21660);
    caseQueue.updatePriority(78544, 70349);
    caseQueue.updatePriority(78544, 65297);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(44065,48783);
    myResult.push_back(caseQueue.getPriority(64919)); //23
    myResult.push_back(caseQueue.getPriority(40502)); //24
    caseQueue.updatePriority(44065, 53629);
    myResult.push_back(caseQueue.getPriority(18111)); //25
    caseQueue.insert(66028,67927);
    caseQueue.insert(25534,18538);
    caseQueue.insert(85925,77485);
    caseQueue.insert(19004,45766);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(90506,81687);
    caseQueue.insert(755,96461);
    caseQueue.insert(49690,91447);
    myResult.push_back(caseQueue.getPriority(66028)); //27
    caseQueue.insert(20138,61823);
    caseQueue.insert(63370,13081);
    caseQueue.updatePriority(64919, 24309);
    caseQueue.updatePriority(85925, 98273);
    myResult.push_back(caseQueue.getPriority(66028)); //28
    caseQueue.insert(75162,83258);
    caseQueue.updatePriority(20138, 28229);
    myResult.push_back(caseQueue.getPriority(45247)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(21000,91043);
    caseQueue.insert(57334,21459);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(75162, 82523);
    caseQueue.insert(82971,59844);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(6841,47628);
    caseQueue.updatePriority(18111, 4056);
    caseQueue.updatePriority(66028, 60758);
    myResult.push_back(caseQueue.getPriority(82971)); //34
    caseQueue.insert(59737,74122);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(78544)); //37
    caseQueue.updatePriority(20138, 80210);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(93011,71963);
    caseQueue.insert(31844,18401);
    caseQueue.updatePriority(75162, 9708);
    caseQueue.insert(79665,31037);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(2379,37591);
    caseQueue.updatePriority(49690, 29789);
    caseQueue.insert(34952,47017);
    caseQueue.updatePriority(19004, 81998);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(19004, 74081);
    caseQueue.insert(70653,83753);
    caseQueue.insert(40245,46754);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(46410)); //42
    myResult.push_back(caseQueue.getPriority(40245)); //43
    caseQueue.insert(65835,65406);
    caseQueue.updatePriority(65835, 67264);
    caseQueue.updatePriority(6841, 99506);
    myResult.push_back(caseQueue.getPriority(20138)); //44
    caseQueue.updatePriority(46410, 90519);
    static const int resultListArray[] = {-1, -1, 66072, 74613, 93530, 61351, 48070, 44462, 61110, 98887, 38229, 89695, 65618, 70889, 51087, 65743, 89695, 9781, 86226, 45278, 45278, 11440, 28328, 26269, 88317, 25534, 67927, 67927, 40775, 63370, 57334, 64919, 40502, 59844, 18111, 31001, 65297, 45247, 75162, 31844, 49690, 85818, 46754, 80210}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(164): Basarili" << endl;
    else cout << "Case(164): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_165(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 235);

    vector<int> myResult; 
    caseQueue.insert(77633,76203);
    caseQueue.insert(26977,52703);
    caseQueue.updatePriority(77633, 20382);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(26977)); //2
    myResult.push_back(caseQueue.getPriority(26977)); //3
    caseQueue.insert(85524,59320);
    myResult.push_back(caseQueue.getPriority(85524)); //4
    myResult.push_back(caseQueue.getPriority(26977)); //5
    caseQueue.updatePriority(85524, 40020);
    caseQueue.insert(80124,59492);
    caseQueue.insert(60109,15594);
    caseQueue.insert(79304,46014);
    caseQueue.updatePriority(80124, 81354);
    myResult.push_back(caseQueue.getPriority(26977)); //6
    caseQueue.insert(6048,11067);
    caseQueue.updatePriority(26977, 33736);
    caseQueue.updatePriority(85524, 1738);
    caseQueue.insert(56423,86702);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(60109)); //8
    caseQueue.insert(1749,69111);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(58697,91921);
    caseQueue.insert(30887,35890);
    myResult.push_back(caseQueue.getPriority(26977)); //11
    caseQueue.insert(29948,98086);
    caseQueue.insert(56678,52598);
    caseQueue.updatePriority(29948, 51875);
    caseQueue.insert(96536,3350);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(19234,24225);
    myResult.push_back(caseQueue.getPriority(80124)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(75688,72920);
    caseQueue.insert(929,42359);
    myResult.push_back(caseQueue.getPriority(56423)); //15
    myResult.push_back(caseQueue.getPriority(56423)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(56678, 65586);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(20441,45010);
    caseQueue.insert(1246,42830);
    caseQueue.insert(64189,80762);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(56423)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(1089,56326);
    caseQueue.insert(45883,56549);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(60273,97373);
    caseQueue.insert(73645,40453);
    myResult.push_back(caseQueue.getPriority(1749)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(45883)); //28
    caseQueue.updatePriority(1749, 22537);
    myResult.push_back(caseQueue.getPriority(45883)); //29
    caseQueue.insert(65206,69390);
    myResult.push_back(caseQueue.getPriority(60273)); //30
    caseQueue.insert(18684,19020);
    caseQueue.updatePriority(65206, 97441);
    caseQueue.updatePriority(64189, 15870);
    caseQueue.insert(59893,56627);
    caseQueue.updatePriority(56678, 45164);
    caseQueue.insert(91058,66614);
    caseQueue.insert(34872,76118);
    caseQueue.insert(81521,39892);
    caseQueue.insert(66921,59120);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(58697, 48448);
    myResult.push_back(caseQueue.getPriority(45883)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(58697)); //35
    myResult.push_back(caseQueue.getPriority(56678)); //36
    caseQueue.updatePriority(58697, 49804);
    caseQueue.updatePriority(81521, 69315);
    caseQueue.insert(53119,24740);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(37801,72772);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(75688)); //40
    caseQueue.insert(9662,64696);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(66921, 33237);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(34872)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(91058)); //45
    caseQueue.insert(42952,2722);
    caseQueue.updatePriority(56423, 69791);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(61604,14346);
    caseQueue.insert(57682,70320);
    myResult.push_back(caseQueue.getPriority(61604)); //47
    caseQueue.insert(88216,97282);
    caseQueue.updatePriority(61604, 86479);
    myResult.push_back(caseQueue.getPriority(34872)); //48
    caseQueue.insert(99738,70835);
    caseQueue.updatePriority(65206, 62457);
    caseQueue.insert(61448,51315);
    caseQueue.insert(65571,2964);
    caseQueue.insert(49646,17757);
    caseQueue.updatePriority(57682, 67922);
    caseQueue.insert(45751,10559);
    myResult.push_back(caseQueue.getPriority(9662)); //49
    myResult.push_back(caseQueue.getPriority(80124)); //50
    caseQueue.insert(58670,68535);
    caseQueue.updatePriority(37801, 51090);
    caseQueue.insert(70835,96266);
    caseQueue.insert(96177,99681);
    myResult.push_back(caseQueue.getPriority(58670)); //51
    caseQueue.updatePriority(96177, 13944);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(61448, 6966);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(9662, 5262);
    caseQueue.insert(79947,88680);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(75688)); //55
    caseQueue.insert(95816,77936);
    caseQueue.updatePriority(75688, 40745);
    caseQueue.insert(7246,95266);
    caseQueue.insert(69616,90201);
    caseQueue.insert(28596,40310);
    caseQueue.insert(98184,41689);
    caseQueue.insert(53260,65421);
    caseQueue.updatePriority(7246, 83020);
    caseQueue.insert(87835,16622);
    caseQueue.insert(28440,84843);
    myResult.push_back(caseQueue.getPriority(45751)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(34872)); //58
    caseQueue.insert(37772,32201);
    caseQueue.insert(64352,58158);
    caseQueue.updatePriority(70835, 75547);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(79947)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(1779,16586);
    caseQueue.updatePriority(28596, 36765);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(81521)); //63
    caseQueue.insert(11497,84001);
    myResult.push_back(caseQueue.getPriority(80124)); //64
    caseQueue.updatePriority(61604, 50852);
    myResult.push_back(caseQueue.getPriority(95816)); //65
    caseQueue.updatePriority(99738, 52886);
    myResult.push_back(caseQueue.getPriority(56423)); //66
    myResult.push_back(caseQueue.getPriority(58670)); //67
    caseQueue.insert(54939,27668);
    caseQueue.insert(21088,31292);
    myResult.push_back(caseQueue.getPriority(95816)); //68
    caseQueue.insert(51624,38505);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(28022,57792);
    myResult.push_back(caseQueue.getPriority(56423)); //70
    myResult.push_back(caseQueue.getPriority(57682)); //71
    caseQueue.updatePriority(98184, 23595);
    caseQueue.updatePriority(34872, 18742);
    caseQueue.insert(797,26811);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(99738)); //73
    myResult.push_back(caseQueue.getPriority(61604)); //74
    caseQueue.insert(59379,88969);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(95816, 27661);
    caseQueue.insert(84061,30940);
    caseQueue.updatePriority(81521, 56788);
    caseQueue.insert(5954,85033);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(21776,2997);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(801,67014);
    caseQueue.insert(62712,32452);
    caseQueue.updatePriority(58670, 75707);
    caseQueue.updatePriority(51624, 45422);
    caseQueue.insert(37292,25366);
    caseQueue.insert(79489,83422);
    caseQueue.updatePriority(37772, 532);
    myResult.push_back(caseQueue.getPriority(69616)); //78
    caseQueue.updatePriority(65206, 62185);
    caseQueue.updatePriority(28022, 13468);
    caseQueue.insert(49138,93128);
    caseQueue.insert(9842,5135);
    caseQueue.insert(17630,2575);
    caseQueue.updatePriority(69616, 83958);
    caseQueue.insert(82815,11573);
    caseQueue.updatePriority(5954, 31774);
    caseQueue.updatePriority(801, 35186);
    myResult.push_back(caseQueue.getPriority(61604)); //79
    myResult.push_back(caseQueue.getPriority(75688)); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(74924,99002);
    myResult.push_back(caseQueue.getPriority(79947)); //82
    caseQueue.insert(52268,70595);
    caseQueue.updatePriority(56423, 74812);
    caseQueue.insert(74848,29109);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(84465,29286);
    caseQueue.updatePriority(62712, 77263);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(60273)); //87
    myResult.push_back(caseQueue.getPriority(53260)); //88
    myResult.push_back(caseQueue.getPriority(58670)); //89
    myResult.push_back(caseQueue.getPriority(28440)); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(62560,37089);
    caseQueue.insert(68071,23209);
    caseQueue.insert(24220,33857);
    caseQueue.insert(50338,628);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(45364,25883);
    myResult.push_back(caseQueue.deleteMin()); //93
    myResult.push_back(caseQueue.deleteMin()); //94
    myResult.push_back(caseQueue.getPriority(62712)); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    myResult.push_back(caseQueue.getPriority(65206)); //98
    myResult.push_back(caseQueue.deleteMin()); //99
    caseQueue.insert(9339,21436);
    myResult.push_back(caseQueue.getPriority(21088)); //100
    myResult.push_back(caseQueue.deleteMin()); //101
    caseQueue.updatePriority(37801, 83263);
    caseQueue.insert(39103,36378);
    myResult.push_back(caseQueue.deleteMin()); //102
    caseQueue.insert(75972,79551);
    myResult.push_back(caseQueue.getPriority(56423)); //103
    static const int resultListArray[] = {77633, 52703, 52703, 59320, 52703, 52703, 85524, 15594, 6048, 60109, 33736, 96536, 81354, 19234, 86702, 86702, 26977, 30887, 929, 1246, 20441, 86702, 79304, 29948, 1089, 69111, 73645, 56549, 56549, 97373, 64189, 18684, 56549, 1749, 48448, 45164, 53119, 56678, 58697, 72920, 45883, 66921, 76118, 59893, 66614, 42952, 14346, 76118, 64696, 81354, 68535, 65571, 61448, 9662, 72920, 10559, 45751, 76118, 96177, 88680, 87835, 1779, 69315, 81354, 77936, 69791, 68535, 77936, 49646, 69791, 67922, 34872, 52886, 50852, 98184, 797, 21776, 90201, 50852, 40745, 37772, 88680, 17630, 9842, 82815, 28022, 97373, 65421, 75707, 84843, 37292, 50338, 68071, 45364, 77263, 95816, 54939, 62185, 74848, 31292, 9339, 84465, 74812}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(165): Basarili" << endl;
    else cout << "Case(165): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_166(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 228);

    vector<int> myResult; 
    caseQueue.insert(37725,17144);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(67399,84582);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(9472,68048);
    myResult.push_back(caseQueue.getPriority(9472)); //5
    myResult.push_back(caseQueue.getPriority(9472)); //6
    caseQueue.updatePriority(9472, 66289);
    caseQueue.insert(88664,72413);
    myResult.push_back(caseQueue.getPriority(88664)); //7
    caseQueue.insert(40894,6582);
    caseQueue.updatePriority(88664, 41166);
    myResult.push_back(caseQueue.getPriority(9472)); //8
    caseQueue.insert(13969,70326);
    caseQueue.updatePriority(40894, 52730);
    caseQueue.insert(86911,26571);
    caseQueue.insert(42571,29944);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(88664)); //10
    caseQueue.insert(46844,28662);
    caseQueue.insert(42570,43258);
    caseQueue.insert(57503,84416);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(40894, 11452);
    caseQueue.insert(14529,66872);
    caseQueue.insert(51741,22926);
    myResult.push_back(caseQueue.getPriority(51741)); //12
    caseQueue.updatePriority(13969, 14385);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(52570,23030);
    caseQueue.insert(44837,39595);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(9472, 83786);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(88664)); //18
    caseQueue.insert(69354,42031);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(69354)); //21
    myResult.push_back(caseQueue.getPriority(42570)); //22
    caseQueue.insert(13859,92017);
    caseQueue.insert(47194,29178);
    caseQueue.insert(83240,87721);
    caseQueue.updatePriority(14529, 36932);
    caseQueue.insert(26766,22019);
    myResult.push_back(caseQueue.getPriority(83240)); //23
    caseQueue.insert(66979,59768);
    caseQueue.insert(68864,89465);
    caseQueue.insert(37064,60644);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(9472)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(9472)); //27
    caseQueue.insert(50197,56043);
    caseQueue.insert(16737,32520);
    caseQueue.insert(81812,99057);
    caseQueue.insert(27413,1076);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(26013,20059);
    caseQueue.insert(65904,8077);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(42570)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(81196,63527);
    caseQueue.insert(70857,28917);
    caseQueue.insert(47047,86622);
    caseQueue.insert(15559,83817);
    caseQueue.insert(16808,96435);
    caseQueue.insert(98584,34019);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(77109,90063);
    myResult.push_back(caseQueue.getPriority(47047)); //33
    caseQueue.insert(51630,33977);
    myResult.push_back(caseQueue.getPriority(15559)); //34
    caseQueue.insert(62971,49606);
    caseQueue.updatePriority(47047, 47091);
    caseQueue.insert(75960,72442);
    caseQueue.insert(58597,1984);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(75960)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(78942,51535);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(81812, 56159);
    caseQueue.updatePriority(50197, 96357);
    caseQueue.insert(55742,1547);
    myResult.push_back(caseQueue.getPriority(81196)); //42
    caseQueue.insert(53433,22593);
    caseQueue.updatePriority(68864, 55731);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(77109)); //44
    myResult.push_back(caseQueue.getPriority(78942)); //45
    caseQueue.insert(45927,81280);
    caseQueue.insert(80290,37924);
    myResult.push_back(caseQueue.getPriority(42570)); //46
    caseQueue.updatePriority(45927, 18414);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(6900,27187);
    myResult.push_back(caseQueue.getPriority(50197)); //48
    myResult.push_back(caseQueue.getPriority(68864)); //49
    caseQueue.insert(44085,18790);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(42570)); //51
    caseQueue.insert(32890,74207);
    caseQueue.insert(20195,58468);
    myResult.push_back(caseQueue.getPriority(42570)); //52
    caseQueue.updatePriority(6900, 82639);
    caseQueue.insert(66109,78376);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(32890, 90091);
    caseQueue.insert(91083,50047);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(35408,88585);
    myResult.push_back(caseQueue.getPriority(47047)); //55
    caseQueue.updatePriority(37064, 91819);
    caseQueue.updatePriority(35408, 76029);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(37064, 85026);
    caseQueue.insert(30751,60589);
    caseQueue.insert(85262,34970);
    myResult.push_back(caseQueue.getPriority(20195)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(35408)); //60
    caseQueue.updatePriority(57503, 86860);
    caseQueue.updatePriority(16808, 98424);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(32890)); //62
    myResult.push_back(caseQueue.getPriority(6900)); //63
    caseQueue.updatePriority(35408, 83860);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(85385,27439);
    caseQueue.insert(9299,34280);
    caseQueue.updatePriority(20195, 36114);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(50197)); //66
    myResult.push_back(caseQueue.getPriority(75960)); //67
    caseQueue.insert(90146,72998);
    caseQueue.updatePriority(9299, 28484);
    caseQueue.insert(8429,92768);
    caseQueue.insert(85208,71647);
    caseQueue.updatePriority(68864, 69489);
    caseQueue.updatePriority(35408, 70115);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(16808, 25883);
    caseQueue.insert(88848,18497);
    caseQueue.insert(6169,49519);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(32716,11079);
    caseQueue.insert(1463,27830);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(36546,73238);
    caseQueue.insert(38880,34734);
    caseQueue.insert(8636,6126);
    caseQueue.insert(40583,52626);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(18599,29851);
    caseQueue.updatePriority(90146, 46620);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(58674,5128);
    caseQueue.insert(55295,48248);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(81196)); //75
    myResult.push_back(caseQueue.getPriority(35408)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(29955,1801);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(74114,11266);
    caseQueue.updatePriority(36546, 74196);
    caseQueue.updatePriority(78942, 58225);
    caseQueue.insert(64210,44307);
    caseQueue.updatePriority(30751, 87044);
    caseQueue.insert(39598,60193);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(83240)); //80
    caseQueue.insert(40218,21443);
    caseQueue.insert(77742,41772);
    myResult.push_back(caseQueue.getPriority(30751)); //81
    myResult.push_back(caseQueue.getPriority(64210)); //82
    caseQueue.insert(10333,13326);
    caseQueue.insert(37617,26046);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(32890, 70929);
    caseQueue.updatePriority(78942, 65050);
    caseQueue.updatePriority(50197, 2584);
    caseQueue.insert(72312,42434);
    caseQueue.insert(63646,6490);
    myResult.push_back(caseQueue.getPriority(90146)); //84
    caseQueue.insert(36079,87082);
    caseQueue.insert(16251,55207);
    caseQueue.updatePriority(39598, 68769);
    myResult.push_back(caseQueue.getPriority(81812)); //85
    caseQueue.insert(60099,88225);
    caseQueue.insert(92322,6657);
    myResult.push_back(caseQueue.getPriority(55295)); //86
    myResult.push_back(caseQueue.getPriority(38880)); //87
    caseQueue.updatePriority(78942, 3521);
    myResult.push_back(caseQueue.getPriority(6169)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(26567,42397);
    caseQueue.updatePriority(15559, 40781);
    myResult.push_back(caseQueue.getPriority(66109)); //90
    caseQueue.insert(14126,75525);
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(74598,38901);
    caseQueue.updatePriority(77742, 94939);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(61332,95898);
    caseQueue.insert(56173,53385);
    caseQueue.updatePriority(37064, 96707);
    caseQueue.insert(33478,78653);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.updatePriority(15559, 76135);
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.updatePriority(20195, 70392);
    myResult.push_back(caseQueue.deleteMin()); //95
    caseQueue.insert(87709,25399);
    caseQueue.insert(972,95736);
    caseQueue.insert(75599,57352);
    caseQueue.insert(7095,28567);
    static const int resultListArray[] = {37725, 67399, -1, -1, 68048, 68048, 72413, 66289, 86911, 41166, 46844, 22926, 40894, 13969, 51741, 52570, 42571, 41166, 44837, 88664, 42031, 43258, 87721, 26766, 83786, 47194, 83786, 27413, 65904, 43258, 26013, 70857, 86622, 83817, 58597, 16737, 51630, 98584, 72442, 14529, 69354, 63527, 55742, 90063, 51535, 43258, 45927, 96357, 55731, 44085, 43258, 43258, 53433, 80290, 47091, 42570, 58468, 85262, 47047, 76029, 62971, 90091, 82639, 91083, 85385, 96357, 72442, 9299, 88848, 32716, 8636, 16808, 1463, 58674, 63527, 70115, 18599, 29955, 74114, 87721, 87044, 44307, 10333, 46620, 56159, 48248, 34734, 49519, 50197, 78376, 78942, 63646, 92322, 40218, 37617}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(166): Basarili" << endl;
    else cout << "Case(166): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_167(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 116);

    vector<int> myResult; 
    caseQueue.insert(20341,84104);
    caseQueue.insert(77989,11788);
    caseQueue.updatePriority(20341, 40798);
    caseQueue.insert(38605,59962);
    caseQueue.insert(1596,29528);
    caseQueue.insert(4080,26212);
    myResult.push_back(caseQueue.getPriority(38605)); //1
    caseQueue.insert(72005,66674);
    caseQueue.insert(67858,7310);
    caseQueue.updatePriority(77989, 56749);
    myResult.push_back(caseQueue.getPriority(1596)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(34682,48785);
    myResult.push_back(caseQueue.getPriority(72005)); //4
    caseQueue.updatePriority(72005, 15751);
    caseQueue.insert(74680,43708);
    caseQueue.updatePriority(4080, 46834);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(74680)); //6
    caseQueue.insert(54684,98458);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(85019,24725);
    caseQueue.insert(33935,89598);
    caseQueue.updatePriority(77989, 33978);
    caseQueue.insert(92801,22645);
    myResult.push_back(caseQueue.getPriority(74680)); //8
    caseQueue.updatePriority(77989, 19752);
    myResult.push_back(caseQueue.getPriority(74680)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(54684, 20795);
    caseQueue.insert(7014,97870);
    caseQueue.updatePriority(33935, 33097);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(57343,67880);
    caseQueue.insert(99360,44793);
    myResult.push_back(caseQueue.getPriority(74680)); //13
    caseQueue.updatePriority(20341, 94473);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(38605, 6841);
    caseQueue.insert(43297,1057);
    caseQueue.insert(79437,66792);
    myResult.push_back(caseQueue.getPriority(20341)); //15
    caseQueue.insert(80252,40019);
    caseQueue.insert(83670,78447);
    caseQueue.updatePriority(38605, 57022);
    myResult.push_back(caseQueue.getPriority(80252)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(91426,14366);
    caseQueue.updatePriority(99360, 93816);
    caseQueue.insert(22653,88383);
    caseQueue.insert(58317,19296);
    myResult.push_back(caseQueue.getPriority(74680)); //18
    caseQueue.updatePriority(38605, 55774);
    caseQueue.updatePriority(99360, 65287);
    caseQueue.insert(63955,71666);
    caseQueue.updatePriority(38605, 28801);
    myResult.push_back(caseQueue.getPriority(80252)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(83670, 13448);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(8178,27832);
    caseQueue.insert(29269,40006);
    caseQueue.insert(9614,45821);
    caseQueue.updatePriority(8178, 68315);
    caseQueue.insert(23491,95028);
    caseQueue.updatePriority(23491, 28869);
    myResult.push_back(caseQueue.getPriority(34682)); //23
    myResult.push_back(caseQueue.getPriority(63955)); //24
    myResult.push_back(caseQueue.getPriority(74680)); //25
    caseQueue.insert(47515,94137);
    caseQueue.updatePriority(22653, 29919);
    caseQueue.insert(95124,98090);
    caseQueue.insert(76021,93830);
    caseQueue.insert(75635,40185);
    caseQueue.insert(80207,4501);
    caseQueue.insert(80073,22848);
    caseQueue.updatePriority(99360, 2374);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(95124, 40803);
    caseQueue.insert(30651,42278);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(80252, 2819);
    caseQueue.insert(68092,84114);
    myResult.push_back(caseQueue.getPriority(7014)); //29
    caseQueue.insert(22691,91771);
    caseQueue.updatePriority(9614, 15824);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(38605)); //31
    myResult.push_back(caseQueue.getPriority(22653)); //32
    myResult.push_back(caseQueue.getPriority(34682)); //33
    caseQueue.updatePriority(7014, 13082);
    myResult.push_back(caseQueue.getPriority(9614)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(72442,22639);
    caseQueue.insert(21286,91728);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(74680)); //38
    caseQueue.updatePriority(30651, 29644);
    caseQueue.insert(7162,34231);
    caseQueue.insert(91170,77892);
    caseQueue.updatePriority(47515, 94207);
    caseQueue.insert(99815,10513);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(1735,78778);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(91170, 38917);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(29269)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(22691)); //46
    static const int resultListArray[] = {59962, 29528, 67858, 66674, 72005, 43708, 1596, 43708, 43708, 77989, 92801, 54684, 43708, 85019, 94473, 40019, 43297, 43708, 40019, 91426, 58317, 83670, 48785, 71666, 43708, 99360, 80207, 80073, 97870, 80252, 28801, 29919, 48785, 15824, 7014, 9614, 72442, 43708, 99815, 38605, 23491, 30651, 22653, 40006, 33935, 91771}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(167): Basarili" << endl;
    else cout << "Case(167): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_168(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 196);

    vector<int> myResult; 
    caseQueue.insert(29853,39725);
    caseQueue.insert(21134,10361);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(82812,18571);
    caseQueue.insert(10373,39909);
    caseQueue.insert(3029,73340);
    caseQueue.updatePriority(29853, 59082);
    caseQueue.insert(62370,77319);
    caseQueue.updatePriority(62370, 23573);
    myResult.push_back(caseQueue.getPriority(29853)); //2
    caseQueue.insert(51990,45205);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(21890,26906);
    caseQueue.insert(76689,54276);
    caseQueue.insert(81771,8982);
    caseQueue.updatePriority(62370, 28814);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(51044,66159);
    caseQueue.insert(95930,84023);
    caseQueue.insert(89350,97502);
    caseQueue.insert(81638,35507);
    caseQueue.updatePriority(76689, 97381);
    myResult.push_back(caseQueue.getPriority(62370)); //5
    caseQueue.updatePriority(62370, 34314);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(10373, 21438);
    myResult.push_back(caseQueue.getPriority(95930)); //7
    caseQueue.insert(64959,58686);
    myResult.push_back(caseQueue.getPriority(76689)); //8
    myResult.push_back(caseQueue.getPriority(89350)); //9
    caseQueue.insert(28754,47741);
    myResult.push_back(caseQueue.getPriority(64959)); //10
    caseQueue.insert(59833,52325);
    caseQueue.updatePriority(51990, 63149);
    caseQueue.insert(42281,42601);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(49338,10207);
    myResult.push_back(caseQueue.getPriority(59833)); //12
    myResult.push_back(caseQueue.getPriority(3029)); //13
    caseQueue.updatePriority(29853, 71776);
    caseQueue.insert(52759,59377);
    caseQueue.updatePriority(62370, 17496);
    caseQueue.updatePriority(42281, 9492);
    caseQueue.updatePriority(49338, 71722);
    caseQueue.insert(22377,82438);
    myResult.push_back(caseQueue.getPriority(29853)); //14
    caseQueue.updatePriority(76689, 79167);
    caseQueue.updatePriority(3029, 46958);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(51044, 58114);
    myResult.push_back(caseQueue.getPriority(76689)); //16
    caseQueue.insert(19625,45310);
    myResult.push_back(caseQueue.getPriority(76689)); //17
    caseQueue.insert(36120,81435);
    caseQueue.insert(95071,56755);
    myResult.push_back(caseQueue.getPriority(51044)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(60357,53648);
    myResult.push_back(caseQueue.getPriority(89350)); //20
    caseQueue.insert(62307,83768);
    caseQueue.updatePriority(64959, 22727);
    myResult.push_back(caseQueue.getPriority(36120)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(28754, 26311);
    caseQueue.insert(64122,77392);
    caseQueue.insert(86916,19927);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(4997,32096);
    myResult.push_back(caseQueue.getPriority(76689)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(94311,91812);
    caseQueue.insert(32431,14988);
    caseQueue.insert(2630,64963);
    caseQueue.insert(80989,97895);
    caseQueue.insert(75529,62658);
    myResult.push_back(caseQueue.getPriority(89350)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(80989)); //31
    caseQueue.insert(281,31662);
    caseQueue.updatePriority(51044, 863);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(3029, 72533);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(63037,44472);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(95071, 15257);
    myResult.push_back(caseQueue.getPriority(80989)); //36
    myResult.push_back(caseQueue.getPriority(29853)); //37
    caseQueue.insert(71226,96251);
    caseQueue.insert(35705,33300);
    myResult.push_back(caseQueue.getPriority(95930)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(80989)); //40
    caseQueue.insert(89161,70023);
    caseQueue.insert(40314,28247);
    caseQueue.insert(20548,98365);
    myResult.push_back(caseQueue.getPriority(60357)); //41
    caseQueue.insert(2841,41648);
    myResult.push_back(caseQueue.getPriority(62307)); //42
    caseQueue.updatePriority(94311, 92209);
    caseQueue.updatePriority(62307, 11183);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(84135,85397);
    myResult.push_back(caseQueue.getPriority(80989)); //44
    myResult.push_back(caseQueue.getPriority(60357)); //45
    caseQueue.insert(82296,32065);
    caseQueue.insert(48990,35984);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(44823,91060);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(94311, 71677);
    caseQueue.updatePriority(48990, 21099);
    caseQueue.insert(99780,20649);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(20352,69765);
    caseQueue.updatePriority(48990, 81775);
    caseQueue.updatePriority(2841, 72713);
    caseQueue.updatePriority(71226, 44928);
    caseQueue.insert(10383,36360);
    caseQueue.insert(76072,4460);
    caseQueue.insert(5441,70649);
    caseQueue.insert(39194,39394);
    myResult.push_back(caseQueue.getPriority(52759)); //49
    caseQueue.updatePriority(39194, 33395);
    myResult.push_back(caseQueue.getPriority(36120)); //50
    caseQueue.insert(96363,47997);
    caseQueue.updatePriority(51990, 32541);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(58974,28705);
    myResult.push_back(caseQueue.getPriority(80989)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(37436,71393);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(63809,43700);
    caseQueue.insert(82749,2401);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(968,64216);
    myResult.push_back(caseQueue.getPriority(2630)); //57
    caseQueue.updatePriority(60357, 61774);
    myResult.push_back(caseQueue.getPriority(60357)); //58
    caseQueue.insert(92367,49125);
    caseQueue.insert(30533,20572);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(60357, 17401);
    caseQueue.insert(80768,96546);
    caseQueue.updatePriority(76689, 49899);
    caseQueue.insert(42750,36906);
    caseQueue.updatePriority(2841, 50036);
    myResult.push_back(caseQueue.getPriority(64122)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(5441)); //62
    caseQueue.insert(76102,89416);
    caseQueue.updatePriority(37436, 34214);
    caseQueue.insert(3196,97597);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(22320,41271);
    caseQueue.insert(62136,29449);
    caseQueue.insert(37911,58762);
    caseQueue.insert(23263,9286);
    caseQueue.insert(14141,22607);
    myResult.push_back(caseQueue.getPriority(23263)); //64
    caseQueue.updatePriority(62136, 52128);
    caseQueue.insert(79893,42800);
    myResult.push_back(caseQueue.getPriority(37436)); //65
    myResult.push_back(caseQueue.getPriority(71226)); //66
    myResult.push_back(caseQueue.getPriority(92367)); //67
    caseQueue.insert(24872,75123);
    caseQueue.insert(7177,51295);
    myResult.push_back(caseQueue.getPriority(3196)); //68
    caseQueue.updatePriority(36120, 92267);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(45160,35621);
    myResult.push_back(caseQueue.getPriority(79893)); //70
    myResult.push_back(caseQueue.getPriority(96363)); //71
    caseQueue.insert(33405,74878);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(56495,28465);
    caseQueue.insert(63423,96983);
    caseQueue.updatePriority(33405, 41851);
    caseQueue.updatePriority(79893, 9567);
    caseQueue.insert(4768,74219);
    caseQueue.insert(55970,69308);
    caseQueue.insert(298,18453);
    caseQueue.updatePriority(56495, 45479);
    myResult.push_back(caseQueue.getPriority(75529)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(22377, 74226);
    myResult.push_back(caseQueue.getPriority(52759)); //77
    caseQueue.insert(96269,11899);
    static const int resultListArray[] = {21134, 59082, 82812, 81771, 28814, 21890, 84023, 97381, 97502, 58686, 10373, 52325, 73340, 71776, 42281, 79167, 79167, 58114, 62370, 97502, 81435, 64959, 86916, 79167, 28754, 4997, 97502, 32431, 81638, 19625, 97895, 51044, 281, 59833, 63037, 97895, 71776, 84023, 95071, 97895, 53648, 83768, 62307, 97895, 53648, 40314, 82296, 99780, 59377, 81435, 76072, 51990, 97895, 58974, 35705, 82749, 64963, 61774, 30533, 77392, 60357, 70649, 39194, 9286, 34214, 44928, 49125, 97597, 23263, 42800, 47997, 14141, 37436, 45160, 62658, 79893, 59377}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(168): Basarili" << endl;
    else cout << "Case(168): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_169(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 224);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(95838,2193);
    caseQueue.updatePriority(95838, 35542);
    caseQueue.updatePriority(95838, 2949);
    myResult.push_back(caseQueue.getPriority(95838)); //2
    caseQueue.updatePriority(95838, 1427);
    caseQueue.insert(64497,12331);
    caseQueue.updatePriority(64497, 20776);
    caseQueue.insert(22699,87407);
    caseQueue.insert(18366,96456);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(18366)); //4
    caseQueue.insert(85954,58807);
    caseQueue.insert(51055,3002);
    caseQueue.insert(22587,86787);
    myResult.push_back(caseQueue.getPriority(51055)); //5
    myResult.push_back(caseQueue.getPriority(51055)); //6
    myResult.push_back(caseQueue.getPriority(22587)); //7
    myResult.push_back(caseQueue.getPriority(18366)); //8
    myResult.push_back(caseQueue.getPriority(22699)); //9
    caseQueue.insert(93074,56057);
    caseQueue.insert(62331,74233);
    caseQueue.insert(1273,63896);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(64497, 80147);
    myResult.push_back(caseQueue.getPriority(18366)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(62331, 23146);
    myResult.push_back(caseQueue.getPriority(22699)); //14
    caseQueue.insert(76979,47092);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(56733,95499);
    caseQueue.insert(8022,45375);
    caseQueue.insert(21279,26093);
    caseQueue.insert(40321,55289);
    caseQueue.insert(33239,62911);
    caseQueue.insert(35684,74030);
    myResult.push_back(caseQueue.getPriority(1273)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(33239)); //18
    caseQueue.insert(81474,47345);
    caseQueue.insert(44467,30920);
    caseQueue.insert(2388,83943);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(13766,6426);
    caseQueue.updatePriority(64497, 22393);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(22699)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(2388, 65734);
    myResult.push_back(caseQueue.getPriority(56733)); //24
    myResult.push_back(caseQueue.getPriority(22699)); //25
    caseQueue.insert(32460,9549);
    caseQueue.insert(76044,74119);
    caseQueue.insert(33074,79068);
    caseQueue.insert(88936,79356);
    caseQueue.updatePriority(18366, 56796);
    myResult.push_back(caseQueue.getPriority(22699)); //26
    caseQueue.insert(22595,15378);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(2388, 10662);
    myResult.push_back(caseQueue.getPriority(81474)); //28
    myResult.push_back(caseQueue.getPriority(76044)); //29
    caseQueue.insert(41015,75394);
    myResult.push_back(caseQueue.getPriority(76044)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(22587, 88554);
    caseQueue.insert(47004,47761);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(22587, 28144);
    caseQueue.insert(89609,19524);
    caseQueue.insert(92385,85852);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(72100,62670);
    caseQueue.insert(14362,93158);
    caseQueue.insert(30410,35187);
    caseQueue.insert(69910,37695);
    caseQueue.updatePriority(1273, 41134);
    caseQueue.insert(56591,89931);
    caseQueue.updatePriority(76044, 48325);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(72100)); //36
    myResult.push_back(caseQueue.getPriority(56591)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(33239, 13094);
    caseQueue.insert(2852,56032);
    caseQueue.insert(36566,78780);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(19633,32506);
    myResult.push_back(caseQueue.getPriority(76044)); //41
    caseQueue.insert(21662,79796);
    caseQueue.updatePriority(35684, 90084);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(14362, 95939);
    caseQueue.insert(58359,80998);
    caseQueue.updatePriority(40321, 96267);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(84717,49428);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(72100)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(63900,82047);
    myResult.push_back(caseQueue.getPriority(18366)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(72100)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(35684, 5753);
    caseQueue.insert(97430,66002);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(18366)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(76759,75340);
    caseQueue.updatePriority(33074, 15511);
    myResult.push_back(caseQueue.getPriority(14362)); //55
    myResult.push_back(caseQueue.getPriority(33074)); //56
    caseQueue.insert(92227,45846);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(21662)); //58
    caseQueue.insert(10457,47169);
    caseQueue.insert(60100,83740);
    myResult.push_back(caseQueue.getPriority(14362)); //59
    caseQueue.insert(43624,11450);
    caseQueue.insert(38185,69617);
    caseQueue.insert(41486,22548);
    myResult.push_back(caseQueue.getPriority(92385)); //60
    caseQueue.updatePriority(38185, 76890);
    caseQueue.insert(54096,77502);
    myResult.push_back(caseQueue.getPriority(97430)); //61
    caseQueue.insert(63221,30079);
    caseQueue.updatePriority(41486, 13711);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(97430, 96173);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(39817,87747);
    caseQueue.insert(60845,59040);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(76759)); //68
    caseQueue.insert(28020,82199);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(61737,87655);
    caseQueue.updatePriority(54096, 63416);
    caseQueue.insert(31453,92055);
    caseQueue.insert(63831,22962);
    caseQueue.insert(91582,85405);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(40321, 37901);
    caseQueue.insert(65069,75424);
    myResult.push_back(caseQueue.getPriority(36566)); //71
    myResult.push_back(caseQueue.getPriority(63900)); //72
    myResult.push_back(caseQueue.getPriority(97430)); //73
    caseQueue.insert(33535,37900);
    myResult.push_back(caseQueue.getPriority(76759)); //74
    myResult.push_back(caseQueue.getPriority(31453)); //75
    myResult.push_back(caseQueue.getPriority(92385)); //76
    caseQueue.insert(73589,75470);
    caseQueue.updatePriority(54096, 7967);
    caseQueue.insert(17618,16862);
    caseQueue.updatePriority(65069, 8341);
    caseQueue.insert(53475,38086);
    caseQueue.insert(64391,67695);
    caseQueue.updatePriority(73589, 49306);
    caseQueue.insert(27369,4342);
    caseQueue.insert(37561,5220);
    caseQueue.updatePriority(54096, 27624);
    caseQueue.insert(59930,11381);
    caseQueue.insert(59537,7304);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(45842,72208);
    caseQueue.insert(49525,72527);
    caseQueue.insert(30216,75365);
    caseQueue.insert(5062,44152);
    caseQueue.insert(62574,14999);
    myResult.push_back(caseQueue.getPriority(36566)); //78
    caseQueue.insert(47425,85853);
    myResult.push_back(caseQueue.getPriority(17618)); //79
    caseQueue.updatePriority(33535, 74267);
    caseQueue.insert(47055,49580);
    caseQueue.updatePriority(30216, 20950);
    caseQueue.updatePriority(62574, 8807);
    caseQueue.updatePriority(54096, 58454);
    caseQueue.insert(7698,98150);
    myResult.push_back(caseQueue.getPriority(54096)); //80
    caseQueue.updatePriority(54096, 7527);
    caseQueue.updatePriority(47425, 46508);
    caseQueue.insert(61573,13902);
    caseQueue.insert(92454,38278);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(47425, 3008);
    myResult.push_back(caseQueue.getPriority(54096)); //82
    myResult.push_back(caseQueue.getPriority(38185)); //83
    myResult.push_back(caseQueue.getPriority(47055)); //84
    caseQueue.updatePriority(54096, 22441);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(28020)); //87
    caseQueue.updatePriority(54096, 52152);
    caseQueue.insert(71338,72569);
    caseQueue.updatePriority(47055, 61275);
    myResult.push_back(caseQueue.getPriority(54096)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(22641,36754);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(56949,98160);
    myResult.push_back(caseQueue.getPriority(54096)); //91
    caseQueue.updatePriority(30216, 42379);
    caseQueue.updatePriority(59930, 25607);
    caseQueue.insert(2268,79111);
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.getPriority(22641)); //93
    myResult.push_back(caseQueue.getPriority(54096)); //94
    myResult.push_back(caseQueue.deleteMin()); //95
    caseQueue.insert(38073,42433);
    caseQueue.insert(37065,31710);
    myResult.push_back(caseQueue.deleteMin()); //96
    caseQueue.insert(90806,66700);
    caseQueue.insert(55691,3662);
    static const int resultListArray[] = {-1, 2949, 95838, 96456, 3002, 3002, 86787, 96456, 87407, 51055, 96456, 93074, 85954, 87407, 62331, 63896, 21279, 62911, 44467, 13766, 87407, 64497, 8022, 95499, 87407, 87407, 32460, 47345, 74119, 74119, 2388, 22595, 89609, 22587, 30410, 62670, 89931, 69910, 1273, 33239, 48325, 19633, 76979, 81474, 62670, 47004, 56796, 76044, 84717, 62670, 2852, 35684, 56796, 18366, 95939, 15511, 33074, 79796, 95939, 85852, 66002, 43624, 41486, 63221, 92227, 10457, 60845, 75340, 72100, 63831, 78780, 82047, 96173, 75340, 92055, 85852, 27369, 78780, 16862, 58454, 37561, 7527, 76890, 49580, 47425, 59537, 82199, 52152, 65069, 62574, 52152, 61573, 36754, 52152, 17618, 59930}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(169): Basarili" << endl;
    else cout << "Case(169): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_170(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 171);

    vector<int> myResult; 
    caseQueue.insert(77927,96473);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(13904,72971);
    myResult.push_back(caseQueue.getPriority(13904)); //2
    caseQueue.insert(99264,3772);
    caseQueue.insert(68674,85218);
    caseQueue.updatePriority(13904, 17100);
    caseQueue.insert(79307,49511);
    caseQueue.updatePriority(99264, 87321);
    caseQueue.updatePriority(13904, 26224);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(79307)); //4
    myResult.push_back(caseQueue.getPriority(79307)); //5
    caseQueue.updatePriority(99264, 70380);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(50289,26876);
    caseQueue.updatePriority(68674, 2348);
    caseQueue.insert(68158,40260);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(99264, 73841);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(2394, 31268);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(69062)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(35460)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(72978)); //16
    caseQueue.updatePriority(86365, 14718);
    myResult.push_back(caseQueue.getPriority(35142)); //17
    caseQueue.updatePriority(90513, 62619);
    caseQueue.insert(98107,31720);
    caseQueue.insert(49851,90868);
    caseQueue.updatePriority(49851, 46068);
    myResult.push_back(caseQueue.getPriority(98107)); //18
    caseQueue.updatePriority(98107, 13064);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(49851, 12143);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(50071,88917);
    caseQueue.insert(73263,92495);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(73263, 3236);
    caseQueue.insert(52587,2734);
    caseQueue.insert(85547,43897);
    caseQueue.insert(51408,34392);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(78560,70292);
    caseQueue.insert(96322,21840);
    caseQueue.insert(79488,39417);
    myResult.push_back(caseQueue.getPriority(78560)); //23
    caseQueue.insert(72209,35707);
    caseQueue.updatePriority(85547, 30318);
    caseQueue.insert(46133,83425);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(46133, 30864);
    caseQueue.updatePriority(96322, 43096);
    caseQueue.insert(69048,72983);
    myResult.push_back(caseQueue.getPriority(72209)); //25
    caseQueue.updatePriority(72209, 72582);
    caseQueue.insert(23314,18509);
    caseQueue.updatePriority(79488, 81005);
    caseQueue.insert(19335,8203);
    caseQueue.updatePriority(79488, 17122);
    caseQueue.insert(65309,66687);
    caseQueue.insert(21880,44105);
    caseQueue.updatePriority(78560, 55603);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(96322, 26885);
    caseQueue.insert(47485,43425);
    caseQueue.insert(30107,36417);
    caseQueue.insert(30614,68646);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(36943,45926);
    caseQueue.insert(22915,11637);
    caseQueue.updatePriority(96322, 35068);
    caseQueue.updatePriority(78560, 79305);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(17607,21760);
    caseQueue.insert(43596,17339);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(406,41064);
    myResult.push_back(caseQueue.getPriority(30107)); //30
    caseQueue.insert(19642,99225);
    caseQueue.insert(93856,71106);
    caseQueue.updatePriority(36943, 66437);
    caseQueue.insert(3507,71809);
    caseQueue.insert(23071,71289);
    myResult.push_back(caseQueue.getPriority(30614)); //31
    caseQueue.updatePriority(19642, 13415);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(406, 21641);
    caseQueue.updatePriority(17607, 30890);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(22555,72381);
    caseQueue.updatePriority(85547, 37294);
    caseQueue.insert(62401,8106);
    caseQueue.updatePriority(85547, 46543);
    caseQueue.insert(39861,49832);
    caseQueue.insert(98739,75131);
    caseQueue.updatePriority(23071, 10587);
    caseQueue.updatePriority(17607, 10591);
    caseQueue.insert(38030,42374);
    caseQueue.insert(16087,63982);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(89149,64798);
    caseQueue.insert(18226,36314);
    caseQueue.updatePriority(23071, 39317);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(72209, 76360);
    caseQueue.insert(9060,57404);
    caseQueue.updatePriority(38030, 45485);
    caseQueue.insert(27369,94596);
    caseQueue.insert(69396,616);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(28626,4354);
    myResult.push_back(caseQueue.getPriority(98739)); //38
    myResult.push_back(caseQueue.getPriority(16087)); //39
    caseQueue.insert(15516,9052);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(93964,22625);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(82,71064);
    caseQueue.insert(533,7689);
    caseQueue.insert(14083,40804);
    caseQueue.insert(50878,47433);
    myResult.push_back(caseQueue.getPriority(533)); //42
    myResult.push_back(caseQueue.getPriority(85547)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(14083)); //45
    caseQueue.insert(4176,11758);
    caseQueue.insert(16951,78279);
    myResult.push_back(caseQueue.getPriority(50878)); //46
    caseQueue.updatePriority(85547, 65647);
    myResult.push_back(caseQueue.getPriority(93964)); //47
    caseQueue.updatePriority(82, 56843);
    caseQueue.insert(97407,95205);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(24919,15206);
    myResult.push_back(caseQueue.getPriority(85547)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(14328,45378);
    caseQueue.updatePriority(30614, 21690);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(54912,31138);
    caseQueue.insert(90439,9883);
    myResult.push_back(caseQueue.getPriority(39861)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(89149)); //54
    myResult.push_back(caseQueue.getPriority(93964)); //55
    caseQueue.insert(35102,15099);
    caseQueue.updatePriority(69048, 28851);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(77192,84715);
    myResult.push_back(caseQueue.getPriority(14083)); //57
    myResult.push_back(caseQueue.getPriority(85547)); //58
    caseQueue.insert(25915,81027);
    caseQueue.insert(89450,56191);
    caseQueue.insert(37029,16804);
    caseQueue.insert(26908,69032);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(21880, 8728);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(89450, 48842);
    caseQueue.updatePriority(89149, 37686);
    myResult.push_back(caseQueue.getPriority(65309)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    static const int resultListArray[] = {77927, 72971, 13904, 49511, 49511, 79307, 68674, 50289, 68158, 99264, -1, -1, -1, -1, -1, -1, -1, 31720, 98107, 49851, 50071, 52587, 70292, 73263, 35707, 19335, 79488, 22915, 43596, 36417, 68646, 19642, 23314, 406, 62401, 17607, 69396, 75131, 63982, 28626, 15516, 7689, 46543, 533, 40804, 47433, 22625, 4176, 65647, 24919, 30614, 49832, 90439, 64798, 22625, 35102, 40804, 65647, 37029, 93964, 21880, 66687, 69048}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(170): Basarili" << endl;
    else cout << "Case(170): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_171(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 138);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(86234,92605);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(76270)); //3
    caseQueue.insert(87932,49605);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(58720)); //5
    caseQueue.insert(512,28808);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(35159, 41347);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(89006)); //9
    caseQueue.insert(22971,11773);
    caseQueue.updatePriority(22971, 66643);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(41540,30624);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(84735,51825);
    caseQueue.insert(42319,52155);
    caseQueue.updatePriority(42319, 15362);
    myResult.push_back(caseQueue.getPriority(42319)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(84735)); //14
    myResult.push_back(caseQueue.getPriority(84735)); //15
    caseQueue.updatePriority(84735, 52350);
    caseQueue.updatePriority(84735, 31942);
    caseQueue.updatePriority(84735, 29363);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(17911,97080);
    caseQueue.insert(91649,9591);
    caseQueue.updatePriority(17911, 6118);
    myResult.push_back(caseQueue.getPriority(91649)); //17
    caseQueue.updatePriority(17911, 4962);
    caseQueue.updatePriority(91649, 62429);
    caseQueue.insert(61146,88425);
    myResult.push_back(caseQueue.getPriority(17911)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(46731,39068);
    caseQueue.insert(76694,46227);
    caseQueue.updatePriority(91649, 88898);
    caseQueue.updatePriority(61146, 91979);
    caseQueue.updatePriority(46731, 21329);
    caseQueue.insert(27997,36804);
    caseQueue.insert(40595,70686);
    caseQueue.insert(44843,72663);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(76694)); //21
    caseQueue.insert(65058,15176);
    caseQueue.insert(57349,51229);
    caseQueue.updatePriority(57349, 64446);
    caseQueue.insert(23882,25607);
    caseQueue.insert(66553,66617);
    caseQueue.insert(67248,58214);
    caseQueue.insert(288,54853);
    caseQueue.insert(55996,8643);
    caseQueue.updatePriority(65058, 75608);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(91649)); //24
    caseQueue.insert(71300,43072);
    caseQueue.updatePriority(27997, 95055);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(57349)); //26
    caseQueue.insert(59378,40942);
    myResult.push_back(caseQueue.getPriority(66553)); //27
    caseQueue.insert(34487,94387);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(64264,96179);
    caseQueue.insert(86134,57745);
    myResult.push_back(caseQueue.getPriority(34487)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(64264)); //31
    caseQueue.insert(12149,33215);
    myResult.push_back(caseQueue.getPriority(57349)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(67248)); //35
    caseQueue.insert(91810,90497);
    caseQueue.insert(41630,95727);
    caseQueue.updatePriority(41630, 34364);
    caseQueue.updatePriority(40595, 4282);
    myResult.push_back(caseQueue.getPriority(41630)); //36
    caseQueue.insert(67376,62650);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(52521,96727);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(86433,76504);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(61146)); //41
    caseQueue.insert(82762,93216);
    caseQueue.updatePriority(27997, 82975);
    caseQueue.insert(6654,97149);
    caseQueue.insert(28933,87345);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(36554,78712);
    myResult.push_back(caseQueue.getPriority(86433)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(31454,23149);
    caseQueue.insert(60545,87226);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(61146)); //47
    caseQueue.insert(69976,58723);
    caseQueue.insert(47860,64904);
    caseQueue.insert(65303,84983);
    caseQueue.insert(99707,57295);
    caseQueue.insert(30623,59764);
    caseQueue.insert(24406,36976);
    caseQueue.insert(66882,72774);
    caseQueue.insert(37183,13530);
    caseQueue.insert(30440,89772);
    myResult.push_back(caseQueue.getPriority(37183)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(35205,5365);
    caseQueue.insert(71696,77489);
    caseQueue.updatePriority(30623, 86507);
    myResult.push_back(caseQueue.getPriority(27997)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(71696, 98007);
    caseQueue.insert(17973,10002);
    myResult.push_back(caseQueue.getPriority(61146)); //52
    caseQueue.insert(70161,64441);
    caseQueue.insert(29843,72702);
    caseQueue.updatePriority(52521, 96672);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(34487, 6553);
    caseQueue.updatePriority(44843, 97336);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(65058)); //57
    caseQueue.insert(25037,28798);
    myResult.push_back(caseQueue.getPriority(29843)); //58
    caseQueue.insert(79142,18799);
    caseQueue.insert(89954,58268);
    myResult.push_back(caseQueue.getPriority(6654)); //59
    static const int resultListArray[] = {-1, 86234, -1, 87932, -1, 512, -1, -1, -1, 22971, 41540, 15362, 42319, 51825, 51825, 84735, 9591, 4962, 17911, 46731, 46227, 55996, 23882, 88898, 71300, 64446, 66617, 59378, 94387, 76694, 96179, 64446, 12149, 288, 58214, 34364, 40595, 41630, 86134, 67248, 91979, 67376, 76504, 57349, 31454, 66553, 91979, 13530, 37183, 82975, 35205, 91979, 17973, 24406, 34487, 99707, 75608, 72702, 97149}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(171): Basarili" << endl;
    else cout << "Case(171): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_172(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 179);

    vector<int> myResult; 
    caseQueue.insert(27789,40544);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(84524, 42071);
    caseQueue.insert(51862,74000);
    caseQueue.insert(8954,52306);
    myResult.push_back(caseQueue.getPriority(8954)); //3
    caseQueue.updatePriority(51862, 70127);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(51862, 56528);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(35192)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(16697)); //8
    caseQueue.insert(85006,14608);
    caseQueue.insert(58632,45421);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(88396,62976);
    myResult.push_back(caseQueue.getPriority(88396)); //10
    caseQueue.insert(3046,73617);
    caseQueue.updatePriority(88396, 9385);
    caseQueue.updatePriority(58632, 46289);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(30537)); //14
    myResult.push_back(caseQueue.getPriority(21476)); //15
    caseQueue.updatePriority(88776, 61218);
    caseQueue.insert(45491,32189);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(69084,32419);
    caseQueue.insert(84769,86034);
    caseQueue.insert(79897,90395);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(46212,46843);
    caseQueue.updatePriority(46212, 65460);
    myResult.push_back(caseQueue.getPriority(79897)); //19
    caseQueue.insert(13195,1824);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(79897, 39272);
    caseQueue.insert(95169,80673);
    caseQueue.insert(23138,42933);
    caseQueue.insert(1570,51972);
    caseQueue.insert(16117,22760);
    caseQueue.insert(722,37245);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(23138)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(23138)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(33175,39209);
    caseQueue.insert(91324,2121);
    caseQueue.updatePriority(1570, 49748);
    caseQueue.insert(84320,84503);
    caseQueue.updatePriority(1570, 38043);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(49606,72405);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(90153,43093);
    caseQueue.updatePriority(49606, 27333);
    caseQueue.insert(54954,45375);
    myResult.push_back(caseQueue.getPriority(49606)); //29
    caseQueue.insert(15289,92898);
    caseQueue.updatePriority(15289, 44655);
    caseQueue.updatePriority(49606, 40791);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(49606, 50577);
    caseQueue.updatePriority(49606, 56062);
    caseQueue.updatePriority(54954, 64380);
    caseQueue.insert(2540,15709);
    caseQueue.updatePriority(2540, 83960);
    myResult.push_back(caseQueue.getPriority(49606)); //31
    caseQueue.insert(90483,17021);
    caseQueue.updatePriority(15289, 24594);
    caseQueue.updatePriority(54954, 38712);
    caseQueue.updatePriority(2540, 92707);
    caseQueue.updatePriority(46212, 7713);
    caseQueue.updatePriority(90153, 4583);
    caseQueue.updatePriority(54954, 76602);
    caseQueue.insert(72904,85852);
    caseQueue.insert(35838,18339);
    myResult.push_back(caseQueue.getPriority(2540)); //32
    caseQueue.updatePriority(54954, 2412);
    caseQueue.insert(7548,52526);
    caseQueue.updatePriority(7548, 65145);
    caseQueue.insert(49466,10482);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(57269,71799);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(2540)); //35
    myResult.push_back(caseQueue.getPriority(57269)); //36
    caseQueue.insert(53957,23782);
    caseQueue.insert(88368,33995);
    caseQueue.insert(69740,27431);
    caseQueue.insert(73070,93751);
    caseQueue.insert(74863,69202);
    myResult.push_back(caseQueue.getPriority(90483)); //37
    caseQueue.updatePriority(2540, 85710);
    caseQueue.insert(94716,59871);
    caseQueue.insert(64507,26769);
    myResult.push_back(caseQueue.getPriority(94716)); //38
    caseQueue.insert(14268,7157);
    myResult.push_back(caseQueue.getPriority(14268)); //39
    caseQueue.insert(27317,86693);
    caseQueue.insert(55652,51917);
    caseQueue.insert(74188,63613);
    caseQueue.insert(20947,28083);
    caseQueue.insert(48115,51780);
    myResult.push_back(caseQueue.getPriority(55652)); //40
    caseQueue.updatePriority(90483, 18333);
    caseQueue.insert(8045,24289);
    caseQueue.insert(24907,81011);
    caseQueue.updatePriority(24907, 69311);
    caseQueue.updatePriority(55652, 35263);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(69740, 21193);
    caseQueue.updatePriority(95169, 76030);
    myResult.push_back(caseQueue.getPriority(73070)); //42
    myResult.push_back(caseQueue.getPriority(24907)); //43
    caseQueue.updatePriority(74188, 63383);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(8045)); //45
    caseQueue.updatePriority(74188, 98850);
    myResult.push_back(caseQueue.getPriority(48115)); //46
    caseQueue.updatePriority(90483, 87092);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(20947, 11655);
    caseQueue.insert(86859,55781);
    caseQueue.insert(75953,18686);
    myResult.push_back(caseQueue.getPriority(57269)); //48
    caseQueue.updatePriority(88368, 76197);
    myResult.push_back(caseQueue.getPriority(2540)); //49
    caseQueue.insert(82385,71686);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(2540)); //51
    caseQueue.updatePriority(86859, 1144);
    caseQueue.insert(81363,69789);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(44617,66607);
    caseQueue.insert(45162,11732);
    caseQueue.insert(73988,95297);
    caseQueue.updatePriority(88368, 964);
    caseQueue.insert(85274,14419);
    caseQueue.insert(5214,98204);
    myResult.push_back(caseQueue.getPriority(44617)); //53
    myResult.push_back(caseQueue.getPriority(8045)); //54
    caseQueue.insert(84016,62438);
    caseQueue.insert(46061,4885);
    caseQueue.insert(60142,22361);
    caseQueue.insert(21900,66476);
    caseQueue.insert(17478,6560);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(62768,80893);
    caseQueue.updatePriority(45162, 31185);
    myResult.push_back(caseQueue.getPriority(81363)); //56
    caseQueue.insert(5924,83790);
    caseQueue.updatePriority(44617, 76200);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(67180,46833);
    caseQueue.insert(21452,19783);
    caseQueue.insert(65909,14588);
    caseQueue.updatePriority(69740, 44944);
    caseQueue.insert(42137,45413);
    caseQueue.insert(56909,97730);
    myResult.push_back(caseQueue.getPriority(8045)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(23953,83412);
    caseQueue.updatePriority(49606, 86658);
    caseQueue.insert(17478,40973);
    caseQueue.insert(31962,62063);
    caseQueue.insert(66181,30014);
    myResult.push_back(caseQueue.getPriority(5214)); //61
    myResult.push_back(caseQueue.getPriority(72904)); //62
    myResult.push_back(caseQueue.getPriority(44617)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(2540, 57727);
    static const int resultListArray[] = {27789, -1, 52306, 8954, 51862, -1, -1, -1, 85006, 62976, 88396, 58632, 3046, -1, -1, 45491, 69084, 84769, 90395, 13195, 16117, 722, 42933, 79897, 42933, 23138, 91324, 1570, 27333, 33175, 56062, 92707, 54954, 90153, 92707, 71799, 17021, 59871, 7157, 51917, 14268, 93751, 69311, 46212, 24289, 51780, 49466, 71799, 85710, 20947, 85710, 86859, 66607, 24289, 88368, 69789, 46061, 17478, 24289, 85274, 98204, 85852, 76200, 65909}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(172): Basarili" << endl;
    else cout << "Case(172): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_173(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 133);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(71783)); //1
    myResult.push_back(caseQueue.getPriority(55825)); //2
    caseQueue.updatePriority(222, 23270);
    myResult.push_back(caseQueue.getPriority(42569)); //3
    caseQueue.insert(9357,43320);
    caseQueue.insert(66671,83156);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(4917, 28199);
    caseQueue.updatePriority(72440, 60582);
    caseQueue.insert(28350,41104);
    myResult.push_back(caseQueue.getPriority(28350)); //6
    myResult.push_back(caseQueue.getPriority(28350)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(75291, 74403);
    caseQueue.insert(60655,91792);
    myResult.push_back(caseQueue.getPriority(60655)); //9
    caseQueue.insert(57985,32962);
    myResult.push_back(caseQueue.getPriority(57985)); //10
    caseQueue.insert(97683,52532);
    caseQueue.updatePriority(60655, 2824);
    caseQueue.insert(62682,83327);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(97683, 49745);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(62682, 52260);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(23907,36287);
    caseQueue.insert(5364,83831);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(78033,60427);
    caseQueue.insert(63758,48317);
    myResult.push_back(caseQueue.getPriority(63758)); //18
    myResult.push_back(caseQueue.getPriority(63758)); //19
    caseQueue.updatePriority(78033, 96877);
    caseQueue.insert(37685,57576);
    caseQueue.insert(44323,35217);
    caseQueue.insert(26266,61976);
    caseQueue.insert(98629,5569);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(82551,53056);
    caseQueue.updatePriority(26266, 94575);
    caseQueue.updatePriority(82551, 90172);
    caseQueue.insert(49628,89446);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(26266)); //24
    caseQueue.updatePriority(26266, 49409);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(5591,1758);
    myResult.push_back(caseQueue.getPriority(5591)); //26
    caseQueue.updatePriority(5591, 42016);
    myResult.push_back(caseQueue.getPriority(5591)); //27
    caseQueue.insert(110,45841);
    myResult.push_back(caseQueue.getPriority(5591)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(1533,34394);
    caseQueue.insert(60270,75284);
    caseQueue.updatePriority(60270, 57022);
    myResult.push_back(caseQueue.getPriority(110)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(27170,68935);
    caseQueue.insert(4839,12429);
    caseQueue.updatePriority(60270, 48817);
    caseQueue.updatePriority(4839, 50308);
    caseQueue.insert(13969,39170);
    caseQueue.insert(37549,35104);
    caseQueue.insert(27096,70094);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(2846,53675);
    caseQueue.updatePriority(82551, 30078);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(110, 17053);
    caseQueue.insert(32293,58753);
    caseQueue.insert(18341,66536);
    myResult.push_back(caseQueue.getPriority(13969)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(75575,68340);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(32293)); //39
    caseQueue.insert(94671,22307);
    myResult.push_back(caseQueue.getPriority(18341)); //40
    caseQueue.updatePriority(2846, 18142);
    caseQueue.insert(11097,19408);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(17948,17663);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(60317,63457);
    caseQueue.updatePriority(94671, 68449);
    myResult.push_back(caseQueue.getPriority(49628)); //44
    caseQueue.insert(12226,90660);
    caseQueue.insert(52750,42681);
    caseQueue.updatePriority(78033, 85516);
    caseQueue.updatePriority(94671, 84483);
    myResult.push_back(caseQueue.getPriority(18341)); //45
    myResult.push_back(caseQueue.getPriority(27096)); //46
    caseQueue.insert(13485,98743);
    caseQueue.insert(89271,66740);
    myResult.push_back(caseQueue.getPriority(78033)); //47
    caseQueue.insert(94608,98752);
    caseQueue.insert(20172,40689);
    caseQueue.insert(93402,12542);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(30924,48746);
    caseQueue.insert(5409,85726);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(49628)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(89271)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(60317)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(6971,81856);
    caseQueue.updatePriority(78033, 82644);
    caseQueue.updatePriority(27170, 13438);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(78033, 74103);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(63003,52655);
    caseQueue.insert(72634,19097);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(12226)); //60
    caseQueue.insert(64570,41608);
    myResult.push_back(caseQueue.getPriority(63003)); //61
    caseQueue.insert(18693,31067);
    static const int resultListArray[] = {-1, -1, -1, 9357, 66671, 41104, 41104, 28350, 91792, 32962, 60655, 57985, 97683, 62682, -1, 23907, 5364, 48317, 48317, 98629, 44323, 63758, 37685, 94575, 26266, 1758, 42016, 42016, 5591, 45841, 1533, 37549, 82551, 39170, 110, 13969, 60270, 4839, 58753, 66536, 2846, 17948, 11097, 89446, 66536, 70094, 85516, 93402, 20172, 52750, 89446, 30924, 66740, 32293, 63457, 60317, 27170, 18341, 72634, 90660, 52655}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(173): Basarili" << endl;
    else cout << "Case(173): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_174(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 146);

    vector<int> myResult; 
    caseQueue.insert(94794,45977);
    caseQueue.insert(99929,35422);
    caseQueue.insert(90393,57574);
    caseQueue.insert(70722,4346);
    caseQueue.updatePriority(90393, 49897);
    caseQueue.updatePriority(99929, 45181);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(90393)); //3
    caseQueue.insert(32927,44806);
    caseQueue.insert(37152,83818);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(37152, 90967);
    caseQueue.updatePriority(90393, 33010);
    caseQueue.updatePriority(90393, 85356);
    myResult.push_back(caseQueue.getPriority(37152)); //6
    myResult.push_back(caseQueue.getPriority(37152)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(37152, 72600);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(91883,66972);
    caseQueue.updatePriority(91883, 69185);
    caseQueue.insert(59339,31760);
    caseQueue.insert(58642,73);
    caseQueue.updatePriority(59339, 9076);
    caseQueue.updatePriority(58642, 6485);
    caseQueue.updatePriority(91883, 90483);
    caseQueue.insert(84369,70707);
    caseQueue.updatePriority(84369, 22264);
    caseQueue.updatePriority(84369, 8401);
    caseQueue.updatePriority(59339, 29256);
    caseQueue.updatePriority(59339, 47238);
    caseQueue.insert(18961,1568);
    caseQueue.updatePriority(59339, 15771);
    myResult.push_back(caseQueue.getPriority(58642)); //10
    caseQueue.updatePriority(18961, 80657);
    caseQueue.updatePriority(84369, 53365);
    caseQueue.insert(83041,18732);
    myResult.push_back(caseQueue.getPriority(59339)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(13560,96056);
    caseQueue.insert(42324,44823);
    caseQueue.insert(90939,80557);
    caseQueue.insert(83847,13853);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(5990,96217);
    caseQueue.insert(45235,7158);
    myResult.push_back(caseQueue.getPriority(90939)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(42324)); //16
    caseQueue.updatePriority(18961, 37671);
    caseQueue.insert(98466,55888);
    caseQueue.insert(92660,48537);
    caseQueue.insert(6592,60204);
    caseQueue.insert(67499,8074);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(87969,11764);
    caseQueue.insert(8818,91325);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(35304,46455);
    caseQueue.updatePriority(13560, 22705);
    caseQueue.updatePriority(8818, 21921);
    caseQueue.insert(26122,14724);
    myResult.push_back(caseQueue.getPriority(83041)); //20
    caseQueue.updatePriority(98466, 14485);
    caseQueue.insert(17667,31301);
    myResult.push_back(caseQueue.getPriority(13560)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(16190,55260);
    caseQueue.insert(84738,67170);
    caseQueue.insert(49770,32363);
    myResult.push_back(caseQueue.getPriority(13560)); //23
    caseQueue.insert(57505,35688);
    caseQueue.insert(8609,23948);
    caseQueue.insert(5691,57615);
    caseQueue.updatePriority(13560, 59478);
    caseQueue.insert(62578,11985);
    caseQueue.updatePriority(57505, 24590);
    caseQueue.insert(60840,31675);
    caseQueue.updatePriority(90939, 75684);
    myResult.push_back(caseQueue.getPriority(6592)); //24
    caseQueue.updatePriority(5990, 38386);
    caseQueue.insert(65638,59383);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(49770, 80680);
    myResult.push_back(caseQueue.getPriority(6592)); //27
    myResult.push_back(caseQueue.getPriority(6592)); //28
    caseQueue.updatePriority(8609, 21976);
    myResult.push_back(caseQueue.getPriority(84369)); //29
    myResult.push_back(caseQueue.getPriority(13560)); //30
    caseQueue.insert(5141,84485);
    caseQueue.updatePriority(5990, 68487);
    caseQueue.insert(17508,67599);
    caseQueue.insert(95838,50040);
    caseQueue.insert(19290,82911);
    caseQueue.insert(90561,11518);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(44677,89805);
    caseQueue.insert(74772,16684);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(92660, 27424);
    caseQueue.updatePriority(57505, 5302);
    myResult.push_back(caseQueue.getPriority(18961)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(79127,21618);
    myResult.push_back(caseQueue.getPriority(6592)); //37
    myResult.push_back(caseQueue.getPriority(91883)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(44988,49272);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(85787,91353);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(5141)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(6592)); //44
    caseQueue.updatePriority(5691, 73947);
    caseQueue.updatePriority(35304, 33952);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(42324)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(85787, 55886);
    caseQueue.insert(64685,7102);
    caseQueue.updatePriority(19290, 1845);
    caseQueue.insert(18365,43290);
    caseQueue.insert(97128,63161);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(49770, 23453);
    caseQueue.insert(46035,91937);
    caseQueue.insert(77072,6537);
    caseQueue.insert(77892,69625);
    caseQueue.updatePriority(64685, 57624);
    caseQueue.updatePriority(65638, 94464);
    caseQueue.updatePriority(90939, 58955);
    myResult.push_back(caseQueue.getPriority(13560)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(44677)); //54
    caseQueue.updatePriority(97128, 86732);
    myResult.push_back(caseQueue.deleteMin()); //55
    static const int resultListArray[] = {70722, 99929, 49897, 32927, 94794, 90967, 90967, 90393, 37152, 6485, 15771, 58642, 83847, 80557, 45235, 44823, 67499, 87969, 59339, 18732, 22705, 98466, 22705, 60204, 62578, 26122, 60204, 60204, 53365, 59478, 90561, 74772, 83041, 8818, 37671, 57505, 60204, 90483, 79127, 8609, 92660, 84485, 17667, 60204, 60840, 35304, 44823, 18961, 19290, 59478, 77072, 49770, 18365, 89805, 42324}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(174): Basarili" << endl;
    else cout << "Case(174): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_175(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 213);

    vector<int> myResult; 
    caseQueue.insert(91808,98403);
    caseQueue.insert(31867,59745);
    caseQueue.insert(66389,83071);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(66389, 43220);
    caseQueue.insert(33651,10714);
    caseQueue.insert(12714,70242);
    caseQueue.updatePriority(66389, 34567);
    caseQueue.updatePriority(91808, 10441);
    caseQueue.insert(3600,25960);
    myResult.push_back(caseQueue.getPriority(12714)); //2
    caseQueue.insert(67180,23764);
    caseQueue.updatePriority(3600, 15158);
    myResult.push_back(caseQueue.getPriority(3600)); //3
    caseQueue.insert(90060,12966);
    caseQueue.insert(29705,76186);
    myResult.push_back(caseQueue.getPriority(66389)); //4
    myResult.push_back(caseQueue.getPriority(33651)); //5
    myResult.push_back(caseQueue.getPriority(91808)); //6
    caseQueue.updatePriority(66389, 55938);
    caseQueue.insert(11046,9064);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(90060, 4071);
    caseQueue.insert(26841,53030);
    caseQueue.insert(67800,65880);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(91808)); //9
    caseQueue.insert(37540,53233);
    myResult.push_back(caseQueue.getPriority(33651)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(43390,74639);
    myResult.push_back(caseQueue.getPriority(66389)); //12
    caseQueue.insert(25731,53324);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(43390)); //15
    caseQueue.insert(50698,60454);
    caseQueue.insert(22243,31016);
    caseQueue.updatePriority(43390, 27198);
    caseQueue.insert(48644,11914);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(52989,12418);
    caseQueue.updatePriority(25731, 62247);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(43390)); //18
    caseQueue.insert(62880,1050);
    myResult.push_back(caseQueue.getPriority(29705)); //19
    myResult.push_back(caseQueue.getPriority(62880)); //20
    caseQueue.insert(77107,82703);
    myResult.push_back(caseQueue.getPriority(66389)); //21
    myResult.push_back(caseQueue.getPriority(66389)); //22
    caseQueue.insert(43203,31395);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(77107)); //24
    myResult.push_back(caseQueue.getPriority(43390)); //25
    caseQueue.insert(17584,19692);
    caseQueue.insert(1573,53475);
    caseQueue.updatePriority(25731, 52902);
    caseQueue.updatePriority(22243, 78507);
    caseQueue.updatePriority(37540, 50694);
    caseQueue.insert(60232,92543);
    caseQueue.updatePriority(26841, 90152);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(43390)); //27
    caseQueue.insert(68212,31432);
    caseQueue.insert(25569,62475);
    caseQueue.insert(52671,77861);
    caseQueue.insert(60216,92103);
    caseQueue.insert(49974,60938);
    caseQueue.updatePriority(25731, 49605);
    caseQueue.insert(11395,70953);
    myResult.push_back(caseQueue.getPriority(50698)); //28
    caseQueue.insert(89909,74270);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(26841)); //30
    myResult.push_back(caseQueue.getPriority(25731)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(20921,70172);
    caseQueue.insert(12118,78770);
    caseQueue.insert(28566,14860);
    caseQueue.updatePriority(68212, 80929);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(67834,14999);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(58118,98645);
    myResult.push_back(caseQueue.getPriority(22243)); //35
    caseQueue.insert(5496,33330);
    caseQueue.insert(95168,98844);
    caseQueue.updatePriority(77107, 6806);
    caseQueue.insert(73513,43746);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(21416,11275);
    caseQueue.insert(67127,4802);
    caseQueue.insert(46807,1422);
    caseQueue.insert(18601,88061);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(25731)); //38
    caseQueue.insert(96504,55290);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(11395)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(20921, 52925);
    caseQueue.updatePriority(18601, 29836);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(58118)); //44
    caseQueue.insert(46367,51954);
    caseQueue.updatePriority(12118, 40995);
    caseQueue.updatePriority(12714, 82838);
    caseQueue.insert(85153,97565);
    caseQueue.updatePriority(49974, 98367);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(30844,48807);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(12714, 82050);
    caseQueue.insert(62004,28747);
    caseQueue.insert(41435,52294);
    myResult.push_back(caseQueue.getPriority(37540)); //47
    caseQueue.updatePriority(12714, 21793);
    caseQueue.insert(39862,34763);
    caseQueue.updatePriority(60232, 45608);
    caseQueue.updatePriority(1573, 49519);
    caseQueue.insert(68235,60705);
    caseQueue.insert(2086,25203);
    caseQueue.insert(99867,59524);
    caseQueue.updatePriority(96504, 36399);
    caseQueue.insert(20100,70700);
    caseQueue.updatePriority(29705, 74958);
    myResult.push_back(caseQueue.getPriority(11395)); //48
    caseQueue.updatePriority(29705, 78545);
    myResult.push_back(caseQueue.getPriority(20100)); //49
    caseQueue.insert(38925,52256);
    caseQueue.updatePriority(30844, 65960);
    myResult.push_back(caseQueue.getPriority(46367)); //50
    caseQueue.insert(79737,71742);
    caseQueue.updatePriority(20100, 68867);
    myResult.push_back(caseQueue.getPriority(68212)); //51
    caseQueue.insert(70221,87185);
    caseQueue.insert(28283,97951);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(95168, 21862);
    caseQueue.insert(12038,4912);
    caseQueue.insert(20759,76013);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(11395, 57018);
    caseQueue.insert(54108,45696);
    myResult.push_back(caseQueue.getPriority(60216)); //54
    caseQueue.insert(41187,96374);
    caseQueue.insert(20771,7193);
    caseQueue.insert(13945,72914);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(50770,51508);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(41435, 5034);
    caseQueue.insert(64647,49841);
    caseQueue.insert(73087,28121);
    caseQueue.updatePriority(28283, 2836);
    caseQueue.updatePriority(68235, 925);
    caseQueue.insert(13806,39180);
    caseQueue.insert(45783,80446);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(37540)); //58
    caseQueue.insert(30806,57708);
    caseQueue.updatePriority(60216, 81075);
    myResult.push_back(caseQueue.getPriority(29705)); //59
    caseQueue.insert(65988,11939);
    caseQueue.insert(12664,98149);
    myResult.push_back(caseQueue.getPriority(60216)); //60
    caseQueue.updatePriority(25569, 88894);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(60216, 5649);
    caseQueue.updatePriority(64647, 81467);
    caseQueue.updatePriority(20759, 58973);
    caseQueue.updatePriority(58118, 22181);
    caseQueue.updatePriority(66389, 60915);
    myResult.push_back(caseQueue.getPriority(20100)); //66
    caseQueue.insert(44002,80855);
    myResult.push_back(caseQueue.getPriority(79737)); //67
    caseQueue.insert(6115,33603);
    caseQueue.insert(98101,10228);
    myResult.push_back(caseQueue.getPriority(85153)); //68
    caseQueue.insert(98231,87511);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(50698, 34838);
    caseQueue.insert(5339,48068);
    caseQueue.insert(66916,15415);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(24310,8707);
    caseQueue.updatePriority(20921, 11412);
    caseQueue.updatePriority(66916, 56160);
    caseQueue.insert(37535,47344);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(36061,40100);
    caseQueue.insert(53411,54337);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(6115)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(50727,23799);
    caseQueue.updatePriority(1573, 12548);
    myResult.push_back(caseQueue.getPriority(20100)); //75
    caseQueue.insert(78041,9025);
    caseQueue.insert(42737,36740);
    caseQueue.insert(69324,39305);
    myResult.push_back(caseQueue.getPriority(69324)); //76
    caseQueue.insert(14692,6069);
    caseQueue.insert(51394,36911);
    caseQueue.insert(64458,80439);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(13806)); //78
    static const int resultListArray[] = {31867, 70242, 15158, 34567, 10714, 10441, 11046, 90060, 10441, 10714, 91808, 55938, 33651, 3600, 74639, 48644, 52989, 27198, 76186, 1050, 55938, 55938, 62880, 82703, 27198, 17584, 27198, 60454, 67180, 90152, 49605, 43390, 28566, 67834, 78507, 77107, 46807, 49605, 67127, 70953, 21416, 43203, 18601, 98645, 5496, 12118, 50694, 70953, 70700, 51954, 80929, 12714, 12038, 92103, 20771, 95168, 68235, 50694, 78545, 81075, 28283, 41435, 65988, 2086, 73087, 68867, 71742, 97565, 60216, 98101, 24310, 20921, 33603, 58118, 68867, 39305, 14692, 39180}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(175): Basarili" << endl;
    else cout << "Case(175): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_176(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 144);

    vector<int> myResult; 
    caseQueue.insert(76082,68287);
    caseQueue.insert(74657,75816);
    caseQueue.updatePriority(74657, 29988);
    myResult.push_back(caseQueue.getPriority(74657)); //1
    caseQueue.insert(81513,37094);
    caseQueue.insert(70033,92812);
    caseQueue.insert(44894,88476);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(70033)); //3
    caseQueue.updatePriority(44894, 29512);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(82250,40328);
    caseQueue.updatePriority(82250, 39706);
    caseQueue.insert(81269,38599);
    caseQueue.insert(72210,27922);
    caseQueue.insert(78765,89859);
    myResult.push_back(caseQueue.getPriority(70033)); //5
    caseQueue.insert(31814,53886);
    myResult.push_back(caseQueue.getPriority(31814)); //6
    caseQueue.insert(21498,80234);
    caseQueue.insert(16761,20398);
    caseQueue.updatePriority(81513, 44181);
    caseQueue.updatePriority(72210, 64029);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(47258,69471);
    caseQueue.insert(98107,36715);
    caseQueue.insert(43036,34934);
    myResult.push_back(caseQueue.getPriority(31814)); //8
    myResult.push_back(caseQueue.getPriority(78765)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(70033, 39373);
    myResult.push_back(caseQueue.getPriority(81513)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(11390,21152);
    caseQueue.updatePriority(76082, 92008);
    caseQueue.insert(24519,62144);
    caseQueue.insert(24814,52745);
    caseQueue.insert(67393,27320);
    myResult.push_back(caseQueue.getPriority(72210)); //13
    caseQueue.updatePriority(81269, 37348);
    caseQueue.insert(4149,13732);
    caseQueue.updatePriority(70033, 27599);
    caseQueue.insert(18645,17872);
    caseQueue.insert(70324,37175);
    caseQueue.insert(88863,32805);
    caseQueue.updatePriority(81269, 62418);
    myResult.push_back(caseQueue.getPriority(72210)); //14
    myResult.push_back(caseQueue.getPriority(31814)); //15
    caseQueue.insert(67402,57305);
    caseQueue.updatePriority(88863, 7509);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(70033, 96318);
    caseQueue.updatePriority(81513, 82548);
    caseQueue.updatePriority(70324, 6595);
    caseQueue.insert(96459,65796);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(47258, 27482);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(98456,28480);
    caseQueue.updatePriority(70033, 84495);
    caseQueue.updatePriority(96459, 9233);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(6748,36306);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(63432,90735);
    myResult.push_back(caseQueue.getPriority(78765)); //23
    caseQueue.insert(96662,16954);
    myResult.push_back(caseQueue.getPriority(67402)); //24
    caseQueue.insert(73873,2479);
    caseQueue.insert(67512,49902);
    caseQueue.updatePriority(31814, 49313);
    caseQueue.insert(75286,26742);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(50945,39808);
    caseQueue.insert(32613,16514);
    caseQueue.insert(56352,84058);
    myResult.push_back(caseQueue.getPriority(63432)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(70033)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(92823,15540);
    caseQueue.updatePriority(76082, 73583);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(57739,11489);
    caseQueue.insert(11544,27838);
    myResult.push_back(caseQueue.getPriority(98456)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(76082)); //33
    myResult.push_back(caseQueue.getPriority(98456)); //34
    myResult.push_back(caseQueue.getPriority(24814)); //35
    caseQueue.insert(3215,77807);
    caseQueue.insert(71988,81924);
    myResult.push_back(caseQueue.getPriority(6748)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(67042,11181);
    caseQueue.insert(77589,78538);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(85604,49955);
    myResult.push_back(caseQueue.getPriority(70033)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(71988)); //41
    myResult.push_back(caseQueue.getPriority(71988)); //42
    myResult.push_back(caseQueue.getPriority(3215)); //43
    caseQueue.insert(37031,1438);
    caseQueue.updatePriority(21498, 7648);
    myResult.push_back(caseQueue.getPriority(98456)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(77589)); //46
    caseQueue.insert(47501,74739);
    caseQueue.insert(50848,93587);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(55677,58591);
    caseQueue.updatePriority(72210, 7920);
    caseQueue.updatePriority(11544, 81606);
    caseQueue.updatePriority(24519, 46388);
    caseQueue.insert(79335,34267);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(24814, 74918);
    caseQueue.insert(50268,3777);
    caseQueue.insert(20545,15183);
    caseQueue.updatePriority(50268, 15086);
    caseQueue.insert(45981,2655);
    myResult.push_back(caseQueue.getPriority(70033)); //49
    caseQueue.insert(33985,6914);
    caseQueue.insert(83738,84163);
    caseQueue.insert(45731,92137);
    myResult.push_back(caseQueue.getPriority(85604)); //50
    myResult.push_back(caseQueue.getPriority(55677)); //51
    myResult.push_back(caseQueue.getPriority(55677)); //52
    caseQueue.insert(9299,28176);
    caseQueue.insert(81644,69770);
    caseQueue.insert(37373,2611);
    caseQueue.insert(67052,47746);
    caseQueue.updatePriority(81269, 44819);
    myResult.push_back(caseQueue.getPriority(33985)); //53
    caseQueue.updatePriority(20545, 70365);
    myResult.push_back(caseQueue.getPriority(3215)); //54
    caseQueue.insert(81639,45775);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(21705,94264);
    caseQueue.insert(29750,24764);
    caseQueue.insert(2034,32026);
    static const int resultListArray[] = {29988, 74657, 92812, 44894, 92812, 53886, 16761, 53886, 89859, 43036, 44181, 98107, 64029, 64029, 53886, 88863, 70324, 4149, 18645, 96459, 11390, 67393, 89859, 57305, 73873, 90735, 32613, 84495, 96662, 92823, 28480, 57739, 73583, 28480, 52745, 36306, 75286, 67042, 84495, 47258, 81924, 81924, 77807, 28480, 37031, 78538, 21498, 72210, 84495, 49955, 58591, 58591, 6914, 77807, 37373}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(176): Basarili" << endl;
    else cout << "Case(176): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_177(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 215);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(20019)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(74990,37018);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(68669,58114);
    caseQueue.updatePriority(68669, 274);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(5057, 94028);
    caseQueue.insert(32364,26665);
    myResult.push_back(caseQueue.getPriority(32364)); //6
    caseQueue.insert(42255,53190);
    caseQueue.insert(57011,33651);
    caseQueue.insert(77005,52761);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(95198,83638);
    caseQueue.insert(78266,72081);
    caseQueue.insert(54158,97800);
    myResult.push_back(caseQueue.getPriority(42255)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(98077,4371);
    caseQueue.updatePriority(98077, 33485);
    myResult.push_back(caseQueue.getPriority(78266)); //10
    caseQueue.insert(51523,93614);
    caseQueue.insert(67946,54591);
    caseQueue.insert(32967,30966);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(64153,68584);
    caseQueue.insert(15196,93438);
    myResult.push_back(caseQueue.getPriority(51523)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(27220,34304);
    myResult.push_back(caseQueue.getPriority(27220)); //14
    caseQueue.insert(64432,14382);
    caseQueue.updatePriority(15196, 19546);
    caseQueue.insert(57959,32812);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(54158)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(27220, 25794);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(55460,79739);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(78266)); //23
    myResult.push_back(caseQueue.getPriority(64153)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(72136,1703);
    myResult.push_back(caseQueue.getPriority(51523)); //26
    caseQueue.insert(21824,28309);
    caseQueue.updatePriority(55460, 76934);
    caseQueue.insert(64672,58147);
    myResult.push_back(caseQueue.getPriority(51523)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(42736,24820);
    caseQueue.insert(9258,72999);
    caseQueue.updatePriority(21824, 25199);
    caseQueue.insert(82704,41116);
    caseQueue.insert(9780,30056);
    caseQueue.insert(68314,62976);
    caseQueue.insert(84605,98355);
    caseQueue.insert(68088,47788);
    caseQueue.insert(78214,82707);
    caseQueue.updatePriority(21824, 39374);
    caseQueue.updatePriority(51523, 16806);
    caseQueue.insert(60724,57289);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(47838,96205);
    caseQueue.updatePriority(42736, 31271);
    caseQueue.insert(59948,40846);
    myResult.push_back(caseQueue.getPriority(84605)); //30
    caseQueue.updatePriority(84605, 70475);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(5392,85415);
    myResult.push_back(caseQueue.getPriority(95198)); //32
    caseQueue.insert(11666,64547);
    caseQueue.insert(98761,58418);
    caseQueue.updatePriority(95198, 51311);
    myResult.push_back(caseQueue.getPriority(68088)); //33
    caseQueue.insert(58512,67150);
    myResult.push_back(caseQueue.getPriority(55460)); //34
    caseQueue.updatePriority(47838, 13226);
    caseQueue.insert(84746,70772);
    myResult.push_back(caseQueue.getPriority(95198)); //35
    myResult.push_back(caseQueue.getPriority(64672)); //36
    caseQueue.insert(41644,22862);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(49067,9576);
    caseQueue.insert(49475,12479);
    myResult.push_back(caseQueue.getPriority(21824)); //39
    caseQueue.insert(70555,27426);
    caseQueue.insert(36147,55016);
    myResult.push_back(caseQueue.getPriority(49067)); //40
    caseQueue.insert(27933,94797);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(36147, 53293);
    caseQueue.updatePriority(42736, 88344);
    caseQueue.updatePriority(55460, 98286);
    caseQueue.insert(64901,35761);
    myResult.push_back(caseQueue.getPriority(58512)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(68314, 33935);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(58512, 64174);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(84605, 55069);
    caseQueue.insert(21234,26549);
    caseQueue.insert(48059,90708);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(26745,75006);
    myResult.push_back(caseQueue.getPriority(84605)); //49
    caseQueue.updatePriority(5392, 33338);
    myResult.push_back(caseQueue.getPriority(84746)); //50
    caseQueue.insert(38605,30948);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(48059, 5044);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(94653,18549);
    caseQueue.insert(20920,75616);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(98761, 25944);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(11666)); //58
    caseQueue.insert(84283,41214);
    caseQueue.updatePriority(54158, 18006);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(93965,17621);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(59350,77718);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(41990,86227);
    caseQueue.insert(64654,60102);
    myResult.push_back(caseQueue.getPriority(64672)); //62
    caseQueue.updatePriority(55460, 31173);
    myResult.push_back(caseQueue.getPriority(11666)); //63
    myResult.push_back(caseQueue.getPriority(55460)); //64
    caseQueue.insert(35943,62152);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(68088, 388);
    caseQueue.updatePriority(26745, 67633);
    caseQueue.insert(40411,59838);
    caseQueue.updatePriority(64654, 27288);
    caseQueue.updatePriority(20920, 24829);
    myResult.push_back(caseQueue.getPriority(26745)); //66
    caseQueue.insert(79015,17304);
    caseQueue.insert(68185,79348);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(51364,8485);
    caseQueue.updatePriority(36147, 82796);
    caseQueue.insert(73981,54277);
    caseQueue.insert(10545,80835);
    caseQueue.insert(81362,45837);
    caseQueue.insert(16426,25589);
    caseQueue.insert(37409,91617);
    caseQueue.insert(85905,75774);
    caseQueue.insert(32460,24383);
    caseQueue.insert(49251,14232);
    caseQueue.insert(89634,74830);
    caseQueue.updatePriority(95198, 62312);
    caseQueue.insert(97489,30395);
    caseQueue.insert(80886,95516);
    caseQueue.insert(99750,57290);
    myResult.push_back(caseQueue.getPriority(36147)); //68
    caseQueue.updatePriority(73981, 39322);
    caseQueue.updatePriority(80886, 11191);
    myResult.push_back(caseQueue.getPriority(64672)); //69
    myResult.push_back(caseQueue.getPriority(42736)); //70
    caseQueue.insert(14207,55524);
    myResult.push_back(caseQueue.getPriority(84746)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(27933)); //73
    caseQueue.insert(58052,25059);
    myResult.push_back(caseQueue.getPriority(10545)); //74
    caseQueue.updatePriority(26745, 32257);
    caseQueue.insert(29067,34005);
    myResult.push_back(caseQueue.getPriority(84605)); //75
    caseQueue.updatePriority(80886, 78864);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(40411, 28158);
    caseQueue.insert(52915,98186);
    caseQueue.insert(18005,67270);
    myResult.push_back(caseQueue.getPriority(14207)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(71205,42809);
    caseQueue.updatePriority(35943, 70719);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(10269,71827);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.getPriority(29067)); //81
    caseQueue.updatePriority(36147, 27869);
    caseQueue.insert(32374,44626);
    caseQueue.updatePriority(71205, 1381);
    caseQueue.insert(80380,45373);
    caseQueue.updatePriority(81362, 91435);
    caseQueue.updatePriority(78266, 13509);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(64654, 46662);
    caseQueue.insert(79174,12390);
    caseQueue.insert(67861,21492);
    myResult.push_back(caseQueue.getPriority(84605)); //83
    caseQueue.insert(38585,4405);
    caseQueue.insert(81738,366);
    caseQueue.updatePriority(80886, 92704);
    myResult.push_back(caseQueue.getPriority(10269)); //84
    caseQueue.insert(73373,13296);
    caseQueue.insert(13895,77008);
    caseQueue.insert(84681,55066);
    static const int resultListArray[] = {-1, -1, -1, 74990, 68669, 26665, 32364, 53190, 57011, 72081, 32967, 93614, 98077, 34304, 64432, 15196, 97800, 57959, 27220, 77005, 42255, 67946, 72081, 68584, 64153, 93614, 93614, 72136, 51523, 98355, 9780, 83638, 47788, 76934, 51311, 58147, 47838, 41644, 39374, 9576, 49067, 67150, 49475, 70555, 68314, 21234, 64901, 21824, 55069, 70772, 38605, 5392, 48059, 59948, 94653, 98761, 82704, 64547, 54158, 93965, 84283, 58147, 64547, 31173, 55460, 67633, 68088, 82796, 58147, 88344, 70772, 51364, 94797, 80835, 55069, 49251, 55524, 79015, 32460, 20920, 34005, 71205, 55069, 71827}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(177): Basarili" << endl;
    else cout << "Case(177): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_178(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 182);

    vector<int> myResult; 
    caseQueue.insert(14529,74880);
    caseQueue.updatePriority(14529, 66337);
    caseQueue.insert(66995,1390);
    caseQueue.updatePriority(66995, 58460);
    caseQueue.updatePriority(66995, 32012);
    caseQueue.insert(74255,475);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(14529, 74536);
    myResult.push_back(caseQueue.getPriority(14529)); //3
    caseQueue.insert(2121,3974);
    caseQueue.updatePriority(2121, 46745);
    caseQueue.updatePriority(2121, 28544);
    caseQueue.insert(92233,34269);
    caseQueue.insert(48464,63209);
    caseQueue.updatePriority(14529, 57609);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(37836,60417);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(14529, 2015);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(48464)); //7
    caseQueue.insert(49676,1061);
    caseQueue.insert(42269,8465);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(48464)); //10
    caseQueue.insert(80108,51410);
    caseQueue.updatePriority(48464, 66390);
    caseQueue.updatePriority(37836, 15043);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(56723,86752);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(48464)); //13
    caseQueue.updatePriority(56723, 51640);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(13741,46090);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(45731,45128);
    caseQueue.insert(17524,49227);
    caseQueue.insert(93868,75320);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(10799,28912);
    caseQueue.insert(12789,49198);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(12789)); //18
    caseQueue.insert(44394,66198);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(17524)); //20
    caseQueue.insert(26557,25230);
    caseQueue.insert(30714,57158);
    caseQueue.updatePriority(17524, 34746);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(73633,68678);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(93868)); //23
    caseQueue.insert(49557,5265);
    caseQueue.insert(22268,65352);
    caseQueue.insert(21875,63335);
    caseQueue.insert(73317,63865);
    caseQueue.insert(88627,64761);
    caseQueue.updatePriority(30714, 76686);
    caseQueue.updatePriority(73633, 6483);
    caseQueue.insert(28780,91203);
    caseQueue.insert(21146,4651);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(73633, 99458);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(45187,98036);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(75151,94829);
    caseQueue.insert(17475,63564);
    caseQueue.insert(22775,95331);
    caseQueue.insert(40234,68647);
    caseQueue.insert(87154,27743);
    myResult.push_back(caseQueue.getPriority(93868)); //27
    caseQueue.insert(38004,15967);
    myResult.push_back(caseQueue.getPriority(87154)); //28
    myResult.push_back(caseQueue.getPriority(40234)); //29
    caseQueue.updatePriority(44394, 89155);
    caseQueue.insert(36266,2181);
    caseQueue.updatePriority(40234, 70638);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(30714, 13773);
    caseQueue.insert(5693,55488);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(34336,93614);
    caseQueue.updatePriority(73633, 14260);
    caseQueue.insert(99472,72808);
    caseQueue.insert(1182,81841);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(17475)); //35
    caseQueue.insert(54798,18217);
    myResult.push_back(caseQueue.getPriority(22268)); //36
    caseQueue.insert(36685,24399);
    caseQueue.insert(96878,15235);
    caseQueue.updatePriority(28780, 33521);
    caseQueue.insert(32296,21326);
    caseQueue.insert(47546,2200);
    caseQueue.insert(20147,96903);
    caseQueue.insert(65728,79868);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(46335,73263);
    caseQueue.insert(26975,52399);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(55906,74846);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(17475, 72137);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(31658,11770);
    caseQueue.updatePriority(44394, 68356);
    caseQueue.insert(43891,9505);
    caseQueue.insert(93368,39172);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(80239,64427);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(28780, 35723);
    caseQueue.updatePriority(22268, 19000);
    caseQueue.insert(37045,82844);
    caseQueue.insert(20323,72445);
    myResult.push_back(caseQueue.getPriority(88627)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(55906)); //46
    caseQueue.insert(85154,52734);
    caseQueue.updatePriority(46335, 7020);
    caseQueue.insert(63208,93132);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(7015,62616);
    caseQueue.insert(98955,35062);
    myResult.push_back(caseQueue.getPriority(99472)); //49
    caseQueue.insert(9912,30762);
    caseQueue.updatePriority(22775, 52160);
    caseQueue.insert(91959,34140);
    myResult.push_back(caseQueue.getPriority(93868)); //50
    myResult.push_back(caseQueue.getPriority(9912)); //51
    caseQueue.updatePriority(65728, 56488);
    myResult.push_back(caseQueue.getPriority(17475)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(40234, 38634);
    caseQueue.insert(78037,94172);
    caseQueue.updatePriority(45187, 47377);
    myResult.push_back(caseQueue.getPriority(85154)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(5693, 66049);
    caseQueue.insert(23832,64927);
    caseQueue.insert(90593,1505);
    myResult.push_back(caseQueue.getPriority(48464)); //56
    caseQueue.updatePriority(65728, 31676);
    caseQueue.insert(53335,1380);
    myResult.push_back(caseQueue.getPriority(65728)); //57
    caseQueue.updatePriority(23832, 32199);
    caseQueue.insert(29901,70090);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(1182, 2028);
    myResult.push_back(caseQueue.getPriority(40234)); //61
    caseQueue.updatePriority(37045, 73360);
    caseQueue.insert(45439,36728);
    caseQueue.insert(65147,50197);
    myResult.push_back(caseQueue.getPriority(63208)); //62
    myResult.push_back(caseQueue.getPriority(63208)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(85154)); //65
    myResult.push_back(caseQueue.getPriority(85154)); //66
    caseQueue.insert(41621,80824);
    myResult.push_back(caseQueue.getPriority(75151)); //67
    caseQueue.updatePriority(29901, 62218);
    caseQueue.insert(43560,74348);
    caseQueue.insert(38269,27416);
    caseQueue.updatePriority(48464, 2540);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(45187)); //69
    caseQueue.updatePriority(37045, 77903);
    caseQueue.insert(65455,80752);
    myResult.push_back(caseQueue.getPriority(98955)); //70
    caseQueue.insert(27832,4766);
    caseQueue.insert(57596,23792);
    static const int resultListArray[] = {74255, 66995, 74536, 2121, 92233, 14529, 63209, 49676, 42269, 63209, 37836, 80108, 66390, 56723, 13741, 45731, 10799, 49198, 12789, 49227, 26557, 17524, 75320, 21146, 49557, 21875, 75320, 27743, 68647, 36266, 38004, 30714, 73633, 87154, 63564, 65352, 47546, 96878, 54798, 32296, 43891, 31658, 36685, 64761, 22268, 74846, 46335, 28780, 72808, 75320, 30762, 72137, 9912, 52734, 91959, 66390, 31676, 53335, 90593, 65728, 38634, 93132, 93132, 1182, 52734, 52734, 94829, 48464, 47377, 35062}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(178): Basarili" << endl;
    else cout << "Case(178): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_179(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 169);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(22908)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(83134,35683);
    caseQueue.insert(44865,1438);
    caseQueue.insert(21259,7925);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(83134)); //4
    myResult.push_back(caseQueue.getPriority(21259)); //5
    caseQueue.updatePriority(83134, 13241);
    myResult.push_back(caseQueue.getPriority(83134)); //6
    caseQueue.updatePriority(83134, 96126);
    caseQueue.insert(21299,17105);
    caseQueue.updatePriority(21299, 72968);
    caseQueue.insert(80277,92108);
    myResult.push_back(caseQueue.getPriority(80277)); //7
    caseQueue.insert(93323,7846);
    caseQueue.insert(34901,94971);
    caseQueue.insert(91145,11992);
    caseQueue.insert(47884,8340);
    caseQueue.updatePriority(47884, 97204);
    myResult.push_back(caseQueue.getPriority(80277)); //8
    caseQueue.insert(38269,28279);
    caseQueue.insert(33975,76222);
    caseQueue.insert(98703,44465);
    caseQueue.updatePriority(83134, 28319);
    caseQueue.insert(65664,98767);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(87147,57734);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(27008,76690);
    caseQueue.insert(4946,2678);
    caseQueue.insert(68033,5941);
    caseQueue.insert(54361,74107);
    caseQueue.updatePriority(65664, 33015);
    caseQueue.insert(25596,91438);
    caseQueue.updatePriority(21299, 40500);
    caseQueue.insert(92714,65230);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(59911,64125);
    caseQueue.updatePriority(21299, 84457);
    myResult.push_back(caseQueue.getPriority(87147)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(59911)); //15
    caseQueue.insert(25903,46762);
    caseQueue.insert(7318,25599);
    caseQueue.updatePriority(34901, 49959);
    caseQueue.insert(40054,85956);
    caseQueue.updatePriority(25903, 23430);
    caseQueue.insert(10817,75536);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(54361)); //17
    caseQueue.insert(67048,89297);
    myResult.push_back(caseQueue.getPriority(83134)); //18
    myResult.push_back(caseQueue.getPriority(67048)); //19
    caseQueue.updatePriority(83134, 27226);
    caseQueue.insert(70092,55674);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(67048)); //21
    caseQueue.insert(66166,85661);
    myResult.push_back(caseQueue.getPriority(67048)); //22
    myResult.push_back(caseQueue.getPriority(98703)); //23
    caseQueue.insert(48772,92725);
    myResult.push_back(caseQueue.getPriority(48772)); //24
    caseQueue.insert(40574,65324);
    caseQueue.insert(67386,70025);
    caseQueue.updatePriority(80277, 36457);
    caseQueue.insert(29310,1619);
    caseQueue.insert(87056,191);
    caseQueue.updatePriority(10817, 9014);
    myResult.push_back(caseQueue.getPriority(87147)); //25
    myResult.push_back(caseQueue.getPriority(33975)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(67386)); //28
    caseQueue.insert(17922,75619);
    caseQueue.updatePriority(33975, 9013);
    myResult.push_back(caseQueue.getPriority(17922)); //29
    caseQueue.insert(77859,6452);
    caseQueue.updatePriority(29310, 25970);
    caseQueue.insert(381,97960);
    caseQueue.insert(4707,42316);
    caseQueue.updatePriority(67048, 85134);
    caseQueue.updatePriority(98703, 87712);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(30031,54169);
    caseQueue.updatePriority(27008, 13645);
    caseQueue.insert(8565,90844);
    caseQueue.insert(86998,3574);
    caseQueue.updatePriority(70092, 68014);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(34901)); //32
    caseQueue.updatePriority(67386, 41475);
    caseQueue.insert(7406,82731);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(31839,44929);
    myResult.push_back(caseQueue.getPriority(31839)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(70092, 2055);
    caseQueue.insert(39117,24672);
    caseQueue.insert(7274,87640);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(49899,83710);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(18850,8260);
    caseQueue.updatePriority(66166, 81208);
    caseQueue.insert(90227,88923);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(88218,3424);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(16398,15485);
    myResult.push_back(caseQueue.getPriority(66166)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(92062,5967);
    myResult.push_back(caseQueue.getPriority(65664)); //42
    myResult.push_back(caseQueue.getPriority(30031)); //43
    caseQueue.insert(43719,63578);
    myResult.push_back(caseQueue.getPriority(54361)); //44
    caseQueue.insert(24781,92193);
    caseQueue.insert(64610,66832);
    caseQueue.insert(83708,55202);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(5716,31312);
    caseQueue.insert(33632,21544);
    caseQueue.insert(38505,2566);
    myResult.push_back(caseQueue.getPriority(64610)); //46
    caseQueue.insert(91910,9835);
    caseQueue.updatePriority(59911, 63939);
    caseQueue.insert(41121,90505);
    caseQueue.updatePriority(4707, 67681);
    myResult.push_back(caseQueue.getPriority(66166)); //47
    myResult.push_back(caseQueue.getPriority(8565)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(4707)); //50
    myResult.push_back(caseQueue.getPriority(31839)); //51
    caseQueue.insert(58776,16952);
    caseQueue.updatePriority(24781, 14852);
    caseQueue.insert(96048,75005);
    caseQueue.insert(49414,23129);
    myResult.push_back(caseQueue.getPriority(90227)); //52
    caseQueue.insert(59437,45092);
    myResult.push_back(caseQueue.getPriority(7274)); //53
    caseQueue.insert(6336,56150);
    myResult.push_back(caseQueue.getPriority(30031)); //54
    myResult.push_back(caseQueue.getPriority(59437)); //55
    caseQueue.insert(85761,37383);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(87841,55589);
    caseQueue.updatePriority(67386, 84918);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(59911)); //58
    caseQueue.insert(67718,97118);
    myResult.push_back(caseQueue.getPriority(49414)); //59
    caseQueue.insert(35007,86660);
    myResult.push_back(caseQueue.getPriority(49899)); //60
    myResult.push_back(caseQueue.getPriority(98703)); //61
    caseQueue.updatePriority(41121, 5026);
    caseQueue.updatePriority(49899, 79653);
    myResult.push_back(caseQueue.getPriority(33632)); //62
    caseQueue.updatePriority(47884, 83225);
    caseQueue.insert(43511,77783);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(53518,63619);
    caseQueue.insert(67058,34190);
    caseQueue.insert(12475,75643);
    caseQueue.insert(26434,58267);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(70307,33372);
    caseQueue.updatePriority(66166, 10608);
    static const int resultListArray[] = {-1, -1, 44865, 35683, 7925, 13241, 92108, 92108, 93323, 21259, 4946, 68033, 57734, 91145, 64125, 25903, 74107, 28319, 89297, 7318, 89297, 89297, 44465, 92725, 57734, 76222, 87056, 70025, 75619, 77859, 86998, 49959, 33975, 44929, 10817, 70092, 27008, 18850, 88218, 81208, 16398, 33015, 54169, 74107, 92062, 66832, 81208, 90844, 38505, 67681, 44929, 88923, 87640, 54169, 45092, 91910, 24781, 63939, 23129, 83710, 87712, 21544, 41121, 58776, 33632}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(179): Basarili" << endl;
    else cout << "Case(179): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_180(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 228);

    vector<int> myResult; 
    caseQueue.insert(72336,81929);
    myResult.push_back(caseQueue.getPriority(72336)); //1
    caseQueue.insert(4959,28434);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(72336, 8156);
    caseQueue.insert(59415,80740);
    caseQueue.insert(30217,96568);
    caseQueue.insert(14915,73757);
    caseQueue.insert(8515,16153);
    myResult.push_back(caseQueue.getPriority(59415)); //3
    caseQueue.updatePriority(59415, 77267);
    caseQueue.insert(81268,19422);
    caseQueue.updatePriority(59415, 97072);
    myResult.push_back(caseQueue.getPriority(14915)); //4
    caseQueue.insert(23670,92759);
    caseQueue.updatePriority(8515, 89363);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(23670, 65297);
    caseQueue.insert(64795,9909);
    myResult.push_back(caseQueue.getPriority(30217)); //6
    caseQueue.updatePriority(30217, 7830);
    caseQueue.updatePriority(64795, 26228);
    caseQueue.updatePriority(14915, 3782);
    myResult.push_back(caseQueue.getPriority(23670)); //7
    myResult.push_back(caseQueue.getPriority(30217)); //8
    caseQueue.insert(69402,20087);
    caseQueue.updatePriority(30217, 14526);
    caseQueue.insert(74629,17621);
    caseQueue.updatePriority(59415, 69241);
    caseQueue.insert(97889,62739);
    caseQueue.updatePriority(64795, 34803);
    caseQueue.insert(29504,79386);
    caseQueue.updatePriority(14915, 2114);
    caseQueue.insert(15095,31168);
    myResult.push_back(caseQueue.getPriority(64795)); //9
    caseQueue.insert(87942,5254);
    caseQueue.updatePriority(87942, 95314);
    caseQueue.insert(58537,9522);
    caseQueue.updatePriority(87942, 79983);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(32957,91614);
    myResult.push_back(caseQueue.getPriority(74629)); //11
    caseQueue.insert(87019,61031);
    myResult.push_back(caseQueue.getPriority(87942)); //12
    caseQueue.insert(45893,75977);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(22505,95455);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(2621,7769);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(81268)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(45893)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(8515, 94337);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(59415)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(64795)); //23
    caseQueue.insert(20991,84774);
    caseQueue.insert(99026,67432);
    myResult.push_back(caseQueue.getPriority(59415)); //24
    caseQueue.insert(79239,11502);
    caseQueue.updatePriority(20991, 98018);
    caseQueue.updatePriority(45893, 28198);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(6229,4326);
    myResult.push_back(caseQueue.getPriority(64795)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(32957, 39548);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(97889, 49498);
    caseQueue.insert(47899,17017);
    caseQueue.updatePriority(29504, 58836);
    caseQueue.insert(95760,47592);
    caseQueue.insert(51204,37752);
    caseQueue.updatePriority(20991, 63535);
    caseQueue.insert(9377,55346);
    myResult.push_back(caseQueue.getPriority(32957)); //29
    caseQueue.insert(6575,25749);
    myResult.push_back(caseQueue.getPriority(87019)); //30
    myResult.push_back(caseQueue.getPriority(59415)); //31
    myResult.push_back(caseQueue.getPriority(6575)); //32
    caseQueue.updatePriority(9377, 27321);
    caseQueue.insert(31769,10976);
    caseQueue.insert(41207,2692);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(20991, 95936);
    myResult.push_back(caseQueue.getPriority(9377)); //34
    caseQueue.insert(95918,16939);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(43775,40011);
    caseQueue.updatePriority(99026, 33065);
    myResult.push_back(caseQueue.getPriority(32957)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(8515)); //38
    myResult.push_back(caseQueue.getPriority(59415)); //39
    caseQueue.updatePriority(9377, 28151);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(51204)); //42
    caseQueue.insert(7015,21358);
    caseQueue.updatePriority(32957, 74637);
    caseQueue.updatePriority(20991, 59863);
    myResult.push_back(caseQueue.getPriority(97889)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(58227,10738);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(36709,51425);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(20991)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(81825,15489);
    caseQueue.insert(73801,24777);
    caseQueue.insert(57338,39190);
    caseQueue.updatePriority(87019, 93327);
    caseQueue.updatePriority(87942, 67871);
    caseQueue.insert(188,11718);
    caseQueue.insert(8820,68669);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(37897,48275);
    caseQueue.insert(43864,57433);
    myResult.push_back(caseQueue.getPriority(8515)); //54
    caseQueue.insert(48330,57445);
    caseQueue.insert(28841,30811);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(33909,19254);
    caseQueue.insert(37394,27);
    caseQueue.insert(44453,3380);
    caseQueue.insert(62602,91644);
    myResult.push_back(caseQueue.getPriority(57338)); //56
    caseQueue.insert(61637,45501);
    myResult.push_back(caseQueue.getPriority(28841)); //57
    myResult.push_back(caseQueue.getPriority(8515)); //58
    caseQueue.insert(16385,81386);
    caseQueue.insert(28186,39074);
    caseQueue.insert(32666,79786);
    myResult.push_back(caseQueue.getPriority(32957)); //59
    caseQueue.insert(6029,62650);
    caseQueue.updatePriority(87942, 36084);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(62602, 93420);
    caseQueue.insert(60914,40825);
    caseQueue.updatePriority(36709, 89139);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(1995,73952);
    caseQueue.insert(51071,56158);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(85920,59406);
    myResult.push_back(caseQueue.getPriority(36709)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(28186)); //66
    caseQueue.insert(14288,23486);
    caseQueue.insert(22525,14051);
    myResult.push_back(caseQueue.getPriority(16385)); //67
    caseQueue.updatePriority(61637, 83517);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(48330)); //69
    caseQueue.insert(58882,95894);
    caseQueue.updatePriority(61637, 45436);
    caseQueue.insert(56653,62410);
    caseQueue.updatePriority(95760, 18035);
    caseQueue.insert(23519,52062);
    myResult.push_back(caseQueue.getPriority(32957)); //70
    caseQueue.updatePriority(60914, 33903);
    caseQueue.insert(85426,80323);
    caseQueue.updatePriority(61637, 90044);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(8515)); //72
    myResult.push_back(caseQueue.getPriority(48330)); //73
    myResult.push_back(caseQueue.getPriority(57338)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(57338, 28639);
    caseQueue.insert(63338,36322);
    caseQueue.insert(20057,74647);
    caseQueue.updatePriority(63338, 23821);
    caseQueue.updatePriority(61637, 34965);
    caseQueue.updatePriority(23670, 8267);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(20991, 16251);
    myResult.push_back(caseQueue.getPriority(85920)); //77
    caseQueue.insert(62124,79459);
    myResult.push_back(caseQueue.getPriority(20057)); //78
    myResult.push_back(caseQueue.getPriority(16385)); //79
    caseQueue.insert(35011,28113);
    caseQueue.updatePriority(8820, 53726);
    caseQueue.insert(5207,67986);
    caseQueue.insert(1517,74792);
    caseQueue.insert(84027,12376);
    myResult.push_back(caseQueue.getPriority(62124)); //80
    caseQueue.insert(75884,97780);
    myResult.push_back(caseQueue.getPriority(5207)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(25774,98928);
    caseQueue.insert(71479,97582);
    caseQueue.updatePriority(56653, 77847);
    caseQueue.insert(68831,54349);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(88066,80127);
    caseQueue.insert(13118,97122);
    myResult.push_back(caseQueue.getPriority(88066)); //86
    myResult.push_back(caseQueue.getPriority(62124)); //87
    caseQueue.updatePriority(23519, 74126);
    caseQueue.updatePriority(20057, 59584);
    myResult.push_back(caseQueue.deleteMin()); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.updatePriority(29504, 13022);
    caseQueue.insert(58886,33032);
    caseQueue.insert(79364,36429);
    caseQueue.updatePriority(48330, 34354);
    caseQueue.insert(98061,76181);
    caseQueue.updatePriority(87019, 52910);
    caseQueue.insert(9574,81096);
    caseQueue.insert(17209,78241);
    caseQueue.updatePriority(56653, 21922);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(46205,13738);
    caseQueue.updatePriority(59415, 66272);
    myResult.push_back(caseQueue.getPriority(20057)); //91
    caseQueue.insert(50838,63578);
    myResult.push_back(caseQueue.deleteMin()); //92
    static const int resultListArray[] = {81929, 4959, 80740, 73757, 72336, 96568, 65297, 7830, 34803, 14915, 17621, 79983, 58537, 30217, 2621, 19422, 74629, 75977, 81268, 69402, 69241, 15095, 34803, 69241, 79239, 34803, 6229, 45893, 39548, 61031, 69241, 25749, 41207, 27321, 31769, 39548, 95918, 94337, 69241, 47899, 6575, 37752, 49498, 7015, 9377, 58227, 99026, 64795, 51204, 59863, 43775, 188, 81825, 94337, 73801, 39190, 30811, 94337, 74637, 37394, 44453, 33909, 28841, 89139, 87942, 39074, 81386, 22525, 57445, 74637, 95760, 94337, 57445, 39190, 14288, 23670, 59406, 74647, 81386, 79459, 67986, 84027, 20991, 63338, 35011, 80127, 79459, 57338, 60914, 29504, 59584, 46205}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(180): Basarili" << endl;
    else cout << "Case(180): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_181(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 111);

    vector<int> myResult; 
    caseQueue.insert(53245,76017);
    caseQueue.insert(22905,77217);
    caseQueue.insert(82119,87615);
    caseQueue.insert(32779,93223);
    caseQueue.insert(10312,83168);
    caseQueue.insert(77272,85428);
    caseQueue.insert(92895,28603);
    myResult.push_back(caseQueue.getPriority(10312)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(74748,93706);
    myResult.push_back(caseQueue.getPriority(32779)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(32779)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(10312)); //7
    caseQueue.updatePriority(32779, 50254);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(10312, 84434);
    caseQueue.updatePriority(74748, 32428);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(10312, 10998);
    myResult.push_back(caseQueue.getPriority(77272)); //10
    myResult.push_back(caseQueue.getPriority(82119)); //11
    caseQueue.insert(32316,10401);
    caseQueue.updatePriority(10312, 34818);
    caseQueue.updatePriority(32316, 24946);
    caseQueue.insert(54495,28843);
    caseQueue.insert(67112,58933);
    caseQueue.insert(99720,79900);
    caseQueue.insert(44471,34381);
    myResult.push_back(caseQueue.getPriority(77272)); //12
    caseQueue.insert(88428,591);
    myResult.push_back(caseQueue.getPriority(99720)); //13
    myResult.push_back(caseQueue.getPriority(82119)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(10312)); //16
    caseQueue.updatePriority(54495, 30128);
    caseQueue.insert(40717,83182);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(44471, 91047);
    caseQueue.updatePriority(54495, 33287);
    myResult.push_back(caseQueue.getPriority(54495)); //18
    caseQueue.updatePriority(99720, 63891);
    myResult.push_back(caseQueue.getPriority(67112)); //19
    myResult.push_back(caseQueue.getPriority(99720)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(86810,29770);
    caseQueue.insert(19091,65648);
    caseQueue.insert(83972,80806);
    myResult.push_back(caseQueue.getPriority(40717)); //23
    myResult.push_back(caseQueue.getPriority(44471)); //24
    caseQueue.updatePriority(83972, 33279);
    caseQueue.insert(40397,89714);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(19091, 57036);
    myResult.push_back(caseQueue.getPriority(44471)); //27
    caseQueue.updatePriority(99720, 88922);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(99235,59964);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(44471, 27774);
    caseQueue.insert(77733,60274);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(65792,67212);
    caseQueue.insert(96157,76424);
    caseQueue.updatePriority(65792, 44195);
    caseQueue.updatePriority(40397, 21061);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(77272, 68048);
    caseQueue.insert(46677,83199);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(85634,337);
    myResult.push_back(caseQueue.getPriority(82119)); //33
    caseQueue.insert(5150,79985);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(40717, 60294);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(69529,58298);
    myResult.push_back(caseQueue.getPriority(96157)); //36
    myResult.push_back(caseQueue.getPriority(77733)); //37
    caseQueue.insert(60124,66582);
    caseQueue.insert(47931,6682);
    caseQueue.insert(8679,22352);
    caseQueue.updatePriority(46677, 13280);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(65622,88153);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(99720)); //40
    caseQueue.insert(32879,97177);
    myResult.push_back(caseQueue.getPriority(99720)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(96157, 4948);
    myResult.push_back(caseQueue.getPriority(77272)); //44
    caseQueue.updatePriority(32879, 4313);
    caseQueue.insert(18483,75554);
    caseQueue.insert(53121,98799);
    caseQueue.insert(53015,98172);
    myResult.push_back(caseQueue.getPriority(65622)); //45
    caseQueue.insert(30666,9820);
    caseQueue.insert(35677,15288);
    myResult.push_back(caseQueue.getPriority(32879)); //46
    myResult.push_back(caseQueue.getPriority(18483)); //47
    caseQueue.insert(89460,34400);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(27263,19711);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(77272)); //51
    static const int resultListArray[] = {83168, 92895, 93223, 53245, 93223, 22905, 83168, 32779, 74748, 85428, 87615, 85428, 79900, 87615, 88428, 34818, 32316, 33287, 58933, 63891, 54495, 10312, 83182, 91047, 86810, 83972, 91047, 19091, 67112, 44471, 40397, 65792, 87615, 85634, 99235, 76424, 60274, 47931, 46677, 88922, 88922, 8679, 69529, 68048, 88153, 4313, 75554, 32879, 96157, 30666, 68048}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(181): Basarili" << endl;
    else cout << "Case(181): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_182(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 208);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(10988,80431);
    caseQueue.updatePriority(10988, 55829);
    caseQueue.insert(83701,83620);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(82994,22111);
    caseQueue.insert(81596,82059);
    myResult.push_back(caseQueue.getPriority(83701)); //3
    myResult.push_back(caseQueue.getPriority(82994)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(83701, 86779);
    caseQueue.updatePriority(81596, 51812);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(6821,64490);
    caseQueue.insert(74904,30773);
    myResult.push_back(caseQueue.getPriority(6821)); //7
    myResult.push_back(caseQueue.getPriority(83701)); //8
    caseQueue.insert(41308,41108);
    caseQueue.insert(25456,33020);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(25456, 90763);
    caseQueue.updatePriority(6821, 8474);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(49046,30796);
    caseQueue.insert(10154,90462);
    caseQueue.updatePriority(10154, 88427);
    caseQueue.insert(52163,43458);
    caseQueue.insert(67683,89719);
    myResult.push_back(caseQueue.getPriority(49046)); //11
    caseQueue.insert(14066,32853);
    caseQueue.insert(77375,43395);
    caseQueue.updatePriority(52163, 25588);
    caseQueue.insert(83940,94385);
    caseQueue.insert(60385,66054);
    caseQueue.insert(25048,36168);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(23364,97348);
    caseQueue.insert(98119,46211);
    myResult.push_back(caseQueue.getPriority(41308)); //13
    caseQueue.updatePriority(67683, 64791);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(77375)); //15
    caseQueue.insert(65006,19136);
    caseQueue.insert(51234,86838);
    myResult.push_back(caseQueue.getPriority(14066)); //16
    caseQueue.updatePriority(25456, 2143);
    myResult.push_back(caseQueue.getPriority(65006)); //17
    caseQueue.insert(4760,23484);
    myResult.push_back(caseQueue.getPriority(10154)); //18
    caseQueue.insert(97554,72385);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(13677,75426);
    caseQueue.insert(7627,49969);
    caseQueue.insert(74566,1105);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(15459,98866);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(15459, 35304);
    caseQueue.insert(46114,43208);
    caseQueue.updatePriority(10154, 68315);
    caseQueue.insert(26818,20532);
    myResult.push_back(caseQueue.getPriority(23364)); //24
    caseQueue.insert(41015,30683);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(62238,64396);
    myResult.push_back(caseQueue.getPriority(13677)); //26
    caseQueue.insert(24851,97709);
    caseQueue.insert(3718,37417);
    caseQueue.insert(55220,80382);
    caseQueue.insert(90079,2570);
    caseQueue.insert(5940,25080);
    caseQueue.insert(12210,7034);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(96319,71683);
    myResult.push_back(caseQueue.getPriority(41308)); //29
    caseQueue.updatePriority(83940, 85710);
    caseQueue.insert(60739,57466);
    caseQueue.insert(85443,16430);
    caseQueue.updatePriority(13677, 47530);
    caseQueue.insert(66583,46203);
    myResult.push_back(caseQueue.getPriority(10154)); //30
    caseQueue.insert(93760,10580);
    caseQueue.updatePriority(51234, 77332);
    caseQueue.updatePriority(55220, 27146);
    myResult.push_back(caseQueue.getPriority(3718)); //31
    caseQueue.insert(65724,57439);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(54990,40132);
    myResult.push_back(caseQueue.getPriority(25048)); //33
    caseQueue.updatePriority(96319, 16498);
    caseQueue.insert(24891,55445);
    caseQueue.insert(55756,34902);
    caseQueue.insert(78657,16252);
    caseQueue.insert(98113,82736);
    caseQueue.insert(39707,61595);
    caseQueue.insert(439,68581);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(22342,24587);
    caseQueue.updatePriority(55220, 27594);
    caseQueue.insert(74343,3326);
    caseQueue.insert(61322,62215);
    caseQueue.updatePriority(97554, 51665);
    caseQueue.insert(20492,28469);
    myResult.push_back(caseQueue.getPriority(7627)); //35
    caseQueue.insert(75402,68247);
    caseQueue.updatePriority(41308, 70850);
    caseQueue.insert(41741,56210);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(7627, 57137);
    caseQueue.insert(23966,73901);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(54990, 25799);
    caseQueue.updatePriority(7627, 71077);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(73477,92084);
    caseQueue.updatePriority(5940, 3056);
    caseQueue.updatePriority(83940, 2190);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(23676,56018);
    caseQueue.insert(93358,89588);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(24851, 82801);
    myResult.push_back(caseQueue.getPriority(55756)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(47081,32091);
    caseQueue.insert(55200,79342);
    myResult.push_back(caseQueue.getPriority(39707)); //45
    caseQueue.updatePriority(66583, 73541);
    myResult.push_back(caseQueue.getPriority(55200)); //46
    caseQueue.insert(63693,29947);
    caseQueue.insert(5547,3669);
    caseQueue.updatePriority(20492, 28451);
    caseQueue.updatePriority(41741, 64466);
    myResult.push_back(caseQueue.getPriority(55200)); //47
    caseQueue.insert(95539,36876);
    caseQueue.insert(90005,42228);
    caseQueue.insert(72864,24917);
    myResult.push_back(caseQueue.getPriority(24891)); //48
    caseQueue.insert(70154,52550);
    myResult.push_back(caseQueue.getPriority(83701)); //49
    myResult.push_back(caseQueue.getPriority(67683)); //50
    caseQueue.insert(49223,34502);
    caseQueue.updatePriority(55200, 60832);
    caseQueue.insert(49025,42063);
    myResult.push_back(caseQueue.getPriority(66583)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(66583)); //53
    caseQueue.updatePriority(98119, 62333);
    myResult.push_back(caseQueue.getPriority(3718)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(73477, 17213);
    myResult.push_back(caseQueue.getPriority(49025)); //56
    caseQueue.insert(48525,61556);
    caseQueue.insert(3770,20667);
    caseQueue.insert(45258,30460);
    caseQueue.updatePriority(97554, 2936);
    caseQueue.insert(1106,46458);
    caseQueue.insert(72066,52322);
    caseQueue.insert(70614,87459);
    caseQueue.updatePriority(63693, 9822);
    myResult.push_back(caseQueue.getPriority(10154)); //57
    caseQueue.insert(94442,91406);
    myResult.push_back(caseQueue.getPriority(65724)); //58
    myResult.push_back(caseQueue.getPriority(23966)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(73477)); //61
    caseQueue.insert(52942,46794);
    caseQueue.insert(55320,15617);
    myResult.push_back(caseQueue.getPriority(1106)); //62
    caseQueue.insert(39167,31686);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(98119, 41411);
    myResult.push_back(caseQueue.getPriority(51234)); //64
    caseQueue.insert(95625,52478);
    caseQueue.updatePriority(95625, 58912);
    caseQueue.updatePriority(93358, 65368);
    caseQueue.insert(86398,36703);
    caseQueue.insert(46654,84974);
    caseQueue.insert(62819,19284);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(46654, 93359);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(530,21849);
    caseQueue.insert(80696,93408);
    myResult.push_back(caseQueue.getPriority(23676)); //67
    caseQueue.updatePriority(65724, 25357);
    caseQueue.insert(77719,51339);
    caseQueue.insert(17815,77161);
    caseQueue.insert(60585,60918);
    caseQueue.insert(39636,38775);
    caseQueue.insert(58417,13403);
    caseQueue.insert(43363,35944);
    caseQueue.insert(39219,21616);
    caseQueue.insert(18266,51295);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(52539,70631);
    caseQueue.insert(77353,97215);
    caseQueue.insert(61287,59511);
    caseQueue.updatePriority(39636, 49259);
    caseQueue.insert(41329,37981);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(59951,62335);
    caseQueue.insert(43599,56476);
    static const int resultListArray[] = {-1, 10988, 83620, 22111, 82994, 81596, 64490, 86779, 74904, 6821, 30796, 52163, 41108, 49046, 43395, 32853, 19136, 88427, 25456, 74566, 65006, 4760, 14066, 97348, 26818, 75426, 90079, 12210, 41108, 68315, 37417, 93760, 36168, 78657, 49969, 74343, 85443, 96319, 83940, 5940, 22342, 54990, 34902, 55220, 61595, 79342, 79342, 55445, 86779, 64791, 73541, 5547, 73541, 37417, 72864, 42063, 68315, 57439, 73901, 97554, 17213, 46458, 63693, 77332, 55320, 73477, 56018, 58417, 62819}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(182): Basarili" << endl;
    else cout << "Case(182): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_183(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 237);

    vector<int> myResult; 
    caseQueue.insert(67187,82196);
    caseQueue.updatePriority(67187, 22359);
    caseQueue.insert(78638,36697);
    caseQueue.insert(53080,70625);
    myResult.push_back(caseQueue.getPriority(67187)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(34254,59659);
    myResult.push_back(caseQueue.getPriority(53080)); //3
    caseQueue.updatePriority(53080, 37564);
    caseQueue.insert(63645,48034);
    caseQueue.insert(61226,28947);
    caseQueue.insert(65625,867);
    caseQueue.insert(62629,51396);
    caseQueue.updatePriority(34254, 61107);
    caseQueue.insert(51088,74417);
    caseQueue.updatePriority(63645, 70636);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(63645, 86752);
    caseQueue.insert(89523,10256);
    caseQueue.insert(16012,9115);
    caseQueue.updatePriority(89523, 31660);
    caseQueue.insert(74877,20987);
    caseQueue.updatePriority(16012, 10087);
    caseQueue.updatePriority(53080, 70134);
    caseQueue.updatePriority(53080, 71585);
    caseQueue.insert(80911,38819);
    caseQueue.insert(77127,6746);
    myResult.push_back(caseQueue.getPriority(34254)); //5
    myResult.push_back(caseQueue.getPriority(77127)); //6
    myResult.push_back(caseQueue.getPriority(53080)); //7
    caseQueue.insert(35606,6178);
    caseQueue.insert(69093,34962);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(74877)); //9
    caseQueue.insert(89046,47447);
    myResult.push_back(caseQueue.getPriority(77127)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(2257,52863);
    caseQueue.insert(93607,89473);
    caseQueue.updatePriority(63645, 57382);
    caseQueue.updatePriority(89046, 91313);
    caseQueue.updatePriority(51088, 79784);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(15045,5387);
    caseQueue.updatePriority(74877, 72175);
    caseQueue.updatePriority(89523, 67110);
    caseQueue.insert(66774,84867);
    caseQueue.updatePriority(66774, 3269);
    caseQueue.insert(9295,89328);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(42888,80190);
    caseQueue.insert(57195,32294);
    myResult.push_back(caseQueue.getPriority(69093)); //14
    caseQueue.insert(57223,86106);
    caseQueue.insert(24723,3936);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(15045)); //16
    caseQueue.insert(36895,795);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(65636,60349);
    myResult.push_back(caseQueue.getPriority(57195)); //18
    caseQueue.insert(86450,74217);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(86450, 51131);
    caseQueue.insert(78588,47656);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(21528,75523);
    myResult.push_back(caseQueue.getPriority(42888)); //23
    caseQueue.updatePriority(2257, 41413);
    caseQueue.updatePriority(9295, 3030);
    caseQueue.insert(69953,16000);
    myResult.push_back(caseQueue.getPriority(62629)); //24
    caseQueue.updatePriority(93607, 84584);
    caseQueue.insert(53945,51645);
    caseQueue.updatePriority(2257, 90962);
    caseQueue.insert(70649,38374);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(96809,13774);
    caseQueue.insert(33686,2131);
    myResult.push_back(caseQueue.getPriority(57223)); //26
    caseQueue.insert(88840,68865);
    myResult.push_back(caseQueue.getPriority(53080)); //27
    caseQueue.insert(79988,68038);
    caseQueue.insert(61541,21332);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(79988)); //29
    caseQueue.insert(8759,7310);
    caseQueue.insert(74786,26546);
    caseQueue.insert(96474,28555);
    caseQueue.insert(50432,2982);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(73486,97800);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(93607)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(53945)); //35
    caseQueue.insert(87007,7091);
    caseQueue.updatePriority(51088, 15262);
    caseQueue.insert(17556,50792);
    myResult.push_back(caseQueue.getPriority(61541)); //36
    caseQueue.updatePriority(53945, 88695);
    caseQueue.insert(12697,51419);
    caseQueue.insert(46315,97141);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(65636)); //38
    caseQueue.insert(92299,34418);
    myResult.push_back(caseQueue.getPriority(79988)); //39
    caseQueue.insert(516,21081);
    caseQueue.updatePriority(74786, 83899);
    myResult.push_back(caseQueue.getPriority(65636)); //40
    caseQueue.insert(23961,5290);
    caseQueue.insert(35878,41396);
    caseQueue.insert(49973,73547);
    caseQueue.insert(63728,74828);
    caseQueue.insert(52286,98512);
    caseQueue.insert(54268,10558);
    caseQueue.updatePriority(73486, 19450);
    caseQueue.insert(57480,48999);
    caseQueue.insert(45444,75186);
    caseQueue.insert(31676,31010);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(82478,28989);
    caseQueue.updatePriority(46315, 52363);
    myResult.push_back(caseQueue.getPriority(61541)); //42
    caseQueue.updatePriority(65636, 33202);
    caseQueue.insert(62049,92548);
    caseQueue.updatePriority(78588, 52925);
    caseQueue.insert(22725,94500);
    myResult.push_back(caseQueue.getPriority(57223)); //43
    myResult.push_back(caseQueue.getPriority(62629)); //44
    caseQueue.insert(21879,13639);
    caseQueue.insert(22148,23747);
    caseQueue.insert(40212,8210);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(70513,4372);
    myResult.push_back(caseQueue.getPriority(21879)); //47
    myResult.push_back(caseQueue.getPriority(61541)); //48
    myResult.push_back(caseQueue.getPriority(78588)); //49
    caseQueue.insert(827,86238);
    caseQueue.updatePriority(45444, 68172);
    caseQueue.insert(30165,60538);
    caseQueue.insert(52957,8802);
    caseQueue.updatePriority(516, 11864);
    myResult.push_back(caseQueue.getPriority(34254)); //50
    caseQueue.insert(75685,88443);
    caseQueue.updatePriority(78588, 90251);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(49973, 5551);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(4157,11874);
    caseQueue.insert(20949,7495);
    caseQueue.updatePriority(2257, 95211);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(74506,86837);
    caseQueue.insert(57655,24604);
    caseQueue.updatePriority(35878, 13001);
    myResult.push_back(caseQueue.getPriority(82478)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(39660,47000);
    caseQueue.insert(74575,83107);
    caseQueue.insert(2727,850);
    myResult.push_back(caseQueue.getPriority(74506)); //57
    caseQueue.insert(90918,78357);
    caseQueue.insert(94384,83664);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(95716,74174);
    caseQueue.insert(3385,72376);
    caseQueue.insert(88960,85921);
    caseQueue.insert(87159,41451);
    caseQueue.insert(28004,69428);
    caseQueue.insert(79351,89944);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(59261,25891);
    caseQueue.insert(87241,54032);
    caseQueue.insert(66146,75586);
    caseQueue.updatePriority(59261, 56148);
    caseQueue.updatePriority(53080, 36177);
    caseQueue.updatePriority(3385, 51048);
    caseQueue.updatePriority(73486, 68948);
    caseQueue.insert(39144,5763);
    caseQueue.updatePriority(17556, 42525);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(4262,63656);
    myResult.push_back(caseQueue.getPriority(31676)); //61
    caseQueue.insert(86449,48783);
    caseQueue.insert(56049,19616);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(80911, 62909);
    myResult.push_back(caseQueue.getPriority(22148)); //63
    myResult.push_back(caseQueue.getPriority(59261)); //64
    myResult.push_back(caseQueue.getPriority(89046)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(52286)); //67
    caseQueue.updatePriority(78588, 41170);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(74506, 46216);
    caseQueue.insert(2746,27392);
    caseQueue.updatePriority(22148, 11951);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(11487,88059);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(28846,82491);
    caseQueue.insert(15479,56687);
    caseQueue.insert(74892,31526);
    caseQueue.insert(44774,51657);
    myResult.push_back(caseQueue.getPriority(96474)); //72
    caseQueue.updatePriority(88960, 22736);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(62629)); //74
    myResult.push_back(caseQueue.getPriority(28004)); //75
    caseQueue.insert(73325,79136);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(90918)); //77
    caseQueue.insert(63393,53869);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(98426,99581);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(17556)); //80
    caseQueue.insert(54895,17622);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.getPriority(95716)); //82
    caseQueue.insert(102,44581);
    caseQueue.insert(91937,69479);
    caseQueue.insert(8925,91407);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(99831,3961);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.getPriority(93607)); //86
    caseQueue.insert(63326,91633);
    caseQueue.updatePriority(74892, 57735);
    static const int resultListArray[] = {22359, 67187, 70625, 65625, 61107, 6746, 71585, 35606, 20987, 6746, 77127, 16012, 66774, 34962, 24723, 5387, 36895, 32294, 15045, 61226, 57195, 69093, 80190, 51396, 9295, 86106, 71585, 33686, 68038, 50432, 8759, 96809, 84584, 69953, 51645, 21332, 87007, 60349, 68038, 60349, 23961, 21332, 86106, 51396, 40212, 54268, 13639, 21332, 52925, 61107, 70513, 49973, 52957, 20949, 28989, 516, 86837, 2727, 4157, 39144, 31010, 35878, 23747, 56148, 91313, 21879, 98512, 51088, 22148, 56049, 61541, 28555, 88960, 51396, 69428, 57655, 78357, 2746, 96474, 42525, 54895, 74174, 82478, 99831, 31676, 84584}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(183): Basarili" << endl;
    else cout << "Case(183): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_184(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 176);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(12266)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(87478,81531);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(37234)); //4
    caseQueue.insert(47135,37797);
    caseQueue.insert(78249,42373);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(19797,83028);
    caseQueue.updatePriority(19797, 43910);
    caseQueue.insert(14772,66929);
    caseQueue.insert(82380,89611);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(82380, 55376);
    myResult.push_back(caseQueue.getPriority(82380)); //8
    caseQueue.insert(47819,11212);
    caseQueue.updatePriority(47819, 23693);
    caseQueue.insert(52365,75379);
    caseQueue.updatePriority(82380, 80117);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(82380, 27239);
    caseQueue.insert(2371,65458);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(14772)); //11
    caseQueue.updatePriority(2371, 58590);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(52365)); //13
    myResult.push_back(caseQueue.getPriority(52365)); //14
    myResult.push_back(caseQueue.getPriority(52365)); //15
    caseQueue.insert(69571,19535);
    caseQueue.insert(84411,5454);
    caseQueue.insert(16546,3428);
    caseQueue.insert(68869,14129);
    caseQueue.updatePriority(16546, 23264);
    caseQueue.insert(29194,74446);
    myResult.push_back(caseQueue.getPriority(14772)); //16
    caseQueue.updatePriority(69571, 59489);
    caseQueue.insert(57724,96207);
    caseQueue.insert(40421,21953);
    caseQueue.insert(88553,83040);
    myResult.push_back(caseQueue.getPriority(40421)); //17
    caseQueue.insert(84707,8829);
    caseQueue.updatePriority(29194, 84469);
    myResult.push_back(caseQueue.getPriority(52365)); //18
    myResult.push_back(caseQueue.getPriority(68869)); //19
    myResult.push_back(caseQueue.getPriority(14772)); //20
    caseQueue.insert(10444,68120);
    caseQueue.insert(92975,26500);
    caseQueue.insert(35198,59765);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(68869)); //22
    myResult.push_back(caseQueue.getPriority(35198)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(35198)); //25
    caseQueue.insert(73010,37421);
    caseQueue.insert(73954,54727);
    caseQueue.insert(35792,84896);
    caseQueue.insert(80160,43935);
    caseQueue.insert(58630,95726);
    myResult.push_back(caseQueue.getPriority(69571)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(22943,75075);
    caseQueue.updatePriority(40421, 98672);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(73954)); //30
    caseQueue.updatePriority(35198, 82244);
    caseQueue.insert(31058,92209);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(62386,83193);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(40421)); //36
    caseQueue.insert(57660,58910);
    caseQueue.insert(77176,58061);
    caseQueue.insert(48861,43407);
    caseQueue.insert(42966,38099);
    myResult.push_back(caseQueue.getPriority(77176)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(11772,39981);
    caseQueue.insert(7393,19004);
    caseQueue.updatePriority(10444, 37957);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(22943, 23939);
    caseQueue.insert(51284,99029);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(36762,51579);
    caseQueue.updatePriority(10444, 89938);
    caseQueue.insert(90939,38183);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(35792)); //42
    caseQueue.insert(22758,78471);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(24654,67537);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(31058)); //45
    caseQueue.insert(31425,11955);
    caseQueue.insert(38613,87932);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(58630)); //48
    caseQueue.updatePriority(58630, 18737);
    myResult.push_back(caseQueue.getPriority(88553)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(35198)); //51
    caseQueue.updatePriority(52365, 68405);
    caseQueue.updatePriority(77176, 5803);
    caseQueue.updatePriority(62386, 64655);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(31058)); //53
    caseQueue.insert(39183,77292);
    caseQueue.insert(58232,50513);
    caseQueue.updatePriority(58232, 25820);
    caseQueue.insert(58669,97030);
    myResult.push_back(caseQueue.getPriority(10444)); //54
    caseQueue.insert(84893,285);
    caseQueue.updatePriority(57660, 95858);
    caseQueue.updatePriority(38613, 90399);
    myResult.push_back(caseQueue.getPriority(57724)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(51284, 30682);
    caseQueue.insert(56545,73718);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(39869,38508);
    caseQueue.insert(65870,86931);
    myResult.push_back(caseQueue.getPriority(62386)); //58
    caseQueue.insert(14655,51143);
    caseQueue.updatePriority(62386, 9623);
    caseQueue.insert(23030,35985);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(52365, 22974);
    caseQueue.updatePriority(58669, 40244);
    caseQueue.updatePriority(31058, 87137);
    caseQueue.insert(92966,66566);
    myResult.push_back(caseQueue.getPriority(56545)); //62
    caseQueue.insert(51625,41535);
    caseQueue.insert(48738,38219);
    caseQueue.updatePriority(35792, 5025);
    caseQueue.insert(77383,3912);
    myResult.push_back(caseQueue.getPriority(48738)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(13265,17013);
    caseQueue.insert(79327,68031);
    caseQueue.insert(33854,1365);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(44969,43568);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(68222,61171);
    caseQueue.updatePriority(48738, 82644);
    caseQueue.updatePriority(79327, 27746);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(56545, 61393);
    caseQueue.insert(28195,65125);
    caseQueue.insert(11686,6147);
    caseQueue.updatePriority(40421, 98452);
    caseQueue.insert(78364,35298);
    caseQueue.insert(10902,49812);
    caseQueue.insert(51288,80124);
    caseQueue.insert(16250,82635);
    myResult.push_back(caseQueue.getPriority(11686)); //68
    caseQueue.updatePriority(52365, 79107);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(39183, 39040);
    caseQueue.insert(40320,26864);
    myResult.push_back(caseQueue.getPriority(88553)); //70
    caseQueue.updatePriority(14655, 86246);
    caseQueue.insert(75949,18856);
    caseQueue.updatePriority(29194, 93607);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(2732,80415);
    caseQueue.insert(66305,39651);
    static const int resultListArray[] = {-1, -1, 87478, -1, 47135, 78249, 19797, 55376, 47819, 82380, 66929, 2371, 75379, 75379, 75379, 66929, 21953, 75379, 14129, 66929, 84411, 14129, 59765, 84707, 59765, 59489, 68869, 16546, 92975, 54727, 73010, 80160, 73954, 69571, 14772, 98672, 58061, 42966, 7393, 22943, 90939, 84896, 11772, 48861, 92209, 31425, 36762, 95726, 83040, 58630, 82244, 77176, 92209, 89938, 96207, 84893, 58232, 64655, 62386, 51284, 23030, 73718, 38219, 77383, 33854, 35792, 13265, 6147, 11686, 83040, 75949}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(184): Basarili" << endl;
    else cout << "Case(184): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_185(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 239);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(84270, 81267);
    caseQueue.insert(66384,67023);
    myResult.push_back(caseQueue.getPriority(66384)); //2
    myResult.push_back(caseQueue.getPriority(66384)); //3
    caseQueue.insert(79920,94336);
    caseQueue.insert(82553,99703);
    caseQueue.insert(55256,55222);
    caseQueue.insert(35135,50796);
    caseQueue.insert(44349,8663);
    myResult.push_back(caseQueue.getPriority(79920)); //4
    caseQueue.updatePriority(82553, 69633);
    myResult.push_back(caseQueue.getPriority(79920)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(16071,99548);
    myResult.push_back(caseQueue.getPriority(82553)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(79920)); //10
    caseQueue.insert(56048,781);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(16071)); //13
    caseQueue.updatePriority(79920, 36770);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(82553)); //15
    caseQueue.insert(18770,39789);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(26616,57434);
    myResult.push_back(caseQueue.getPriority(16071)); //18
    myResult.push_back(caseQueue.getPriority(16071)); //19
    caseQueue.updatePriority(16071, 79307);
    caseQueue.updatePriority(26616, 44385);
    caseQueue.updatePriority(26616, 67969);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(87708,22907);
    myResult.push_back(caseQueue.getPriority(87708)); //21
    caseQueue.insert(21267,12016);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(56318,43349);
    caseQueue.insert(69873,1016);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(8969,36509);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(16071)); //26
    caseQueue.insert(55632,25694);
    caseQueue.insert(45761,46571);
    caseQueue.insert(25805,43613);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(53615,38638);
    caseQueue.updatePriority(53615, 1831);
    caseQueue.insert(94312,91793);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(52525,50978);
    myResult.push_back(caseQueue.getPriority(16071)); //32
    caseQueue.insert(34077,89075);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(58927,3800);
    caseQueue.insert(88515,61741);
    caseQueue.insert(2298,72258);
    caseQueue.insert(75310,76791);
    caseQueue.insert(25546,23703);
    myResult.push_back(caseQueue.getPriority(88515)); //34
    caseQueue.insert(30202,11678);
    myResult.push_back(caseQueue.getPriority(30202)); //35
    caseQueue.insert(61708,28034);
    caseQueue.insert(79870,36108);
    caseQueue.insert(69290,25543);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(43188,10813);
    caseQueue.insert(54739,65261);
    caseQueue.insert(2311,61423);
    caseQueue.updatePriority(30202, 71536);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(90868,91869);
    caseQueue.insert(61201,57680);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(94312)); //39
    caseQueue.updatePriority(79870, 65865);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(79870)); //41
    caseQueue.insert(10639,89708);
    caseQueue.insert(46149,18254);
    caseQueue.insert(75099,54767);
    caseQueue.insert(18556,10550);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(79870)); //43
    caseQueue.updatePriority(90868, 16685);
    caseQueue.insert(52436,87321);
    caseQueue.insert(22559,34079);
    caseQueue.updatePriority(75099, 79713);
    caseQueue.insert(70163,7268);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(94312)); //45
    caseQueue.insert(89969,76474);
    myResult.push_back(caseQueue.getPriority(94312)); //46
    caseQueue.insert(45337,35730);
    caseQueue.insert(81810,80787);
    caseQueue.insert(63549,48815);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(38008,40258);
    myResult.push_back(caseQueue.getPriority(2298)); //48
    caseQueue.insert(82292,50318);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(88515)); //50
    caseQueue.updatePriority(38008, 36094);
    caseQueue.insert(24793,19524);
    caseQueue.insert(36485,83102);
    caseQueue.insert(90792,36173);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(63549)); //52
    caseQueue.updatePriority(22559, 99501);
    caseQueue.insert(3753,30669);
    caseQueue.updatePriority(79870, 30341);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(50809,16461);
    caseQueue.updatePriority(34077, 59385);
    caseQueue.insert(16875,23648);
    caseQueue.insert(12957,31579);
    caseQueue.insert(88037,93250);
    caseQueue.updatePriority(12957, 9169);
    myResult.push_back(caseQueue.getPriority(30202)); //55
    caseQueue.updatePriority(75099, 58414);
    caseQueue.insert(78819,91602);
    myResult.push_back(caseQueue.getPriority(16875)); //56
    caseQueue.insert(41124,20467);
    myResult.push_back(caseQueue.getPriority(89969)); //57
    caseQueue.insert(69570,68631);
    caseQueue.insert(96108,47980);
    caseQueue.insert(99789,25539);
    myResult.push_back(caseQueue.getPriority(22559)); //58
    myResult.push_back(caseQueue.getPriority(88037)); //59
    caseQueue.insert(26596,90195);
    myResult.push_back(caseQueue.getPriority(16071)); //60
    caseQueue.insert(74228,40913);
    myResult.push_back(caseQueue.getPriority(30202)); //61
    caseQueue.updatePriority(30202, 22268);
    myResult.push_back(caseQueue.getPriority(63549)); //62
    caseQueue.insert(16042,15831);
    caseQueue.insert(14650,98502);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(48151,77096);
    myResult.push_back(caseQueue.getPriority(90792)); //64
    caseQueue.updatePriority(81810, 70645);
    caseQueue.insert(10070,29759);
    caseQueue.insert(89428,34383);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(48492,85442);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(10639, 95225);
    caseQueue.insert(33559,93007);
    caseQueue.insert(28067,80849);
    caseQueue.updatePriority(99789, 17795);
    caseQueue.insert(24872,62190);
    caseQueue.insert(72202,34446);
    caseQueue.insert(47249,33460);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(33559, 10951);
    myResult.push_back(caseQueue.getPriority(45337)); //71
    caseQueue.updatePriority(61201, 23800);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(74228)); //73
    caseQueue.insert(9601,94615);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(22559)); //75
    caseQueue.insert(51161,89167);
    myResult.push_back(caseQueue.getPriority(24872)); //76
    caseQueue.insert(28757,93152);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(2232,79512);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(18134,54197);
    caseQueue.updatePriority(74228, 11540);
    caseQueue.updatePriority(34077, 59613);
    myResult.push_back(caseQueue.getPriority(16071)); //81
    caseQueue.insert(68377,45958);
    caseQueue.updatePriority(9601, 306);
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.getPriority(26596)); //83
    myResult.push_back(caseQueue.getPriority(2232)); //84
    caseQueue.insert(82413,86727);
    caseQueue.insert(25054,94891);
    myResult.push_back(caseQueue.getPriority(26596)); //85
    caseQueue.insert(35429,79221);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(28757)); //87
    myResult.push_back(caseQueue.getPriority(28067)); //88
    caseQueue.insert(12002,7677);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(86322,67125);
    myResult.push_back(caseQueue.getPriority(2311)); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(81785,51779);
    caseQueue.insert(24266,24959);
    caseQueue.updatePriority(94312, 42443);
    caseQueue.updatePriority(28757, 23973);
    caseQueue.updatePriority(75099, 7130);
    myResult.push_back(caseQueue.getPriority(36485)); //92
    caseQueue.insert(68530,77708);
    myResult.push_back(caseQueue.getPriority(96108)); //93
    caseQueue.insert(18997,56768);
    myResult.push_back(caseQueue.getPriority(52436)); //94
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.getPriority(25054)); //97
    caseQueue.updatePriority(24872, 68658);
    caseQueue.insert(8857,66812);
    myResult.push_back(caseQueue.deleteMin()); //98
    myResult.push_back(caseQueue.deleteMin()); //99
    caseQueue.insert(62523,98577);
    caseQueue.insert(91113,90716);
    myResult.push_back(caseQueue.deleteMin()); //100
    myResult.push_back(caseQueue.getPriority(2232)); //101
    myResult.push_back(caseQueue.deleteMin()); //102
    caseQueue.updatePriority(8857, 60397);
    caseQueue.insert(58370,90843);
    caseQueue.insert(11929,88062);
    caseQueue.updatePriority(68530, 28100);
    caseQueue.insert(64199,35222);
    caseQueue.insert(28436,51321);
    myResult.push_back(caseQueue.deleteMin()); //103
    caseQueue.insert(10352,1574);
    myResult.push_back(caseQueue.deleteMin()); //104
    caseQueue.updatePriority(78819, 59164);
    myResult.push_back(caseQueue.getPriority(18997)); //105
    myResult.push_back(caseQueue.getPriority(28436)); //106
    caseQueue.updatePriority(96108, 45974);
    caseQueue.insert(66832,38546);
    static const int resultListArray[] = {-1, 67023, 67023, 94336, 94336, 44349, 69633, 35135, 55256, 94336, 56048, 66384, 99548, 79920, 69633, 18770, 82553, 99548, 99548, 26616, 22907, 21267, 69873, 87708, 8969, 79307, 55632, 56318, 25805, 53615, 45761, 79307, 52525, 61741, 11678, 58927, 43188, 25546, 91793, 69290, 65865, 18556, 65865, 70163, 91793, 91793, 90868, 72258, 46149, 61741, 24793, 48815, 61708, 79870, 71536, 23648, 76474, 99501, 93250, 79307, 71536, 48815, 12957, 36173, 16042, 50809, 41124, 30202, 16875, 99789, 35730, 33559, 40913, 61201, 99501, 62190, 10070, 3753, 47249, 89428, 79307, 9601, 90195, 79512, 90195, 74228, 93152, 80849, 12002, 61423, 72202, 83102, 47980, 87321, 75099, 28757, 94891, 24266, 45337, 38008, 79512, 90792, 68530, 10352, 56768, 51321}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(185): Basarili" << endl;
    else cout << "Case(185): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_186(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 207);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(77325,2294);
    caseQueue.insert(79886,33155);
    myResult.push_back(caseQueue.getPriority(79886)); //2
    caseQueue.updatePriority(79886, 57430);
    caseQueue.updatePriority(77325, 96057);
    caseQueue.insert(63144,62686);
    myResult.push_back(caseQueue.getPriority(63144)); //3
    caseQueue.insert(72142,87861);
    myResult.push_back(caseQueue.getPriority(63144)); //4
    caseQueue.insert(29006,20991);
    caseQueue.insert(39165,83889);
    myResult.push_back(caseQueue.getPriority(79886)); //5
    caseQueue.insert(87257,27815);
    caseQueue.insert(18822,10344);
    caseQueue.insert(87063,91094);
    caseQueue.insert(68385,94605);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(83264,22081);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(72142, 58422);
    caseQueue.insert(66994,18547);
    myResult.push_back(caseQueue.getPriority(39165)); //9
    myResult.push_back(caseQueue.getPriority(87063)); //10
    caseQueue.updatePriority(63144, 72420);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(68385)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(68385, 36856);
    caseQueue.updatePriority(77325, 53364);
    caseQueue.insert(88351,24843);
    caseQueue.insert(81909,1803);
    caseQueue.updatePriority(87063, 20188);
    caseQueue.insert(97740,64185);
    myResult.push_back(caseQueue.getPriority(72142)); //15
    caseQueue.insert(46012,45381);
    caseQueue.updatePriority(97740, 48303);
    myResult.push_back(caseQueue.getPriority(77325)); //16
    caseQueue.updatePriority(72142, 45004);
    caseQueue.insert(97109,72866);
    caseQueue.insert(5180,95233);
    caseQueue.insert(39607,71843);
    caseQueue.updatePriority(39165, 59994);
    caseQueue.insert(5731,48490);
    myResult.push_back(caseQueue.getPriority(97740)); //17
    myResult.push_back(caseQueue.getPriority(97740)); //18
    caseQueue.updatePriority(5180, 36185);
    caseQueue.insert(33968,25375);
    caseQueue.updatePriority(5180, 95347);
    myResult.push_back(caseQueue.getPriority(87063)); //19
    myResult.push_back(caseQueue.getPriority(87063)); //20
    caseQueue.updatePriority(39607, 92521);
    myResult.push_back(caseQueue.getPriority(72142)); //21
    caseQueue.updatePriority(39165, 36904);
    caseQueue.insert(97789,49502);
    caseQueue.insert(6496,91676);
    caseQueue.insert(85986,22654);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(88351)); //23
    caseQueue.insert(67345,66882);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(91282,20535);
    caseQueue.insert(52713,82978);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(33724,55891);
    caseQueue.insert(63716,10422);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(33968, 56740);
    caseQueue.insert(71853,38912);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(13212,38592);
    caseQueue.insert(5730,33251);
    caseQueue.insert(38333,54820);
    caseQueue.insert(63473,49617);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(42364,51555);
    myResult.push_back(caseQueue.getPriority(67345)); //30
    caseQueue.insert(46883,45237);
    caseQueue.insert(26118,8198);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(23819,43297);
    caseQueue.insert(5468,54793);
    caseQueue.updatePriority(68385, 48969);
    caseQueue.insert(33612,81673);
    myResult.push_back(caseQueue.getPriority(97789)); //32
    myResult.push_back(caseQueue.getPriority(97109)); //33
    caseQueue.insert(11045,21239);
    myResult.push_back(caseQueue.getPriority(67345)); //34
    caseQueue.insert(1985,61861);
    caseQueue.insert(39457,16581);
    caseQueue.insert(6051,99995);
    caseQueue.insert(30819,9839);
    caseQueue.insert(15869,63030);
    myResult.push_back(caseQueue.getPriority(97789)); //35
    caseQueue.insert(4239,56078);
    caseQueue.insert(90001,44354);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(63236,78643);
    caseQueue.insert(73313,74046);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(43929,80038);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(5180)); //39
    caseQueue.insert(13494,8825);
    caseQueue.insert(42684,86159);
    myResult.push_back(caseQueue.getPriority(72142)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(72142)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(42684, 62734);
    caseQueue.insert(93435,52139);
    myResult.push_back(caseQueue.getPriority(6496)); //44
    myResult.push_back(caseQueue.getPriority(97109)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(33612)); //47
    caseQueue.updatePriority(38333, 86647);
    caseQueue.insert(80616,63857);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(25140,53460);
    caseQueue.updatePriority(77325, 60596);
    caseQueue.insert(22404,93277);
    caseQueue.updatePriority(43929, 65642);
    caseQueue.insert(54146,27540);
    caseQueue.updatePriority(39607, 53369);
    myResult.push_back(caseQueue.getPriority(42684)); //50
    caseQueue.updatePriority(80616, 12967);
    myResult.push_back(caseQueue.getPriority(33968)); //51
    caseQueue.updatePriority(42364, 48798);
    caseQueue.insert(99088,74582);
    caseQueue.insert(23244,62455);
    caseQueue.insert(86368,42154);
    caseQueue.updatePriority(99088, 13780);
    myResult.push_back(caseQueue.getPriority(97109)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(5731)); //54
    caseQueue.insert(25773,71504);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(82029,38028);
    caseQueue.insert(28344,37434);
    caseQueue.updatePriority(1985, 69577);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(61810,87900);
    caseQueue.insert(94305,9657);
    caseQueue.insert(20802,97909);
    caseQueue.insert(55768,34964);
    caseQueue.updatePriority(52713, 15012);
    caseQueue.updatePriority(33968, 59028);
    caseQueue.insert(11618,98544);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(82029, 16376);
    caseQueue.updatePriority(38333, 27394);
    caseQueue.insert(78128,44841);
    caseQueue.insert(2907,32149);
    caseQueue.updatePriority(6496, 90152);
    caseQueue.insert(26317,81115);
    caseQueue.insert(20791,76991);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(43061,75522);
    myResult.push_back(caseQueue.getPriority(68385)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(61810)); //62
    caseQueue.updatePriority(67345, 85061);
    myResult.push_back(caseQueue.getPriority(1985)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(93435)); //65
    caseQueue.insert(49955,84491);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(90001)); //67
    caseQueue.insert(33805,72222);
    myResult.push_back(caseQueue.getPriority(33612)); //68
    caseQueue.insert(47664,75297);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(33314,27531);
    caseQueue.updatePriority(43929, 7430);
    myResult.push_back(caseQueue.getPriority(61810)); //70
    caseQueue.insert(70109,78840);
    caseQueue.updatePriority(90001, 64795);
    myResult.push_back(caseQueue.getPriority(33968)); //71
    caseQueue.insert(44872,82953);
    caseQueue.insert(1060,65979);
    caseQueue.updatePriority(93435, 32414);
    caseQueue.insert(54634,84419);
    myResult.push_back(caseQueue.getPriority(86368)); //72
    caseQueue.insert(48867,49171);
    myResult.push_back(caseQueue.getPriority(63236)); //73
    caseQueue.updatePriority(42364, 25935);
    caseQueue.insert(70224,52707);
    caseQueue.insert(52394,70631);
    myResult.push_back(caseQueue.getPriority(63236)); //74
    caseQueue.insert(84486,61322);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(20791)); //76
    myResult.push_back(caseQueue.getPriority(25773)); //77
    caseQueue.insert(98666,32560);
    caseQueue.insert(96489,54444);
    caseQueue.insert(47263,66117);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(2027,86352);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(47662,47816);
    caseQueue.insert(62389,23770);
    static const int resultListArray[] = {-1, 33155, 62686, 62686, 57430, 18822, 29006, 83264, 83889, 91094, 66994, 87257, 94605, 79886, 58422, 53364, 48303, 48303, 20188, 20188, 45004, 81909, 24843, 87063, 85986, 91282, 63716, 88351, 5730, 66882, 26118, 49502, 72866, 66882, 49502, 30819, 39457, 11045, 95347, 45004, 13494, 45004, 39165, 91676, 72866, 13212, 81673, 71853, 23819, 62734, 56740, 72866, 80616, 48490, 99088, 54146, 28344, 94305, 52713, 48969, 82029, 87900, 69577, 38333, 52139, 2907, 44354, 81673, 55768, 87900, 59028, 42154, 78643, 78643, 43929, 76991, 71504, 42364, 33314, 93435}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(186): Basarili" << endl;
    else cout << "Case(186): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_187(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 186);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(98621)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(46777)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(12899, 63539);
    caseQueue.insert(76476,8045);
    caseQueue.insert(14911,45577);
    myResult.push_back(caseQueue.getPriority(76476)); //5
    myResult.push_back(caseQueue.getPriority(14911)); //6
    caseQueue.insert(78009,73156);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(55426,22450);
    caseQueue.insert(97471,93044);
    myResult.push_back(caseQueue.getPriority(97471)); //9
    caseQueue.insert(15527,64805);
    caseQueue.updatePriority(78009, 24265);
    caseQueue.updatePriority(97471, 78025);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(97471, 24677);
    myResult.push_back(caseQueue.getPriority(15527)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(56644,10051);
    caseQueue.updatePriority(15527, 24616);
    caseQueue.insert(92253,16915);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(14975,16586);
    caseQueue.insert(14047,45535);
    caseQueue.insert(64923,46473);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(21727,11080);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(15527)); //17
    caseQueue.updatePriority(14047, 87126);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(64866,61651);
    caseQueue.insert(92169,71923);
    caseQueue.insert(8108,53007);
    myResult.push_back(caseQueue.getPriority(64923)); //19
    caseQueue.insert(36920,7977);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(63870,89779);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(64923, 80658);
    caseQueue.insert(37201,3299);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(20279,55386);
    myResult.push_back(caseQueue.getPriority(63870)); //23
    caseQueue.updatePriority(14047, 19673);
    caseQueue.updatePriority(64923, 59697);
    caseQueue.updatePriority(64923, 53339);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(64518,54895);
    myResult.push_back(caseQueue.getPriority(64923)); //25
    caseQueue.updatePriority(8108, 57404);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(2417,37192);
    myResult.push_back(caseQueue.getPriority(92169)); //27
    caseQueue.insert(71173,10813);
    caseQueue.insert(69441,86340);
    caseQueue.insert(27910,89956);
    caseQueue.insert(78667,13);
    caseQueue.updatePriority(78667, 42107);
    caseQueue.updatePriority(27910, 59354);
    myResult.push_back(caseQueue.getPriority(78667)); //28
    caseQueue.insert(94431,77736);
    caseQueue.insert(58310,59110);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(21450,64648);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(40484,95977);
    caseQueue.insert(66487,76314);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(47594,34862);
    caseQueue.insert(57229,43366);
    caseQueue.insert(34319,47768);
    caseQueue.insert(69996,92014);
    myResult.push_back(caseQueue.getPriority(64866)); //32
    caseQueue.insert(36579,37204);
    caseQueue.insert(30148,24967);
    myResult.push_back(caseQueue.getPriority(64866)); //33
    caseQueue.updatePriority(20279, 11906);
    myResult.push_back(caseQueue.getPriority(64518)); //34
    caseQueue.updatePriority(27910, 35176);
    caseQueue.insert(25700,84375);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(80342,9812);
    myResult.push_back(caseQueue.getPriority(64518)); //36
    caseQueue.insert(45634,53967);
    caseQueue.insert(55654,81551);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(38380,24568);
    caseQueue.insert(79190,91412);
    caseQueue.updatePriority(25700, 14932);
    myResult.push_back(caseQueue.getPriority(21450)); //40
    caseQueue.insert(67330,82608);
    myResult.push_back(caseQueue.getPriority(69441)); //41
    caseQueue.insert(99322,61244);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(99322)); //45
    caseQueue.insert(32905,26965);
    caseQueue.updatePriority(45634, 33756);
    caseQueue.insert(41473,76959);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(66487, 21929);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(89864,84559);
    caseQueue.insert(53084,31121);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(35252,80524);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(63870, 31070);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(69996)); //51
    caseQueue.insert(79090,84627);
    caseQueue.updatePriority(34319, 99748);
    caseQueue.updatePriority(36579, 6818);
    caseQueue.insert(28702,44177);
    caseQueue.insert(6505,69825);
    caseQueue.updatePriority(64866, 78862);
    myResult.push_back(caseQueue.getPriority(6505)); //52
    myResult.push_back(caseQueue.getPriority(35252)); //53
    myResult.push_back(caseQueue.getPriority(35252)); //54
    caseQueue.insert(29572,87453);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(67330, 73667);
    caseQueue.insert(48411,61260);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(79090)); //57
    caseQueue.updatePriority(79190, 22805);
    myResult.push_back(caseQueue.getPriority(35252)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(99322, 66754);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(34319, 17699);
    caseQueue.insert(21186,71730);
    caseQueue.insert(11939,82717);
    caseQueue.insert(63604,25399);
    myResult.push_back(caseQueue.getPriority(35252)); //62
    myResult.push_back(caseQueue.getPriority(94431)); //63
    caseQueue.insert(12752,80268);
    myResult.push_back(caseQueue.getPriority(64866)); //64
    caseQueue.updatePriority(48411, 91596);
    caseQueue.insert(34343,89448);
    caseQueue.updatePriority(69441, 69524);
    caseQueue.insert(14979,33720);
    caseQueue.updatePriority(64866, 11006);
    caseQueue.updatePriority(69996, 59509);
    myResult.push_back(caseQueue.getPriority(41473)); //65
    caseQueue.updatePriority(79090, 79844);
    caseQueue.insert(32859,93467);
    myResult.push_back(caseQueue.getPriority(8108)); //66
    caseQueue.insert(31254,67637);
    caseQueue.insert(50465,92521);
    caseQueue.updatePriority(89864, 85533);
    caseQueue.insert(38386,83869);
    caseQueue.updatePriority(34319, 69997);
    caseQueue.insert(24505,82086);
    caseQueue.insert(45976,17985);
    caseQueue.insert(92875,85258);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(12752, 79578);
    myResult.push_back(caseQueue.getPriority(55654)); //68
    caseQueue.updatePriority(89864, 23277);
    caseQueue.updatePriority(12752, 65726);
    caseQueue.insert(45970,15050);
    caseQueue.insert(75417,52314);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(31254, 24092);
    caseQueue.updatePriority(40484, 75634);
    caseQueue.updatePriority(67330, 42531);
    caseQueue.insert(63562,63175);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.getPriority(50465)); //72
    caseQueue.insert(6367,19660);
    caseQueue.updatePriority(14979, 86439);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(9565,23838);
    caseQueue.insert(55473,99878);
    static const int resultListArray[] = {-1, -1, -1, -1, 8045, 45577, 76476, 14911, 93044, 55426, 78009, 64805, 97471, 56644, 14975, 21727, 24616, 92253, 46473, 36920, 15527, 37201, 89779, 14047, 53339, 64923, 71923, 42107, 71173, 2417, 78667, 61651, 61651, 54895, 20279, 54895, 80342, 30148, 47594, 64648, 86340, 25700, 38380, 27910, 61244, 32905, 66487, 53084, 45634, 63870, 92014, 69825, 80524, 80524, 36579, 57229, 84627, 80524, 79190, 28702, 64518, 80524, 77736, 78862, 76959, 57404, 64866, 81551, 45970, 45976, 89864, 92521, 6367}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(187): Basarili" << endl;
    else cout << "Case(187): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_188(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 193);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(34409)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(1728, 3880);
    myResult.push_back(caseQueue.getPriority(97740)); //3
    myResult.push_back(caseQueue.getPriority(97277)); //4
    myResult.push_back(caseQueue.getPriority(24464)); //5
    caseQueue.insert(99809,23057);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(46578)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(47812,80256);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(55105, 2919);
    myResult.push_back(caseQueue.getPriority(48233)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(50351)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(76032,67934);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(40514)); //16
    myResult.push_back(caseQueue.getPriority(55691)); //17
    caseQueue.updatePriority(14201, 50220);
    caseQueue.insert(55646,11887);
    caseQueue.updatePriority(55646, 45925);
    caseQueue.insert(92678,22912);
    caseQueue.insert(28402,39145);
    caseQueue.insert(55673,47382);
    caseQueue.updatePriority(55673, 92710);
    caseQueue.insert(22158,63718);
    myResult.push_back(caseQueue.getPriority(22158)); //18
    caseQueue.insert(29768,42920);
    caseQueue.insert(16481,46456);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(16481, 88685);
    myResult.push_back(caseQueue.getPriority(29768)); //21
    caseQueue.insert(48982,82014);
    caseQueue.updatePriority(55673, 82492);
    caseQueue.insert(30949,64856);
    caseQueue.insert(3869,46886);
    caseQueue.insert(75026,5907);
    caseQueue.insert(81468,78547);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(27719,78328);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(14532,8232);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(27719, 22549);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(48982)); //28
    caseQueue.insert(42326,17125);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(48421,15451);
    caseQueue.insert(46239,62862);
    myResult.push_back(caseQueue.getPriority(55673)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(16481, 60447);
    caseQueue.insert(49267,91779);
    myResult.push_back(caseQueue.getPriority(48982)); //33
    caseQueue.insert(8142,11035);
    caseQueue.updatePriority(55673, 79263);
    caseQueue.insert(16047,26393);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(55673)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(21542,89778);
    myResult.push_back(caseQueue.getPriority(16481)); //37
    myResult.push_back(caseQueue.getPriority(21542)); //38
    caseQueue.updatePriority(21542, 61284);
    caseQueue.insert(99201,25588);
    caseQueue.updatePriority(81468, 98029);
    caseQueue.updatePriority(30949, 3433);
    caseQueue.insert(62348,91745);
    myResult.push_back(caseQueue.getPriority(46239)); //39
    myResult.push_back(caseQueue.getPriority(62348)); //40
    caseQueue.insert(83981,1053);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(55673, 80835);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(49267, 22559);
    caseQueue.updatePriority(48982, 63567);
    caseQueue.updatePriority(46239, 29217);
    caseQueue.insert(52883,29939);
    caseQueue.updatePriority(52883, 23960);
    myResult.push_back(caseQueue.getPriority(52883)); //44
    caseQueue.insert(38848,73485);
    caseQueue.updatePriority(52883, 73873);
    myResult.push_back(caseQueue.getPriority(52883)); //45
    caseQueue.updatePriority(62348, 27439);
    caseQueue.insert(33955,40865);
    caseQueue.updatePriority(38848, 38465);
    caseQueue.insert(20979,95357);
    caseQueue.insert(13051,38440);
    myResult.push_back(caseQueue.getPriority(81468)); //46
    myResult.push_back(caseQueue.getPriority(21542)); //47
    myResult.push_back(caseQueue.getPriority(20979)); //48
    caseQueue.insert(38040,4504);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(22191,4649);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(31665,16203);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(37859,4609);
    caseQueue.insert(91586,41035);
    caseQueue.insert(26259,87027);
    caseQueue.insert(30561,12855);
    caseQueue.insert(26886,32289);
    myResult.push_back(caseQueue.getPriority(37859)); //52
    caseQueue.updatePriority(55673, 76119);
    myResult.push_back(caseQueue.getPriority(26259)); //53
    caseQueue.insert(29316,39567);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(86141,2368);
    myResult.push_back(caseQueue.getPriority(30561)); //55
    caseQueue.updatePriority(91586, 74402);
    myResult.push_back(caseQueue.getPriority(13051)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.updatePriority(46239, 24310);
    myResult.push_back(caseQueue.getPriority(13051)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(86661,67310);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(38848)); //61
    myResult.push_back(caseQueue.getPriority(29316)); //62
    myResult.push_back(caseQueue.getPriority(52883)); //63
    myResult.push_back(caseQueue.getPriority(16481)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(81468)); //66
    myResult.push_back(caseQueue.getPriority(20979)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(99261,49801);
    myResult.push_back(caseQueue.getPriority(21542)); //69
    caseQueue.insert(22277,33984);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(86996,88577);
    myResult.push_back(caseQueue.getPriority(38848)); //71
    caseQueue.insert(31283,11914);
    caseQueue.insert(10957,20071);
    caseQueue.updatePriority(13051, 19551);
    myResult.push_back(caseQueue.getPriority(16481)); //72
    caseQueue.updatePriority(86661, 68607);
    caseQueue.updatePriority(48982, 94422);
    caseQueue.insert(93584,88190);
    caseQueue.insert(60478,51276);
    myResult.push_back(caseQueue.getPriority(31283)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(12742,73235);
    caseQueue.insert(46489,26759);
    caseQueue.updatePriority(33955, 40299);
    caseQueue.updatePriority(55673, 81244);
    caseQueue.updatePriority(38848, 38259);
    myResult.push_back(caseQueue.getPriority(60478)); //77
    myResult.push_back(caseQueue.getPriority(12742)); //78
    caseQueue.insert(33584,9381);
    myResult.push_back(caseQueue.getPriority(33955)); //79
    myResult.push_back(caseQueue.getPriority(20979)); //80
    caseQueue.insert(85691,53609);
    caseQueue.insert(58643,97542);
    caseQueue.insert(192,90020);
    caseQueue.insert(72521,53246);
    caseQueue.insert(84584,66995);
    caseQueue.insert(33084,98024);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(55900,23019);
    caseQueue.insert(86442,51689);
    caseQueue.insert(41024,8623);
    caseQueue.updatePriority(55673, 72525);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(9701,39025);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(73208,65918);
    caseQueue.insert(56236,97712);
    caseQueue.insert(6379,31426);
    caseQueue.updatePriority(93584, 1027);
    myResult.push_back(caseQueue.getPriority(84584)); //84
    caseQueue.insert(69863,33327);
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(48090,79212);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.updatePriority(21542, 38911);
    caseQueue.insert(94503,45103);
    caseQueue.insert(53896,89311);
    caseQueue.insert(12294,69795);
    caseQueue.updatePriority(58643, 22512);
    caseQueue.insert(89559,48627);
    caseQueue.insert(57544,59624);
    static const int resultListArray[] = {-1, -1, -1, -1, -1, 99809, -1, -1, 47812, -1, -1, -1, -1, 76032, -1, -1, -1, 63718, 92678, 28402, 42920, 75026, 29768, 14532, 55646, 3869, 27719, 82014, 42326, 22158, 82492, 48421, 82014, 8142, 79263, 16047, 60447, 89778, 62862, 91745, 83981, 30949, 99201, 23960, 73873, 98029, 61284, 95357, 38040, 22191, 31665, 4609, 87027, 37859, 12855, 38440, 86141, 38440, 30561, 49267, 38465, 39567, 73873, 60447, 46239, 98029, 95357, 62348, 61284, 26886, 38465, 60447, 11914, 31283, 13051, 10957, 51276, 73235, 40299, 95357, 33584, 41024, 55900, 66995, 93584, 46489}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(188): Basarili" << endl;
    else cout << "Case(188): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_189(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 149);

    vector<int> myResult; 
    caseQueue.insert(64961,60641);
    caseQueue.updatePriority(64961, 81710);
    myResult.push_back(caseQueue.getPriority(64961)); //1
    caseQueue.insert(7090,64532);
    caseQueue.insert(93358,16924);
    caseQueue.updatePriority(64961, 56235);
    caseQueue.insert(3363,53188);
    caseQueue.insert(64007,24497);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(64007)); //3
    caseQueue.insert(28774,10033);
    caseQueue.insert(95920,37747);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(95920, 58259);
    caseQueue.insert(90962,54474);
    myResult.push_back(caseQueue.getPriority(7090)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(7090, 19315);
    caseQueue.insert(92694,82769);
    caseQueue.insert(29233,80357);
    caseQueue.updatePriority(95920, 61608);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(93673,53978);
    caseQueue.insert(56568,68706);
    myResult.push_back(caseQueue.getPriority(92694)); //10
    caseQueue.insert(13484,46705);
    caseQueue.updatePriority(93673, 21427);
    caseQueue.updatePriority(13484, 23200);
    caseQueue.insert(21178,8505);
    myResult.push_back(caseQueue.getPriority(13484)); //11
    myResult.push_back(caseQueue.getPriority(29233)); //12
    caseQueue.updatePriority(13484, 62724);
    caseQueue.insert(61609,9169);
    caseQueue.insert(65449,76124);
    caseQueue.insert(88409,57990);
    caseQueue.insert(93825,4096);
    caseQueue.insert(32278,2305);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(58791,2911);
    caseQueue.insert(8029,89148);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(93825, 64584);
    caseQueue.insert(6732,12275);
    myResult.push_back(caseQueue.getPriority(8029)); //15
    myResult.push_back(caseQueue.getPriority(13484)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(64961)); //18
    caseQueue.insert(43936,64759);
    caseQueue.insert(95721,13946);
    myResult.push_back(caseQueue.getPriority(6732)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(93329,54515);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(74701,43337);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(88409, 71842);
    caseQueue.updatePriority(8029, 12371);
    caseQueue.insert(3457,31302);
    caseQueue.insert(84431,9322);
    myResult.push_back(caseQueue.getPriority(29233)); //24
    myResult.push_back(caseQueue.getPriority(88409)); //25
    caseQueue.updatePriority(88409, 14323);
    myResult.push_back(caseQueue.getPriority(64961)); //26
    caseQueue.insert(98116,68522);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(9546,93525);
    caseQueue.updatePriority(93825, 72103);
    caseQueue.insert(40078,29107);
    caseQueue.updatePriority(88409, 90142);
    myResult.push_back(caseQueue.getPriority(43936)); //29
    myResult.push_back(caseQueue.getPriority(9546)); //30
    caseQueue.updatePriority(65449, 3575);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(49893,76077);
    caseQueue.updatePriority(56568, 93964);
    caseQueue.insert(33629,93924);
    caseQueue.updatePriority(29233, 36075);
    caseQueue.insert(33067,15945);
    caseQueue.updatePriority(43936, 79965);
    myResult.push_back(caseQueue.getPriority(98116)); //32
    caseQueue.updatePriority(93825, 97225);
    caseQueue.insert(48874,34177);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(95920)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(23511,26465);
    caseQueue.insert(98681,81874);
    caseQueue.insert(81827,7738);
    myResult.push_back(caseQueue.getPriority(81827)); //37
    myResult.push_back(caseQueue.getPriority(9546)); //38
    caseQueue.updatePriority(64961, 60577);
    caseQueue.insert(64314,40169);
    myResult.push_back(caseQueue.getPriority(13484)); //39
    caseQueue.insert(80442,58271);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(94033,3183);
    myResult.push_back(caseQueue.getPriority(33629)); //41
    caseQueue.insert(52346,39451);
    caseQueue.insert(49135,12906);
    caseQueue.updatePriority(56568, 17630);
    myResult.push_back(caseQueue.getPriority(94033)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(84682,30540);
    caseQueue.insert(28619,88875);
    caseQueue.updatePriority(74701, 32561);
    caseQueue.insert(86025,3628);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(80442, 29338);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(75660,7691);
    caseQueue.insert(30540,11088);
    caseQueue.insert(91683,2407);
    caseQueue.updatePriority(93825, 73122);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(17567,52512);
    caseQueue.updatePriority(95920, 72833);
    caseQueue.updatePriority(43936, 93625);
    caseQueue.insert(54037,4405);
    caseQueue.insert(92265,7298);
    myResult.push_back(caseQueue.getPriority(17567)); //47
    caseQueue.insert(72626,89435);
    caseQueue.insert(60497,60799);
    caseQueue.updatePriority(64314, 31956);
    myResult.push_back(caseQueue.getPriority(88409)); //48
    caseQueue.insert(43530,65992);
    myResult.push_back(caseQueue.getPriority(64314)); //49
    myResult.push_back(caseQueue.getPriority(93825)); //50
    myResult.push_back(caseQueue.getPriority(64314)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(68947,53801);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(94374,13946);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(88409, 13291);
    caseQueue.insert(58323,29156);
    caseQueue.insert(29705,17403);
    caseQueue.insert(79375,2277);
    caseQueue.insert(76546,60057);
    caseQueue.insert(14093,43822);
    myResult.push_back(caseQueue.getPriority(43530)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(2149,28786);
    myResult.push_back(caseQueue.getPriority(43530)); //57
    myResult.push_back(caseQueue.getPriority(64961)); //58
    static const int resultListArray[] = {81710, 93358, 24497, 28774, 64532, 64007, 3363, 90962, 7090, 82769, 23200, 80357, 32278, 58791, 89148, 62724, 21178, 56235, 12275, 61609, 6732, 95721, 93673, 80357, 71842, 56235, 84431, 8029, 64759, 93525, 65449, 68522, 33067, 61608, 40078, 3457, 7738, 93525, 62724, 81827, 93924, 3183, 94033, 86025, 49135, 91683, 52512, 90142, 31956, 73122, 31956, 54037, 92265, 75660, 65992, 79375, 65992, 60577}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(189): Basarili" << endl;
    else cout << "Case(189): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_190(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 124);

    vector<int> myResult; 
    caseQueue.insert(2759,3887);
    caseQueue.insert(98208,49969);
    caseQueue.insert(95959,26072);
    caseQueue.insert(63971,32450);
    myResult.push_back(caseQueue.getPriority(63971)); //1
    myResult.push_back(caseQueue.getPriority(63971)); //2
    myResult.push_back(caseQueue.getPriority(63971)); //3
    caseQueue.insert(69598,36106);
    myResult.push_back(caseQueue.getPriority(69598)); //4
    caseQueue.updatePriority(63971, 83726);
    myResult.push_back(caseQueue.getPriority(2759)); //5
    caseQueue.insert(79058,8425);
    caseQueue.insert(78814,52937);
    caseQueue.insert(83348,13104);
    caseQueue.updatePriority(63971, 93857);
    caseQueue.insert(51683,30075);
    caseQueue.insert(49819,76951);
    caseQueue.updatePriority(49819, 9371);
    caseQueue.updatePriority(83348, 55659);
    caseQueue.updatePriority(83348, 98235);
    caseQueue.insert(94642,63395);
    caseQueue.updatePriority(69598, 67506);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(38482,18901);
    caseQueue.updatePriority(83348, 75135);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(63971)); //9
    caseQueue.insert(11620,35712);
    caseQueue.updatePriority(11620, 39424);
    caseQueue.updatePriority(98208, 28081);
    caseQueue.updatePriority(63971, 21698);
    myResult.push_back(caseQueue.getPriority(78814)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(51683, 95718);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(83348, 16774);
    caseQueue.updatePriority(83348, 44342);
    caseQueue.updatePriority(51683, 94941);
    caseQueue.insert(58454,55308);
    caseQueue.updatePriority(94642, 37574);
    caseQueue.updatePriority(58454, 23128);
    caseQueue.insert(48384,97085);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(87478,29335);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(94642, 5356);
    caseQueue.updatePriority(98208, 8996);
    caseQueue.insert(95047,92534);
    myResult.push_back(caseQueue.getPriority(87478)); //15
    myResult.push_back(caseQueue.getPriority(48384)); //16
    caseQueue.insert(61041,93679);
    myResult.push_back(caseQueue.getPriority(98208)); //17
    myResult.push_back(caseQueue.getPriority(78814)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(95047)); //20
    caseQueue.insert(69180,61389);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(30954,30626);
    caseQueue.updatePriority(69598, 96487);
    caseQueue.insert(75173,33936);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(35376,22346);
    myResult.push_back(caseQueue.getPriority(83348)); //23
    caseQueue.insert(25127,4249);
    caseQueue.insert(95432,37297);
    myResult.push_back(caseQueue.getPriority(35376)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(3693,66688);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(3693)); //27
    caseQueue.insert(83254,28184);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(55527,78745);
    caseQueue.insert(81359,94868);
    caseQueue.insert(22702,84259);
    caseQueue.insert(93870,57824);
    myResult.push_back(caseQueue.getPriority(95432)); //29
    caseQueue.insert(20083,75820);
    myResult.push_back(caseQueue.getPriority(69598)); //30
    caseQueue.updatePriority(61041, 63476);
    myResult.push_back(caseQueue.getPriority(30954)); //31
    caseQueue.insert(93760,88938);
    caseQueue.insert(92471,96229);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(11620)); //33
    myResult.push_back(caseQueue.getPriority(55527)); //34
    caseQueue.insert(53378,84832);
    myResult.push_back(caseQueue.getPriority(48384)); //35
    caseQueue.insert(30093,31326);
    myResult.push_back(caseQueue.getPriority(95432)); //36
    caseQueue.insert(53613,87921);
    myResult.push_back(caseQueue.getPriority(93870)); //37
    caseQueue.insert(61091,53597);
    myResult.push_back(caseQueue.getPriority(3693)); //38
    caseQueue.insert(64535,15920);
    myResult.push_back(caseQueue.getPriority(95432)); //39
    caseQueue.insert(10226,51744);
    myResult.push_back(caseQueue.getPriority(83348)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(10226)); //44
    caseQueue.insert(74419,64230);
    myResult.push_back(caseQueue.getPriority(93870)); //45
    myResult.push_back(caseQueue.getPriority(83348)); //46
    caseQueue.insert(74451,44955);
    caseQueue.insert(872,43689);
    caseQueue.insert(51482,27608);
    myResult.push_back(caseQueue.getPriority(48384)); //47
    caseQueue.insert(85621,69713);
    caseQueue.insert(27537,22646);
    myResult.push_back(caseQueue.getPriority(69180)); //48
    myResult.push_back(caseQueue.getPriority(51683)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(74451)); //51
    caseQueue.updatePriority(53378, 47983);
    caseQueue.updatePriority(51482, 88312);
    caseQueue.insert(25148,68601);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(10226)); //53
    caseQueue.insert(82755,46152);
    myResult.push_back(caseQueue.getPriority(3693)); //54
    myResult.push_back(caseQueue.getPriority(53613)); //55
    static const int resultListArray[] = {32450, 32450, 32450, 36106, 3887, 2759, 79058, 49819, 93857, 52937, 38482, 63971, 58454, 95959, 29335, 97085, 8996, 52937, 94642, 92534, 98208, 87478, 44342, 22346, 25127, 35376, 66688, 83254, 37297, 96487, 30626, 30954, 39424, 78745, 97085, 37297, 57824, 66688, 37297, 44342, 64535, 30093, 75173, 51744, 57824, 44342, 97085, 61389, 94941, 27537, 44955, 95432, 51744, 66688, 87921}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(190): Basarili" << endl;
    else cout << "Case(190): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_191(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 107);

    vector<int> myResult; 
    caseQueue.updatePriority(43553, 40159);
    myResult.push_back(caseQueue.getPriority(45292)); //1
    caseQueue.insert(79304,76770);
    myResult.push_back(caseQueue.getPriority(79304)); //2
    caseQueue.updatePriority(79304, 60938);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(34591,55185);
    caseQueue.insert(23713,83472);
    myResult.push_back(caseQueue.getPriority(23713)); //4
    caseQueue.updatePriority(34591, 20891);
    myResult.push_back(caseQueue.getPriority(23713)); //5
    myResult.push_back(caseQueue.getPriority(23713)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(46912,13740);
    caseQueue.insert(34795,95803);
    caseQueue.insert(90830,77492);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(34795)); //10
    caseQueue.insert(98328,97564);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(40849,7168);
    caseQueue.insert(29052,38685);
    caseQueue.updatePriority(98328, 74296);
    caseQueue.updatePriority(98328, 54511);
    myResult.push_back(caseQueue.getPriority(40849)); //12
    myResult.push_back(caseQueue.getPriority(98328)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(49382,60841);
    caseQueue.updatePriority(29052, 6485);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(49382, 37307);
    caseQueue.insert(4958,35696);
    myResult.push_back(caseQueue.getPriority(4958)); //17
    caseQueue.updatePriority(4958, 93588);
    caseQueue.insert(34681,45375);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(34795)); //19
    myResult.push_back(caseQueue.getPriority(4958)); //20
    myResult.push_back(caseQueue.getPriority(34681)); //21
    myResult.push_back(caseQueue.getPriority(34681)); //22
    caseQueue.insert(14527,61107);
    caseQueue.updatePriority(34795, 72417);
    myResult.push_back(caseQueue.getPriority(34681)); //23
    caseQueue.insert(55178,21610);
    caseQueue.updatePriority(55178, 73515);
    caseQueue.insert(25391,26934);
    caseQueue.insert(32423,58549);
    caseQueue.insert(4992,49402);
    myResult.push_back(caseQueue.getPriority(32423)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(50395,49680);
    caseQueue.updatePriority(50395, 5480);
    myResult.push_back(caseQueue.getPriority(34795)); //26
    caseQueue.insert(11856,58930);
    caseQueue.insert(89086,71209);
    caseQueue.insert(42503,9849);
    caseQueue.updatePriority(55178, 3518);
    caseQueue.insert(84500,57810);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(34795, 46052);
    caseQueue.insert(92496,52693);
    myResult.push_back(caseQueue.getPriority(92496)); //28
    myResult.push_back(caseQueue.getPriority(42503)); //29
    caseQueue.updatePriority(89086, 78637);
    caseQueue.insert(14411,89532);
    caseQueue.insert(57059,10850);
    myResult.push_back(caseQueue.getPriority(32423)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(84500)); //32
    caseQueue.insert(23297,43393);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(13135,95683);
    caseQueue.insert(46565,39144);
    caseQueue.insert(51795,99753);
    myResult.push_back(caseQueue.getPriority(57059)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(22545,6012);
    caseQueue.insert(92220,22168);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(46565)); //37
    caseQueue.updatePriority(4958, 80687);
    caseQueue.updatePriority(34795, 49159);
    caseQueue.insert(89703,76117);
    caseQueue.insert(19673,85860);
    myResult.push_back(caseQueue.getPriority(32423)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(6420,30760);
    caseQueue.updatePriority(14527, 90355);
    caseQueue.updatePriority(19673, 87734);
    caseQueue.insert(45602,18613);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(68474,55582);
    caseQueue.insert(4371,81180);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(88650,38971);
    caseQueue.insert(10968,53564);
    caseQueue.insert(59640,93089);
    caseQueue.insert(65521,94936);
    myResult.push_back(caseQueue.getPriority(14527)); //42
    myResult.push_back(caseQueue.getPriority(11856)); //43
    caseQueue.insert(52636,42040);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(51795, 29069);
    static const int resultListArray[] = {-1, 76770, 79304, 83472, 83472, 83472, 34591, 46912, 90830, 95803, 23713, 7168, 54511, 40849, 29052, 98328, 35696, 49382, 95803, 93588, 45375, 45375, 45375, 58549, 25391, 72417, 55178, 52693, 9849, 58549, 50395, 57810, 42503, 10850, 57059, 22545, 39144, 58549, 92220, 45602, 6420, 90355, 58930, 88650, 46565, 52636}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(191): Basarili" << endl;
    else cout << "Case(191): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_192(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 226);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(58247)); //2
    caseQueue.insert(88397,44562);
    caseQueue.insert(2683,96347);
    myResult.push_back(caseQueue.getPriority(2683)); //3
    caseQueue.insert(28029,54268);
    caseQueue.updatePriority(28029, 8453);
    caseQueue.insert(2084,48169);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(19444,14726);
    caseQueue.insert(36377,14053);
    caseQueue.insert(69558,23602);
    myResult.push_back(caseQueue.getPriority(88397)); //5
    myResult.push_back(caseQueue.getPriority(2084)); //6
    caseQueue.updatePriority(19444, 19992);
    caseQueue.insert(28313,77655);
    caseQueue.insert(43958,818);
    caseQueue.insert(19824,6651);
    myResult.push_back(caseQueue.getPriority(43958)); //7
    caseQueue.insert(55604,33303);
    caseQueue.insert(3386,30172);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(33953,32553);
    caseQueue.insert(26740,25771);
    caseQueue.insert(2409,86321);
    caseQueue.insert(35040,34248);
    caseQueue.insert(70434,48007);
    caseQueue.updatePriority(33953, 68787);
    myResult.push_back(caseQueue.getPriority(55604)); //9
    myResult.push_back(caseQueue.getPriority(69558)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(96913,39611);
    caseQueue.updatePriority(2683, 62053);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(3386, 92860);
    myResult.push_back(caseQueue.getPriority(88397)); //15
    myResult.push_back(caseQueue.getPriority(35040)); //16
    caseQueue.updatePriority(28313, 75979);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(2409)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(45381,64826);
    myResult.push_back(caseQueue.getPriority(35040)); //20
    myResult.push_back(caseQueue.getPriority(2084)); //21
    myResult.push_back(caseQueue.getPriority(45381)); //22
    caseQueue.insert(90271,53302);
    caseQueue.insert(54764,33848);
    myResult.push_back(caseQueue.getPriority(54764)); //23
    myResult.push_back(caseQueue.getPriority(2683)); //24
    caseQueue.insert(70762,98706);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(28313)); //26
    caseQueue.updatePriority(33953, 2294);
    caseQueue.insert(29871,87357);
    caseQueue.insert(6347,7764);
    caseQueue.insert(46735,60965);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(11525,95578);
    caseQueue.updatePriority(29871, 52359);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(45381)); //29
    caseQueue.insert(85548,56450);
    myResult.push_back(caseQueue.getPriority(85548)); //30
    caseQueue.insert(43357,32844);
    caseQueue.insert(30476,55584);
    caseQueue.insert(29270,32627);
    caseQueue.insert(22178,18473);
    caseQueue.insert(86837,65902);
    caseQueue.updatePriority(88397, 44919);
    caseQueue.insert(33620,2044);
    caseQueue.insert(27785,25845);
    caseQueue.insert(97992,6272);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(5171,90256);
    caseQueue.insert(72036,86420);
    caseQueue.updatePriority(28313, 30357);
    caseQueue.updatePriority(29871, 87102);
    caseQueue.insert(91383,69846);
    myResult.push_back(caseQueue.getPriority(46735)); //32
    myResult.push_back(caseQueue.getPriority(86837)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(1824,93758);
    caseQueue.insert(69269,62335);
    myResult.push_back(caseQueue.getPriority(88397)); //35
    caseQueue.updatePriority(90271, 83280);
    caseQueue.insert(22863,24096);
    caseQueue.insert(16447,90677);
    myResult.push_back(caseQueue.getPriority(3386)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(25230,90145);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(20018,11050);
    caseQueue.insert(33489,64758);
    caseQueue.insert(68541,96002);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(5743,50745);
    caseQueue.insert(9113,36876);
    myResult.push_back(caseQueue.getPriority(70762)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(45381)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(9113, 23018);
    myResult.push_back(caseQueue.getPriority(30476)); //45
    caseQueue.updatePriority(45381, 6584);
    caseQueue.insert(38759,55328);
    caseQueue.insert(15048,33420);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(30476, 76509);
    caseQueue.insert(36470,83289);
    myResult.push_back(caseQueue.getPriority(2084)); //47
    caseQueue.insert(84438,61063);
    caseQueue.insert(31351,33331);
    caseQueue.insert(77651,95751);
    caseQueue.updatePriority(68541, 25032);
    myResult.push_back(caseQueue.getPriority(30476)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(90572,73615);
    myResult.push_back(caseQueue.getPriority(85548)); //50
    caseQueue.insert(1328,76732);
    caseQueue.updatePriority(3386, 28394);
    caseQueue.insert(22824,27038);
    myResult.push_back(caseQueue.getPriority(88397)); //51
    caseQueue.insert(17059,79714);
    caseQueue.insert(9025,83418);
    caseQueue.insert(29844,14577);
    caseQueue.insert(76701,86872);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(70762, 80110);
    myResult.push_back(caseQueue.getPriority(70762)); //53
    caseQueue.insert(84712,18440);
    caseQueue.updatePriority(96913, 32535);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(90496,66230);
    caseQueue.insert(50932,86005);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(96913, 76883);
    myResult.push_back(caseQueue.getPriority(88397)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(561,81657);
    caseQueue.insert(14190,33584);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(15048)); //60
    myResult.push_back(caseQueue.getPriority(35040)); //61
    caseQueue.insert(70818,1099);
    caseQueue.updatePriority(2084, 18394);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(5987,44417);
    myResult.push_back(caseQueue.getPriority(88397)); //64
    caseQueue.insert(52316,18932);
    caseQueue.updatePriority(46735, 69611);
    myResult.push_back(caseQueue.getPriority(15048)); //65
    caseQueue.updatePriority(36470, 83706);
    myResult.push_back(caseQueue.getPriority(46735)); //66
    caseQueue.insert(52474,27557);
    caseQueue.updatePriority(561, 30607);
    caseQueue.updatePriority(96913, 32588);
    caseQueue.insert(53140,45253);
    myResult.push_back(caseQueue.getPriority(17059)); //67
    caseQueue.updatePriority(9025, 49517);
    caseQueue.insert(68415,85360);
    caseQueue.insert(67571,92419);
    caseQueue.insert(70522,21608);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(52474, 83805);
    caseQueue.updatePriority(2409, 91879);
    caseQueue.updatePriority(5171, 3020);
    caseQueue.updatePriority(9025, 15184);
    caseQueue.insert(76118,26486);
    caseQueue.updatePriority(35040, 94935);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(96913)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(62457,40441);
    caseQueue.insert(99189,60104);
    myResult.push_back(caseQueue.getPriority(31351)); //72
    caseQueue.updatePriority(70762, 97617);
    caseQueue.insert(14920,10958);
    caseQueue.updatePriority(561, 22672);
    caseQueue.updatePriority(29871, 60553);
    caseQueue.updatePriority(96913, 99802);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(27802,82132);
    caseQueue.insert(37658,52251);
    myResult.push_back(caseQueue.getPriority(1328)); //74
    caseQueue.insert(71838,37989);
    myResult.push_back(caseQueue.getPriority(67571)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(53140)); //77
    caseQueue.insert(11935,87327);
    caseQueue.insert(34804,76299);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(83156,41212);
    caseQueue.updatePriority(17059, 72160);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(46735, 6045);
    caseQueue.insert(30005,15292);
    caseQueue.insert(67988,63970);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(99189, 73362);
    caseQueue.updatePriority(96913, 97519);
    myResult.push_back(caseQueue.getPriority(70762)); //84
    myResult.push_back(caseQueue.getPriority(35040)); //85
    caseQueue.insert(98186,57818);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.updatePriority(35040, 55557);
    caseQueue.insert(75737,12702);
    caseQueue.insert(14105,6047);
    caseQueue.insert(91936,67434);
    caseQueue.updatePriority(38759, 71350);
    caseQueue.insert(43229,9443);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(130,11424);
    myResult.push_back(caseQueue.getPriority(71838)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    myResult.push_back(caseQueue.getPriority(11935)); //90
    myResult.push_back(caseQueue.getPriority(76701)); //91
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    static const int resultListArray[] = {-1, -1, 96347, 28029, 44562, 48169, 818, 43958, 33303, 23602, 19824, 36377, 19444, 69558, 44562, 34248, 26740, 86321, 55604, 34248, 48169, 64826, 33848, 62053, 54764, 75979, 33953, 6347, 64826, 56450, 33620, 60965, 65902, 97992, 44919, 92860, 22178, 22863, 20018, 98706, 27785, 64826, 28313, 29270, 55584, 45381, 48169, 76509, 9113, 56450, 44919, 29844, 80110, 84712, 68541, 44919, 22824, 3386, 43357, 33420, 34248, 70818, 2084, 44919, 33420, 69611, 79714, 52316, 5171, 32588, 9025, 33331, 14920, 76732, 92419, 70522, 45253, 561, 76118, 31351, 15048, 14190, 46735, 97617, 94935, 30005, 14105, 37989, 43229, 87327, 86872, 130, 75737}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(192): Basarili" << endl;
    else cout << "Case(192): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_193(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 139);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(49416)); //1
    myResult.push_back(caseQueue.getPriority(73244)); //2
    caseQueue.insert(56932,79647);
    myResult.push_back(caseQueue.getPriority(56932)); //3
    caseQueue.insert(77594,68749);
    caseQueue.insert(86193,27422);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(91133,50366);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(77594, 63514);
    caseQueue.insert(70233,83274);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(56932)); //7
    caseQueue.updatePriority(56932, 9201);
    caseQueue.insert(76641,26519);
    caseQueue.insert(91065,55396);
    caseQueue.insert(64004,72821);
    caseQueue.updatePriority(70233, 43710);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(15101,28606);
    caseQueue.insert(90694,7728);
    caseQueue.updatePriority(76641, 90420);
    caseQueue.updatePriority(90694, 24910);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(64004, 49327);
    caseQueue.insert(9251,22270);
    caseQueue.insert(95898,95356);
    caseQueue.insert(91643,56907);
    myResult.push_back(caseQueue.getPriority(70233)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(70233)); //13
    caseQueue.insert(72257,82801);
    caseQueue.insert(1499,16456);
    caseQueue.insert(78570,82861);
    caseQueue.insert(17022,323);
    caseQueue.insert(45289,47520);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(45289, 23109);
    myResult.push_back(caseQueue.getPriority(64004)); //16
    caseQueue.updatePriority(76641, 50646);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(76641, 18863);
    caseQueue.insert(90328,61966);
    caseQueue.insert(55432,28006);
    caseQueue.updatePriority(95898, 63543);
    caseQueue.insert(81129,85591);
    caseQueue.updatePriority(64004, 60254);
    caseQueue.insert(36276,90987);
    caseQueue.insert(75650,97905);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(91065)); //20
    caseQueue.insert(17662,60040);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(8670,33470);
    caseQueue.insert(80463,24978);
    caseQueue.insert(78690,54913);
    caseQueue.updatePriority(90328, 52808);
    caseQueue.insert(44679,30252);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(36276, 17394);
    caseQueue.insert(61571,95101);
    caseQueue.updatePriority(95898, 53995);
    caseQueue.insert(98367,71844);
    caseQueue.updatePriority(81129, 40710);
    caseQueue.insert(39829,46153);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(54987,26296);
    caseQueue.insert(47954,19349);
    caseQueue.insert(89388,88368);
    caseQueue.insert(4729,3349);
    caseQueue.insert(30951,32013);
    caseQueue.insert(55023,38123);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(90328, 30405);
    caseQueue.updatePriority(75650, 91111);
    caseQueue.insert(76674,49813);
    caseQueue.insert(75535,78613);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(91643, 73456);
    myResult.push_back(caseQueue.getPriority(76674)); //29
    caseQueue.updatePriority(64004, 86523);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(39829)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(37177,64117);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(5827,42819);
    caseQueue.insert(65901,65603);
    caseQueue.insert(24536,87109);
    caseQueue.insert(47081,45584);
    caseQueue.insert(50319,85320);
    caseQueue.updatePriority(24536, 12734);
    caseQueue.updatePriority(89388, 4217);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(17662)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(83307,36495);
    caseQueue.insert(26788,92000);
    myResult.push_back(caseQueue.getPriority(83307)); //37
    caseQueue.updatePriority(75535, 12518);
    caseQueue.insert(95984,87141);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(5827, 30946);
    caseQueue.updatePriority(61571, 8958);
    caseQueue.insert(46503,40705);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(26788, 87150);
    caseQueue.insert(32341,56384);
    caseQueue.updatePriority(65901, 65219);
    myResult.push_back(caseQueue.getPriority(37177)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(47081)); //42
    myResult.push_back(caseQueue.getPriority(75650)); //43
    caseQueue.insert(65040,49787);
    caseQueue.insert(70711,27060);
    caseQueue.updatePriority(32341, 57860);
    caseQueue.insert(22875,42727);
    myResult.push_back(caseQueue.getPriority(22875)); //44
    caseQueue.insert(80651,80277);
    myResult.push_back(caseQueue.getPriority(72257)); //45
    caseQueue.insert(74819,73148);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(23070,49464);
    caseQueue.updatePriority(72257, 68201);
    caseQueue.updatePriority(98367, 51674);
    caseQueue.insert(26523,48796);
    myResult.push_back(caseQueue.getPriority(22875)); //47
    caseQueue.insert(84391,32372);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(50319, 33);
    caseQueue.insert(36633,24012);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(66701,26828);
    static const int resultListArray[] = {-1, -1, 79647, 86193, 91133, 77594, 79647, 56932, 90694, 15101, 43710, 9251, 43710, 17022, 1499, 49327, 45289, 76641, 55432, 55396, 70233, 80463, 44679, 36276, 4729, 47954, 54987, 90328, 49813, 30951, 46153, 8670, 55023, 89388, 60040, 24536, 36495, 75535, 61571, 64117, 5827, 45584, 91111, 42727, 82801, 70711, 42727, 84391, 50319}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(193): Basarili" << endl;
    else cout << "Case(193): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_194(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 129);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(22374)); //2
    caseQueue.insert(79888,18714);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(81035, 58760);
    myResult.push_back(caseQueue.getPriority(23110)); //5
    caseQueue.insert(35138,70002);
    caseQueue.insert(85818,24893);
    caseQueue.updatePriority(35138, 94157);
    myResult.push_back(caseQueue.getPriority(35138)); //6
    caseQueue.insert(22660,57283);
    myResult.push_back(caseQueue.getPriority(22660)); //7
    myResult.push_back(caseQueue.getPriority(85818)); //8
    caseQueue.insert(61493,7150);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(98718,39663);
    caseQueue.insert(78475,77861);
    myResult.push_back(caseQueue.getPriority(35138)); //11
    caseQueue.updatePriority(78475, 45345);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(35138, 30950);
    caseQueue.insert(33906,4817);
    myResult.push_back(caseQueue.getPriority(78475)); //13
    myResult.push_back(caseQueue.getPriority(33906)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(35138)); //16
    caseQueue.insert(93373,45376);
    caseQueue.insert(22782,79546);
    caseQueue.updatePriority(22660, 8731);
    caseQueue.insert(4469,7536);
    caseQueue.updatePriority(4469, 19117);
    caseQueue.insert(76361,20989);
    caseQueue.insert(13041,72049);
    caseQueue.insert(77784,14636);
    caseQueue.updatePriority(77784, 46219);
    caseQueue.insert(75852,21030);
    caseQueue.insert(73295,90394);
    caseQueue.updatePriority(76361, 23508);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(52302,93693);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(75852)); //19
    caseQueue.insert(37756,80632);
    caseQueue.insert(22015,41380);
    caseQueue.insert(72540,33382);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(8862,93803);
    caseQueue.updatePriority(73295, 84378);
    caseQueue.updatePriority(73295, 22779);
    caseQueue.insert(95997,57676);
    caseQueue.insert(80732,73902);
    caseQueue.insert(71345,49338);
    caseQueue.insert(27184,84073);
    myResult.push_back(caseQueue.getPriority(22782)); //21
    caseQueue.insert(31305,32633);
    caseQueue.updatePriority(71345, 90457);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(22782, 35514);
    caseQueue.insert(45387,91985);
    caseQueue.updatePriority(76361, 94540);
    myResult.push_back(caseQueue.getPriority(52302)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(71345, 87283);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(55241,34724);
    caseQueue.insert(181,58439);
    caseQueue.insert(50098,13089);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(22782, 85302);
    caseQueue.insert(56148,27414);
    caseQueue.insert(29131,38663);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(8862, 93701);
    myResult.push_back(caseQueue.getPriority(93373)); //28
    caseQueue.insert(41663,78820);
    myResult.push_back(caseQueue.getPriority(27184)); //29
    caseQueue.updatePriority(52302, 2514);
    caseQueue.insert(35245,48093);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(72540)); //31
    caseQueue.insert(16747,23997);
    caseQueue.insert(73983,84607);
    caseQueue.insert(39255,19824);
    myResult.push_back(caseQueue.getPriority(39255)); //32
    myResult.push_back(caseQueue.getPriority(39255)); //33
    caseQueue.insert(20142,64968);
    caseQueue.insert(42655,3192);
    caseQueue.updatePriority(16747, 71762);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(77784)); //35
    myResult.push_back(caseQueue.getPriority(35245)); //36
    myResult.push_back(caseQueue.getPriority(20142)); //37
    myResult.push_back(caseQueue.getPriority(8862)); //38
    caseQueue.insert(75729,58081);
    myResult.push_back(caseQueue.getPriority(80732)); //39
    caseQueue.insert(8544,69659);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(98159,50050);
    caseQueue.insert(37805,46722);
    myResult.push_back(caseQueue.getPriority(22782)); //43
    myResult.push_back(caseQueue.getPriority(27184)); //44
    caseQueue.updatePriority(41663, 68359);
    caseQueue.insert(45236,31972);
    caseQueue.insert(15765,10572);
    caseQueue.insert(79535,24503);
    caseQueue.insert(39303,37381);
    caseQueue.insert(96630,46667);
    caseQueue.insert(970,79146);
    caseQueue.insert(467,23970);
    caseQueue.updatePriority(37805, 62495);
    caseQueue.insert(85702,50114);
    caseQueue.updatePriority(80732, 90228);
    caseQueue.insert(41444,83919);
    caseQueue.insert(74424,32946);
    caseQueue.insert(66426,97579);
    caseQueue.insert(63428,96272);
    caseQueue.insert(58496,17164);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(79535, 25557);
    caseQueue.updatePriority(467, 59407);
    caseQueue.insert(22517,66027);
    caseQueue.updatePriority(8544, 5133);
    caseQueue.updatePriority(98159, 26433);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(41444)); //47
    static const int resultListArray[] = {-1, -1, 79888, -1, -1, 94157, 57283, 24893, 61493, 85818, 94157, 98718, 45345, 4817, 33906, 30950, 22660, 4469, 21030, 75852, 79546, 73295, 93693, 35138, 31305, 50098, 56148, 45376, 84073, 52302, 33382, 19824, 19824, 42655, 46219, 48093, 64968, 93701, 73902, 39255, 72540, 55241, 85302, 84073, 15765, 8544, 83919}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(194): Basarili" << endl;
    else cout << "Case(194): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_195(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 233);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(65533)); //2
    caseQueue.insert(71556,29252);
    caseQueue.updatePriority(71556, 76851);
    myResult.push_back(caseQueue.getPriority(71556)); //3
    caseQueue.insert(76950,68350);
    caseQueue.updatePriority(76950, 2852);
    caseQueue.insert(48993,54982);
    caseQueue.insert(81784,28135);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(48993)); //6
    caseQueue.updatePriority(48993, 95526);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(48993, 93361);
    myResult.push_back(caseQueue.getPriority(48993)); //8
    caseQueue.insert(63614,86681);
    caseQueue.insert(71771,42834);
    myResult.push_back(caseQueue.getPriority(48993)); //9
    caseQueue.updatePriority(71771, 83666);
    caseQueue.updatePriority(63614, 35983);
    caseQueue.updatePriority(71771, 73036);
    caseQueue.updatePriority(63614, 93287);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(48993, 45660);
    caseQueue.insert(71876,34659);
    myResult.push_back(caseQueue.getPriority(48993)); //12
    myResult.push_back(caseQueue.getPriority(48993)); //13
    caseQueue.insert(74763,93299);
    myResult.push_back(caseQueue.getPriority(74763)); //14
    caseQueue.insert(57638,52842);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(98526,10914);
    myResult.push_back(caseQueue.getPriority(74763)); //16
    caseQueue.updatePriority(48993, 86805);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(74763, 7674);
    caseQueue.insert(13752,69054);
    caseQueue.insert(53657,53568);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(53657, 5429);
    myResult.push_back(caseQueue.getPriority(48993)); //19
    caseQueue.insert(26953,80200);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(57638)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(13752)); //23
    caseQueue.insert(96277,93851);
    myResult.push_back(caseQueue.getPriority(13752)); //24
    caseQueue.insert(77863,83753);
    caseQueue.insert(64475,83854);
    caseQueue.insert(56662,63720);
    caseQueue.updatePriority(13752, 86333);
    caseQueue.insert(35917,73686);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(96277)); //26
    caseQueue.insert(86442,19811);
    caseQueue.insert(6696,82952);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(53832,51626);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(73196,11642);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(96277, 42197);
    caseQueue.insert(35696,62161);
    caseQueue.updatePriority(6696, 18624);
    caseQueue.insert(98754,43102);
    caseQueue.insert(9300,65227);
    caseQueue.insert(71541,26241);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(85418,10906);
    myResult.push_back(caseQueue.getPriority(96277)); //31
    caseQueue.insert(44999,93203);
    caseQueue.insert(34801,9914);
    caseQueue.insert(30517,91493);
    caseQueue.updatePriority(85418, 30218);
    caseQueue.updatePriority(30517, 67097);
    caseQueue.insert(50479,37814);
    caseQueue.insert(5741,3412);
    caseQueue.insert(46716,19175);
    caseQueue.insert(4193,97948);
    caseQueue.insert(66357,51624);
    caseQueue.updatePriority(30517, 85703);
    myResult.push_back(caseQueue.getPriority(50479)); //32
    caseQueue.insert(43536,85668);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(66357, 42966);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(443,52085);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(70686,28738);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(11266,81344);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(62638,98914);
    myResult.push_back(caseQueue.getPriority(50479)); //39
    caseQueue.updatePriority(66357, 12803);
    myResult.push_back(caseQueue.getPriority(35696)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(30517, 41047);
    caseQueue.updatePriority(62638, 76360);
    caseQueue.insert(81589,2120);
    caseQueue.updatePriority(26953, 65276);
    caseQueue.insert(75183,82897);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(77863, 86386);
    caseQueue.insert(42864,14057);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(95645,1820);
    myResult.push_back(caseQueue.getPriority(35917)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(68383,81301);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(98754, 3554);
    caseQueue.insert(93335,5457);
    caseQueue.insert(96305,102);
    caseQueue.insert(47360,50935);
    caseQueue.updatePriority(96277, 92863);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(24602,39086);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(96833,89253);
    myResult.push_back(caseQueue.getPriority(35917)); //50
    myResult.push_back(caseQueue.getPriority(4193)); //51
    myResult.push_back(caseQueue.getPriority(47360)); //52
    caseQueue.insert(64245,1064);
    caseQueue.updatePriority(47360, 36814);
    myResult.push_back(caseQueue.getPriority(43536)); //53
    myResult.push_back(caseQueue.getPriority(443)); //54
    caseQueue.updatePriority(64475, 56330);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(62638)); //56
    myResult.push_back(caseQueue.getPriority(47360)); //57
    caseQueue.updatePriority(44999, 95373);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(77863)); //59
    caseQueue.updatePriority(35917, 31299);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(9154,79402);
    myResult.push_back(caseQueue.getPriority(96833)); //61
    myResult.push_back(caseQueue.getPriority(11266)); //62
    caseQueue.updatePriority(24602, 58873);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(17683,19430);
    caseQueue.insert(84221,59214);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(13752, 99338);
    caseQueue.insert(7703,34442);
    caseQueue.insert(69098,69217);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(38940,45210);
    caseQueue.insert(27813,83553);
    caseQueue.insert(19490,10063);
    caseQueue.insert(79160,81585);
    caseQueue.updatePriority(96833, 20799);
    caseQueue.updatePriority(24602, 73548);
    caseQueue.insert(30345,89453);
    caseQueue.insert(66513,86843);
    caseQueue.updatePriority(84221, 44330);
    caseQueue.insert(24820,58955);
    caseQueue.insert(11408,12373);
    caseQueue.insert(801,57393);
    myResult.push_back(caseQueue.getPriority(77863)); //66
    caseQueue.insert(14572,33129);
    myResult.push_back(caseQueue.getPriority(26953)); //67
    caseQueue.insert(9896,74146);
    myResult.push_back(caseQueue.getPriority(19490)); //68
    myResult.push_back(caseQueue.getPriority(43536)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(38940)); //71
    caseQueue.insert(29919,58270);
    caseQueue.updatePriority(64475, 97887);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(17671,93248);
    caseQueue.updatePriority(69098, 43809);
    caseQueue.insert(73467,92604);
    caseQueue.updatePriority(68383, 47431);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(443)); //74
    caseQueue.updatePriority(79160, 19365);
    caseQueue.insert(88444,61599);
    caseQueue.insert(88131,69473);
    caseQueue.insert(32815,15506);
    caseQueue.updatePriority(9300, 29324);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(88444, 25574);
    myResult.push_back(caseQueue.getPriority(43536)); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(71355,94513);
    caseQueue.updatePriority(30345, 68320);
    caseQueue.insert(57344,30999);
    caseQueue.updatePriority(24820, 1286);
    caseQueue.insert(2164,64695);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(37590,67642);
    myResult.push_back(caseQueue.getPriority(24602)); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.getPriority(68383)); //85
    caseQueue.updatePriority(24602, 78465);
    myResult.push_back(caseQueue.getPriority(17671)); //86
    caseQueue.insert(81968,74404);
    caseQueue.insert(16002,43021);
    caseQueue.insert(9348,51688);
    caseQueue.insert(97699,824);
    caseQueue.insert(43009,30149);
    caseQueue.insert(88655,79368);
    caseQueue.updatePriority(4193, 80649);
    caseQueue.insert(77818,54057);
    caseQueue.insert(7772,3711);
    myResult.push_back(caseQueue.getPriority(73467)); //87
    caseQueue.updatePriority(96277, 55180);
    myResult.push_back(caseQueue.getPriority(9154)); //88
    caseQueue.insert(98421,28326);
    caseQueue.insert(12683,58890);
    caseQueue.insert(77727,16983);
    caseQueue.insert(61095,64642);
    caseQueue.insert(78847,3054);
    caseQueue.insert(42724,15145);
    myResult.push_back(caseQueue.deleteMin()); //89
    myResult.push_back(caseQueue.getPriority(30345)); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(9942,93506);
    caseQueue.insert(48172,79591);
    caseQueue.updatePriority(77818, 86351);
    caseQueue.updatePriority(37590, 17953);
    caseQueue.insert(71940,15255);
    static const int resultListArray[] = {-1, -1, 76851, 76950, 81784, 54982, 71556, 93361, 93361, 71771, 63614, 45660, 45660, 93299, 71876, 93299, 98526, 74763, 86805, 53657, 52842, 57638, 69054, 69054, 56662, 93851, 86442, 53832, 73196, 6696, 42197, 37814, 5741, 34801, 46716, 71541, 70686, 85418, 37814, 62161, 66357, 81589, 42864, 73686, 95645, 50479, 30517, 96305, 98754, 73686, 97948, 50935, 85668, 52085, 64245, 76360, 36814, 93335, 86386, 35917, 89253, 81344, 47360, 17683, 7703, 86386, 65276, 10063, 85668, 19490, 45210, 11408, 96833, 52085, 32815, 85668, 79160, 24820, 88444, 9300, 57344, 14572, 73548, 69098, 47431, 93248, 92604, 79402, 97699, 68320, 78847}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(195): Basarili" << endl;
    else cout << "Case(195): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_196(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 196);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(91613)); //1
    myResult.push_back(caseQueue.getPriority(84079)); //2
    caseQueue.insert(41069,19592);
    caseQueue.insert(78235,61285);
    caseQueue.insert(24631,7247);
    caseQueue.insert(174,73758);
    caseQueue.updatePriority(41069, 26098);
    myResult.push_back(caseQueue.getPriority(41069)); //3
    caseQueue.insert(40953,91666);
    caseQueue.insert(1883,49271);
    myResult.push_back(caseQueue.getPriority(78235)); //4
    caseQueue.insert(40187,81215);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(40187)); //6
    caseQueue.insert(65097,23494);
    caseQueue.insert(80463,71503);
    myResult.push_back(caseQueue.getPriority(65097)); //7
    caseQueue.insert(47742,45590);
    caseQueue.updatePriority(174, 41242);
    caseQueue.insert(63659,94651);
    caseQueue.insert(16207,28626);
    caseQueue.insert(77031,25736);
    caseQueue.insert(51469,52612);
    myResult.push_back(caseQueue.getPriority(40953)); //8
    caseQueue.updatePriority(40953, 75520);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(174, 4257);
    caseQueue.updatePriority(80463, 45519);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(6228,6413);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(40953)); //13
    caseQueue.insert(20670,61949);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(80463, 51589);
    caseQueue.updatePriority(78235, 41652);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(51469, 74947);
    caseQueue.updatePriority(20670, 89905);
    myResult.push_back(caseQueue.getPriority(47742)); //17
    myResult.push_back(caseQueue.getPriority(40187)); //18
    myResult.push_back(caseQueue.getPriority(20670)); //19
    caseQueue.insert(3044,22204);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(63659, 1339);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(20670, 29484);
    caseQueue.insert(18768,3053);
    myResult.push_back(caseQueue.getPriority(1883)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(40953)); //25
    caseQueue.insert(93668,96476);
    myResult.push_back(caseQueue.getPriority(20670)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(40953)); //28
    myResult.push_back(caseQueue.getPriority(40953)); //29
    myResult.push_back(caseQueue.getPriority(1883)); //30
    caseQueue.insert(764,73354);
    caseQueue.updatePriority(40953, 52774);
    caseQueue.insert(95731,32889);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(40953, 1743);
    caseQueue.updatePriority(93668, 6499);
    caseQueue.updatePriority(764, 80763);
    caseQueue.insert(56769,1477);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(40187)); //34
    caseQueue.insert(5545,80121);
    caseQueue.insert(3548,35659);
    caseQueue.insert(61,9009);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(764, 60665);
    caseQueue.updatePriority(93668, 18129);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(1852,909);
    myResult.push_back(caseQueue.getPriority(80463)); //37
    caseQueue.insert(25939,40085);
    myResult.push_back(caseQueue.getPriority(1852)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(20997,58231);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(40187, 57562);
    caseQueue.updatePriority(80463, 59845);
    myResult.push_back(caseQueue.getPriority(5545)); //43
    caseQueue.insert(22620,91479);
    caseQueue.updatePriority(51469, 61801);
    caseQueue.updatePriority(51469, 74978);
    caseQueue.updatePriority(80463, 88506);
    caseQueue.insert(11375,88007);
    caseQueue.updatePriority(51469, 13014);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(11375)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(80463)); //47
    caseQueue.updatePriority(5545, 94372);
    caseQueue.insert(81376,79817);
    myResult.push_back(caseQueue.getPriority(764)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(764)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(20455,47006);
    myResult.push_back(caseQueue.getPriority(11375)); //53
    caseQueue.updatePriority(80463, 27238);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(82773,69117);
    myResult.push_back(caseQueue.getPriority(11375)); //55
    caseQueue.insert(31784,75409);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(47568,58724);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(12081,79354);
    myResult.push_back(caseQueue.getPriority(22620)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(5545, 12735);
    caseQueue.insert(75028,52332);
    caseQueue.updatePriority(22620, 36964);
    caseQueue.insert(14020,47398);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(22620)); //61
    myResult.push_back(caseQueue.getPriority(12081)); //62
    myResult.push_back(caseQueue.getPriority(14020)); //63
    caseQueue.insert(50306,81326);
    caseQueue.insert(29514,53338);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(50306, 73151);
    caseQueue.insert(318,13644);
    caseQueue.updatePriority(75028, 25583);
    caseQueue.updatePriority(29514, 45214);
    caseQueue.updatePriority(29514, 88933);
    caseQueue.insert(49913,47036);
    caseQueue.insert(49085,38447);
    caseQueue.insert(13608,22401);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(49085)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(49085)); //68
    myResult.push_back(caseQueue.getPriority(11375)); //69
    myResult.push_back(caseQueue.getPriority(49085)); //70
    caseQueue.insert(43480,97203);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(61833,50501);
    caseQueue.updatePriority(11375, 65905);
    caseQueue.insert(61576,10723);
    caseQueue.insert(56058,69783);
    caseQueue.insert(34394,93369);
    caseQueue.insert(49056,16173);
    caseQueue.insert(36845,81313);
    myResult.push_back(caseQueue.getPriority(34394)); //72
    caseQueue.insert(15358,34442);
    myResult.push_back(caseQueue.getPriority(43480)); //73
    caseQueue.insert(74941,75817);
    myResult.push_back(caseQueue.getPriority(61576)); //74
    caseQueue.updatePriority(29514, 56883);
    caseQueue.insert(29830,30469);
    caseQueue.insert(86477,53896);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(42408,67012);
    caseQueue.updatePriority(34394, 69879);
    myResult.push_back(caseQueue.getPriority(49913)); //76
    caseQueue.updatePriority(29514, 48576);
    caseQueue.updatePriority(12081, 36991);
    caseQueue.insert(12715,97475);
    myResult.push_back(caseQueue.getPriority(56058)); //77
    caseQueue.insert(24648,99844);
    caseQueue.insert(47884,48000);
    caseQueue.insert(83307,54554);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(97716,22969);
    caseQueue.insert(1371,85463);
    caseQueue.insert(69333,21765);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(43480)); //80
    caseQueue.insert(1492,6553);
    caseQueue.insert(84064,89044);
    caseQueue.insert(47714,77967);
    myResult.push_back(caseQueue.getPriority(24648)); //81
    caseQueue.insert(53740,75808);
    caseQueue.updatePriority(1492, 84179);
    caseQueue.insert(2291,3906);
    myResult.push_back(caseQueue.getPriority(47884)); //82
    caseQueue.updatePriority(56058, 93864);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(29514, 7273);
    caseQueue.updatePriority(34394, 30152);
    caseQueue.updatePriority(49085, 16425);
    caseQueue.updatePriority(11375, 30782);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.updatePriority(74941, 3255);
    caseQueue.updatePriority(49913, 11315);
    static const int resultListArray[] = {-1, -1, 26098, 61285, 24631, 81215, 23494, 91666, 65097, 77031, 174, 6228, 75520, 41069, 16207, 78235, 45590, 81215, 89905, 3044, 63659, 47742, 49271, 18768, 75520, 29484, 20670, 75520, 75520, 49271, 95731, 1883, 56769, 81215, 40953, 61, 51589, 909, 1852, 93668, 3548, 25939, 80121, 51469, 88007, 40187, 88506, 60665, 20997, 60665, 764, 81376, 88007, 80463, 88007, 20455, 47568, 91479, 82773, 5545, 36964, 79354, 47398, 22620, 318, 38447, 13608, 38447, 88007, 38447, 75028, 93369, 97203, 10723, 61576, 47036, 69783, 49056, 69333, 97203, 99844, 48000, 2291, 29514}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(196): Basarili" << endl;
    else cout << "Case(196): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_197(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 225);

    vector<int> myResult; 
    caseQueue.updatePriority(44688, 69710);
    caseQueue.updatePriority(14200, 33595);
    caseQueue.insert(44114,17163);
    caseQueue.updatePriority(44114, 80788);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(93363,67836);
    caseQueue.updatePriority(93363, 24505);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(20422)); //3
    caseQueue.insert(37362,20758);
    myResult.push_back(caseQueue.getPriority(37362)); //4
    myResult.push_back(caseQueue.getPriority(37362)); //5
    caseQueue.insert(65218,15357);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(7092,76062);
    caseQueue.updatePriority(37362, 58778);
    caseQueue.insert(53256,5941);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(30713,25327);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(18619,85755);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(98780,53197);
    caseQueue.insert(69189,31259);
    caseQueue.insert(53209,9351);
    caseQueue.updatePriority(53209, 82743);
    caseQueue.insert(59989,60601);
    myResult.push_back(caseQueue.getPriority(59989)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(91557,84858);
    caseQueue.insert(35277,5369);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(91557, 98858);
    caseQueue.insert(25241,26740);
    caseQueue.insert(49200,35895);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(18619)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(18619, 53114);
    myResult.push_back(caseQueue.getPriority(53209)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(28808,98901);
    caseQueue.updatePriority(59989, 10387);
    caseQueue.insert(289,57546);
    myResult.push_back(caseQueue.getPriority(91557)); //20
    caseQueue.updatePriority(91557, 23605);
    caseQueue.insert(31032,83257);
    caseQueue.updatePriority(28808, 9858);
    caseQueue.insert(76777,34046);
    caseQueue.insert(20555,50115);
    caseQueue.insert(48256,86478);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(71814,16926);
    caseQueue.updatePriority(48256, 86609);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(92763,97282);
    myResult.push_back(caseQueue.getPriority(53209)); //25
    myResult.push_back(caseQueue.getPriority(20555)); //26
    caseQueue.insert(22845,97238);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(53209, 82021);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(48256)); //29
    myResult.push_back(caseQueue.getPriority(48256)); //30
    caseQueue.insert(83902,40678);
    caseQueue.insert(68343,4016);
    caseQueue.updatePriority(53209, 8727);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(17337,57454);
    myResult.push_back(caseQueue.getPriority(22845)); //32
    caseQueue.updatePriority(48256, 73816);
    caseQueue.updatePriority(17337, 95214);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(17337)); //34
    myResult.push_back(caseQueue.getPriority(48256)); //35
    caseQueue.insert(14859,13274);
    caseQueue.insert(39608,87769);
    caseQueue.insert(79256,37651);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(29946,31216);
    caseQueue.updatePriority(22845, 63494);
    myResult.push_back(caseQueue.getPriority(39608)); //38
    caseQueue.insert(9503,75165);
    caseQueue.insert(65094,86121);
    myResult.push_back(caseQueue.getPriority(48256)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(30857,77916);
    caseQueue.updatePriority(92763, 63182);
    myResult.push_back(caseQueue.getPriority(48256)); //42
    caseQueue.insert(82238,29195);
    caseQueue.updatePriority(30857, 58255);
    caseQueue.updatePriority(48256, 68051);
    caseQueue.insert(25590,67631);
    caseQueue.updatePriority(9503, 35665);
    caseQueue.insert(61884,50355);
    caseQueue.insert(73010,19497);
    caseQueue.insert(63843,75355);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(36260,91144);
    caseQueue.insert(3203,73152);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(63354,4622);
    caseQueue.insert(33168,38245);
    myResult.push_back(caseQueue.getPriority(9503)); //45
    caseQueue.insert(87364,15168);
    myResult.push_back(caseQueue.getPriority(33168)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(52762,46467);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(65094)); //51
    caseQueue.updatePriority(17337, 19993);
    caseQueue.insert(1710,10675);
    caseQueue.insert(61352,11891);
    caseQueue.insert(57494,15003);
    caseQueue.updatePriority(17337, 21188);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(84011,48349);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(57494)); //54
    caseQueue.updatePriority(48256, 16302);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(84011, 96970);
    caseQueue.insert(79664,47281);
    myResult.push_back(caseQueue.getPriority(39608)); //56
    myResult.push_back(caseQueue.getPriority(84011)); //57
    caseQueue.insert(2468,16391);
    caseQueue.insert(38548,11931);
    myResult.push_back(caseQueue.getPriority(17337)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(71991,45771);
    caseQueue.updatePriority(30857, 24209);
    caseQueue.updatePriority(17337, 23257);
    caseQueue.insert(84705,57971);
    myResult.push_back(caseQueue.getPriority(2468)); //60
    myResult.push_back(caseQueue.getPriority(92763)); //61
    myResult.push_back(caseQueue.getPriority(30857)); //62
    caseQueue.insert(76476,93554);
    caseQueue.insert(20304,95708);
    caseQueue.updatePriority(3203, 55192);
    caseQueue.insert(99012,95836);
    caseQueue.insert(59250,73483);
    myResult.push_back(caseQueue.getPriority(20304)); //63
    caseQueue.updatePriority(71991, 66132);
    caseQueue.insert(70601,72449);
    caseQueue.updatePriority(65094, 30082);
    caseQueue.updatePriority(2468, 60358);
    caseQueue.updatePriority(31032, 87533);
    caseQueue.insert(80769,76602);
    myResult.push_back(caseQueue.getPriority(79664)); //64
    caseQueue.updatePriority(52762, 92008);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(99012)); //66
    caseQueue.updatePriority(31032, 7634);
    caseQueue.insert(93135,98057);
    caseQueue.insert(49113,74894);
    caseQueue.updatePriority(31032, 78699);
    caseQueue.insert(47082,57231);
    caseQueue.updatePriority(52762, 53534);
    caseQueue.updatePriority(31032, 68945);
    caseQueue.insert(57863,39884);
    caseQueue.insert(4464,1446);
    caseQueue.insert(36897,8654);
    caseQueue.insert(21398,22141);
    caseQueue.updatePriority(20304, 4578);
    caseQueue.insert(74573,41747);
    caseQueue.insert(2177,50672);
    caseQueue.insert(89250,27467);
    caseQueue.insert(14181,38446);
    caseQueue.updatePriority(25590, 7565);
    caseQueue.insert(16506,23152);
    caseQueue.updatePriority(16506, 23174);
    caseQueue.insert(14389,93726);
    caseQueue.insert(15291,39396);
    myResult.push_back(caseQueue.getPriority(36897)); //67
    caseQueue.insert(19218,26276);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(71138,24891);
    caseQueue.updatePriority(39608, 79333);
    caseQueue.insert(9891,89478);
    caseQueue.insert(37565,15699);
    caseQueue.insert(54462,10990);
    caseQueue.insert(80013,47028);
    myResult.push_back(caseQueue.getPriority(31032)); //69
    caseQueue.updatePriority(31032, 14803);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(289, 83136);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(44474,32022);
    caseQueue.insert(43191,95579);
    caseQueue.insert(72998,15477);
    caseQueue.insert(17699,70191);
    caseQueue.insert(71668,3564);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(61029,83182);
    myResult.push_back(caseQueue.getPriority(92763)); //73
    caseQueue.insert(13640,61636);
    caseQueue.insert(27892,22409);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(62541,14578);
    caseQueue.updatePriority(79664, 79025);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(289)); //76
    caseQueue.insert(14348,50840);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(45140,72799);
    myResult.push_back(caseQueue.getPriority(37565)); //78
    myResult.push_back(caseQueue.getPriority(63843)); //79
    caseQueue.updatePriority(65094, 22302);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(99040,58009);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(73611,11025);
    caseQueue.updatePriority(80013, 94762);
    caseQueue.insert(75020,88525);
    myResult.push_back(caseQueue.getPriority(14389)); //82
    caseQueue.updatePriority(89250, 8295);
    caseQueue.insert(71135,55604);
    static const int resultListArray[] = {44114, 93363, -1, 20758, 20758, 65218, 53256, 30713, 37362, 7092, 60601, 69189, 35277, 98780, 25241, 85755, 49200, 82743, 18619, 98858, 28808, 59989, 71814, 91557, 82743, 50115, 76777, 20555, 86609, 86609, 68343, 97238, 53209, 95214, 73816, 14859, 79256, 87769, 73816, 29946, 83902, 73816, 73010, 82238, 35665, 38245, 63354, 87364, 9503, 33168, 86121, 1710, 61352, 15003, 57494, 87769, 96970, 21188, 38548, 16391, 63182, 24209, 95708, 47281, 48256, 95836, 8654, 4464, 68945, 20304, 25590, 71668, 63182, 36897, 54462, 83136, 62541, 15699, 75355, 31032, 72998, 93726}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(197): Basarili" << endl;
    else cout << "Case(197): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_198(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 218);

    vector<int> myResult; 
    caseQueue.updatePriority(49924, 65545);
    caseQueue.insert(39660,58915);
    caseQueue.updatePriority(39660, 3134);
    myResult.push_back(caseQueue.getPriority(39660)); //1
    caseQueue.insert(95644,96270);
    caseQueue.insert(97866,22751);
    myResult.push_back(caseQueue.getPriority(95644)); //2
    myResult.push_back(caseQueue.getPriority(95644)); //3
    myResult.push_back(caseQueue.getPriority(97866)); //4
    caseQueue.insert(95904,73618);
    caseQueue.insert(75627,65021);
    myResult.push_back(caseQueue.getPriority(95904)); //5
    caseQueue.insert(67730,18240);
    caseQueue.insert(14140,62960);
    caseQueue.insert(17469,37791);
    caseQueue.updatePriority(17469, 41725);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(28414,13357);
    caseQueue.insert(75296,89969);
    caseQueue.insert(2078,84560);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(14140)); //8
    caseQueue.insert(75944,98100);
    myResult.push_back(caseQueue.getPriority(97866)); //9
    caseQueue.insert(64540,3294);
    myResult.push_back(caseQueue.getPriority(97866)); //10
    caseQueue.insert(71328,29425);
    caseQueue.insert(74986,23123);
    myResult.push_back(caseQueue.getPriority(75944)); //11
    caseQueue.updatePriority(97866, 51989);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(95904)); //14
    caseQueue.updatePriority(71328, 84957);
    caseQueue.insert(41530,82828);
    caseQueue.updatePriority(75296, 83376);
    caseQueue.insert(64568,50739);
    myResult.push_back(caseQueue.getPriority(17469)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(75296, 41460);
    caseQueue.insert(9522,42907);
    myResult.push_back(caseQueue.getPriority(71328)); //17
    caseQueue.insert(66298,21652);
    caseQueue.insert(63210,73111);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(1561,97075);
    caseQueue.insert(94679,13710);
    caseQueue.updatePriority(95644, 17142);
    caseQueue.insert(20996,12443);
    caseQueue.insert(91469,2553);
    caseQueue.updatePriority(17469, 44063);
    caseQueue.updatePriority(14140, 87497);
    caseQueue.updatePriority(64568, 17393);
    caseQueue.insert(71320,82341);
    myResult.push_back(caseQueue.getPriority(2078)); //20
    caseQueue.updatePriority(17469, 90338);
    caseQueue.updatePriority(94679, 68502);
    caseQueue.insert(27476,73989);
    myResult.push_back(caseQueue.getPriority(20996)); //21
    caseQueue.updatePriority(95644, 78757);
    caseQueue.insert(76052,93852);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(75944, 84781);
    caseQueue.updatePriority(1561, 69702);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(9262,69855);
    caseQueue.insert(72652,81107);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(94679)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(14140, 74742);
    caseQueue.insert(48279,99201);
    caseQueue.updatePriority(72652, 57699);
    caseQueue.insert(23928,48179);
    caseQueue.insert(12689,32265);
    caseQueue.insert(24726,76160);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(69054,93281);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(90139,47625);
    caseQueue.insert(39572,85737);
    myResult.push_back(caseQueue.getPriority(27476)); //30
    caseQueue.insert(35507,70171);
    caseQueue.insert(81430,29580);
    caseQueue.insert(47259,49647);
    myResult.push_back(caseQueue.getPriority(48279)); //31
    caseQueue.insert(22422,8640);
    myResult.push_back(caseQueue.getPriority(75627)); //32
    caseQueue.insert(24368,3594);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(41189,12625);
    caseQueue.insert(9014,60947);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(27476)); //36
    caseQueue.insert(50711,30797);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(48279, 15506);
    caseQueue.insert(54166,27463);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(2078)); //39
    caseQueue.updatePriority(90139, 1587);
    caseQueue.insert(33912,61180);
    myResult.push_back(caseQueue.getPriority(63210)); //40
    caseQueue.insert(69070,76701);
    caseQueue.updatePriority(71328, 2958);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(75944, 32160);
    caseQueue.insert(3643,26228);
    caseQueue.insert(49549,6556);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(14140)); //43
    caseQueue.updatePriority(41530, 60744);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(94552,84737);
    caseQueue.insert(3565,97506);
    caseQueue.insert(13956,55404);
    caseQueue.insert(48353,45846);
    caseQueue.updatePriority(76052, 70955);
    caseQueue.updatePriority(1561, 10397);
    caseQueue.insert(95851,61170);
    caseQueue.insert(72436,80728);
    caseQueue.insert(92813,56890);
    myResult.push_back(caseQueue.getPriority(47259)); //46
    caseQueue.insert(67323,15334);
    caseQueue.insert(22550,13250);
    myResult.push_back(caseQueue.getPriority(35507)); //47
    myResult.push_back(caseQueue.getPriority(9014)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(7523,98330);
    caseQueue.updatePriority(7523, 85229);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(62532,47379);
    caseQueue.updatePriority(75944, 55006);
    myResult.push_back(caseQueue.getPriority(95644)); //51
    myResult.push_back(caseQueue.getPriority(7523)); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(41530)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(91056,11374);
    myResult.push_back(caseQueue.getPriority(33912)); //56
    caseQueue.insert(39667,18556);
    caseQueue.insert(62715,56927);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(48353, 96310);
    caseQueue.insert(8276,27142);
    caseQueue.insert(46388,62910);
    caseQueue.insert(54011,6531);
    caseQueue.updatePriority(92813, 33414);
    myResult.push_back(caseQueue.getPriority(69054)); //59
    caseQueue.insert(73308,80378);
    myResult.push_back(caseQueue.getPriority(54011)); //60
    myResult.push_back(caseQueue.getPriority(72652)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(73308, 86882);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(85565,14433);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(80985,56163);
    caseQueue.insert(86597,70225);
    myResult.push_back(caseQueue.getPriority(72652)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(76052)); //68
    caseQueue.updatePriority(24726, 6913);
    myResult.push_back(caseQueue.getPriority(24726)); //69
    myResult.push_back(caseQueue.getPriority(33912)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(63867,16476);
    myResult.push_back(caseQueue.getPriority(33912)); //72
    myResult.push_back(caseQueue.getPriority(69070)); //73
    caseQueue.insert(80185,68285);
    caseQueue.insert(73521,15680);
    caseQueue.insert(65923,64640);
    caseQueue.insert(50644,17201);
    caseQueue.updatePriority(47259, 89972);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(87647,29757);
    caseQueue.insert(91107,31192);
    caseQueue.insert(75239,9608);
    caseQueue.insert(58616,44673);
    caseQueue.updatePriority(94552, 27558);
    myResult.push_back(caseQueue.getPriority(94679)); //75
    caseQueue.insert(40292,21941);
    caseQueue.insert(58197,17046);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(65411,67869);
    caseQueue.insert(48907,54122);
    caseQueue.insert(60469,87218);
    myResult.push_back(caseQueue.getPriority(35507)); //77
    myResult.push_back(caseQueue.getPriority(72436)); //78
    caseQueue.updatePriority(62715, 48335);
    caseQueue.insert(77799,99249);
    myResult.push_back(caseQueue.getPriority(76052)); //79
    caseQueue.insert(68521,7108);
    myResult.push_back(caseQueue.getPriority(58197)); //80
    caseQueue.updatePriority(69054, 60766);
    caseQueue.updatePriority(46388, 42538);
    caseQueue.updatePriority(48353, 31633);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(91107, 10192);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.updatePriority(14140, 67161);
    caseQueue.updatePriority(14140, 38836);
    caseQueue.insert(70458,55330);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(39572, 54457);
    myResult.push_back(caseQueue.getPriority(3565)); //84
    caseQueue.updatePriority(80185, 40530);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(62532)); //87
    caseQueue.updatePriority(48353, 45777);
    caseQueue.updatePriority(47259, 35806);
    static const int resultListArray[] = {3134, 96270, 96270, 22751, 73618, 39660, 28414, 62960, 22751, 22751, 98100, 64540, 67730, 73618, 41725, 74986, 84957, 66298, 75296, 84560, 12443, 91469, 20996, 64568, 9522, 68502, 97866, 12689, 23928, 73989, 99201, 65021, 24368, 22422, 41189, 73989, 81430, 48279, 84560, 73111, 90139, 71328, 74742, 49549, 3643, 49647, 70171, 60947, 1561, 22550, 78757, 85229, 67323, 60744, 54166, 61180, 91056, 39667, 93281, 6531, 57699, 54011, 8276, 50711, 85565, 57699, 92813, 70955, 6913, 61180, 24726, 61180, 76701, 73521, 68502, 75239, 70171, 80728, 70955, 17046, 68521, 91107, 63867, 97506, 58197, 50644, 47379}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(198): Basarili" << endl;
    else cout << "Case(198): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_199(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 158);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(24296)); //1
    myResult.push_back(caseQueue.getPriority(79020)); //2
    caseQueue.insert(85180,85027);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(13091, 16763);
    caseQueue.updatePriority(4248, 20033);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(83145)); //6
    myResult.push_back(caseQueue.getPriority(58471)); //7
    caseQueue.updatePriority(82407, 97558);
    myResult.push_back(caseQueue.getPriority(62594)); //8
    caseQueue.updatePriority(7328, 26668);
    caseQueue.insert(50002,58025);
    caseQueue.insert(10828,49209);
    myResult.push_back(caseQueue.getPriority(50002)); //9
    caseQueue.insert(97872,94520);
    myResult.push_back(caseQueue.getPriority(50002)); //10
    caseQueue.insert(82797,26998);
    caseQueue.updatePriority(97872, 80893);
    myResult.push_back(caseQueue.getPriority(50002)); //11
    caseQueue.updatePriority(10828, 41724);
    caseQueue.updatePriority(50002, 70664);
    caseQueue.insert(2061,88167);
    myResult.push_back(caseQueue.getPriority(97872)); //12
    caseQueue.insert(8032,16083);
    myResult.push_back(caseQueue.getPriority(8032)); //13
    caseQueue.insert(86444,66140);
    caseQueue.insert(15959,27128);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(15959)); //16
    myResult.push_back(caseQueue.getPriority(86444)); //17
    caseQueue.updatePriority(86444, 29975);
    caseQueue.updatePriority(50002, 68913);
    caseQueue.insert(74897,19800);
    caseQueue.updatePriority(10828, 60356);
    caseQueue.insert(60630,9460);
    caseQueue.insert(56621,12911);
    caseQueue.insert(65140,38029);
    myResult.push_back(caseQueue.getPriority(2061)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(42107,18349);
    caseQueue.insert(65778,96888);
    caseQueue.insert(2317,63104);
    caseQueue.insert(52961,25179);
    caseQueue.updatePriority(2061, 38810);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(50002, 93098);
    caseQueue.updatePriority(52961, 86765);
    caseQueue.insert(28031,48299);
    caseQueue.insert(46299,37446);
    caseQueue.insert(62753,66828);
    caseQueue.insert(34508,41330);
    caseQueue.updatePriority(52961, 32106);
    myResult.push_back(caseQueue.getPriority(74897)); //22
    caseQueue.insert(19745,56581);
    caseQueue.insert(19625,64141);
    myResult.push_back(caseQueue.getPriority(28031)); //23
    caseQueue.insert(98378,40614);
    myResult.push_back(caseQueue.getPriority(28031)); //24
    myResult.push_back(caseQueue.getPriority(62753)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(2317, 72112);
    caseQueue.updatePriority(19745, 86737);
    caseQueue.insert(53240,68933);
    caseQueue.insert(51484,1731);
    caseQueue.insert(19166,34376);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(23633,13269);
    caseQueue.updatePriority(28031, 46119);
    caseQueue.insert(15268,62241);
    caseQueue.updatePriority(46299, 93748);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(65778)); //29
    caseQueue.insert(57743,62315);
    caseQueue.insert(38220,14258);
    caseQueue.insert(50878,45920);
    caseQueue.insert(99723,63797);
    caseQueue.insert(71481,54261);
    caseQueue.insert(94292,90667);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(2586,95146);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(8085,14326);
    caseQueue.insert(45488,31914);
    caseQueue.insert(30631,72731);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(2061, 76675);
    caseQueue.insert(3801,15108);
    caseQueue.insert(3174,8487);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(97872, 10571);
    caseQueue.updatePriority(53240, 93182);
    caseQueue.insert(78893,21933);
    caseQueue.updatePriority(10828, 14611);
    caseQueue.insert(73363,70095);
    caseQueue.updatePriority(65140, 32708);
    caseQueue.insert(53677,98034);
    caseQueue.insert(47853,69167);
    caseQueue.insert(10606,25396);
    caseQueue.insert(729,212);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(3801, 78913);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(2061)); //37
    caseQueue.insert(76306,76228);
    caseQueue.updatePriority(30631, 85457);
    myResult.push_back(caseQueue.getPriority(19745)); //38
    caseQueue.insert(66266,75524);
    myResult.push_back(caseQueue.getPriority(52961)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(62438,62816);
    myResult.push_back(caseQueue.getPriority(3801)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(76306)); //44
    caseQueue.insert(26438,18925);
    caseQueue.updatePriority(30631, 25968);
    caseQueue.insert(75124,42942);
    caseQueue.insert(5790,19917);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(49301,92416);
    caseQueue.insert(51080,29200);
    caseQueue.insert(28363,92862);
    caseQueue.insert(2402,8663);
    caseQueue.insert(19592,92214);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(46299)); //48
    caseQueue.updatePriority(71481, 51179);
    caseQueue.insert(98035,1968);
    caseQueue.updatePriority(15268, 58932);
    caseQueue.insert(16890,72628);
    caseQueue.updatePriority(15268, 43075);
    myResult.push_back(caseQueue.getPriority(62753)); //49
    myResult.push_back(caseQueue.getPriority(30631)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(2061, 62150);
    caseQueue.insert(77245,42690);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(31403,6274);
    caseQueue.updatePriority(15268, 61244);
    caseQueue.insert(95074,33454);
    myResult.push_back(caseQueue.getPriority(47853)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(11975,70260);
    caseQueue.insert(36733,57786);
    caseQueue.updatePriority(62753, 62869);
    myResult.push_back(caseQueue.getPriority(76306)); //55
    caseQueue.insert(36801,54134);
    caseQueue.insert(87576,91);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(53677, 86030);
    caseQueue.insert(28714,65471);
    caseQueue.insert(69709,97921);
    static const int resultListArray[] = {-1, -1, 85180, -1, -1, -1, -1, -1, 58025, 58025, 58025, 80893, 16083, 8032, 82797, 27128, 66140, 88167, 60630, 56621, 42107, 19800, 48299, 48299, 66828, 74897, 51484, 23633, 96888, 38220, 15959, 8085, 86444, 3174, 729, 97872, 76675, 86737, 32106, 10828, 78913, 78893, 10606, 76228, 26438, 2402, 5790, 93748, 66828, 25968, 98035, 30631, 69167, 31403, 76228, 87576}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(199): Basarili" << endl;
    else cout << "Case(199): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_200(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 210);

    vector<int> myResult; 
    caseQueue.insert(53610,86650);
    caseQueue.updatePriority(53610, 28476);
    caseQueue.insert(67632,24699);
    myResult.push_back(caseQueue.getPriority(67632)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(3509,78654);
    myResult.push_back(caseQueue.getPriority(3509)); //3
    myResult.push_back(caseQueue.getPriority(53610)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(3509, 28314);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(43765,21529);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(60583, 67345);
    myResult.push_back(caseQueue.getPriority(91353)); //8
    myResult.push_back(caseQueue.getPriority(40408)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(89455,11076);
    caseQueue.insert(80318,70169);
    myResult.push_back(caseQueue.getPriority(89455)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(58648,95127);
    caseQueue.insert(22162,40617);
    caseQueue.updatePriority(22162, 48549);
    caseQueue.insert(99067,68341);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(58648, 47417);
    myResult.push_back(caseQueue.getPriority(58648)); //17
    myResult.push_back(caseQueue.getPriority(58648)); //18
    caseQueue.insert(99707,33991);
    caseQueue.insert(63693,8918);
    caseQueue.insert(31550,76753);
    myResult.push_back(caseQueue.getPriority(99707)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(31550)); //21
    caseQueue.updatePriority(58648, 86785);
    myResult.push_back(caseQueue.getPriority(31550)); //22
    caseQueue.insert(60364,38123);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(91649,78915);
    caseQueue.insert(58405,59050);
    caseQueue.insert(16449,94005);
    caseQueue.insert(55679,76933);
    caseQueue.insert(6075,33585);
    myResult.push_back(caseQueue.getPriority(60364)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(55679, 69326);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(88248,8252);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(73702,80539);
    myResult.push_back(caseQueue.getPriority(58648)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(36509,35161);
    caseQueue.updatePriority(31550, 99194);
    myResult.push_back(caseQueue.getPriority(91649)); //31
    myResult.push_back(caseQueue.getPriority(36509)); //32
    caseQueue.insert(94875,23171);
    caseQueue.insert(77698,8153);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(79259,36948);
    caseQueue.insert(99336,95427);
    caseQueue.updatePriority(58648, 37292);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(23393,63746);
    caseQueue.insert(83594,51565);
    myResult.push_back(caseQueue.getPriority(58648)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(91649)); //38
    caseQueue.updatePriority(91649, 77859);
    caseQueue.insert(87765,21082);
    myResult.push_back(caseQueue.getPriority(73702)); //39
    myResult.push_back(caseQueue.getPriority(87765)); //40
    caseQueue.insert(91509,21870);
    caseQueue.updatePriority(31550, 38676);
    myResult.push_back(caseQueue.getPriority(73702)); //41
    caseQueue.updatePriority(91509, 87856);
    caseQueue.insert(63196,52950);
    caseQueue.insert(3180,87032);
    myResult.push_back(caseQueue.getPriority(23393)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(73702, 40767);
    caseQueue.insert(57558,87451);
    caseQueue.insert(33827,66863);
    caseQueue.updatePriority(16449, 72533);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(91649, 83728);
    caseQueue.insert(66308,31801);
    caseQueue.insert(63625,11731);
    caseQueue.updatePriority(57558, 61725);
    caseQueue.insert(17355,65317);
    caseQueue.insert(58794,94427);
    caseQueue.updatePriority(33827, 11541);
    myResult.push_back(caseQueue.getPriority(3180)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(72881,5743);
    caseQueue.updatePriority(72881, 12006);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(58167,87555);
    caseQueue.insert(63962,85194);
    caseQueue.updatePriority(83594, 64247);
    caseQueue.updatePriority(63962, 46647);
    myResult.push_back(caseQueue.getPriority(57558)); //49
    myResult.push_back(caseQueue.getPriority(3180)); //50
    myResult.push_back(caseQueue.getPriority(66308)); //51
    caseQueue.insert(73785,73225);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(16449, 88680);
    caseQueue.insert(91683,123);
    caseQueue.insert(49376,20665);
    caseQueue.insert(15914,29128);
    caseQueue.insert(10504,36808);
    caseQueue.insert(94295,67298);
    caseQueue.insert(12979,6301);
    caseQueue.insert(2912,3091);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(78712,29342);
    caseQueue.insert(21276,31421);
    myResult.push_back(caseQueue.getPriority(73785)); //54
    caseQueue.insert(48003,5141);
    myResult.push_back(caseQueue.getPriority(73702)); //55
    caseQueue.insert(50861,87686);
    caseQueue.insert(84408,70460);
    caseQueue.insert(76158,35937);
    myResult.push_back(caseQueue.getPriority(63962)); //56
    caseQueue.insert(58699,72072);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(95721,52971);
    caseQueue.insert(36032,68180);
    caseQueue.updatePriority(10504, 13253);
    caseQueue.updatePriority(3180, 34434);
    caseQueue.insert(38420,48062);
    myResult.push_back(caseQueue.getPriority(38420)); //58
    myResult.push_back(caseQueue.getPriority(16449)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.updatePriority(23393, 7160);
    caseQueue.updatePriority(49376, 23723);
    caseQueue.updatePriority(58167, 35178);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(83594, 38077);
    caseQueue.insert(66146,11090);
    myResult.push_back(caseQueue.getPriority(95721)); //62
    caseQueue.insert(91319,45335);
    caseQueue.insert(2465,44583);
    caseQueue.insert(13647,83339);
    myResult.push_back(caseQueue.getPriority(73785)); //63
    caseQueue.insert(94137,22029);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(76158, 40739);
    caseQueue.insert(1805,9178);
    myResult.push_back(caseQueue.getPriority(2465)); //65
    caseQueue.insert(62283,14276);
    caseQueue.insert(86272,4809);
    caseQueue.insert(1172,98820);
    caseQueue.updatePriority(94295, 11244);
    caseQueue.updatePriority(63962, 33207);
    myResult.push_back(caseQueue.getPriority(1172)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(57642,64028);
    caseQueue.insert(71168,66611);
    caseQueue.updatePriority(49376, 23010);
    caseQueue.insert(13678,21710);
    caseQueue.updatePriority(66146, 26451);
    myResult.push_back(caseQueue.getPriority(66146)); //68
    caseQueue.updatePriority(1172, 75818);
    caseQueue.insert(46631,16958);
    myResult.push_back(caseQueue.getPriority(71168)); //69
    caseQueue.insert(77111,96625);
    caseQueue.insert(10168,95726);
    caseQueue.insert(64089,87395);
    myResult.push_back(caseQueue.getPriority(91319)); //70
    caseQueue.insert(285,6696);
    myResult.push_back(caseQueue.getPriority(13647)); //71
    caseQueue.insert(43912,89744);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(16449)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(48597,67998);
    caseQueue.insert(99606,20529);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(43912, 43596);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(70929,71147);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.updatePriority(63196, 58298);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(83548,96834);
    caseQueue.updatePriority(84408, 40595);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(49376, 3901);
    caseQueue.updatePriority(84408, 1210);
    myResult.push_back(caseQueue.getPriority(13647)); //82
    caseQueue.insert(6565,758);
    caseQueue.insert(39667,11683);
    caseQueue.insert(44904,47160);
    caseQueue.updatePriority(91319, 30770);
    caseQueue.insert(42521,29404);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.getPriority(71168)); //84
    caseQueue.insert(89905,64512);
    caseQueue.insert(499,48721);
    myResult.push_back(caseQueue.getPriority(10168)); //85
    static const int resultListArray[] = {24699, 67632, 78654, 28476, 53610, 3509, 43765, -1, -1, -1, -1, 11076, 89455, 80318, 22162, 99067, 47417, 47417, 33991, 63693, 76753, 76753, 99707, 38123, 6075, 60364, 58405, 88248, 86785, 55679, 78915, 35161, 77698, 94875, 36509, 37292, 79259, 78915, 80539, 21082, 80539, 63746, 87765, 58648, 31550, 87032, 33827, 63625, 61725, 87032, 31801, 72881, 91683, 73225, 40767, 46647, 2912, 48062, 88680, 48003, 12979, 52971, 73225, 23393, 44583, 98820, 86272, 26451, 66611, 45335, 83339, 285, 1805, 88680, 94295, 10504, 62283, 46631, 99606, 13678, 94137, 83339, 6565, 66611, 95726}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(200): Basarili" << endl;
    else cout << "Case(200): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_201(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 200);

    vector<int> myResult; 
    caseQueue.insert(5068,23611);
    caseQueue.updatePriority(5068, 95907);
    caseQueue.updatePriority(5068, 17077);
    caseQueue.insert(18333,8776);
    caseQueue.insert(85813,4191);
    caseQueue.updatePriority(5068, 19011);
    myResult.push_back(caseQueue.getPriority(5068)); //1
    caseQueue.insert(22715,63613);
    myResult.push_back(caseQueue.getPriority(5068)); //2
    myResult.push_back(caseQueue.getPriority(22715)); //3
    myResult.push_back(caseQueue.getPriority(5068)); //4
    caseQueue.updatePriority(85813, 83930);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(63237,80467);
    myResult.push_back(caseQueue.getPriority(85813)); //6
    caseQueue.updatePriority(63237, 1586);
    caseQueue.insert(70516,97440);
    caseQueue.insert(15013,92463);
    caseQueue.insert(52254,94806);
    caseQueue.insert(37577,66980);
    myResult.push_back(caseQueue.getPriority(52254)); //7
    caseQueue.updatePriority(15013, 16481);
    caseQueue.insert(5559,75621);
    myResult.push_back(caseQueue.getPriority(70516)); //8
    myResult.push_back(caseQueue.getPriority(22715)); //9
    caseQueue.insert(47877,43977);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(12267,79273);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(22911,2433);
    caseQueue.insert(43339,77308);
    caseQueue.insert(14610,83075);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(22715)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(70516, 63363);
    myResult.push_back(caseQueue.getPriority(12267)); //16
    myResult.push_back(caseQueue.getPriority(43339)); //17
    caseQueue.insert(17492,71649);
    caseQueue.insert(54480,59359);
    caseQueue.updatePriority(14610, 6299);
    caseQueue.insert(33313,20237);
    caseQueue.updatePriority(12267, 95555);
    caseQueue.updatePriority(17492, 390);
    caseQueue.insert(94705,69095);
    myResult.push_back(caseQueue.getPriority(54480)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(14610)); //20
    myResult.push_back(caseQueue.getPriority(14610)); //21
    caseQueue.insert(56413,45608);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(94705)); //23
    caseQueue.insert(83434,82543);
    caseQueue.updatePriority(54480, 22937);
    caseQueue.insert(56078,84865);
    caseQueue.insert(2704,38712);
    myResult.push_back(caseQueue.getPriority(56413)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(93062,80345);
    caseQueue.insert(37388,2946);
    myResult.push_back(caseQueue.getPriority(83434)); //27
    caseQueue.insert(18866,56534);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(93062, 98542);
    caseQueue.insert(35783,62820);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(37577)); //30
    caseQueue.insert(57300,86987);
    myResult.push_back(caseQueue.getPriority(43339)); //31
    caseQueue.insert(19466,18159);
    caseQueue.insert(4234,84211);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(59822,25636);
    caseQueue.insert(78843,87810);
    caseQueue.insert(93413,27618);
    caseQueue.insert(60193,39657);
    caseQueue.insert(50314,42202);
    myResult.push_back(caseQueue.getPriority(78843)); //34
    caseQueue.updatePriority(94705, 8768);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(5559, 69068);
    caseQueue.insert(50313,12430);
    caseQueue.insert(74456,35703);
    caseQueue.insert(66986,16755);
    caseQueue.updatePriority(37577, 3999);
    caseQueue.insert(1272,10749);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(4802,46978);
    caseQueue.insert(83809,34054);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(12267, 29117);
    myResult.push_back(caseQueue.getPriority(70516)); //38
    caseQueue.insert(58534,78695);
    caseQueue.insert(71789,62225);
    caseQueue.insert(10370,48882);
    myResult.push_back(caseQueue.getPriority(78843)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(4234)); //42
    caseQueue.insert(14267,67875);
    caseQueue.updatePriority(35783, 20063);
    caseQueue.updatePriority(52254, 80949);
    caseQueue.updatePriority(83809, 59057);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(71789)); //44
    myResult.push_back(caseQueue.getPriority(10370)); //45
    myResult.push_back(caseQueue.getPriority(4802)); //46
    caseQueue.insert(70186,28447);
    caseQueue.insert(79742,22296);
    caseQueue.insert(45677,80314);
    caseQueue.insert(81644,68641);
    caseQueue.updatePriority(5559, 15077);
    caseQueue.insert(20933,38272);
    caseQueue.insert(24821,34695);
    caseQueue.updatePriority(79742, 75943);
    myResult.push_back(caseQueue.getPriority(43339)); //47
    caseQueue.insert(54980,16958);
    myResult.push_back(caseQueue.getPriority(71789)); //48
    myResult.push_back(caseQueue.getPriority(22715)); //49
    caseQueue.insert(12177,50112);
    caseQueue.updatePriority(71789, 71974);
    caseQueue.insert(6480,57079);
    caseQueue.insert(86093,88480);
    caseQueue.updatePriority(86093, 59674);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(45677)); //51
    caseQueue.updatePriority(78843, 74309);
    caseQueue.updatePriority(57300, 7124);
    caseQueue.insert(90855,3228);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(13740,2757);
    myResult.push_back(caseQueue.getPriority(59822)); //53
    caseQueue.insert(34692,51224);
    caseQueue.insert(92590,60320);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(45962,73184);
    caseQueue.updatePriority(71789, 38070);
    myResult.push_back(caseQueue.getPriority(4234)); //56
    caseQueue.updatePriority(60193, 33787);
    caseQueue.updatePriority(12267, 71783);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(49616,5115);
    caseQueue.updatePriority(49616, 79990);
    caseQueue.insert(19612,28127);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(58534, 99618);
    myResult.push_back(caseQueue.getPriority(81644)); //59
    caseQueue.insert(50093,6228);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(27258,63172);
    caseQueue.updatePriority(14267, 57133);
    caseQueue.updatePriority(81644, 49690);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(86093)); //62
    myResult.push_back(caseQueue.getPriority(58534)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(12399,94728);
    caseQueue.updatePriority(20933, 85804);
    caseQueue.insert(40108,60816);
    caseQueue.insert(37496,7527);
    caseQueue.insert(78323,12708);
    caseQueue.updatePriority(50314, 61789);
    caseQueue.insert(37545,51815);
    caseQueue.insert(58396,26384);
    caseQueue.insert(1079,96666);
    caseQueue.insert(91645,67614);
    caseQueue.insert(40662,85160);
    caseQueue.insert(2525,28654);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(40108)); //66
    myResult.push_back(caseQueue.getPriority(37545)); //67
    caseQueue.updatePriority(74456, 8323);
    caseQueue.insert(2167,81936);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(7994,88118);
    caseQueue.insert(78787,24585);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(43089,26416);
    myResult.push_back(caseQueue.getPriority(2525)); //70
    caseQueue.updatePriority(20933, 65559);
    caseQueue.updatePriority(6480, 63015);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(75688,54313);
    caseQueue.insert(69700,34576);
    caseQueue.updatePriority(24821, 22019);
    caseQueue.insert(88980,53002);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.updatePriority(12399, 81905);
    caseQueue.insert(3806,57637);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(34692)); //74
    myResult.push_back(caseQueue.getPriority(75688)); //75
    caseQueue.insert(1553,66949);
    caseQueue.insert(52478,77747);
    caseQueue.updatePriority(43339, 4423);
    caseQueue.insert(16840,32067);
    static const int resultListArray[] = {19011, 19011, 63613, 19011, 18333, 83930, 94806, 97440, 63613, 63237, 15013, 22911, 5068, 63613, 47877, 79273, 77308, 59359, 17492, 6299, 6299, 14610, 69095, 45608, 33313, 54480, 82543, 37388, 2704, 66980, 77308, 19466, 56413, 87810, 94705, 37577, 1272, 63363, 87810, 50313, 66986, 84211, 35783, 62225, 48882, 46978, 77308, 62225, 63613, 5559, 80314, 90855, 25636, 13740, 57300, 84211, 54980, 59822, 68641, 50093, 93413, 59674, 99618, 19612, 37496, 60816, 51815, 74456, 78323, 28654, 78787, 24821, 58396, 51224, 54313}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(201): Basarili" << endl;
    else cout << "Case(201): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_202(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 138);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(6681,55339);
    caseQueue.updatePriority(6681, 2011);
    caseQueue.insert(29433,93699);
    caseQueue.insert(73840,27501);
    caseQueue.insert(41126,52795);
    caseQueue.insert(40073,11131);
    caseQueue.updatePriority(29433, 6962);
    myResult.push_back(caseQueue.getPriority(40073)); //2
    caseQueue.updatePriority(41126, 18888);
    myResult.push_back(caseQueue.getPriority(29433)); //3
    caseQueue.insert(16515,38443);
    caseQueue.insert(69000,1519);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(16515, 53641);
    myResult.push_back(caseQueue.getPriority(41126)); //5
    caseQueue.updatePriority(16515, 64321);
    caseQueue.insert(26569,87587);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(41126, 68431);
    myResult.push_back(caseQueue.getPriority(26569)); //8
    caseQueue.insert(12075,24016);
    caseQueue.insert(93732,76547);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(93732)); //11
    caseQueue.insert(13009,86642);
    myResult.push_back(caseQueue.getPriority(26569)); //12
    caseQueue.updatePriority(73840, 32814);
    caseQueue.updatePriority(41126, 69302);
    caseQueue.insert(11905,99108);
    caseQueue.insert(70166,75255);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(70166, 96529);
    caseQueue.insert(26123,7076);
    caseQueue.insert(22313,81837);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(48641,78711);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(22313)); //17
    caseQueue.insert(41868,80731);
    caseQueue.insert(66630,19728);
    caseQueue.insert(60149,54186);
    caseQueue.insert(52669,37277);
    myResult.push_back(caseQueue.getPriority(11905)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(11905, 86707);
    caseQueue.updatePriority(26569, 52456);
    myResult.push_back(caseQueue.getPriority(26569)); //20
    myResult.push_back(caseQueue.getPriority(11905)); //21
    caseQueue.updatePriority(70166, 51028);
    myResult.push_back(caseQueue.getPriority(93732)); //22
    caseQueue.insert(13447,47510);
    myResult.push_back(caseQueue.getPriority(22313)); //23
    caseQueue.updatePriority(13009, 96031);
    myResult.push_back(caseQueue.getPriority(11905)); //24
    caseQueue.insert(3268,1605);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(48641, 73161);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(41868)); //27
    caseQueue.updatePriority(93732, 9098);
    caseQueue.insert(97763,28970);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(95453,63936);
    caseQueue.insert(4781,79695);
    caseQueue.insert(35539,44829);
    caseQueue.insert(16562,2572);
    caseQueue.insert(99169,2918);
    caseQueue.insert(10215,5707);
    caseQueue.insert(72134,19);
    myResult.push_back(caseQueue.getPriority(72134)); //29
    caseQueue.updatePriority(13009, 91253);
    caseQueue.insert(41570,24749);
    caseQueue.insert(34938,15530);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(60149)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(89946,60691);
    myResult.push_back(caseQueue.getPriority(48641)); //34
    caseQueue.insert(32770,67281);
    caseQueue.insert(33072,47214);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(60149, 16391);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(35673,886);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(48641)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(6581,94806);
    caseQueue.insert(66406,49921);
    caseQueue.updatePriority(48641, 16892);
    caseQueue.updatePriority(41868, 73585);
    caseQueue.insert(71789,43807);
    caseQueue.insert(30835,55939);
    myResult.push_back(caseQueue.getPriority(71789)); //43
    caseQueue.insert(54115,16492);
    caseQueue.updatePriority(32770, 79432);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(53050,22124);
    caseQueue.insert(54416,93985);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(30835, 43160);
    myResult.push_back(caseQueue.getPriority(33072)); //46
    caseQueue.updatePriority(32770, 94604);
    caseQueue.insert(36228,54126);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(2003,76070);
    caseQueue.updatePriority(11905, 56606);
    myResult.push_back(caseQueue.getPriority(2003)); //48
    caseQueue.insert(47804,13662);
    caseQueue.insert(35250,33639);
    caseQueue.insert(13698,35132);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(26569)); //50
    caseQueue.insert(47804,30241);
    myResult.push_back(caseQueue.getPriority(2003)); //51
    caseQueue.insert(48220,49782);
    myResult.push_back(caseQueue.getPriority(13698)); //52
    caseQueue.updatePriority(71789, 87932);
    caseQueue.insert(44036,8217);
    caseQueue.updatePriority(44036, 5670);
    caseQueue.insert(17748,28702);
    caseQueue.insert(29105,55647);
    caseQueue.updatePriority(47804, 49287);
    myResult.push_back(caseQueue.getPriority(70166)); //53
    caseQueue.insert(18286,33);
    myResult.push_back(caseQueue.getPriority(2003)); //54
    caseQueue.insert(24400,63320);
    caseQueue.updatePriority(89946, 1248);
    caseQueue.updatePriority(13447, 47739);
    myResult.push_back(caseQueue.deleteMin()); //55
    static const int resultListArray[] = {-1, 11131, 6962, 69000, 18888, 6681, 29433, 87587, 40073, 12075, 76547, 87587, 73840, 16515, 26123, 41126, 81837, 99108, 66630, 52456, 86707, 76547, 81837, 86707, 3268, 52669, 80731, 93732, 19, 72134, 54186, 16562, 99169, 73161, 10215, 34938, 60149, 35673, 41570, 73161, 97763, 35539, 43807, 54115, 48641, 47214, 53050, 76070, 47804, 52456, 76070, 35132, 51028, 76070, 18286}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(202): Basarili" << endl;
    else cout << "Case(202): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_203(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 102);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(18499)); //1
    caseQueue.insert(8887,15211);
    caseQueue.insert(90598,29221);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(86236, 86979);
    caseQueue.insert(92213,1524);
    myResult.push_back(caseQueue.getPriority(92213)); //4
    caseQueue.updatePriority(92213, 13221);
    caseQueue.updatePriority(92213, 54049);
    caseQueue.updatePriority(92213, 5782);
    caseQueue.insert(21785,74273);
    caseQueue.updatePriority(92213, 93993);
    caseQueue.insert(82828,87338);
    myResult.push_back(caseQueue.getPriority(21785)); //5
    caseQueue.insert(77581,16937);
    caseQueue.insert(988,80754);
    caseQueue.insert(18675,47648);
    caseQueue.insert(53587,23920);
    caseQueue.insert(90276,74013);
    caseQueue.insert(29246,22506);
    myResult.push_back(caseQueue.getPriority(53587)); //6
    myResult.push_back(caseQueue.getPriority(29246)); //7
    caseQueue.updatePriority(29246, 29533);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(90276, 44745);
    caseQueue.updatePriority(988, 71308);
    myResult.push_back(caseQueue.getPriority(82828)); //9
    myResult.push_back(caseQueue.getPriority(988)); //10
    myResult.push_back(caseQueue.getPriority(988)); //11
    caseQueue.insert(55863,45500);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(988)); //13
    caseQueue.updatePriority(29246, 91285);
    caseQueue.updatePriority(21785, 98054);
    caseQueue.insert(1452,4212);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(90276)); //15
    myResult.push_back(caseQueue.getPriority(55863)); //16
    myResult.push_back(caseQueue.getPriority(55863)); //17
    caseQueue.insert(25688,64774);
    caseQueue.insert(61232,70698);
    caseQueue.insert(62559,14394);
    caseQueue.updatePriority(82828, 88953);
    myResult.push_back(caseQueue.getPriority(90276)); //18
    caseQueue.updatePriority(61232, 65765);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(6920,65298);
    caseQueue.updatePriority(6920, 34264);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(25688, 9764);
    caseQueue.updatePriority(18675, 43400);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(44340,32230);
    myResult.push_back(caseQueue.getPriority(44340)); //22
    myResult.push_back(caseQueue.getPriority(18675)); //23
    caseQueue.insert(10390,45609);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(4318,44389);
    caseQueue.updatePriority(988, 84184);
    myResult.push_back(caseQueue.getPriority(4318)); //25
    caseQueue.updatePriority(21785, 10747);
    myResult.push_back(caseQueue.getPriority(988)); //26
    myResult.push_back(caseQueue.getPriority(90276)); //27
    caseQueue.insert(98198,9096);
    caseQueue.updatePriority(98198, 29091);
    caseQueue.insert(45383,90090);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(24712,17569);
    caseQueue.updatePriority(10390, 38074);
    caseQueue.insert(84145,4563);
    caseQueue.updatePriority(29246, 31396);
    caseQueue.insert(91536,51598);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(6644,56662);
    myResult.push_back(caseQueue.getPriority(61232)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(34762,69801);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(76672,77798);
    caseQueue.updatePriority(34762, 19331);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(60406,28569);
    caseQueue.updatePriority(92213, 59337);
    caseQueue.insert(67884,49086);
    myResult.push_back(caseQueue.getPriority(82828)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(55863, 84164);
    caseQueue.insert(47674,77808);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(90276, 11325);
    myResult.push_back(caseQueue.getPriority(91536)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(76672)); //41
    myResult.push_back(caseQueue.getPriority(45383)); //42
    caseQueue.updatePriority(76672, 46108);
    caseQueue.insert(53337,70075);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(91536, 67835);
    static const int resultListArray[] = {-1, 8887, 90598, 1524, 74273, 23920, 22506, 77581, 87338, 71308, 71308, 53587, 71308, 1452, 44745, 45500, 45500, 44745, 62559, 6920, 25688, 32230, 43400, 44340, 44389, 84184, 44745, 21785, 84145, 24712, 65765, 98198, 29246, 34762, 88953, 60406, 10390, 18675, 51598, 90276, 77798, 90090, 4318, 76672}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(203): Basarili" << endl;
    else cout << "Case(203): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_204(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 183);

    vector<int> myResult; 
    caseQueue.insert(22558,72442);
    myResult.push_back(caseQueue.getPriority(22558)); //1
    myResult.push_back(caseQueue.getPriority(22558)); //2
    caseQueue.updatePriority(22558, 51573);
    myResult.push_back(caseQueue.getPriority(22558)); //3
    caseQueue.insert(5938,20701);
    caseQueue.updatePriority(5938, 77753);
    myResult.push_back(caseQueue.getPriority(5938)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(28447,34256);
    myResult.push_back(caseQueue.getPriority(5938)); //6
    caseQueue.insert(28958,95823);
    caseQueue.insert(18610,90544);
    caseQueue.insert(24721,66317);
    myResult.push_back(caseQueue.getPriority(5938)); //7
    caseQueue.updatePriority(5938, 75383);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(18610)); //9
    caseQueue.insert(85241,71497);
    myResult.push_back(caseQueue.getPriority(18610)); //10
    myResult.push_back(caseQueue.getPriority(5938)); //11
    myResult.push_back(caseQueue.getPriority(18610)); //12
    myResult.push_back(caseQueue.getPriority(28958)); //13
    caseQueue.updatePriority(28958, 42526);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(59562,48025);
    caseQueue.insert(37341,12824);
    caseQueue.insert(86707,56417);
    caseQueue.insert(25370,87742);
    myResult.push_back(caseQueue.getPriority(18610)); //16
    caseQueue.updatePriority(86707, 3917);
    myResult.push_back(caseQueue.getPriority(37341)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(25370, 37228);
    myResult.push_back(caseQueue.getPriority(25370)); //19
    caseQueue.insert(32480,61497);
    myResult.push_back(caseQueue.getPriority(85241)); //20
    caseQueue.updatePriority(37341, 3370);
    caseQueue.insert(88709,95134);
    caseQueue.insert(44241,68542);
    caseQueue.insert(81341,94711);
    caseQueue.insert(25204,81038);
    caseQueue.updatePriority(25370, 58321);
    myResult.push_back(caseQueue.getPriority(85241)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(5938)); //23
    caseQueue.insert(74895,18380);
    caseQueue.insert(72399,64638);
    myResult.push_back(caseQueue.getPriority(44241)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(72787,53230);
    caseQueue.insert(4954,21305);
    caseQueue.updatePriority(88709, 38453);
    caseQueue.updatePriority(25370, 23477);
    caseQueue.insert(21295,50667);
    caseQueue.insert(67809,12408);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(72669,12779);
    caseQueue.insert(58189,63694);
    myResult.push_back(caseQueue.getPriority(21295)); //27
    caseQueue.insert(82977,32888);
    caseQueue.updatePriority(25204, 96171);
    caseQueue.insert(82630,49523);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(36582,17268);
    myResult.push_back(caseQueue.getPriority(4954)); //29
    caseQueue.insert(13228,87738);
    caseQueue.updatePriority(36582, 78246);
    caseQueue.insert(46028,85397);
    myResult.push_back(caseQueue.getPriority(21295)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(9220,38059);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(1301,25634);
    caseQueue.insert(52430,25942);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(15163,77316);
    caseQueue.insert(85748,47431);
    caseQueue.updatePriority(85748, 49951);
    caseQueue.insert(71426,8667);
    myResult.push_back(caseQueue.getPriority(18610)); //35
    caseQueue.insert(38240,95364);
    caseQueue.insert(13431,26235);
    caseQueue.updatePriority(9220, 36361);
    myResult.push_back(caseQueue.getPriority(38240)); //36
    myResult.push_back(caseQueue.getPriority(85241)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(72399, 30933);
    caseQueue.insert(11078,58604);
    caseQueue.insert(96844,1616);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(38240, 26585);
    caseQueue.insert(74250,81118);
    caseQueue.updatePriority(72399, 3413);
    caseQueue.updatePriority(88709, 50162);
    myResult.push_back(caseQueue.getPriority(25204)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(15014,19532);
    caseQueue.insert(69510,28392);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(53313,87146);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(88709, 78075);
    myResult.push_back(caseQueue.getPriority(32480)); //45
    caseQueue.insert(71809,64702);
    caseQueue.insert(13654,73205);
    caseQueue.updatePriority(81341, 46356);
    caseQueue.updatePriority(59562, 20988);
    caseQueue.updatePriority(82630, 89158);
    caseQueue.insert(8857,77935);
    caseQueue.insert(26957,4033);
    caseQueue.insert(41709,36991);
    caseQueue.updatePriority(69510, 89348);
    myResult.push_back(caseQueue.getPriority(9220)); //46
    caseQueue.insert(26186,52874);
    myResult.push_back(caseQueue.getPriority(85241)); //47
    caseQueue.updatePriority(36582, 30593);
    caseQueue.insert(21204,82723);
    caseQueue.insert(51188,26887);
    caseQueue.insert(81303,72891);
    caseQueue.updatePriority(21295, 11373);
    caseQueue.updatePriority(59562, 21075);
    caseQueue.updatePriority(26186, 24150);
    caseQueue.updatePriority(69510, 77332);
    caseQueue.insert(40269,27116);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(42538,75889);
    caseQueue.insert(66302,43617);
    caseQueue.insert(11956,54366);
    myResult.push_back(caseQueue.getPriority(72787)); //49
    caseQueue.insert(24415,96869);
    caseQueue.insert(92947,83859);
    caseQueue.updatePriority(51188, 34940);
    myResult.push_back(caseQueue.getPriority(15163)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(42538)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(44223,93124);
    myResult.push_back(caseQueue.getPriority(25204)); //55
    caseQueue.updatePriority(71809, 4631);
    myResult.push_back(caseQueue.getPriority(8857)); //56
    caseQueue.insert(6663,20770);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(28649,3362);
    caseQueue.insert(99718,56817);
    caseQueue.updatePriority(74250, 6316);
    caseQueue.insert(87339,93654);
    myResult.push_back(caseQueue.getPriority(51188)); //59
    caseQueue.insert(94167,8963);
    myResult.push_back(caseQueue.getPriority(13228)); //60
    myResult.push_back(caseQueue.getPriority(8857)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(32730,71634);
    caseQueue.updatePriority(41709, 6199);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(42538)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(86360,49990);
    myResult.push_back(caseQueue.getPriority(88709)); //67
    caseQueue.insert(2313,94036);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(92947)); //69
    myResult.push_back(caseQueue.getPriority(15163)); //70
    caseQueue.insert(77343,95754);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(33562,96871);
    caseQueue.insert(27765,40865);
    caseQueue.insert(77272,62133);
    caseQueue.insert(62036,48779);
    myResult.push_back(caseQueue.getPriority(44223)); //72
    caseQueue.updatePriority(5938, 97335);
    caseQueue.insert(49159,3536);
    caseQueue.insert(660,43979);
    caseQueue.insert(5260,89104);
    caseQueue.updatePriority(82630, 47953);
    caseQueue.insert(66596,62642);
    caseQueue.insert(59461,45933);
    static const int resultListArray[] = {72442, 72442, 51573, 77753, 22558, 77753, 77753, 28447, 90544, 90544, 75383, 90544, 95823, 28958, 24721, 90544, 12824, 86707, 37228, 71497, 71497, 37341, 75383, 68542, 74895, 67809, 50667, 72669, 21305, 50667, 4954, 25370, 1301, 52430, 90544, 95364, 71497, 71426, 96844, 96171, 72399, 15014, 13431, 38240, 61497, 36361, 71497, 26957, 53230, 77316, 21295, 59562, 75889, 26186, 96171, 77935, 71809, 6663, 34940, 87738, 77935, 28649, 41709, 74250, 75889, 94167, 78075, 40269, 83859, 77316, 36582, 93124}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(204): Basarili" << endl;
    else cout << "Case(204): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_205(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 173);

    vector<int> myResult; 
    caseQueue.insert(63799,75412);
    caseQueue.updatePriority(63799, 8599);
    caseQueue.insert(2991,28288);
    caseQueue.updatePriority(63799, 42082);
    caseQueue.insert(39878,3018);
    caseQueue.insert(8727,39470);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(63799, 75213);
    caseQueue.insert(36826,54747);
    caseQueue.insert(77033,33480);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(77033)); //3
    myResult.push_back(caseQueue.getPriority(63799)); //4
    caseQueue.insert(49197,71630);
    caseQueue.updatePriority(8727, 12003);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(87143,10523);
    caseQueue.insert(13927,7732);
    caseQueue.updatePriority(49197, 82718);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(62546,85445);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(47223,82788);
    myResult.push_back(caseQueue.getPriority(47223)); //10
    myResult.push_back(caseQueue.getPriority(63799)); //11
    caseQueue.insert(21870,47648);
    caseQueue.updatePriority(47223, 68684);
    caseQueue.insert(38688,69609);
    myResult.push_back(caseQueue.getPriority(62546)); //12
    caseQueue.updatePriority(62546, 8356);
    myResult.push_back(caseQueue.getPriority(47223)); //13
    caseQueue.updatePriority(49197, 6643);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(59114,63341);
    caseQueue.insert(94456,35183);
    caseQueue.updatePriority(62546, 16753);
    caseQueue.insert(94891,34891);
    caseQueue.insert(81649,40839);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(21870)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(63858,12052);
    caseQueue.updatePriority(63858, 75287);
    myResult.push_back(caseQueue.getPriority(63858)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(8065,49902);
    caseQueue.insert(88752,35874);
    caseQueue.insert(49507,59848);
    myResult.push_back(caseQueue.getPriority(49507)); //20
    caseQueue.updatePriority(38688, 35439);
    caseQueue.insert(67387,94560);
    caseQueue.insert(81298,68783);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(63799)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(12619,74208);
    caseQueue.updatePriority(49507, 32847);
    caseQueue.insert(52699,86610);
    caseQueue.insert(10234,36936);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(47223, 31058);
    caseQueue.insert(34838,85095);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(96652,90608);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(14389,29711);
    caseQueue.insert(11473,95402);
    caseQueue.updatePriority(11473, 77039);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(84492,47061);
    caseQueue.insert(87075,7334);
    myResult.push_back(caseQueue.getPriority(52699)); //32
    myResult.push_back(caseQueue.getPriority(11473)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(83533,4130);
    myResult.push_back(caseQueue.getPriority(52699)); //36
    caseQueue.insert(14438,12837);
    myResult.push_back(caseQueue.getPriority(63799)); //37
    caseQueue.insert(45111,88995);
    caseQueue.insert(30727,99142);
    caseQueue.insert(43631,28737);
    myResult.push_back(caseQueue.getPriority(14438)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(3475,60465);
    caseQueue.updatePriority(81298, 42114);
    caseQueue.insert(420,22390);
    caseQueue.updatePriority(34838, 8563);
    caseQueue.updatePriority(34838, 82612);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(63799)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(63858)); //44
    caseQueue.insert(76410,31228);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(81298, 89588);
    myResult.push_back(caseQueue.getPriority(3475)); //46
    caseQueue.insert(5215,28737);
    caseQueue.insert(93129,79401);
    caseQueue.updatePriority(3475, 93260);
    myResult.push_back(caseQueue.getPriority(52699)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(96652)); //49
    myResult.push_back(caseQueue.getPriority(3475)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(52699, 15781);
    myResult.push_back(caseQueue.getPriority(96652)); //52
    caseQueue.insert(87490,13377);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(80486,69496);
    caseQueue.updatePriority(93129, 62679);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(26999,19489);
    caseQueue.insert(17846,13205);
    caseQueue.insert(62383,67795);
    caseQueue.insert(73117,85113);
    caseQueue.insert(19548,10380);
    caseQueue.insert(56389,90777);
    caseQueue.insert(83320,45311);
    myResult.push_back(caseQueue.getPriority(34838)); //56
    caseQueue.updatePriority(81298, 85047);
    caseQueue.insert(27692,69553);
    caseQueue.updatePriority(81298, 51661);
    caseQueue.insert(5659,65335);
    caseQueue.insert(69525,29374);
    caseQueue.insert(27972,87971);
    caseQueue.insert(5405,79566);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(86229,59968);
    caseQueue.updatePriority(17846, 66337);
    caseQueue.insert(87876,86356);
    caseQueue.insert(8867,85189);
    caseQueue.insert(43212,76175);
    myResult.push_back(caseQueue.getPriority(63799)); //58
    caseQueue.insert(75762,91214);
    myResult.push_back(caseQueue.getPriority(67387)); //59
    myResult.push_back(caseQueue.getPriority(86229)); //60
    myResult.push_back(caseQueue.getPriority(43212)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(69802,75715);
    caseQueue.insert(43092,94416);
    caseQueue.updatePriority(81298, 45385);
    caseQueue.updatePriority(62383, 73247);
    caseQueue.insert(47026,4111);
    caseQueue.updatePriority(75762, 99724);
    caseQueue.insert(64180,8408);
    caseQueue.insert(10001,34039);
    caseQueue.updatePriority(8867, 72462);
    caseQueue.updatePriority(30727, 33239);
    caseQueue.insert(24205,24997);
    caseQueue.insert(19244,86276);
    caseQueue.updatePriority(63799, 76382);
    caseQueue.insert(44698,86123);
    caseQueue.updatePriority(63799, 69360);
    myResult.push_back(caseQueue.getPriority(3475)); //63
    caseQueue.updatePriority(67387, 76481);
    caseQueue.insert(4223,93710);
    caseQueue.insert(17054,89323);
    myResult.push_back(caseQueue.getPriority(69525)); //64
    caseQueue.insert(58106,574);
    caseQueue.insert(52778,44052);
    caseQueue.updatePriority(4223, 29985);
    caseQueue.updatePriority(8867, 78951);
    caseQueue.insert(25347,55661);
    myResult.push_back(caseQueue.getPriority(69802)); //65
    static const int resultListArray[] = {39878, 2991, 33480, 75213, 8727, 13927, 87143, 77033, 36826, 82788, 75213, 85445, 68684, 49197, 62546, 47648, 94891, 75287, 94456, 59848, 38688, 75213, 88752, 81649, 21870, 49507, 47223, 10234, 8065, 14389, 59114, 86610, 77039, 87075, 84492, 86610, 75213, 12837, 83533, 14438, 420, 75213, 43631, 75287, 76410, 60465, 86610, 5215, 90608, 93260, 12619, 90608, 87490, 52699, 93129, 82612, 19548, 75213, 94560, 59968, 76175, 26999, 93260, 29374, 75715}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(205): Basarili" << endl;
    else cout << "Case(205): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_206(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 163);

    vector<int> myResult; 
    caseQueue.insert(4709,73655);
    myResult.push_back(caseQueue.getPriority(4709)); //1
    caseQueue.updatePriority(4709, 51090);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(33258,7547);
    caseQueue.insert(5802,98147);
    caseQueue.insert(82958,90602);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(10630,27074);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(5802, 50496);
    caseQueue.insert(15010,68573);
    caseQueue.updatePriority(82958, 6484);
    caseQueue.insert(5730,69718);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(15010)); //6
    myResult.push_back(caseQueue.getPriority(5730)); //7
    caseQueue.insert(43646,36520);
    caseQueue.insert(5096,36000);
    caseQueue.insert(75012,50166);
    caseQueue.insert(34706,60547);
    caseQueue.insert(38632,85560);
    caseQueue.insert(61538,751);
    caseQueue.updatePriority(34706, 71726);
    caseQueue.updatePriority(61538, 82557);
    caseQueue.insert(42418,1436);
    caseQueue.insert(48784,62791);
    myResult.push_back(caseQueue.getPriority(75012)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(48784)); //10
    myResult.push_back(caseQueue.getPriority(34706)); //11
    caseQueue.updatePriority(61538, 27512);
    myResult.push_back(caseQueue.getPriority(34706)); //12
    caseQueue.insert(66753,26511);
    caseQueue.insert(89865,24098);
    caseQueue.updatePriority(43646, 1927);
    caseQueue.insert(87599,29092);
    caseQueue.updatePriority(38632, 89021);
    myResult.push_back(caseQueue.getPriority(89865)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(15010)); //15
    caseQueue.insert(66917,11380);
    caseQueue.insert(21039,39180);
    caseQueue.updatePriority(66753, 35641);
    caseQueue.insert(80089,1663);
    caseQueue.insert(22510,97471);
    caseQueue.updatePriority(66917, 37321);
    caseQueue.insert(23097,64712);
    caseQueue.insert(71330,1821);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(87599)); //17
    myResult.push_back(caseQueue.getPriority(21039)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(23097)); //20
    myResult.push_back(caseQueue.getPriority(23097)); //21
    caseQueue.insert(46863,47300);
    myResult.push_back(caseQueue.getPriority(38632)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(83534,88427);
    caseQueue.updatePriority(21039, 85266);
    caseQueue.updatePriority(21039, 67375);
    caseQueue.updatePriority(48784, 71722);
    caseQueue.insert(44000,99874);
    caseQueue.insert(77873,94366);
    caseQueue.insert(46174,32677);
    caseQueue.updatePriority(66917, 86276);
    caseQueue.insert(31364,91613);
    caseQueue.insert(76523,35089);
    myResult.push_back(caseQueue.getPriority(66753)); //24
    caseQueue.insert(92613,4078);
    caseQueue.updatePriority(83534, 63302);
    myResult.push_back(caseQueue.getPriority(22510)); //25
    caseQueue.insert(229,61708);
    caseQueue.updatePriority(5730, 62200);
    caseQueue.updatePriority(76523, 19505);
    caseQueue.insert(60949,84105);
    caseQueue.insert(93293,39432);
    myResult.push_back(caseQueue.getPriority(66753)); //26
    myResult.push_back(caseQueue.getPriority(5730)); //27
    caseQueue.insert(60316,8356);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(81497,29184);
    caseQueue.insert(35479,96821);
    caseQueue.insert(49939,67588);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(75444,27830);
    myResult.push_back(caseQueue.getPriority(49939)); //32
    myResult.push_back(caseQueue.getPriority(23097)); //33
    caseQueue.insert(30493,26786);
    myResult.push_back(caseQueue.getPriority(75444)); //34
    caseQueue.updatePriority(93293, 2074);
    myResult.push_back(caseQueue.getPriority(49939)); //35
    caseQueue.updatePriority(60949, 55505);
    caseQueue.updatePriority(77873, 37304);
    caseQueue.updatePriority(49939, 73404);
    caseQueue.insert(93883,71600);
    caseQueue.updatePriority(30493, 78092);
    caseQueue.updatePriority(75444, 80304);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(5096)); //38
    caseQueue.insert(18565,87182);
    caseQueue.insert(59992,76655);
    caseQueue.insert(17679,26598);
    caseQueue.updatePriority(60949, 52405);
    myResult.push_back(caseQueue.getPriority(75012)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(60949)); //41
    caseQueue.updatePriority(23097, 98009);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(25023,94515);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(87006,80212);
    caseQueue.updatePriority(35479, 78670);
    myResult.push_back(caseQueue.getPriority(18565)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(47706,85644);
    caseQueue.insert(16534,21398);
    caseQueue.insert(79980,92443);
    caseQueue.insert(21580,27757);
    caseQueue.updatePriority(48784, 33970);
    caseQueue.updatePriority(47706, 48836);
    caseQueue.insert(42111,87743);
    myResult.push_back(caseQueue.getPriority(22510)); //47
    caseQueue.insert(21735,61573);
    caseQueue.insert(36832,34199);
    caseQueue.insert(78314,89209);
    caseQueue.updatePriority(21735, 68885);
    caseQueue.insert(28169,92493);
    caseQueue.updatePriority(75444, 3230);
    myResult.push_back(caseQueue.getPriority(49939)); //48
    caseQueue.insert(79641,34156);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(75012)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(229, 6838);
    caseQueue.updatePriority(75012, 22033);
    caseQueue.insert(31670,65135);
    myResult.push_back(caseQueue.getPriority(5802)); //52
    caseQueue.updatePriority(34706, 66822);
    caseQueue.insert(54522,53022);
    caseQueue.updatePriority(49939, 87299);
    myResult.push_back(caseQueue.getPriority(21580)); //53
    myResult.push_back(caseQueue.getPriority(83534)); //54
    caseQueue.insert(67401,3753);
    caseQueue.insert(80310,43597);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(79980)); //56
    caseQueue.insert(43347,26714);
    caseQueue.insert(18322,38773);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(47908,52713);
    myResult.push_back(caseQueue.getPriority(5730)); //61
    caseQueue.insert(31385,46294);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(28169, 42772);
    caseQueue.updatePriority(31364, 9125);
    static const int resultListArray[] = {73655, 4709, 33258, 10630, 82958, 68573, 69718, 50166, 42418, 62791, 71726, 71726, 24098, 43646, 68573, 80089, 29092, 39180, 71330, 64712, 64712, 89021, 89865, 35641, 97471, 35641, 62200, 92613, 60316, 76523, 61538, 67588, 64712, 27830, 67588, 93293, 87599, 36000, 50166, 17679, 52405, 81497, 46174, 66753, 87182, 5096, 97471, 73404, 75444, 50166, 16534, 50496, 27757, 63302, 67401, 92443, 229, 75012, 43347, 21580, 62200, 48784}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(206): Basarili" << endl;
    else cout << "Case(206): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_207(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 220);

    vector<int> myResult; 
    caseQueue.updatePriority(87235, 150);
    myResult.push_back(caseQueue.getPriority(86859)); //1
    caseQueue.insert(47696,315);
    myResult.push_back(caseQueue.getPriority(47696)); //2
    caseQueue.insert(93502,19033);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(93502, 79231);
    caseQueue.insert(88272,8414);
    caseQueue.updatePriority(88272, 49684);
    caseQueue.updatePriority(88272, 46092);
    caseQueue.insert(91894,66357);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(93502, 98990);
    myResult.push_back(caseQueue.getPriority(93502)); //6
    caseQueue.insert(44984,86609);
    caseQueue.updatePriority(93502, 30286);
    myResult.push_back(caseQueue.getPriority(44984)); //7
    caseQueue.updatePriority(44984, 71940);
    caseQueue.insert(3406,42313);
    caseQueue.updatePriority(44984, 75344);
    caseQueue.updatePriority(93502, 39281);
    myResult.push_back(caseQueue.getPriority(93502)); //8
    caseQueue.updatePriority(93502, 71615);
    caseQueue.insert(99546,58220);
    caseQueue.insert(72958,94556);
    caseQueue.updatePriority(3406, 59533);
    caseQueue.insert(89260,63666);
    myResult.push_back(caseQueue.getPriority(72958)); //9
    caseQueue.insert(41232,65336);
    caseQueue.insert(50997,91625);
    myResult.push_back(caseQueue.getPriority(41232)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(41232)); //12
    caseQueue.updatePriority(50997, 62155);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(36035,22907);
    caseQueue.updatePriority(93502, 64502);
    caseQueue.updatePriority(41232, 85027);
    myResult.push_back(caseQueue.getPriority(36035)); //14
    caseQueue.updatePriority(93502, 77799);
    myResult.push_back(caseQueue.getPriority(44984)); //15
    caseQueue.updatePriority(50997, 58498);
    caseQueue.updatePriority(50997, 57897);
    caseQueue.insert(82372,31222);
    caseQueue.insert(34741,18648);
    caseQueue.insert(80690,68146);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(66629,51399);
    caseQueue.insert(75128,53972);
    caseQueue.insert(63879,69847);
    caseQueue.updatePriority(66629, 34795);
    myResult.push_back(caseQueue.getPriority(36035)); //17
    caseQueue.insert(27614,43071);
    caseQueue.insert(17588,61591);
    myResult.push_back(caseQueue.getPriority(17588)); //18
    caseQueue.updatePriority(50997, 66986);
    caseQueue.insert(77141,34464);
    caseQueue.updatePriority(82372, 63400);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(72958)); //22
    myResult.push_back(caseQueue.getPriority(72958)); //23
    caseQueue.insert(83126,99050);
    myResult.push_back(caseQueue.getPriority(75128)); //24
    caseQueue.updatePriority(80690, 66110);
    caseQueue.insert(6984,98612);
    caseQueue.updatePriority(80690, 32325);
    myResult.push_back(caseQueue.getPriority(63879)); //25
    caseQueue.insert(75044,80308);
    caseQueue.insert(64052,94810);
    caseQueue.updatePriority(17588, 68515);
    caseQueue.insert(1458,92885);
    myResult.push_back(caseQueue.getPriority(75044)); //26
    caseQueue.updatePriority(83126, 69715);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(89260)); //28
    caseQueue.insert(65800,85546);
    caseQueue.updatePriority(82372, 66301);
    caseQueue.insert(90510,73073);
    caseQueue.insert(89568,82466);
    caseQueue.updatePriority(6984, 42916);
    caseQueue.insert(29522,33687);
    myResult.push_back(caseQueue.getPriority(44984)); //29
    caseQueue.insert(98242,11110);
    caseQueue.insert(35163,89518);
    myResult.push_back(caseQueue.getPriority(64052)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(45763,54220);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(76007,35882);
    myResult.push_back(caseQueue.getPriority(44984)); //34
    caseQueue.updatePriority(90510, 54081);
    caseQueue.insert(89982,47120);
    myResult.push_back(caseQueue.getPriority(89982)); //35
    caseQueue.insert(70912,86098);
    caseQueue.updatePriority(64052, 21186);
    caseQueue.updatePriority(72958, 31685);
    caseQueue.insert(49094,34292);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(395,17107);
    caseQueue.insert(66087,20561);
    caseQueue.updatePriority(89260, 97181);
    caseQueue.updatePriority(66087, 10117);
    caseQueue.insert(85415,87483);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(76007)); //38
    caseQueue.insert(19180,50518);
    caseQueue.updatePriority(63879, 92712);
    caseQueue.updatePriority(75128, 554);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(96979,82643);
    myResult.push_back(caseQueue.getPriority(70912)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(27614, 56809);
    caseQueue.insert(65359,4069);
    myResult.push_back(caseQueue.getPriority(1458)); //42
    myResult.push_back(caseQueue.getPriority(75044)); //43
    caseQueue.insert(55989,64092);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(85402,71523);
    caseQueue.updatePriority(35163, 47290);
    myResult.push_back(caseQueue.getPriority(63879)); //45
    caseQueue.insert(95175,72993);
    caseQueue.updatePriority(55989, 4320);
    caseQueue.insert(89182,19995);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(19180, 18912);
    caseQueue.updatePriority(89982, 80641);
    caseQueue.insert(72020,98547);
    caseQueue.insert(58743,91805);
    caseQueue.updatePriority(19180, 74212);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(89260)); //48
    caseQueue.insert(4913,92162);
    myResult.push_back(caseQueue.getPriority(19180)); //49
    caseQueue.updatePriority(58743, 80736);
    caseQueue.insert(32026,34132);
    caseQueue.updatePriority(65800, 75901);
    caseQueue.insert(58217,76389);
    caseQueue.updatePriority(89260, 92467);
    caseQueue.insert(61832,78241);
    caseQueue.insert(61106,94052);
    myResult.push_back(caseQueue.getPriority(45763)); //50
    myResult.push_back(caseQueue.getPriority(27614)); //51
    caseQueue.insert(79768,37340);
    caseQueue.updatePriority(35163, 32398);
    caseQueue.insert(66761,54525);
    caseQueue.insert(15398,56073);
    myResult.push_back(caseQueue.getPriority(50997)); //52
    myResult.push_back(caseQueue.getPriority(70912)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(10182,42422);
    caseQueue.insert(72697,83163);
    caseQueue.insert(17370,10123);
    caseQueue.insert(7875,59513);
    caseQueue.updatePriority(19180, 87534);
    caseQueue.insert(15103,68287);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(94826,84509);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(63056,46973);
    caseQueue.updatePriority(50997, 69751);
    myResult.push_back(caseQueue.getPriority(1458)); //59
    caseQueue.updatePriority(96979, 2019);
    caseQueue.insert(90785,93302);
    caseQueue.insert(36894,92740);
    myResult.push_back(caseQueue.getPriority(72697)); //60
    caseQueue.insert(25998,39810);
    caseQueue.insert(30273,570);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(63056)); //62
    caseQueue.updatePriority(89982, 60441);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(52557,76047);
    caseQueue.insert(26910,95024);
    caseQueue.insert(95981,29131);
    myResult.push_back(caseQueue.getPriority(90510)); //66
    myResult.push_back(caseQueue.getPriority(90510)); //67
    caseQueue.updatePriority(82372, 52001);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(81064,66847);
    caseQueue.insert(11124,98144);
    caseQueue.updatePriority(63056, 93211);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(58955,53777);
    myResult.push_back(caseQueue.getPriority(26910)); //70
    myResult.push_back(caseQueue.getPriority(65800)); //71
    myResult.push_back(caseQueue.getPriority(45763)); //72
    myResult.push_back(caseQueue.getPriority(95175)); //73
    caseQueue.insert(12573,59202);
    caseQueue.insert(85440,98969);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(65262,27536);
    caseQueue.insert(91293,6749);
    caseQueue.insert(50375,40336);
    myResult.push_back(caseQueue.getPriority(66761)); //76
    caseQueue.updatePriority(26910, 62595);
    caseQueue.insert(30014,16609);
    caseQueue.updatePriority(72697, 52409);
    caseQueue.insert(53659,55421);
    myResult.push_back(caseQueue.getPriority(19180)); //77
    myResult.push_back(caseQueue.getPriority(65800)); //78
    caseQueue.updatePriority(89568, 11878);
    caseQueue.updatePriority(7875, 28802);
    caseQueue.updatePriority(15103, 70382);
    caseQueue.updatePriority(89982, 25310);
    caseQueue.insert(46590,48437);
    caseQueue.insert(24763,81576);
    caseQueue.insert(16982,87819);
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(94826)); //80
    myResult.push_back(caseQueue.getPriority(65262)); //81
    static const int resultListArray[] = {-1, 315, 47696, 88272, 91894, 98990, 86609, 39281, 94556, 65336, 99546, 65336, 3406, 22907, 75344, 34741, 22907, 61591, 36035, 77141, 66629, 94556, 94556, 53972, 69847, 80308, 80690, 63666, 75344, 94810, 98242, 29522, 6984, 75344, 47120, 64052, 66087, 35882, 75128, 86098, 395, 92885, 80308, 65359, 92712, 55989, 89182, 97181, 74212, 54220, 56809, 66986, 86098, 72958, 17370, 35163, 32026, 49094, 92885, 83163, 30273, 46973, 96979, 76007, 79768, 54081, 54081, 95981, 25998, 95024, 75901, 54220, 72993, 10182, 82372, 54525, 87534, 75901, 91293, 84509, 27536}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(207): Basarili" << endl;
    else cout << "Case(207): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_208(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 165);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(60179)); //1
    caseQueue.updatePriority(35579, 86568);
    caseQueue.insert(39317,60593);
    caseQueue.insert(60648,5631);
    caseQueue.insert(91517,57830);
    myResult.push_back(caseQueue.getPriority(39317)); //2
    myResult.push_back(caseQueue.getPriority(39317)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(26115,12064);
    caseQueue.insert(82730,30324);
    caseQueue.updatePriority(26115, 60765);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(69170,40163);
    caseQueue.updatePriority(69170, 55115);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(16789,4303);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(26115)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(33376,23376);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(26115)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(14292,57279);
    caseQueue.insert(44357,27346);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(14292, 94071);
    caseQueue.updatePriority(14292, 82215);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(45421,93685);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(19677, 56334);
    myResult.push_back(caseQueue.getPriority(12799)); //18
    caseQueue.insert(14732,57638);
    caseQueue.insert(80508,58323);
    caseQueue.updatePriority(80508, 97707);
    caseQueue.updatePriority(14732, 50647);
    caseQueue.insert(63578,16242);
    caseQueue.insert(52272,58405);
    caseQueue.updatePriority(52272, 76728);
    myResult.push_back(caseQueue.getPriority(80508)); //19
    caseQueue.insert(57388,18136);
    caseQueue.insert(33771,31608);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(52272, 89234);
    caseQueue.insert(32100,56457);
    caseQueue.insert(58204,5745);
    caseQueue.updatePriority(80508, 31609);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(14732)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(80508)); //24
    caseQueue.updatePriority(32100, 16391);
    caseQueue.insert(25928,41188);
    myResult.push_back(caseQueue.getPriority(33771)); //25
    caseQueue.insert(34545,55605);
    caseQueue.insert(37896,30293);
    caseQueue.insert(43200,91461);
    caseQueue.insert(83158,92513);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(67761,20440);
    caseQueue.insert(74963,38058);
    caseQueue.insert(76356,96217);
    caseQueue.insert(58184,48645);
    caseQueue.insert(67844,14598);
    caseQueue.insert(30478,24036);
    caseQueue.insert(19794,83579);
    caseQueue.updatePriority(14732, 33311);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(19794)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(37896, 45818);
    caseQueue.insert(92402,8545);
    caseQueue.updatePriority(52272, 3667);
    caseQueue.insert(80781,90491);
    caseQueue.insert(94911,88476);
    myResult.push_back(caseQueue.getPriority(37896)); //30
    caseQueue.updatePriority(30478, 70306);
    caseQueue.insert(47964,63085);
    caseQueue.insert(74692,3380);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(47964, 25484);
    myResult.push_back(caseQueue.getPriority(19794)); //32
    caseQueue.insert(66980,43339);
    caseQueue.insert(2090,73110);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(33771)); //34
    caseQueue.updatePriority(14732, 58054);
    myResult.push_back(caseQueue.getPriority(66980)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(33771, 41386);
    caseQueue.updatePriority(25928, 5538);
    caseQueue.insert(90536,62271);
    caseQueue.insert(17403,50022);
    myResult.push_back(caseQueue.getPriority(30478)); //37
    caseQueue.insert(56899,58030);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(90536, 95704);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(17438,45867);
    myResult.push_back(caseQueue.getPriority(37896)); //40
    myResult.push_back(caseQueue.getPriority(30478)); //41
    caseQueue.insert(93182,93958);
    caseQueue.updatePriority(30478, 15026);
    myResult.push_back(caseQueue.getPriority(43200)); //42
    caseQueue.insert(22966,78933);
    caseQueue.insert(23201,21989);
    myResult.push_back(caseQueue.getPriority(33771)); //43
    caseQueue.insert(99239,67764);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(17438)); //45
    caseQueue.insert(47270,84045);
    myResult.push_back(caseQueue.getPriority(76356)); //46
    caseQueue.updatePriority(34545, 7005);
    caseQueue.updatePriority(94911, 26170);
    caseQueue.insert(99725,20260);
    caseQueue.insert(67501,97562);
    myResult.push_back(caseQueue.getPriority(80781)); //47
    caseQueue.insert(33326,49580);
    caseQueue.updatePriority(99239, 71283);
    myResult.push_back(caseQueue.getPriority(17403)); //48
    caseQueue.updatePriority(23201, 5405);
    caseQueue.insert(39311,82633);
    caseQueue.insert(92788,71488);
    caseQueue.updatePriority(99725, 77914);
    caseQueue.insert(24741,37231);
    myResult.push_back(caseQueue.getPriority(17438)); //49
    caseQueue.insert(85849,5035);
    caseQueue.insert(35874,7747);
    caseQueue.insert(19560,42915);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(82415,60127);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(87788,80979);
    caseQueue.updatePriority(33771, 14242);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(76356, 32969);
    caseQueue.insert(58168,18799);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(15638,81345);
    caseQueue.insert(47330,25675);
    caseQueue.insert(95587,29798);
    caseQueue.insert(94789,95651);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(17403)); //58
    caseQueue.insert(48167,93840);
    caseQueue.insert(27420,4923);
    myResult.push_back(caseQueue.getPriority(56899)); //59
    caseQueue.updatePriority(2090, 27345);
    caseQueue.insert(12556,97549);
    caseQueue.insert(1419,64190);
    caseQueue.insert(56019,6226);
    myResult.push_back(caseQueue.getPriority(94789)); //60
    caseQueue.updatePriority(99725, 612);
    caseQueue.updatePriority(39311, 90297);
    caseQueue.updatePriority(82415, 26362);
    caseQueue.insert(11184,38303);
    caseQueue.insert(77383,9413);
    caseQueue.insert(37971,83800);
    caseQueue.updatePriority(43200, 44923);
    static const int resultListArray[] = {-1, 60593, 60593, 60648, 82730, 91517, 69170, 16789, 60765, 39317, 33376, 60765, 26115, 44357, 14292, 45421, -1, -1, 97707, 63578, 58204, 50647, 57388, 31609, 31608, 32100, 67844, 83579, 67761, 45818, 74692, 83579, 52272, 31608, 43339, 92402, 70306, 25928, 47964, 45818, 70306, 91461, 41386, 30478, 45867, 96217, 90491, 50022, 45867, 85849, 23201, 34545, 35874, 33771, 58168, 94911, 47330, 50022, 58030, 95651}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(208): Basarili" << endl;
    else cout << "Case(208): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_209(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 187);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(10081,95917);
    caseQueue.insert(89249,26348);
    caseQueue.insert(89097,76031);
    myResult.push_back(caseQueue.getPriority(89249)); //2
    caseQueue.insert(92569,43894);
    caseQueue.updatePriority(10081, 64657);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(18377,45929);
    caseQueue.insert(27850,21604);
    myResult.push_back(caseQueue.getPriority(18377)); //4
    caseQueue.insert(17572,29729);
    myResult.push_back(caseQueue.getPriority(27850)); //5
    myResult.push_back(caseQueue.getPriority(18377)); //6
    caseQueue.updatePriority(92569, 67854);
    caseQueue.insert(11645,82722);
    caseQueue.updatePriority(92569, 65877);
    caseQueue.insert(11701,96677);
    caseQueue.insert(6092,71521);
    caseQueue.insert(69013,83278);
    myResult.push_back(caseQueue.getPriority(89097)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(89972,25357);
    myResult.push_back(caseQueue.getPriority(18377)); //10
    caseQueue.insert(64919,13895);
    myResult.push_back(caseQueue.getPriority(69013)); //11
    myResult.push_back(caseQueue.getPriority(6092)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(69013)); //14
    caseQueue.updatePriority(89097, 58831);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(52800,30270);
    caseQueue.updatePriority(69013, 26196);
    myResult.push_back(caseQueue.getPriority(92569)); //16
    caseQueue.updatePriority(69013, 40857);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(11645, 46525);
    caseQueue.insert(5190,30602);
    caseQueue.insert(48126,52465);
    myResult.push_back(caseQueue.getPriority(11701)); //19
    caseQueue.insert(80412,39105);
    caseQueue.insert(73276,74929);
    myResult.push_back(caseQueue.getPriority(89097)); //20
    caseQueue.updatePriority(5190, 78245);
    caseQueue.insert(84897,42444);
    caseQueue.updatePriority(10081, 70370);
    caseQueue.insert(27016,66124);
    caseQueue.insert(58000,44171);
    myResult.push_back(caseQueue.getPriority(73276)); //21
    caseQueue.insert(26841,94535);
    caseQueue.insert(22640,77555);
    caseQueue.insert(64440,67950);
    caseQueue.updatePriority(73276, 42797);
    caseQueue.updatePriority(89097, 44779);
    caseQueue.updatePriority(6092, 38083);
    caseQueue.insert(83779,96778);
    caseQueue.insert(71036,93483);
    caseQueue.insert(53254,86481);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(59355,71635);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(85641,44984);
    caseQueue.updatePriority(89097, 85933);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(27016)); //26
    caseQueue.insert(49558,44108);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(13137,77038);
    caseQueue.insert(58069,50043);
    caseQueue.insert(37758,63067);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(17719,507);
    caseQueue.insert(15162,48830);
    caseQueue.updatePriority(18377, 96048);
    myResult.push_back(caseQueue.getPriority(13137)); //30
    caseQueue.insert(80203,91340);
    caseQueue.insert(55875,75255);
    caseQueue.updatePriority(64440, 8418);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(10081)); //32
    caseQueue.insert(2549,9592);
    caseQueue.insert(12121,54907);
    caseQueue.insert(82429,23980);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(11701, 67840);
    myResult.push_back(caseQueue.getPriority(26841)); //34
    caseQueue.updatePriority(13137, 78601);
    caseQueue.updatePriority(10081, 27086);
    caseQueue.updatePriority(55875, 36158);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(11701)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(15162, 12043);
    caseQueue.insert(64814,2232);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(86758,69317);
    myResult.push_back(caseQueue.getPriority(22640)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.getPriority(48126)); //41
    caseQueue.insert(52896,6814);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(7051,82186);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(84799,39275);
    caseQueue.insert(24117,35846);
    caseQueue.insert(91408,43239);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(89097, 98479);
    caseQueue.insert(45429,28047);
    caseQueue.insert(71070,9697);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(15488,63567);
    myResult.push_back(caseQueue.getPriority(15488)); //46
    caseQueue.updatePriority(84799, 30534);
    myResult.push_back(caseQueue.getPriority(71036)); //47
    caseQueue.insert(28950,35623);
    caseQueue.insert(84757,94591);
    caseQueue.updatePriority(27016, 16965);
    caseQueue.insert(88117,21593);
    caseQueue.updatePriority(22640, 78792);
    caseQueue.insert(83312,16573);
    myResult.push_back(caseQueue.getPriority(86758)); //48
    caseQueue.insert(96291,51887);
    caseQueue.insert(72268,50190);
    caseQueue.insert(96090,1360);
    myResult.push_back(caseQueue.getPriority(80203)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(45018,52492);
    caseQueue.insert(19483,66637);
    caseQueue.insert(900,10426);
    caseQueue.insert(3692,41024);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(86758)); //52
    caseQueue.insert(79025,99838);
    caseQueue.insert(5886,9419);
    caseQueue.updatePriority(53254, 29564);
    caseQueue.insert(27249,26969);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(42620,56191);
    caseQueue.updatePriority(18377, 46032);
    caseQueue.insert(62915,96062);
    caseQueue.insert(11461,41482);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(72827,16540);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(92569)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(12121, 54971);
    caseQueue.insert(58731,66072);
    myResult.push_back(caseQueue.getPriority(45018)); //59
    caseQueue.insert(5981,40319);
    caseQueue.updatePriority(58731, 72071);
    myResult.push_back(caseQueue.getPriority(72268)); //60
    myResult.push_back(caseQueue.getPriority(89097)); //61
    myResult.push_back(caseQueue.getPriority(19483)); //62
    caseQueue.insert(4937,19115);
    caseQueue.updatePriority(7051, 44140);
    myResult.push_back(caseQueue.getPriority(3692)); //63
    caseQueue.updatePriority(86758, 49216);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(5190)); //65
    caseQueue.insert(37572,56322);
    caseQueue.updatePriority(62915, 20177);
    caseQueue.updatePriority(79025, 86806);
    caseQueue.insert(63949,923);
    caseQueue.updatePriority(48126, 64974);
    caseQueue.updatePriority(48126, 11139);
    myResult.push_back(caseQueue.getPriority(48126)); //66
    myResult.push_back(caseQueue.getPriority(71036)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(3692, 10913);
    myResult.push_back(caseQueue.getPriority(80203)); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(85777,28818);
    caseQueue.insert(60172,54055);
    myResult.push_back(caseQueue.getPriority(45429)); //71
    caseQueue.insert(19839,11725);
    caseQueue.insert(82097,37680);
    caseQueue.insert(57200,61545);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(81980,19353);
    caseQueue.updatePriority(37572, 44285);
    static const int resultListArray[] = {-1, 26348, 89249, 45929, 21604, 45929, 76031, 27850, 17572, 45929, 83278, 71521, 64919, 83278, 89972, 65877, 52800, 69013, 96677, 58831, 74929, 6092, 80412, 84897, 73276, 66124, 49558, 58000, 85641, 77038, 17719, 70370, 64440, 94535, 2549, 67840, 82429, 64814, 77555, 15162, 52465, 52896, 10081, 24117, 71070, 63567, 93483, 69317, 91340, 96090, 900, 69317, 5886, 83312, 27016, 72827, 65877, 88117, 52492, 50190, 98479, 66637, 41024, 4937, 78245, 11139, 93483, 63949, 91340, 3692, 28047, 48126}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(209): Basarili" << endl;
    else cout << "Case(209): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_210(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 229);

    vector<int> myResult; 
    caseQueue.insert(45344,36793);
    caseQueue.updatePriority(45344, 7576);
    caseQueue.insert(98842,62308);
    myResult.push_back(caseQueue.getPriority(98842)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(18267,7093);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(22292,39362);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(98842, 54674);
    caseQueue.insert(32895,56735);
    caseQueue.insert(60405,82688);
    myResult.push_back(caseQueue.getPriority(32895)); //5
    caseQueue.insert(57975,10633);
    caseQueue.insert(61612,1639);
    myResult.push_back(caseQueue.getPriority(61612)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(3323,39418);
    caseQueue.insert(94965,21232);
    caseQueue.insert(55496,70676);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(3323)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(50513,76951);
    myResult.push_back(caseQueue.getPriority(3323)); //11
    caseQueue.updatePriority(3323, 64847);
    caseQueue.updatePriority(98842, 98455);
    caseQueue.insert(21479,30543);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(92735,1774);
    myResult.push_back(caseQueue.getPriority(98842)); //14
    caseQueue.insert(14260,65611);
    myResult.push_back(caseQueue.getPriority(60405)); //15
    caseQueue.updatePriority(14260, 89697);
    caseQueue.updatePriority(55496, 83542);
    caseQueue.insert(81264,65168);
    caseQueue.updatePriority(55496, 49414);
    caseQueue.insert(34536,69453);
    caseQueue.insert(76455,31709);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(81264)); //17
    caseQueue.updatePriority(34536, 34212);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(64785,81892);
    myResult.push_back(caseQueue.getPriority(34536)); //19
    caseQueue.updatePriority(64785, 8769);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(81264)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(60405)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(79753,35626);
    myResult.push_back(caseQueue.getPriority(60405)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(50513, 6405);
    caseQueue.insert(9246,95092);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(98842, 99158);
    caseQueue.updatePriority(9246, 63773);
    myResult.push_back(caseQueue.getPriority(98842)); //31
    myResult.push_back(caseQueue.getPriority(9246)); //32
    caseQueue.insert(84377,61010);
    caseQueue.insert(82901,93492);
    caseQueue.insert(27350,13773);
    myResult.push_back(caseQueue.getPriority(27350)); //33
    caseQueue.insert(94823,83597);
    caseQueue.insert(34023,9802);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(94823, 82390);
    caseQueue.insert(1024,38064);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(59787,72014);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(37653,84730);
    caseQueue.updatePriority(82901, 54750);
    myResult.push_back(caseQueue.getPriority(94823)); //37
    caseQueue.updatePriority(59787, 31190);
    caseQueue.insert(53820,64173);
    caseQueue.updatePriority(14260, 81515);
    caseQueue.insert(49539,90261);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(99794,32192);
    caseQueue.insert(57001,80106);
    caseQueue.updatePriority(37653, 22607);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(57001, 70398);
    caseQueue.insert(22280,86106);
    caseQueue.updatePriority(98842, 17992);
    caseQueue.insert(9730,39331);
    caseQueue.updatePriority(49539, 87954);
    myResult.push_back(caseQueue.getPriority(98842)); //41
    myResult.push_back(caseQueue.getPriority(84377)); //42
    caseQueue.insert(54892,49840);
    caseQueue.updatePriority(54892, 17574);
    myResult.push_back(caseQueue.getPriority(84377)); //43
    caseQueue.updatePriority(9730, 82457);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(72753,79771);
    myResult.push_back(caseQueue.getPriority(22280)); //45
    myResult.push_back(caseQueue.getPriority(49539)); //46
    caseQueue.updatePriority(72753, 34744);
    caseQueue.insert(65635,14844);
    myResult.push_back(caseQueue.getPriority(9730)); //47
    myResult.push_back(caseQueue.getPriority(14260)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(92369,88124);
    caseQueue.updatePriority(49539, 33119);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(72753, 15813);
    caseQueue.insert(3207,36786);
    caseQueue.updatePriority(84377, 80430);
    caseQueue.updatePriority(94823, 99908);
    caseQueue.insert(13488,39439);
    caseQueue.insert(21536,98936);
    caseQueue.insert(41785,99525);
    myResult.push_back(caseQueue.getPriority(9730)); //52
    caseQueue.updatePriority(9246, 64548);
    caseQueue.insert(58168,38257);
    caseQueue.insert(89567,2068);
    caseQueue.updatePriority(9730, 97793);
    myResult.push_back(caseQueue.getPriority(3207)); //53
    caseQueue.updatePriority(22280, 26187);
    caseQueue.insert(54074,10196);
    caseQueue.insert(52891,12491);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(63266,12054);
    myResult.push_back(caseQueue.getPriority(92369)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(82901, 18178);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(84377)); //58
    caseQueue.insert(59462,11023);
    caseQueue.insert(1594,85841);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(31122,27151);
    caseQueue.insert(6643,39537);
    myResult.push_back(caseQueue.getPriority(6643)); //61
    caseQueue.insert(35638,30048);
    caseQueue.insert(97837,70582);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(21536, 9844);
    caseQueue.insert(60869,47001);
    caseQueue.updatePriority(21536, 21557);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(17895,76734);
    myResult.push_back(caseQueue.getPriority(53820)); //64
    caseQueue.insert(24881,36804);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(56262,87413);
    caseQueue.updatePriority(53820, 24652);
    caseQueue.insert(69184,67515);
    myResult.push_back(caseQueue.getPriority(53820)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(10399,60571);
    caseQueue.insert(60398,75736);
    myResult.push_back(caseQueue.getPriority(60869)); //69
    caseQueue.insert(56153,69488);
    myResult.push_back(caseQueue.getPriority(9730)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(6643)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(13488)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.updatePriority(9246, 32514);
    caseQueue.insert(79117,98273);
    caseQueue.insert(79463,91529);
    caseQueue.updatePriority(13488, 58243);
    caseQueue.insert(96315,69464);
    caseQueue.insert(7734,22315);
    caseQueue.insert(82675,6752);
    caseQueue.insert(79360,50419);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.updatePriority(57001, 23551);
    caseQueue.updatePriority(1594, 45864);
    myResult.push_back(caseQueue.getPriority(13488)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(41641,31074);
    myResult.push_back(caseQueue.getPriority(69184)); //81
    myResult.push_back(caseQueue.getPriority(41785)); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(12476,45010);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.updatePriority(96315, 85953);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(18315,13040);
    caseQueue.insert(51769,28586);
    caseQueue.insert(56591,685);
    myResult.push_back(caseQueue.deleteMin()); //88
    caseQueue.insert(46112,74078);
    caseQueue.insert(45340,92967);
    caseQueue.insert(89046,42003);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(62949,4328);
    caseQueue.updatePriority(69184, 11353);
    myResult.push_back(caseQueue.getPriority(69184)); //90
    myResult.push_back(caseQueue.getPriority(79360)); //91
    myResult.push_back(caseQueue.getPriority(84377)); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.updatePriority(56262, 94583);
    caseQueue.insert(28932,84463);
    caseQueue.updatePriority(79117, 17259);
    caseQueue.insert(72007,69035);
    caseQueue.insert(84892,42809);
    caseQueue.insert(572,54318);
    caseQueue.insert(67237,61318);
    myResult.push_back(caseQueue.getPriority(56262)); //94
    myResult.push_back(caseQueue.deleteMin()); //95
    caseQueue.insert(71794,60557);
    myResult.push_back(caseQueue.deleteMin()); //96
    caseQueue.insert(78772,6137);
    caseQueue.insert(2692,61912);
    caseQueue.insert(61793,78057);
    myResult.push_back(caseQueue.deleteMin()); //97
    myResult.push_back(caseQueue.deleteMin()); //98
    caseQueue.insert(22137,15655);
    myResult.push_back(caseQueue.getPriority(72007)); //99
    myResult.push_back(caseQueue.getPriority(45340)); //100
    static const int resultListArray[] = {62308, 45344, 18267, 22292, 56735, 1639, 61612, 57975, 39418, 94965, 39418, 21479, 32895, 98455, 82688, 92735, 65168, 76455, 34212, 64785, 34536, 55496, 65168, 3323, 82688, 81264, 82688, 79753, 50513, 60405, 99158, 63773, 13773, 34023, 27350, 1024, 82390, 59787, 37653, 99794, 17992, 61010, 61010, 54892, 86106, 87954, 82457, 81515, 65635, 98842, 49539, 82457, 36786, 89567, 88124, 54074, 63266, 80430, 59462, 52891, 39537, 72753, 82901, 64173, 21536, 24652, 53820, 22280, 47001, 97793, 31122, 35638, 39537, 3207, 39439, 24881, 58168, 82675, 58243, 7734, 67515, 99525, 57001, 41641, 9246, 6643, 12476, 56591, 18315, 11353, 50419, 80430, 62949, 94583, 69184, 79117, 78772, 51769, 69035, 92967}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(210): Basarili" << endl;
    else cout << "Case(210): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_211(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 186);

    vector<int> myResult; 
    caseQueue.insert(30177,83102);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(24105,64854);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(3545,66103);
    caseQueue.updatePriority(3545, 69431);
    myResult.push_back(caseQueue.getPriority(3545)); //3
    caseQueue.insert(67180,26853);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(21429)); //7
    caseQueue.insert(68800,72117);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(29587,57067);
    caseQueue.insert(36070,43554);
    caseQueue.insert(91415,21318);
    myResult.push_back(caseQueue.getPriority(36070)); //9
    caseQueue.insert(31514,81778);
    caseQueue.insert(16075,26039);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(89463,63727);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(89463)); //12
    caseQueue.insert(45614,26488);
    caseQueue.updatePriority(89463, 11280);
    caseQueue.updatePriority(89463, 7714);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(26242,8348);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.getPriority(31514)); //15
    caseQueue.insert(10413,97284);
    caseQueue.updatePriority(45614, 87117);
    caseQueue.insert(77749,92629);
    myResult.push_back(caseQueue.getPriority(77749)); //16
    caseQueue.updatePriority(31514, 26032);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(59734,97494);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(59734)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(45614, 70913);
    caseQueue.insert(10215,40744);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(59734, 20964);
    caseQueue.insert(19840,46629);
    caseQueue.updatePriority(59734, 52656);
    caseQueue.updatePriority(19840, 19615);
    caseQueue.insert(69266,25893);
    caseQueue.insert(32571,15194);
    caseQueue.insert(71336,5696);
    caseQueue.insert(55245,28738);
    caseQueue.insert(4264,24153);
    myResult.push_back(caseQueue.getPriority(59734)); //24
    caseQueue.updatePriority(55245, 85879);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(40475,72915);
    caseQueue.insert(15062,67741);
    caseQueue.insert(99855,58526);
    caseQueue.insert(38701,91245);
    caseQueue.insert(81437,31166);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(11473,54770);
    myResult.push_back(caseQueue.getPriority(15062)); //27
    caseQueue.updatePriority(10413, 2033);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(58694,40221);
    myResult.push_back(caseQueue.getPriority(55245)); //29
    caseQueue.insert(22981,66546);
    myResult.push_back(caseQueue.getPriority(81437)); //30
    myResult.push_back(caseQueue.getPriority(11473)); //31
    caseQueue.insert(68425,42352);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(11473, 44919);
    caseQueue.insert(5248,8805);
    caseQueue.updatePriority(22981, 98642);
    caseQueue.insert(53351,19122);
    caseQueue.updatePriority(22981, 70631);
    caseQueue.insert(71246,94937);
    caseQueue.updatePriority(55245, 81418);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(65186,18932);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(99855)); //36
    myResult.push_back(caseQueue.getPriority(99855)); //37
    caseQueue.insert(59951,43732);
    caseQueue.updatePriority(69266, 11953);
    myResult.push_back(caseQueue.getPriority(11473)); //38
    caseQueue.insert(44268,43023);
    myResult.push_back(caseQueue.getPriority(22981)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(31276,88689);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(59734)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(59133,15110);
    caseQueue.insert(156,23789);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(71246, 26425);
    caseQueue.insert(44250,80823);
    caseQueue.insert(35908,89767);
    myResult.push_back(caseQueue.getPriority(156)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(20576,41981);
    myResult.push_back(caseQueue.getPriority(59734)); //50
    caseQueue.updatePriority(22981, 20913);
    myResult.push_back(caseQueue.getPriority(44250)); //51
    caseQueue.updatePriority(31276, 93863);
    caseQueue.insert(77266,57107);
    caseQueue.insert(51661,24749);
    caseQueue.insert(18330,81721);
    caseQueue.insert(35644,57422);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(20576)); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(12232,25101);
    myResult.push_back(caseQueue.getPriority(18330)); //55
    caseQueue.insert(9678,44402);
    caseQueue.insert(44729,15401);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(54252,59853);
    caseQueue.insert(66631,29853);
    myResult.push_back(caseQueue.getPriority(35644)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(84104,19557);
    myResult.push_back(caseQueue.getPriority(38701)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(44250)); //62
    myResult.push_back(caseQueue.getPriority(38701)); //63
    caseQueue.updatePriority(54252, 9560);
    caseQueue.insert(85939,33387);
    myResult.push_back(caseQueue.getPriority(77266)); //64
    caseQueue.updatePriority(20576, 23681);
    caseQueue.insert(6720,31382);
    myResult.push_back(caseQueue.getPriority(55245)); //65
    myResult.push_back(caseQueue.getPriority(59951)); //66
    caseQueue.insert(88233,22363);
    myResult.push_back(caseQueue.getPriority(20576)); //67
    caseQueue.updatePriority(38701, 70069);
    caseQueue.insert(77220,87592);
    caseQueue.insert(31925,69166);
    caseQueue.insert(73836,11680);
    caseQueue.insert(55086,28932);
    caseQueue.insert(50034,24403);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(77220)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(20569,79891);
    caseQueue.insert(37055,5635);
    caseQueue.insert(27091,20613);
    caseQueue.updatePriority(15062, 62807);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(77266)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(31925)); //79
    caseQueue.insert(59698,11568);
    caseQueue.updatePriority(99855, 68709);
    caseQueue.insert(13348,16299);
    myResult.push_back(caseQueue.getPriority(15062)); //80
    caseQueue.insert(67961,51389);
    caseQueue.insert(11013,49727);
    caseQueue.insert(86307,11998);
    caseQueue.updatePriority(99855, 3769);
    caseQueue.insert(25091,11609);
    caseQueue.insert(22056,81742);
    caseQueue.updatePriority(31925, 53761);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(20569, 60123);
    caseQueue.insert(20748,97410);
    caseQueue.insert(11626,69876);
    myResult.push_back(caseQueue.getPriority(44268)); //82
    caseQueue.insert(75889,85882);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.getPriority(13348)); //84
    static const int resultListArray[] = {30177, 24105, 69431, 67180, 3545, -1, -1, 68800, 43554, 91415, 16075, 63727, 89463, 26242, 81778, 92629, 31514, 36070, 97494, 29587, 10215, 45614, 77749, 52656, 71336, 32571, 67741, 10413, 85879, 31166, 54770, 19840, 4264, 5248, 65186, 58526, 58526, 44919, 70631, 69266, 53351, 52656, 81437, 58694, 59133, 23789, 156, 71246, 68425, 52656, 80823, 22981, 41981, 51661, 81721, 44729, 57422, 12232, 91245, 84104, 66631, 80823, 91245, 57107, 81418, 43732, 23681, 54252, 73836, 88233, 87592, 20576, 37055, 57107, 27091, 50034, 55086, 6720, 69166, 62807, 99855, 43023, 59698, 16299}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(211): Basarili" << endl;
    else cout << "Case(211): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_212(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 221);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(82187,67255);
    caseQueue.insert(88396,14537);
    caseQueue.updatePriority(82187, 71669);
    caseQueue.updatePriority(82187, 19896);
    myResult.push_back(caseQueue.getPriority(88396)); //2
    caseQueue.updatePriority(82187, 5657);
    caseQueue.insert(15702,53106);
    caseQueue.insert(87985,36631);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(87985, 46016);
    caseQueue.updatePriority(15702, 17319);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(93070, 44242);
    caseQueue.insert(61163,60528);
    caseQueue.insert(28650,5407);
    caseQueue.insert(10873,52015);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(4569,86706);
    myResult.push_back(caseQueue.getPriority(10873)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(4569)); //10
    caseQueue.updatePriority(4569, 26070);
    myResult.push_back(caseQueue.getPriority(4569)); //11
    caseQueue.updatePriority(61163, 35679);
    caseQueue.updatePriority(61163, 84680);
    caseQueue.insert(63621,39770);
    caseQueue.insert(8578,20629);
    caseQueue.updatePriority(8578, 69088);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(63621, 13854);
    myResult.push_back(caseQueue.getPriority(8578)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(86653,50880);
    caseQueue.insert(11665,18949);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(78947,39760);
    myResult.push_back(caseQueue.getPriority(86653)); //16
    caseQueue.insert(35433,12314);
    caseQueue.updatePriority(61163, 50940);
    caseQueue.updatePriority(61163, 10570);
    caseQueue.updatePriority(8578, 63300);
    caseQueue.insert(17750,34849);
    caseQueue.updatePriority(61163, 56827);
    myResult.push_back(caseQueue.getPriority(61163)); //17
    caseQueue.updatePriority(35433, 33976);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(4873,53880);
    myResult.push_back(caseQueue.getPriority(61163)); //19
    caseQueue.insert(30085,40594);
    caseQueue.updatePriority(61163, 89366);
    caseQueue.updatePriority(61163, 19238);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(86766,96821);
    caseQueue.insert(81789,54756);
    myResult.push_back(caseQueue.getPriority(8578)); //21
    caseQueue.insert(65633,97387);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(8447,39808);
    caseQueue.insert(14383,75971);
    caseQueue.insert(64677,65171);
    caseQueue.insert(85420,92321);
    myResult.push_back(caseQueue.getPriority(86653)); //23
    caseQueue.insert(92918,63045);
    myResult.push_back(caseQueue.getPriority(85420)); //24
    caseQueue.updatePriority(92918, 61809);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(28994,51582);
    caseQueue.insert(41022,1117);
    caseQueue.insert(52975,70359);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(41516,19032);
    caseQueue.updatePriority(81789, 12038);
    caseQueue.updatePriority(86653, 17556);
    caseQueue.updatePriority(28994, 41409);
    caseQueue.insert(6780,31968);
    caseQueue.insert(93067,13237);
    caseQueue.insert(43795,26608);
    myResult.push_back(caseQueue.getPriority(93067)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(42730,39015);
    caseQueue.insert(51274,974);
    caseQueue.updatePriority(43795, 18716);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(4873)); //30
    myResult.push_back(caseQueue.getPriority(14383)); //31
    caseQueue.updatePriority(28994, 25181);
    caseQueue.insert(13092,64144);
    myResult.push_back(caseQueue.getPriority(8447)); //32
    caseQueue.updatePriority(85420, 77838);
    myResult.push_back(caseQueue.getPriority(8447)); //33
    caseQueue.updatePriority(65633, 28166);
    myResult.push_back(caseQueue.getPriority(52975)); //34
    caseQueue.insert(48371,75435);
    caseQueue.updatePriority(52975, 4932);
    caseQueue.insert(2062,72798);
    caseQueue.updatePriority(6780, 2545);
    caseQueue.updatePriority(92918, 29414);
    caseQueue.updatePriority(52975, 65662);
    myResult.push_back(caseQueue.getPriority(8578)); //35
    myResult.push_back(caseQueue.getPriority(52975)); //36
    caseQueue.insert(72871,42577);
    caseQueue.updatePriority(14383, 57925);
    caseQueue.updatePriority(93067, 97635);
    caseQueue.insert(68617,39198);
    caseQueue.insert(89609,80110);
    caseQueue.insert(26115,81513);
    myResult.push_back(caseQueue.getPriority(4873)); //37
    caseQueue.insert(37039,33683);
    caseQueue.updatePriority(52975, 67553);
    caseQueue.updatePriority(85420, 42055);
    caseQueue.insert(84859,8418);
    caseQueue.insert(60987,22756);
    caseQueue.updatePriority(84859, 78308);
    myResult.push_back(caseQueue.getPriority(41516)); //38
    caseQueue.insert(78268,16549);
    caseQueue.updatePriority(37039, 77250);
    caseQueue.insert(99198,62025);
    caseQueue.insert(68673,68968);
    caseQueue.insert(2373,51725);
    myResult.push_back(caseQueue.getPriority(37039)); //39
    caseQueue.updatePriority(43795, 94160);
    caseQueue.updatePriority(37039, 87608);
    caseQueue.updatePriority(85420, 66762);
    myResult.push_back(caseQueue.getPriority(28994)); //40
    myResult.push_back(caseQueue.getPriority(8578)); //41
    caseQueue.insert(62027,16290);
    caseQueue.insert(79726,74367);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(22596,58278);
    caseQueue.insert(57846,95171);
    caseQueue.insert(60628,77041);
    caseQueue.updatePriority(86766, 42611);
    myResult.push_back(caseQueue.getPriority(14383)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.updatePriority(86653, 10144);
    myResult.push_back(caseQueue.getPriority(68617)); //45
    caseQueue.insert(75046,59932);
    caseQueue.updatePriority(41516, 3213);
    caseQueue.updatePriority(41516, 15293);
    caseQueue.insert(77387,7329);
    caseQueue.updatePriority(68617, 83061);
    caseQueue.insert(20855,46426);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(90485,12399);
    caseQueue.insert(13764,24176);
    myResult.push_back(caseQueue.getPriority(13764)); //48
    caseQueue.updatePriority(57846, 61492);
    caseQueue.insert(92339,66599);
    caseQueue.insert(25189,16225);
    caseQueue.insert(62330,9657);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(64677, 7804);
    myResult.push_back(caseQueue.getPriority(90485)); //50
    caseQueue.insert(38947,88229);
    caseQueue.insert(33125,90906);
    myResult.push_back(caseQueue.getPriority(68673)); //51
    caseQueue.insert(89045,33311);
    caseQueue.insert(92977,90582);
    myResult.push_back(caseQueue.getPriority(92918)); //52
    caseQueue.updatePriority(86766, 55855);
    caseQueue.insert(43567,68688);
    caseQueue.updatePriority(2062, 23327);
    myResult.push_back(caseQueue.getPriority(78268)); //53
    caseQueue.insert(1519,55524);
    caseQueue.insert(25079,5858);
    myResult.push_back(caseQueue.getPriority(1519)); //54
    caseQueue.updatePriority(68617, 64148);
    myResult.push_back(caseQueue.getPriority(48371)); //55
    myResult.push_back(caseQueue.getPriority(90485)); //56
    myResult.push_back(caseQueue.getPriority(42730)); //57
    caseQueue.updatePriority(65633, 4623);
    caseQueue.insert(82256,71810);
    caseQueue.insert(94310,80283);
    caseQueue.insert(29935,92293);
    caseQueue.insert(92294,12060);
    caseQueue.updatePriority(92294, 38910);
    caseQueue.insert(35832,19945);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(90485)); //59
    caseQueue.insert(9230,35941);
    caseQueue.updatePriority(41516, 34776);
    caseQueue.insert(14304,90118);
    caseQueue.insert(14850,63136);
    myResult.push_back(caseQueue.getPriority(92977)); //60
    caseQueue.insert(63177,81461);
    caseQueue.updatePriority(92918, 11089);
    myResult.push_back(caseQueue.getPriority(25079)); //61
    myResult.push_back(caseQueue.getPriority(42730)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(93667,93990);
    caseQueue.insert(89943,28270);
    caseQueue.insert(22052,79036);
    caseQueue.insert(51764,44073);
    caseQueue.updatePriority(93667, 65911);
    myResult.push_back(caseQueue.getPriority(4873)); //64
    caseQueue.insert(40517,83917);
    myResult.push_back(caseQueue.getPriority(92977)); //65
    caseQueue.updatePriority(75046, 72220);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(13092)); //67
    caseQueue.insert(16146,47785);
    caseQueue.insert(80084,61138);
    myResult.push_back(caseQueue.getPriority(33125)); //68
    caseQueue.insert(68308,6590);
    caseQueue.insert(48882,99278);
    caseQueue.updatePriority(82256, 98263);
    caseQueue.insert(11452,92681);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(9230, 38945);
    caseQueue.updatePriority(22052, 95102);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(52975)); //71
    caseQueue.updatePriority(75046, 21180);
    caseQueue.updatePriority(11452, 18015);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(72871)); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    static const int resultListArray[] = {-1, 14537, 82187, 88396, 15702, 87985, 28650, 52015, 10873, 86706, 26070, 4569, 69088, 63621, 11665, 50880, 56827, 35433, 56827, 61163, 63300, 17750, 50880, 92321, 78947, 41022, 13237, 81789, 51274, 53880, 75971, 39808, 39808, 70359, 63300, 65662, 53880, 19032, 77250, 25181, 63300, 6780, 57925, 62027, 39198, 77387, 86653, 24176, 62330, 12399, 68968, 29414, 16549, 55524, 75435, 12399, 39015, 65633, 12399, 90582, 5858, 39015, 25079, 53880, 90582, 64677, 64144, 90906, 68308, 92918, 67553, 90485, 42577, 25189}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(212): Basarili" << endl;
    else cout << "Case(212): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_213(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 174);

    vector<int> myResult; 
    caseQueue.insert(6235,3980);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(99403, 73291);
    caseQueue.insert(25052,86578);
    caseQueue.insert(48993,65010);
    caseQueue.updatePriority(25052, 91198);
    myResult.push_back(caseQueue.getPriority(48993)); //2
    caseQueue.insert(82778,46708);
    myResult.push_back(caseQueue.getPriority(48993)); //3
    caseQueue.insert(99003,54292);
    caseQueue.insert(3225,14402);
    caseQueue.insert(40654,27581);
    myResult.push_back(caseQueue.getPriority(82778)); //4
    caseQueue.insert(20854,48401);
    myResult.push_back(caseQueue.getPriority(40654)); //5
    caseQueue.insert(72329,87696);
    caseQueue.updatePriority(40654, 2750);
    caseQueue.insert(77522,35735);
    caseQueue.insert(99390,69145);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(99003, 59458);
    myResult.push_back(caseQueue.getPriority(77522)); //7
    caseQueue.insert(27484,95150);
    caseQueue.insert(77980,3101);
    myResult.push_back(caseQueue.getPriority(77522)); //8
    caseQueue.insert(28251,81144);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(3225)); //10
    caseQueue.updatePriority(77522, 80603);
    caseQueue.insert(70098,67624);
    caseQueue.updatePriority(99390, 83251);
    myResult.push_back(caseQueue.getPriority(3225)); //11
    myResult.push_back(caseQueue.getPriority(99390)); //12
    myResult.push_back(caseQueue.getPriority(99390)); //13
    caseQueue.insert(30272,75209);
    caseQueue.updatePriority(20854, 5989);
    myResult.push_back(caseQueue.getPriority(28251)); //14
    caseQueue.insert(61020,39836);
    myResult.push_back(caseQueue.getPriority(3225)); //15
    myResult.push_back(caseQueue.getPriority(82778)); //16
    caseQueue.insert(83215,78997);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(72329)); //18
    caseQueue.updatePriority(61020, 36449);
    caseQueue.insert(33030,44127);
    caseQueue.insert(43605,10263);
    caseQueue.insert(40441,36463);
    caseQueue.updatePriority(72329, 58062);
    caseQueue.insert(20021,16059);
    myResult.push_back(caseQueue.getPriority(3225)); //19
    caseQueue.updatePriority(99003, 630);
    myResult.push_back(caseQueue.getPriority(77522)); //20
    caseQueue.updatePriority(72329, 26348);
    myResult.push_back(caseQueue.getPriority(20021)); //21
    caseQueue.insert(22643,31122);
    caseQueue.insert(75698,90145);
    caseQueue.updatePriority(3225, 4107);
    caseQueue.insert(81499,19702);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(28251)); //24
    myResult.push_back(caseQueue.getPriority(22643)); //25
    caseQueue.updatePriority(40441, 38715);
    caseQueue.insert(93405,63548);
    caseQueue.updatePriority(22643, 69914);
    caseQueue.insert(40072,97096);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(33030, 31667);
    caseQueue.updatePriority(22643, 89312);
    myResult.push_back(caseQueue.getPriority(25052)); //27
    caseQueue.insert(89376,68478);
    caseQueue.insert(81125,33296);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(81125)); //30
    myResult.push_back(caseQueue.getPriority(99390)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(33030, 13784);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(35660,94031);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(43884,702);
    caseQueue.updatePriority(83215, 77020);
    caseQueue.insert(27268,2321);
    caseQueue.insert(11447,5299);
    caseQueue.updatePriority(83215, 3141);
    myResult.push_back(caseQueue.getPriority(89376)); //36
    myResult.push_back(caseQueue.getPriority(22643)); //37
    myResult.push_back(caseQueue.getPriority(28251)); //38
    caseQueue.insert(1571,70845);
    caseQueue.insert(26363,74864);
    myResult.push_back(caseQueue.getPriority(30272)); //39
    caseQueue.insert(61116,47951);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(75698, 92449);
    caseQueue.updatePriority(40072, 40979);
    myResult.push_back(caseQueue.getPriority(48993)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(70098, 52467);
    caseQueue.insert(61606,32754);
    myResult.push_back(caseQueue.getPriority(40441)); //44
    caseQueue.updatePriority(1571, 7450);
    myResult.push_back(caseQueue.getPriority(22643)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(93405, 42466);
    myResult.push_back(caseQueue.getPriority(40441)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(22643)); //50
    myResult.push_back(caseQueue.getPriority(61116)); //51
    caseQueue.insert(42975,69006);
    caseQueue.updatePriority(89376, 51673);
    caseQueue.insert(94868,8813);
    myResult.push_back(caseQueue.getPriority(75698)); //52
    caseQueue.updatePriority(22643, 80158);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(28251, 54980);
    caseQueue.updatePriority(42975, 14520);
    caseQueue.updatePriority(48993, 45119);
    caseQueue.updatePriority(28251, 25070);
    myResult.push_back(caseQueue.getPriority(40441)); //54
    caseQueue.updatePriority(35660, 16063);
    myResult.push_back(caseQueue.getPriority(40441)); //55
    caseQueue.insert(19252,25368);
    myResult.push_back(caseQueue.getPriority(26363)); //56
    caseQueue.insert(99105,64221);
    caseQueue.insert(5352,15290);
    caseQueue.updatePriority(77522, 54725);
    caseQueue.insert(12008,52376);
    myResult.push_back(caseQueue.getPriority(75698)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(18358,22136);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(28251)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(44235,50415);
    caseQueue.insert(24747,16977);
    caseQueue.updatePriority(70098, 63467);
    caseQueue.updatePriority(99390, 52505);
    caseQueue.insert(70216,99945);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(48488,99921);
    myResult.push_back(caseQueue.getPriority(26363)); //63
    caseQueue.insert(19298,13150);
    caseQueue.insert(65646,75032);
    caseQueue.insert(56256,67142);
    myResult.push_back(caseQueue.getPriority(28251)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(44235, 50676);
    caseQueue.insert(8888,19228);
    caseQueue.insert(98837,41075);
    caseQueue.insert(48090,35377);
    myResult.push_back(caseQueue.getPriority(70098)); //66
    myResult.push_back(caseQueue.getPriority(44235)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(90189,91488);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(51754,56965);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(65646)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(26363)); //73
    caseQueue.updatePriority(51754, 87309);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(55389,64742);
    caseQueue.insert(25403,53492);
    myResult.push_back(caseQueue.getPriority(70098)); //75
    caseQueue.updatePriority(61116, 61882);
    caseQueue.updatePriority(22643, 98624);
    caseQueue.insert(2688,98612);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(26363, 93334);
    static const int resultListArray[] = {6235, 65010, 65010, 46708, 27581, 40654, 35735, 35735, 77980, 14402, 14402, 83251, 83251, 81144, 14402, 46708, 20854, 87696, 14402, 80603, 16059, 99003, 3225, 81144, 31122, 43605, 91198, 20021, 81499, 33296, 83251, 72329, 33030, 81125, 61020, 68478, 89312, 81144, 75209, 43884, 27268, 65010, 83215, 38715, 89312, 11447, 1571, 38715, 61606, 89312, 47951, 92449, 94868, 38715, 38715, 74864, 92449, 42975, 5352, 25070, 35660, 24747, 74864, 25070, 19298, 63467, 50676, 8888, 18358, 28251, 75032, 19252, 74864, 48090, 63467, 40441}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(213): Basarili" << endl;
    else cout << "Case(213): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_214(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 133);

    vector<int> myResult; 
    caseQueue.insert(34608,73689);
    caseQueue.insert(24496,50500);
    caseQueue.insert(14567,77116);
    caseQueue.insert(57660,89506);
    caseQueue.insert(91064,59930);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(42527,98800);
    caseQueue.insert(35863,60024);
    caseQueue.updatePriority(35863, 83148);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(97090,70660);
    myResult.push_back(caseQueue.getPriority(42527)); //3
    caseQueue.insert(27889,36041);
    caseQueue.insert(10090,41352);
    myResult.push_back(caseQueue.getPriority(27889)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(6797,24057);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(73637,116);
    myResult.push_back(caseQueue.getPriority(14567)); //10
    caseQueue.updatePriority(42527, 38343);
    caseQueue.insert(88295,76515);
    caseQueue.insert(7520,82687);
    caseQueue.updatePriority(42527, 49339);
    caseQueue.updatePriority(14567, 97501);
    caseQueue.insert(18317,36870);
    caseQueue.updatePriority(88295, 83522);
    caseQueue.insert(36375,89722);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(3143,87082);
    myResult.push_back(caseQueue.getPriority(3143)); //13
    caseQueue.insert(14034,85328);
    caseQueue.insert(72913,77680);
    caseQueue.insert(82908,86794);
    caseQueue.insert(42627,78722);
    myResult.push_back(caseQueue.getPriority(88295)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(51026,97621);
    caseQueue.insert(40029,20626);
    caseQueue.insert(99110,97578);
    caseQueue.insert(82977,79728);
    myResult.push_back(caseQueue.getPriority(57660)); //16
    myResult.push_back(caseQueue.getPriority(88295)); //17
    caseQueue.insert(87787,66850);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(22476,99134);
    caseQueue.updatePriority(82977, 12597);
    caseQueue.insert(59264,13976);
    myResult.push_back(caseQueue.getPriority(57660)); //20
    caseQueue.updatePriority(36375, 52401);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(72913, 42063);
    caseQueue.insert(30397,26662);
    caseQueue.insert(77855,29310);
    myResult.push_back(caseQueue.getPriority(77855)); //22
    caseQueue.insert(75026,70693);
    myResult.push_back(caseQueue.getPriority(35863)); //23
    caseQueue.updatePriority(59264, 47512);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(61263,31181);
    caseQueue.updatePriority(7520, 78470);
    myResult.push_back(caseQueue.getPriority(59264)); //26
    caseQueue.insert(49060,84277);
    caseQueue.insert(21052,47173);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(99110)); //28
    myResult.push_back(caseQueue.getPriority(72913)); //29
    caseQueue.updatePriority(88295, 46127);
    myResult.push_back(caseQueue.getPriority(14567)); //30
    myResult.push_back(caseQueue.getPriority(42627)); //31
    myResult.push_back(caseQueue.getPriority(36375)); //32
    caseQueue.insert(53233,34697);
    myResult.push_back(caseQueue.getPriority(3143)); //33
    caseQueue.insert(45883,31886);
    caseQueue.insert(73865,16611);
    caseQueue.insert(84612,94924);
    caseQueue.insert(49579,54279);
    caseQueue.insert(16967,48380);
    caseQueue.updatePriority(59264, 49673);
    caseQueue.insert(54743,72513);
    caseQueue.insert(81378,22894);
    myResult.push_back(caseQueue.getPriority(14567)); //34
    caseQueue.insert(96888,40825);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(48112,27311);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(42627, 21079);
    caseQueue.insert(56713,17144);
    caseQueue.insert(53315,98005);
    myResult.push_back(caseQueue.getPriority(36375)); //38
    caseQueue.insert(65743,56817);
    caseQueue.insert(27213,31266);
    caseQueue.insert(86769,40968);
    caseQueue.updatePriority(99110, 94826);
    caseQueue.insert(88931,37703);
    caseQueue.updatePriority(45883, 45987);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(72871,13888);
    caseQueue.insert(94365,12567);
    caseQueue.insert(97934,88168);
    caseQueue.insert(39074,61825);
    caseQueue.updatePriority(16967, 16693);
    myResult.push_back(caseQueue.getPriority(49579)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(86524,19670);
    myResult.push_back(caseQueue.getPriority(72913)); //43
    myResult.push_back(caseQueue.getPriority(51026)); //44
    caseQueue.insert(17626,87345);
    caseQueue.insert(86886,46470);
    caseQueue.insert(82922,72226);
    caseQueue.updatePriority(97934, 71738);
    caseQueue.insert(97826,25442);
    caseQueue.insert(46473,25839);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(82908, 21893);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(88931, 75233);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(1503,50709);
    myResult.push_back(caseQueue.getPriority(96888)); //49
    caseQueue.insert(15048,8474);
    caseQueue.updatePriority(17626, 27807);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(35863)); //51
    static const int resultListArray[] = {24496, 91064, 98800, 36041, 27889, 6797, 10090, 97090, 34608, 77116, 73637, 18317, 87082, 83522, 42527, 89506, 83522, 40029, 87787, 89506, 82977, 29310, 83148, 30397, 77855, 47512, 61263, 97578, 42063, 97501, 78722, 52401, 87082, 97501, 73865, 81378, 48112, 52401, 56713, 54279, 94365, 72871, 42063, 97621, 16967, 86524, 42627, 82908, 40825, 15048, 83148}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(214): Basarili" << endl;
    else cout << "Case(214): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_215(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 171);

    vector<int> myResult; 
    caseQueue.insert(15362,56384);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(35551,66295);
    caseQueue.insert(4494,81731);
    caseQueue.insert(10609,33693);
    caseQueue.insert(23133,66645);
    caseQueue.updatePriority(4494, 51824);
    caseQueue.insert(79770,10961);
    caseQueue.insert(20522,81443);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(63784,12493);
    caseQueue.insert(90121,25884);
    caseQueue.insert(1238,49695);
    caseQueue.insert(40464,99674);
    caseQueue.insert(3408,3889);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(40464, 13277);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(49271,96860);
    myResult.push_back(caseQueue.getPriority(10609)); //6
    caseQueue.updatePriority(1238, 68978);
    caseQueue.updatePriority(10609, 82432);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(80075,81101);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(99238,13698);
    caseQueue.insert(58437,53435);
    caseQueue.insert(5441,9521);
    caseQueue.updatePriority(35551, 61000);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(80075, 68697);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(10609)); //11
    caseQueue.insert(95966,50419);
    caseQueue.updatePriority(95966, 57511);
    caseQueue.insert(36305,30307);
    caseQueue.updatePriority(20522, 87311);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(80075)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(1238)); //16
    caseQueue.insert(45122,26988);
    caseQueue.insert(83328,96307);
    caseQueue.insert(48236,83638);
    caseQueue.insert(73713,56743);
    caseQueue.insert(94872,56709);
    caseQueue.insert(37614,18277);
    caseQueue.insert(55575,92451);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(92167,705);
    myResult.push_back(caseQueue.getPriority(35551)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(23133, 1290);
    caseQueue.insert(45037,79081);
    caseQueue.insert(54660,58500);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(95966, 94258);
    caseQueue.insert(60061,34242);
    myResult.push_back(caseQueue.getPriority(95966)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(27585,35606);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(96623,81465);
    myResult.push_back(caseQueue.getPriority(94872)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(95966)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(47082,99346);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(89511,14189);
    caseQueue.insert(94645,90418);
    caseQueue.updatePriority(1238, 17109);
    myResult.push_back(caseQueue.getPriority(45037)); //29
    caseQueue.insert(23285,67278);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(91945,19431);
    caseQueue.insert(70452,56187);
    myResult.push_back(caseQueue.getPriority(54660)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(95966)); //33
    caseQueue.insert(20270,75525);
    caseQueue.updatePriority(80075, 98569);
    caseQueue.insert(63341,61198);
    caseQueue.updatePriority(45037, 92836);
    caseQueue.updatePriority(20270, 25783);
    caseQueue.updatePriority(48236, 66926);
    caseQueue.updatePriority(45037, 25950);
    caseQueue.insert(60197,18718);
    caseQueue.insert(70667,66187);
    myResult.push_back(caseQueue.getPriority(35551)); //34
    caseQueue.insert(18404,53440);
    caseQueue.insert(79319,95713);
    caseQueue.insert(93413,49874);
    caseQueue.insert(40202,75960);
    myResult.push_back(caseQueue.getPriority(35551)); //35
    caseQueue.updatePriority(96623, 86721);
    caseQueue.insert(60145,35718);
    caseQueue.updatePriority(93413, 84392);
    myResult.push_back(caseQueue.getPriority(55575)); //36
    caseQueue.insert(77437,57053);
    caseQueue.insert(84579,81300);
    caseQueue.updatePriority(91945, 46312);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(95966)); //38
    caseQueue.insert(22523,38589);
    caseQueue.updatePriority(60145, 11128);
    caseQueue.insert(47106,76838);
    caseQueue.insert(41152,21734);
    caseQueue.insert(8332,46040);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(48236, 73708);
    caseQueue.updatePriority(77437, 1818);
    caseQueue.insert(81752,76989);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(45439,9224);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(48236, 77998);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.getPriority(49271)); //45
    caseQueue.updatePriority(47106, 2650);
    caseQueue.updatePriority(70667, 33467);
    caseQueue.insert(42686,43952);
    caseQueue.updatePriority(48236, 13050);
    caseQueue.insert(93073,60344);
    caseQueue.insert(26934,7467);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(63341, 48674);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(61639,46066);
    caseQueue.updatePriority(18404, 35073);
    caseQueue.insert(24689,36051);
    myResult.push_back(caseQueue.getPriority(40202)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(70452)); //54
    caseQueue.insert(2037,87221);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(61639)); //56
    caseQueue.updatePriority(47082, 24820);
    caseQueue.insert(30371,69344);
    caseQueue.insert(53359,16874);
    caseQueue.updatePriority(61639, 98920);
    caseQueue.insert(80882,71967);
    caseQueue.insert(51663,19700);
    caseQueue.updatePriority(81752, 97348);
    caseQueue.insert(94427,64514);
    caseQueue.insert(3608,95536);
    caseQueue.updatePriority(23285, 52174);
    caseQueue.insert(63392,35268);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(84126,3368);
    caseQueue.insert(44023,6649);
    caseQueue.updatePriority(79319, 66409);
    caseQueue.insert(53369,18085);
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(66201,79373);
    caseQueue.insert(21351,80408);
    caseQueue.insert(89023,46164);
    caseQueue.insert(49334,69977);
    caseQueue.insert(13921,63854);
    caseQueue.insert(35272,93775);
    myResult.push_back(caseQueue.getPriority(8332)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    static const int resultListArray[] = {15362, -1, 79770, 3408, 63784, 33693, 40464, 90121, 5441, 99238, 82432, 36305, 4494, 68697, 58437, 68978, 37614, 61000, 92167, 23133, 94258, 45122, 60061, 56709, 27585, 94258, 94872, 73713, 79081, 89511, 58500, 1238, 94258, 61000, 61000, 92451, 60197, 94258, 60145, 41152, 77437, 45439, 20270, 45037, 96860, 47106, 26934, 48236, 70667, 22523, 75960, 18404, 24689, 56187, 42686, 46066, 53359, 84126, 44023, 46040, 53369}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(215): Basarili" << endl;
    else cout << "Case(215): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_216(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 142);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(53086)); //1
    caseQueue.insert(51778,24429);
    myResult.push_back(caseQueue.getPriority(51778)); //2
    caseQueue.insert(59330,44164);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(85142,37325);
    myResult.push_back(caseQueue.getPriority(85142)); //4
    myResult.push_back(caseQueue.getPriority(85142)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(12600,83531);
    caseQueue.insert(94473,55118);
    caseQueue.insert(89847,61715);
    caseQueue.insert(44210,58890);
    caseQueue.insert(25873,33208);
    caseQueue.insert(55002,82544);
    caseQueue.updatePriority(25873, 46638);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(94473, 99915);
    caseQueue.updatePriority(89847, 38347);
    caseQueue.insert(40224,37846);
    caseQueue.insert(66391,16030);
    caseQueue.updatePriority(89847, 38091);
    myResult.push_back(caseQueue.getPriority(89847)); //9
    myResult.push_back(caseQueue.getPriority(12600)); //10
    caseQueue.insert(50883,78998);
    caseQueue.updatePriority(66391, 91384);
    myResult.push_back(caseQueue.getPriority(50883)); //11
    myResult.push_back(caseQueue.getPriority(44210)); //12
    caseQueue.updatePriority(66391, 9431);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(96347,47666);
    caseQueue.insert(90141,94725);
    caseQueue.insert(79024,62356);
    caseQueue.insert(76911,96670);
    myResult.push_back(caseQueue.getPriority(79024)); //14
    myResult.push_back(caseQueue.getPriority(76911)); //15
    caseQueue.insert(50052,88707);
    caseQueue.insert(82432,31229);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(51566,69454);
    myResult.push_back(caseQueue.getPriority(40224)); //17
    caseQueue.insert(18805,36482);
    caseQueue.insert(11563,64647);
    caseQueue.updatePriority(50883, 28074);
    caseQueue.insert(75854,36461);
    caseQueue.insert(21381,49789);
    caseQueue.insert(43532,645);
    caseQueue.insert(13488,45961);
    myResult.push_back(caseQueue.getPriority(21381)); //18
    myResult.push_back(caseQueue.getPriority(55002)); //19
    caseQueue.insert(34318,35988);
    caseQueue.insert(87894,31197);
    myResult.push_back(caseQueue.getPriority(94473)); //20
    caseQueue.insert(10672,65316);
    caseQueue.insert(55818,17791);
    caseQueue.insert(6775,21828);
    caseQueue.insert(67807,64103);
    myResult.push_back(caseQueue.getPriority(87894)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(6306,13552);
    caseQueue.insert(87304,77838);
    myResult.push_back(caseQueue.getPriority(34318)); //23
    caseQueue.updatePriority(12600, 91505);
    caseQueue.insert(4610,72373);
    caseQueue.insert(53203,40774);
    caseQueue.insert(9190,58152);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(87894)); //26
    myResult.push_back(caseQueue.getPriority(9190)); //27
    caseQueue.insert(11737,70866);
    myResult.push_back(caseQueue.getPriority(13488)); //28
    caseQueue.updatePriority(21381, 67990);
    myResult.push_back(caseQueue.getPriority(34318)); //29
    caseQueue.insert(54283,82717);
    caseQueue.insert(21324,56874);
    caseQueue.insert(2570,91980);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(2570, 78264);
    caseQueue.insert(74851,90302);
    caseQueue.updatePriority(44210, 84209);
    caseQueue.insert(36788,53753);
    myResult.push_back(caseQueue.getPriority(40224)); //31
    caseQueue.insert(54796,52686);
    myResult.push_back(caseQueue.getPriority(34318)); //32
    caseQueue.insert(25962,39588);
    caseQueue.insert(61077,79405);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(9081,65954);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(1346,57272);
    caseQueue.insert(30543,10735);
    caseQueue.insert(85256,37362);
    caseQueue.updatePriority(96347, 99686);
    caseQueue.insert(58867,87616);
    myResult.push_back(caseQueue.getPriority(51566)); //35
    caseQueue.insert(68536,64683);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(18805, 5353);
    caseQueue.insert(38489,11407);
    caseQueue.insert(15320,457);
    myResult.push_back(caseQueue.getPriority(79024)); //37
    caseQueue.insert(3736,80607);
    caseQueue.updatePriority(90141, 73200);
    caseQueue.insert(21557,16713);
    caseQueue.insert(53540,42827);
    caseQueue.insert(77841,82600);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(61077)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(95412,26017);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(61077, 90420);
    caseQueue.insert(83510,33057);
    caseQueue.updatePriority(74851, 5069);
    myResult.push_back(caseQueue.getPriority(12600)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(25171,66232);
    caseQueue.updatePriority(83510, 61927);
    caseQueue.insert(97830,80425);
    myResult.push_back(caseQueue.getPriority(13488)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(94473)); //46
    myResult.push_back(caseQueue.getPriority(11737)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(17916,90106);
    caseQueue.updatePriority(44210, 54550);
    myResult.push_back(caseQueue.getPriority(13488)); //49
    myResult.push_back(caseQueue.getPriority(90141)); //50
    caseQueue.insert(90279,10528);
    myResult.push_back(caseQueue.getPriority(54283)); //51
    caseQueue.insert(51207,18167);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(4610, 71166);
    myResult.push_back(caseQueue.getPriority(94473)); //53
    myResult.push_back(caseQueue.getPriority(21324)); //54
    caseQueue.insert(95452,67852);
    caseQueue.updatePriority(89847, 37687);
    caseQueue.insert(70050,909);
    caseQueue.updatePriority(61077, 53094);
    caseQueue.insert(65193,9999);
    static const int resultListArray[] = {-1, 24429, 51778, 37325, 37325, 85142, 59330, 25873, 38091, 83531, 78998, 58890, 66391, 62356, 96670, 82432, 37846, 49789, 82544, 99915, 31197, 43532, 35988, 6306, 55818, 31197, 58152, 45961, 35988, 6775, 37846, 35988, 50883, 87894, 69454, 30543, 62356, 15320, 79405, 18805, 38489, 91505, 74851, 45961, 21557, 99915, 70866, 95412, 45961, 73200, 82717, 90279, 99915, 56874}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(216): Basarili" << endl;
    else cout << "Case(216): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_217(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 158);

    vector<int> myResult; 
    caseQueue.updatePriority(81108, 35836);
    caseQueue.insert(37938,72029);
    caseQueue.insert(92568,51304);
    caseQueue.updatePriority(37938, 75087);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(64173,12567);
    caseQueue.insert(66683,80065);
    caseQueue.updatePriority(66683, 59503);
    caseQueue.insert(70338,5822);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(37938, 78518);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(45379,71690);
    caseQueue.insert(33990,94092);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(37938, 95254);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(74576,3311);
    myResult.push_back(caseQueue.getPriority(37938)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(37938)); //9
    caseQueue.updatePriority(37938, 91626);
    myResult.push_back(caseQueue.getPriority(37938)); //10
    myResult.push_back(caseQueue.getPriority(37938)); //11
    caseQueue.insert(64379,84578);
    caseQueue.updatePriority(37938, 46770);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(1901,81193);
    caseQueue.updatePriority(64379, 94059);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(52239, 30376);
    caseQueue.updatePriority(43378, 20709);
    caseQueue.updatePriority(48181, 86860);
    caseQueue.insert(89336,43115);
    caseQueue.insert(85232,28008);
    caseQueue.insert(80781,12113);
    caseQueue.updatePriority(85232, 77363);
    caseQueue.insert(8948,51381);
    caseQueue.insert(46906,59345);
    myResult.push_back(caseQueue.getPriority(85232)); //16
    myResult.push_back(caseQueue.getPriority(80781)); //17
    caseQueue.updatePriority(89336, 9276);
    caseQueue.updatePriority(85232, 53750);
    caseQueue.insert(90752,92817);
    caseQueue.insert(55143,98216);
    caseQueue.insert(50055,77332);
    caseQueue.insert(19716,91424);
    myResult.push_back(caseQueue.getPriority(80781)); //18
    myResult.push_back(caseQueue.getPriority(19716)); //19
    myResult.push_back(caseQueue.getPriority(19716)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(74055,76674);
    caseQueue.insert(85254,46468);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(74055, 29548);
    caseQueue.insert(41579,16296);
    caseQueue.insert(53065,71238);
    caseQueue.updatePriority(85232, 68439);
    caseQueue.updatePriority(85232, 72299);
    caseQueue.insert(96072,66672);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(55143, 78731);
    caseQueue.updatePriority(85232, 17685);
    caseQueue.insert(24246,54741);
    myResult.push_back(caseQueue.getPriority(74055)); //25
    caseQueue.insert(32459,26170);
    caseQueue.insert(64692,35521);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(21195,47824);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(85623,98866);
    caseQueue.insert(55198,31935);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(39035,76767);
    caseQueue.insert(72764,72139);
    myResult.push_back(caseQueue.getPriority(85623)); //30
    caseQueue.insert(46980,90077);
    myResult.push_back(caseQueue.getPriority(8948)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(21195)); //33
    caseQueue.insert(75033,38707);
    caseQueue.insert(61925,94481);
    caseQueue.updatePriority(55143, 70369);
    caseQueue.insert(89821,96401);
    myResult.push_back(caseQueue.getPriority(72764)); //34
    caseQueue.updatePriority(90752, 96345);
    caseQueue.insert(29795,93881);
    caseQueue.insert(59429,57727);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(8948)); //36
    myResult.push_back(caseQueue.getPriority(53065)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(72764, 22491);
    caseQueue.insert(47332,51328);
    myResult.push_back(caseQueue.getPriority(59429)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(29660,54032);
    caseQueue.insert(63015,26026);
    myResult.push_back(caseQueue.getPriority(96072)); //42
    caseQueue.updatePriority(89821, 99481);
    caseQueue.insert(41146,6204);
    caseQueue.updatePriority(41146, 77945);
    caseQueue.insert(38324,81662);
    caseQueue.insert(90279,52272);
    caseQueue.updatePriority(85623, 51084);
    myResult.push_back(caseQueue.getPriority(29795)); //43
    caseQueue.updatePriority(59429, 4597);
    myResult.push_back(caseQueue.getPriority(19716)); //44
    caseQueue.insert(56391,8617);
    caseQueue.insert(78081,48439);
    caseQueue.insert(78318,93255);
    caseQueue.insert(4900,75016);
    caseQueue.insert(82715,35028);
    caseQueue.updatePriority(78318, 45152);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(82715, 32146);
    caseQueue.insert(91023,4855);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(89821, 94843);
    caseQueue.insert(30251,62951);
    caseQueue.insert(97232,8613);
    caseQueue.updatePriority(46980, 68274);
    caseQueue.insert(22698,57697);
    caseQueue.updatePriority(78081, 98754);
    caseQueue.insert(91409,60241);
    myResult.push_back(caseQueue.getPriority(97232)); //51
    caseQueue.updatePriority(22698, 61596);
    caseQueue.insert(17709,73180);
    myResult.push_back(caseQueue.getPriority(4900)); //52
    caseQueue.updatePriority(4900, 57723);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(37069,62439);
    caseQueue.insert(22971,66052);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(55143)); //55
    caseQueue.insert(24042,8866);
    myResult.push_back(caseQueue.getPriority(37069)); //56
    caseQueue.updatePriority(50055, 26997);
    caseQueue.insert(37836,43723);
    myResult.push_back(caseQueue.getPriority(39035)); //57
    myResult.push_back(caseQueue.getPriority(29795)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(29660, 74516);
    caseQueue.insert(77610,47736);
    caseQueue.insert(87066,80183);
    caseQueue.updatePriority(53065, 83552);
    caseQueue.updatePriority(37069, 68323);
    myResult.push_back(caseQueue.getPriority(90752)); //60
    static const int resultListArray[] = {92568, 70338, 64173, 66683, 45379, 95254, 74576, 33990, 95254, 91626, 91626, 37938, 1901, 64379, -1, 77363, 12113, 12113, 91424, 91424, 89336, 80781, 85254, 41579, 29548, 85232, 32459, 74055, 55198, 98866, 51381, 64692, 47824, 72139, 75033, 51381, 71238, 21195, 57727, 72764, 47332, 66672, 93881, 91424, 59429, 56391, 91023, 63015, 82715, 78318, 8613, 75016, 97232, 85623, 70369, 62439, 76767, 93881, 24042, 96345}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(217): Basarili" << endl;
    else cout << "Case(217): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_218(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 165);

    vector<int> myResult; 
    caseQueue.insert(91727,74473);
    myResult.push_back(caseQueue.getPriority(91727)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(67892,89993);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(45834,90621);
    caseQueue.updatePriority(45834, 37595);
    caseQueue.insert(8836,29185);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(11195,25026);
    caseQueue.updatePriority(45834, 59498);
    myResult.push_back(caseQueue.getPriority(45834)); //5
    caseQueue.insert(82908,88484);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(53350,39580);
    caseQueue.insert(46014,16633);
    caseQueue.insert(13324,75467);
    caseQueue.insert(32502,8426);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(82908)); //8
    caseQueue.insert(88105,19406);
    caseQueue.updatePriority(45834, 75549);
    caseQueue.insert(29168,21461);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(73797,51231);
    myResult.push_back(caseQueue.getPriority(53350)); //11
    myResult.push_back(caseQueue.getPriority(45834)); //12
    caseQueue.insert(16849,8609);
    caseQueue.updatePriority(73797, 99181);
    caseQueue.insert(78112,51473);
    myResult.push_back(caseQueue.getPriority(53350)); //13
    caseQueue.updatePriority(29168, 27304);
    myResult.push_back(caseQueue.getPriority(16849)); //14
    caseQueue.updatePriority(53350, 67195);
    caseQueue.insert(37800,28062);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(53350, 45948);
    caseQueue.updatePriority(82908, 10666);
    myResult.push_back(caseQueue.getPriority(82908)); //16
    caseQueue.updatePriority(37800, 21968);
    myResult.push_back(caseQueue.getPriority(29168)); //17
    myResult.push_back(caseQueue.getPriority(78112)); //18
    caseQueue.updatePriority(53350, 62200);
    caseQueue.insert(70921,10465);
    caseQueue.updatePriority(82908, 97297);
    caseQueue.insert(41110,21400);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(41110)); //20
    caseQueue.updatePriority(82908, 77732);
    caseQueue.updatePriority(37800, 76417);
    myResult.push_back(caseQueue.getPriority(82908)); //21
    caseQueue.insert(25616,76887);
    caseQueue.insert(31130,5622);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(13324, 23395);
    caseQueue.insert(68067,86158);
    caseQueue.insert(79816,59902);
    myResult.push_back(caseQueue.getPriority(78112)); //23
    myResult.push_back(caseQueue.getPriority(29168)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(82908, 63029);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(63704,56554);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(22408,54292);
    myResult.push_back(caseQueue.getPriority(45834)); //28
    caseQueue.insert(31953,40070);
    caseQueue.updatePriority(82908, 57044);
    myResult.push_back(caseQueue.getPriority(68067)); //29
    caseQueue.insert(5989,13696);
    caseQueue.insert(81817,26001);
    myResult.push_back(caseQueue.getPriority(79816)); //30
    myResult.push_back(caseQueue.getPriority(45834)); //31
    caseQueue.insert(17074,65421);
    caseQueue.insert(69577,1953);
    caseQueue.insert(53329,96599);
    caseQueue.updatePriority(31953, 73314);
    caseQueue.updatePriority(53350, 76553);
    caseQueue.updatePriority(17074, 25669);
    caseQueue.insert(34246,8864);
    caseQueue.updatePriority(45834, 50998);
    caseQueue.insert(43484,88981);
    myResult.push_back(caseQueue.getPriority(53350)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(25616)); //34
    caseQueue.updatePriority(37800, 28302);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(17074, 59330);
    caseQueue.insert(88689,47071);
    caseQueue.insert(94236,31693);
    caseQueue.insert(80125,2328);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(78112)); //37
    myResult.push_back(caseQueue.getPriority(63704)); //38
    caseQueue.insert(39086,15970);
    caseQueue.insert(84635,58049);
    myResult.push_back(caseQueue.getPriority(73797)); //39
    myResult.push_back(caseQueue.getPriority(39086)); //40
    caseQueue.insert(29251,55347);
    caseQueue.updatePriority(37800, 49480);
    caseQueue.insert(4150,14924);
    myResult.push_back(caseQueue.getPriority(4150)); //41
    caseQueue.insert(21929,40109);
    caseQueue.insert(7346,4543);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(70795,57588);
    caseQueue.updatePriority(45834, 87315);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(79816)); //44
    myResult.push_back(caseQueue.getPriority(63704)); //45
    myResult.push_back(caseQueue.getPriority(45834)); //46
    myResult.push_back(caseQueue.getPriority(29251)); //47
    caseQueue.insert(44788,86291);
    caseQueue.updatePriority(63704, 35329);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(35090,22364);
    caseQueue.insert(3989,11212);
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(961,77426);
    caseQueue.insert(23122,31701);
    caseQueue.updatePriority(94236, 50106);
    myResult.push_back(caseQueue.getPriority(73797)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(73797, 39382);
    myResult.push_back(caseQueue.getPriority(84635)); //53
    caseQueue.insert(78976,59692);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(19989,89897);
    caseQueue.updatePriority(961, 48332);
    myResult.push_back(caseQueue.getPriority(23122)); //55
    caseQueue.insert(38920,57089);
    caseQueue.updatePriority(37800, 23564);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(89915,10412);
    myResult.push_back(caseQueue.getPriority(84635)); //57
    caseQueue.insert(38295,96078);
    myResult.push_back(caseQueue.getPriority(78112)); //58
    myResult.push_back(caseQueue.getPriority(961)); //59
    myResult.push_back(caseQueue.getPriority(82908)); //60
    myResult.push_back(caseQueue.getPriority(82908)); //61
    caseQueue.insert(54524,90315);
    caseQueue.insert(43973,45239);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(38295)); //63
    caseQueue.insert(7304,2838);
    caseQueue.updatePriority(79816, 41459);
    myResult.push_back(caseQueue.getPriority(43973)); //64
    caseQueue.updatePriority(21929, 89704);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(70795, 78448);
    caseQueue.insert(36433,60109);
    caseQueue.insert(50465,54092);
    caseQueue.updatePriority(23122, 98998);
    caseQueue.updatePriority(94236, 96647);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(4916,22643);
    caseQueue.insert(19410,25518);
    caseQueue.insert(83944,69776);
    caseQueue.insert(48807,12619);
    caseQueue.insert(69375,89936);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(90151,27899);
    caseQueue.insert(93605,57352);
    static const int resultListArray[] = {74473, 91727, 67892, 8836, 59498, 11195, 32502, 88484, 46014, 88105, 39580, 75549, 39580, 8609, 16849, 10666, 27304, 51473, 70921, 21400, 77732, 31130, 51473, 27304, 41110, 13324, 29168, 75549, 86158, 59902, 75549, 76553, 69577, 76887, 34246, 80125, 51473, 56554, 99181, 15970, 14924, 7346, 5989, 59902, 56554, 87315, 55347, 4150, 3989, 39086, 99181, 35090, 58049, 81817, 31701, 37800, 58049, 51473, 48332, 57044, 57044, 89915, 96078, 45239, 7304, 63704, 48807}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(218): Basarili" << endl;
    else cout << "Case(218): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_219(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 157);

    vector<int> myResult; 
    caseQueue.updatePriority(3940, 30533);
    caseQueue.insert(28183,28718);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(63741, 13345);
    caseQueue.updatePriority(14353, 46001);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(20540)); //4
    caseQueue.insert(27290,11891);
    myResult.push_back(caseQueue.getPriority(27290)); //5
    caseQueue.updatePriority(27290, 72237);
    caseQueue.updatePriority(27290, 53449);
    caseQueue.updatePriority(27290, 78363);
    caseQueue.insert(99267,40636);
    caseQueue.updatePriority(27290, 74857);
    myResult.push_back(caseQueue.getPriority(99267)); //6
    caseQueue.insert(52290,69928);
    caseQueue.updatePriority(99267, 74317);
    caseQueue.insert(40596,75129);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(99267, 47370);
    caseQueue.insert(15931,95348);
    caseQueue.updatePriority(99267, 78047);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(44498,25414);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(83605,93557);
    myResult.push_back(caseQueue.getPriority(83605)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(99267)); //12
    caseQueue.insert(10150,95674);
    caseQueue.updatePriority(99267, 32276);
    caseQueue.insert(44993,26709);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(74274,44232);
    myResult.push_back(caseQueue.getPriority(74274)); //14
    caseQueue.updatePriority(74274, 53611);
    caseQueue.updatePriority(83605, 70430);
    caseQueue.updatePriority(10150, 63151);
    myResult.push_back(caseQueue.getPriority(99267)); //15
    caseQueue.insert(30758,15742);
    caseQueue.insert(91739,61586);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(10150, 51422);
    myResult.push_back(caseQueue.getPriority(74274)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(83605)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(15931)); //21
    myResult.push_back(caseQueue.getPriority(83605)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(83605)); //24
    myResult.push_back(caseQueue.getPriority(15931)); //25
    caseQueue.insert(24133,40956);
    caseQueue.insert(33619,19377);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(41085,52345);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(57664,40598);
    caseQueue.updatePriority(91739, 30173);
    myResult.push_back(caseQueue.getPriority(15931)); //28
    myResult.push_back(caseQueue.getPriority(57664)); //29
    caseQueue.updatePriority(91739, 47398);
    caseQueue.insert(21139,5721);
    caseQueue.updatePriority(83605, 28611);
    myResult.push_back(caseQueue.getPriority(83605)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(15931, 24104);
    caseQueue.insert(72940,18552);
    caseQueue.insert(52150,45288);
    caseQueue.insert(10788,16583);
    myResult.push_back(caseQueue.getPriority(72940)); //32
    caseQueue.insert(25188,81708);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(52150, 26723);
    myResult.push_back(caseQueue.getPriority(57664)); //34
    caseQueue.insert(78370,53566);
    caseQueue.insert(37304,21309);
    myResult.push_back(caseQueue.getPriority(72940)); //35
    caseQueue.updatePriority(91739, 35777);
    caseQueue.updatePriority(41085, 10786);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(41883,63396);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(68857,87152);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(5620,87441);
    caseQueue.insert(22474,50512);
    caseQueue.updatePriority(41883, 99872);
    caseQueue.insert(4517,69482);
    caseQueue.insert(88919,95301);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(22474, 95986);
    caseQueue.insert(80650,73266);
    caseQueue.insert(2096,20285);
    caseQueue.insert(24422,21943);
    caseQueue.insert(72441,78192);
    caseQueue.insert(84776,52105);
    caseQueue.insert(71860,90068);
    caseQueue.updatePriority(22474, 69717);
    caseQueue.insert(95776,23096);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(52609,59749);
    myResult.push_back(caseQueue.getPriority(22474)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(42892,66432);
    caseQueue.updatePriority(52609, 89157);
    caseQueue.insert(13106,59960);
    caseQueue.insert(94588,11805);
    myResult.push_back(caseQueue.getPriority(13106)); //43
    caseQueue.insert(47928,61364);
    caseQueue.updatePriority(91739, 52101);
    myResult.push_back(caseQueue.getPriority(91739)); //44
    caseQueue.insert(903,8556);
    caseQueue.insert(42661,65712);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(11678,79048);
    caseQueue.insert(71284,50077);
    myResult.push_back(caseQueue.getPriority(42892)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(58105,7993);
    caseQueue.updatePriority(72441, 52112);
    myResult.push_back(caseQueue.getPriority(58105)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(57664, 80490);
    myResult.push_back(caseQueue.getPriority(91739)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(77599,89584);
    caseQueue.insert(27350,85414);
    myResult.push_back(caseQueue.getPriority(52150)); //52
    caseQueue.insert(51347,57166);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(62040,7016);
    myResult.push_back(caseQueue.getPriority(68857)); //54
    caseQueue.insert(74590,36797);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(68857)); //56
    caseQueue.updatePriority(91739, 44427);
    myResult.push_back(caseQueue.getPriority(41883)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(42661, 82176);
    caseQueue.insert(31687,13161);
    caseQueue.insert(48362,39467);
    caseQueue.insert(76146,66149);
    caseQueue.updatePriority(71284, 30756);
    myResult.push_back(caseQueue.getPriority(76146)); //59
    myResult.push_back(caseQueue.getPriority(84776)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(34331,57245);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(94766,67817);
    myResult.push_back(caseQueue.getPriority(11678)); //64
    myResult.push_back(caseQueue.getPriority(48362)); //65
    myResult.push_back(caseQueue.getPriority(68857)); //66
    caseQueue.insert(76691,27338);
    caseQueue.insert(78166,16699);
    static const int resultListArray[] = {28183, -1, -1, -1, 11891, 40636, 52290, 27290, 44498, 93557, 40596, 78047, 44993, 44232, 32276, 30758, 53611, 99267, 70430, 10150, 95348, 70430, 74274, 70430, 95348, 33619, 24133, 95348, 40598, 28611, 21139, 18552, 10788, 40598, 18552, 41085, 72940, 37304, 15931, 2096, 69717, 24422, 59960, 52101, 903, 66432, 94588, 7993, 58105, 52101, 95776, 26723, 52150, 87152, 62040, 87152, 99872, 83605, 66149, 52105, 31687, 71284, 74590, 79048, 39467, 87152}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(219): Basarili" << endl;
    else cout << "Case(219): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_220(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 149);

    vector<int> myResult; 
    caseQueue.insert(23725,51320);
    caseQueue.updatePriority(23725, 43167);
    caseQueue.insert(21039,29282);
    caseQueue.insert(89100,25470);
    myResult.push_back(caseQueue.getPriority(23725)); //1
    caseQueue.insert(25447,79456);
    myResult.push_back(caseQueue.getPriority(23725)); //2
    caseQueue.insert(54399,53397);
    caseQueue.insert(77549,33065);
    caseQueue.updatePriority(21039, 97182);
    caseQueue.insert(60768,8611);
    myResult.push_back(caseQueue.getPriority(77549)); //3
    caseQueue.updatePriority(23725, 63387);
    caseQueue.insert(1105,64337);
    caseQueue.insert(80698,11074);
    caseQueue.insert(543,66689);
    caseQueue.insert(91334,64115);
    caseQueue.updatePriority(21039, 29116);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(33779,88792);
    caseQueue.insert(558,68095);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(25447)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(81530,48511);
    myResult.push_back(caseQueue.getPriority(54399)); //10
    caseQueue.updatePriority(558, 392);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(51704,86045);
    caseQueue.insert(27314,70862);
    caseQueue.insert(31447,56412);
    caseQueue.insert(80747,91598);
    caseQueue.updatePriority(81530, 7421);
    myResult.push_back(caseQueue.getPriority(91334)); //12
    caseQueue.insert(52482,74963);
    caseQueue.insert(86056,78570);
    caseQueue.insert(95601,4886);
    myResult.push_back(caseQueue.getPriority(23725)); //13
    myResult.push_back(caseQueue.getPriority(23725)); //14
    caseQueue.insert(43956,52986);
    caseQueue.insert(68825,79577);
    caseQueue.insert(13808,59348);
    caseQueue.insert(91146,25138);
    caseQueue.updatePriority(31447, 18123);
    caseQueue.insert(62924,30693);
    caseQueue.updatePriority(91146, 55321);
    caseQueue.insert(83623,44934);
    caseQueue.updatePriority(13808, 17968);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(52482, 18497);
    myResult.push_back(caseQueue.getPriority(25447)); //18
    caseQueue.insert(6144,59198);
    caseQueue.insert(83428,70821);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(63584,69587);
    caseQueue.insert(27759,74854);
    caseQueue.updatePriority(86056, 73291);
    myResult.push_back(caseQueue.getPriority(43956)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(6144, 26872);
    caseQueue.insert(20840,40255);
    caseQueue.insert(55063,75881);
    myResult.push_back(caseQueue.getPriority(27314)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(543)); //25
    caseQueue.insert(28894,49951);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(28410,29796);
    caseQueue.insert(30299,55616);
    myResult.push_back(caseQueue.getPriority(80747)); //27
    caseQueue.insert(41261,81624);
    myResult.push_back(caseQueue.getPriority(51704)); //28
    caseQueue.updatePriority(28410, 84203);
    caseQueue.insert(17477,60560);
    caseQueue.insert(63977,50815);
    caseQueue.insert(10018,68204);
    caseQueue.updatePriority(86056, 31515);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(51704, 50485);
    caseQueue.insert(19572,34790);
    caseQueue.insert(924,29859);
    myResult.push_back(caseQueue.getPriority(27759)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(63977)); //33
    caseQueue.updatePriority(83428, 72825);
    myResult.push_back(caseQueue.getPriority(91334)); //34
    caseQueue.updatePriority(28410, 94760);
    myResult.push_back(caseQueue.getPriority(83623)); //35
    caseQueue.insert(50260,45546);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(12720,55899);
    caseQueue.insert(99467,59265);
    myResult.push_back(caseQueue.getPriority(50260)); //37
    caseQueue.insert(43161,7728);
    caseQueue.insert(76930,91674);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(23373,79034);
    myResult.push_back(caseQueue.getPriority(55063)); //39
    caseQueue.insert(26684,52719);
    myResult.push_back(caseQueue.getPriority(43956)); //40
    caseQueue.insert(17746,69030);
    caseQueue.insert(99195,56041);
    caseQueue.insert(84951,31791);
    myResult.push_back(caseQueue.getPriority(51704)); //41
    caseQueue.insert(30668,97027);
    caseQueue.updatePriority(99467, 79980);
    caseQueue.insert(3795,52446);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(53288,85071);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(51124,11666);
    caseQueue.insert(41911,63585);
    caseQueue.insert(82016,91825);
    caseQueue.insert(28752,16575);
    myResult.push_back(caseQueue.getPriority(17477)); //44
    caseQueue.insert(43483,79774);
    myResult.push_back(caseQueue.getPriority(82016)); //45
    myResult.push_back(caseQueue.getPriority(53288)); //46
    myResult.push_back(caseQueue.getPriority(12720)); //47
    caseQueue.insert(52884,43669);
    caseQueue.updatePriority(17746, 77338);
    caseQueue.insert(83616,29988);
    caseQueue.insert(61020,75920);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(16273,61468);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(71714,8593);
    caseQueue.insert(52063,72113);
    myResult.push_back(caseQueue.getPriority(41911)); //50
    caseQueue.insert(10225,98458);
    caseQueue.insert(80919,71936);
    myResult.push_back(caseQueue.getPriority(83428)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(43956, 931);
    myResult.push_back(caseQueue.getPriority(43483)); //54
    myResult.push_back(caseQueue.getPriority(12720)); //55
    caseQueue.insert(64928,13945);
    caseQueue.updatePriority(23373, 99948);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(23373)); //57
    caseQueue.insert(93732,94179);
    myResult.push_back(caseQueue.deleteMin()); //58
    static const int resultListArray[] = {43167, 43167, 33065, 60768, 80698, 89100, 79456, 21039, 77549, 53397, 558, 64115, 63387, 63387, 95601, 81530, 13808, 79456, 31447, 52986, 52482, 70862, 6144, 62924, 66689, 20840, 91598, 86045, 86056, 74854, 924, 19572, 50815, 64115, 44934, 83623, 45546, 43161, 75881, 52986, 50485, 84951, 50260, 60560, 91825, 85071, 55899, 51124, 28752, 63585, 72825, 71714, 83616, 79774, 55899, 43956, 99948, 64928}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(220): Basarili" << endl;
    else cout << "Case(220): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_221(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 152);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(25137,69727);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(17703, 96655);
    caseQueue.updatePriority(26755, 56587);
    myResult.push_back(caseQueue.getPriority(49718)); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(19385,29925);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(85906,73337);
    myResult.push_back(caseQueue.getPriority(85906)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(68527, 57529);
    caseQueue.updatePriority(23196, 34951);
    caseQueue.insert(90195,50733);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(95887,74167);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(6219, 93076);
    caseQueue.insert(81535,71164);
    caseQueue.updatePriority(81535, 99691);
    myResult.push_back(caseQueue.getPriority(81535)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(33526)); //14
    caseQueue.updatePriority(85290, 77814);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(37785,25952);
    caseQueue.updatePriority(37785, 32416);
    myResult.push_back(caseQueue.getPriority(37785)); //16
    caseQueue.insert(33304,88968);
    caseQueue.insert(31503,43659);
    myResult.push_back(caseQueue.getPriority(31503)); //17
    caseQueue.insert(12654,342);
    caseQueue.insert(24515,55982);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(1380,35695);
    caseQueue.insert(13055,19259);
    caseQueue.updatePriority(1380, 97705);
    myResult.push_back(caseQueue.getPriority(31503)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(49123,19008);
    caseQueue.insert(47803,94889);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(29891,45643);
    caseQueue.updatePriority(47803, 11391);
    caseQueue.insert(63859,7234);
    caseQueue.insert(82248,56680);
    caseQueue.insert(7749,30208);
    caseQueue.insert(68762,30596);
    caseQueue.updatePriority(31503, 86949);
    myResult.push_back(caseQueue.getPriority(29891)); //23
    myResult.push_back(caseQueue.getPriority(63859)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(31503, 81764);
    caseQueue.insert(71389,63885);
    caseQueue.updatePriority(29891, 93912);
    caseQueue.updatePriority(82248, 37579);
    caseQueue.insert(45584,19848);
    myResult.push_back(caseQueue.getPriority(31503)); //26
    myResult.push_back(caseQueue.getPriority(45584)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(55044,4972);
    myResult.push_back(caseQueue.getPriority(1380)); //30
    caseQueue.insert(14067,46939);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(72324,74490);
    caseQueue.insert(35592,17535);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(31503)); //34
    myResult.push_back(caseQueue.getPriority(29891)); //35
    caseQueue.insert(95132,21639);
    caseQueue.insert(13982,22773);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(2597,29197);
    caseQueue.insert(63116,78025);
    caseQueue.updatePriority(1380, 75547);
    caseQueue.insert(77412,27508);
    caseQueue.insert(46985,92069);
    caseQueue.updatePriority(13982, 76329);
    caseQueue.insert(82312,31858);
    caseQueue.updatePriority(14067, 16615);
    caseQueue.insert(96512,89288);
    caseQueue.insert(77174,72811);
    myResult.push_back(caseQueue.getPriority(72324)); //37
    myResult.push_back(caseQueue.getPriority(96512)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(7365,25807);
    myResult.push_back(caseQueue.getPriority(96512)); //40
    caseQueue.insert(76531,72806);
    caseQueue.updatePriority(72324, 54804);
    myResult.push_back(caseQueue.getPriority(77174)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(33304)); //43
    caseQueue.updatePriority(77412, 80719);
    caseQueue.insert(29521,59244);
    caseQueue.insert(19236,96006);
    myResult.push_back(caseQueue.getPriority(77174)); //44
    caseQueue.insert(12287,96795);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(36519,22077);
    caseQueue.insert(18856,60488);
    myResult.push_back(caseQueue.getPriority(1380)); //46
    caseQueue.updatePriority(68762, 6160);
    caseQueue.insert(64278,63282);
    myResult.push_back(caseQueue.getPriority(19236)); //47
    caseQueue.updatePriority(68762, 46052);
    myResult.push_back(caseQueue.getPriority(31503)); //48
    myResult.push_back(caseQueue.getPriority(29521)); //49
    caseQueue.updatePriority(46985, 31810);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(19236)); //51
    caseQueue.updatePriority(63116, 44912);
    caseQueue.insert(21205,48170);
    myResult.push_back(caseQueue.getPriority(64278)); //52
    caseQueue.updatePriority(18856, 35320);
    caseQueue.updatePriority(46985, 65698);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.updatePriority(63116, 18415);
    myResult.push_back(caseQueue.getPriority(13982)); //54
    myResult.push_back(caseQueue.getPriority(82248)); //55
    myResult.push_back(caseQueue.getPriority(63116)); //56
    caseQueue.updatePriority(96512, 75351);
    caseQueue.updatePriority(21205, 45591);
    caseQueue.insert(61369,41100);
    caseQueue.insert(58300,23889);
    caseQueue.insert(88011,34718);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(21425,6755);
    myResult.push_back(caseQueue.getPriority(1380)); //58
    caseQueue.insert(78840,66554);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(12287)); //61
    caseQueue.insert(84571,96087);
    myResult.push_back(caseQueue.getPriority(29891)); //62
    myResult.push_back(caseQueue.getPriority(29891)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(18856, 8865);
    caseQueue.insert(16555,19263);
    caseQueue.insert(72821,29837);
    caseQueue.insert(8188,27449);
    caseQueue.insert(52978,22536);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.getPriority(24515)); //66
    caseQueue.updatePriority(82248, 27927);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(61369, 15602);
    static const int resultListArray[] = {-1, 25137, -1, -1, 19385, 73337, 85906, -1, 90195, 95887, 99691, 81535, -1, -1, -1, 32416, 43659, 12654, 37785, 43659, 13055, 49123, 45643, 7234, 63859, 81764, 19848, 47803, 45584, 97705, 55044, 7749, 35592, 81764, 93912, 95132, 74490, 89288, 14067, 89288, 72811, 7365, 88968, 72811, 2597, 75547, 96006, 81764, 59244, 36519, 96006, 63282, 82312, 76329, 37579, 18415, 63116, 75547, 21425, 58300, 96795, 93912, 93912, 88011, 18856, 55982, 16555}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(221): Basarili" << endl;
    else cout << "Case(221): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_222(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 161);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(762)); //2
    myResult.push_back(caseQueue.getPriority(57499)); //3
    caseQueue.insert(10507,41297);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.updatePriority(77008, 35045);
    caseQueue.updatePriority(59182, 54493);
    caseQueue.insert(13397,84454);
    caseQueue.insert(93065,96035);
    caseQueue.insert(92542,9343);
    myResult.push_back(caseQueue.getPriority(93065)); //5
    caseQueue.insert(22329,47245);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(13397)); //7
    myResult.push_back(caseQueue.getPriority(22329)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(93065)); //11
    caseQueue.updatePriority(93065, 27399);
    caseQueue.insert(67393,70514);
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(67393)); //13
    caseQueue.insert(49686,21462);
    caseQueue.insert(74582,45665);
    caseQueue.insert(43306,17727);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(46043,70125);
    caseQueue.insert(22099,81382);
    myResult.push_back(caseQueue.getPriority(46043)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(98896,66516);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(41720,78434);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(22099)); //20
    caseQueue.updatePriority(22099, 18579);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(16323,15733);
    myResult.push_back(caseQueue.getPriority(41720)); //22
    myResult.push_back(caseQueue.getPriority(67393)); //23
    myResult.push_back(caseQueue.getPriority(41720)); //24
    myResult.push_back(caseQueue.getPriority(67393)); //25
    myResult.push_back(caseQueue.getPriority(41720)); //26
    caseQueue.insert(59267,13172);
    myResult.push_back(caseQueue.getPriority(41720)); //27
    caseQueue.insert(54104,10095);
    caseQueue.insert(56669,10893);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.getPriority(16323)); //31
    caseQueue.updatePriority(16323, 54264);
    caseQueue.updatePriority(16323, 97332);
    caseQueue.insert(44007,30215);
    myResult.push_back(caseQueue.getPriority(41720)); //32
    caseQueue.updatePriority(67393, 78276);
    caseQueue.updatePriority(16323, 23589);
    myResult.push_back(caseQueue.getPriority(41720)); //33
    myResult.push_back(caseQueue.getPriority(67393)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(44007, 69294);
    caseQueue.insert(37327,68269);
    caseQueue.updatePriority(37327, 23004);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(56046,19029);
    caseQueue.updatePriority(56046, 33606);
    myResult.push_back(caseQueue.getPriority(56046)); //39
    caseQueue.insert(13337,64990);
    caseQueue.insert(21667,69575);
    caseQueue.updatePriority(56046, 80554);
    caseQueue.insert(11813,93446);
    caseQueue.insert(27190,86859);
    caseQueue.insert(54617,27302);
    caseQueue.updatePriority(21667, 80275);
    myResult.push_back(caseQueue.getPriority(13337)); //40
    caseQueue.updatePriority(56046, 38611);
    caseQueue.insert(41758,35246);
    myResult.push_back(caseQueue.getPriority(11813)); //41
    caseQueue.insert(15918,66125);
    caseQueue.insert(57123,33687);
    caseQueue.insert(93169,46860);
    myResult.push_back(caseQueue.getPriority(56046)); //42
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(12429,98589);
    caseQueue.insert(70116,17007);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(53039,19397);
    caseQueue.insert(39654,11775);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(12429, 55633);
    myResult.push_back(caseQueue.getPriority(21667)); //49
    myResult.push_back(caseQueue.getPriority(41720)); //50
    myResult.push_back(caseQueue.getPriority(93169)); //51
    caseQueue.updatePriority(12429, 81144);
    caseQueue.insert(94900,13670);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(24919,6257);
    caseQueue.insert(18630,92185);
    caseQueue.insert(68230,81293);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(23259,40415);
    caseQueue.insert(40863,75702);
    myResult.push_back(caseQueue.getPriority(21667)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(32052,4304);
    caseQueue.updatePriority(27190, 26347);
    caseQueue.updatePriority(27190, 23902);
    caseQueue.insert(91338,63458);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(91338)); //57
    caseQueue.insert(23178,96577);
    caseQueue.insert(65755,93146);
    myResult.push_back(caseQueue.getPriority(23178)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(11813)); //60
    caseQueue.insert(74991,32391);
    myResult.push_back(caseQueue.getPriority(74991)); //61
    caseQueue.insert(7843,40330);
    caseQueue.updatePriority(23259, 68593);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(95098,84075);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(12429, 67151);
    myResult.push_back(caseQueue.getPriority(21667)); //65
    caseQueue.insert(50289,94247);
    caseQueue.updatePriority(65755, 35631);
    caseQueue.insert(54367,58171);
    myResult.push_back(caseQueue.getPriority(41720)); //66
    caseQueue.insert(83308,96846);
    myResult.push_back(caseQueue.getPriority(41720)); //67
    caseQueue.insert(23206,10566);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.updatePriority(23178, 68899);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(80893,11469);
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(89793,44005);
    caseQueue.insert(218,77450);
    caseQueue.insert(41526,29459);
    myResult.push_back(caseQueue.getPriority(89793)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(25270,88921);
    myResult.push_back(caseQueue.getPriority(50289)); //75
    caseQueue.updatePriority(25270, 15027);
    caseQueue.insert(26830,99715);
    caseQueue.insert(36816,40359);
    caseQueue.insert(27944,90093);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(72930,29209);
    caseQueue.insert(80686,4361);
    myResult.push_back(caseQueue.getPriority(11813)); //77
    myResult.push_back(caseQueue.getPriority(27944)); //78
    static const int resultListArray[] = {-1, -1, -1, 10507, 96035, 92542, 84454, 47245, 22329, 13397, 96035, 93065, 70514, 43306, 70125, 49686, 74582, 98896, 46043, 81382, 22099, 78434, 70514, 78434, 70514, 78434, 78434, 54104, 56669, 59267, 15733, 78434, 78434, 78276, 16323, 37327, 44007, 67393, 33606, 64990, 93446, 38611, 54617, 57123, 70116, 41758, 39654, 53039, 80275, 78434, 46860, 94900, 24919, 80275, 56046, 32052, 63458, 96577, 27190, 93446, 32391, 74991, 7843, 93169, 80275, 78434, 78434, 23206, 65755, 80893, 54367, 44005, 41526, 89793, 94247, 25270, 93446, 90093}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(222): Basarili" << endl;
    else cout << "Case(222): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_223(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 216);

    vector<int> myResult; 
    caseQueue.updatePriority(4361, 83782);
    caseQueue.insert(33687,62357);
    caseQueue.insert(39421,18666);
    caseQueue.insert(78295,94586);
    caseQueue.updatePriority(78295, 27685);
    caseQueue.updatePriority(39421, 18297);
    caseQueue.insert(12736,60111);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(8282,12838);
    myResult.push_back(caseQueue.getPriority(12736)); //2
    myResult.push_back(caseQueue.getPriority(12736)); //3
    myResult.push_back(caseQueue.getPriority(8282)); //4
    myResult.push_back(caseQueue.getPriority(33687)); //5
    caseQueue.insert(45318,16006);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(23859,95920);
    caseQueue.insert(15771,7495);
    myResult.push_back(caseQueue.getPriority(15771)); //7
    caseQueue.insert(99350,15267);
    caseQueue.insert(80876,13718);
    caseQueue.insert(85886,67940);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(85886, 43054);
    caseQueue.insert(10827,94522);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(56270,89165);
    caseQueue.insert(83871,42681);
    myResult.push_back(caseQueue.getPriority(78295)); //12
    myResult.push_back(caseQueue.getPriority(12736)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(30882,9122);
    caseQueue.insert(40385,64271);
    caseQueue.insert(56395,43915);
    caseQueue.insert(30864,69173);
    caseQueue.insert(32878,65039);
    myResult.push_back(caseQueue.getPriority(85886)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(88912,677);
    myResult.push_back(caseQueue.getPriority(12736)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(44012,11204);
    caseQueue.insert(89545,59370);
    caseQueue.updatePriority(56270, 75589);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(44526,54014);
    caseQueue.updatePriority(44526, 59212);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(10827, 56000);
    myResult.push_back(caseQueue.getPriority(89545)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(58541,48032);
    caseQueue.updatePriority(12736, 56521);
    myResult.push_back(caseQueue.getPriority(23859)); //25
    myResult.push_back(caseQueue.getPriority(40385)); //26
    caseQueue.insert(48498,20799);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(33687)); //28
    myResult.push_back(caseQueue.getPriority(12736)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(40385, 27657);
    caseQueue.updatePriority(32878, 20823);
    caseQueue.updatePriority(12736, 85551);
    caseQueue.insert(38866,76343);
    caseQueue.insert(40734,46749);
    caseQueue.insert(40749,95032);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(36415,88659);
    caseQueue.insert(25183,84422);
    caseQueue.updatePriority(30864, 82446);
    caseQueue.insert(49704,53219);
    caseQueue.insert(29665,97060);
    myResult.push_back(caseQueue.getPriority(30864)); //32
    caseQueue.updatePriority(33687, 55956);
    caseQueue.updatePriority(33687, 61943);
    caseQueue.updatePriority(40385, 87470);
    caseQueue.updatePriority(12736, 2974);
    myResult.push_back(caseQueue.getPriority(89545)); //33
    caseQueue.insert(48230,43594);
    caseQueue.insert(2192,72648);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(29665)); //35
    caseQueue.insert(86813,92870);
    caseQueue.updatePriority(44526, 73793);
    caseQueue.insert(9014,3945);
    myResult.push_back(caseQueue.getPriority(9014)); //36
    caseQueue.insert(46934,47039);
    caseQueue.insert(85190,19641);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.updatePriority(38866, 82099);
    myResult.push_back(caseQueue.getPriority(48230)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(9199,34095);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(56270)); //42
    caseQueue.updatePriority(46934, 36552);
    myResult.push_back(caseQueue.getPriority(38866)); //43
    caseQueue.updatePriority(40749, 78810);
    myResult.push_back(caseQueue.getPriority(40749)); //44
    caseQueue.insert(4917,40091);
    caseQueue.insert(54280,57895);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(83766,13978);
    caseQueue.insert(95965,64885);
    myResult.push_back(caseQueue.getPriority(23859)); //46
    caseQueue.updatePriority(89545, 79460);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(40935,81802);
    caseQueue.updatePriority(40385, 44451);
    myResult.push_back(caseQueue.getPriority(86813)); //48
    caseQueue.updatePriority(86813, 95580);
    caseQueue.insert(51897,40678);
    caseQueue.insert(10670,633);
    caseQueue.insert(44509,7358);
    caseQueue.updatePriority(29665, 79716);
    myResult.push_back(caseQueue.getPriority(40385)); //49
    caseQueue.updatePriority(44526, 62661);
    caseQueue.updatePriority(33687, 42402);
    caseQueue.insert(79858,40445);
    caseQueue.insert(72194,158);
    caseQueue.insert(99666,3663);
    caseQueue.insert(99933,64273);
    caseQueue.updatePriority(49704, 84442);
    caseQueue.insert(55184,90620);
    caseQueue.insert(22556,91436);
    myResult.push_back(caseQueue.getPriority(23859)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(55184)); //52
    caseQueue.insert(83204,28799);
    myResult.push_back(caseQueue.getPriority(44526)); //53
    caseQueue.updatePriority(2192, 53500);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(45340,77186);
    caseQueue.insert(69097,54181);
    caseQueue.insert(83335,95800);
    caseQueue.insert(98340,13537);
    myResult.push_back(caseQueue.getPriority(23859)); //55
    caseQueue.insert(55073,35611);
    caseQueue.insert(3978,61438);
    caseQueue.insert(63084,62638);
    caseQueue.updatePriority(89545, 41574);
    myResult.push_back(caseQueue.getPriority(69097)); //56
    caseQueue.updatePriority(98340, 58593);
    caseQueue.insert(89865,38010);
    caseQueue.insert(62978,85665);
    caseQueue.insert(51518,49661);
    caseQueue.insert(75551,47968);
    caseQueue.updatePriority(36415, 12738);
    myResult.push_back(caseQueue.getPriority(51897)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(60889,1123);
    caseQueue.insert(93193,23954);
    caseQueue.insert(65007,16578);
    caseQueue.updatePriority(40734, 2190);
    caseQueue.insert(3572,1446);
    caseQueue.updatePriority(25183, 40398);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(75551)); //62
    caseQueue.updatePriority(89545, 4774);
    myResult.push_back(caseQueue.getPriority(40385)); //63
    caseQueue.insert(57581,35121);
    caseQueue.insert(36065,48592);
    caseQueue.insert(74671,33954);
    caseQueue.insert(18836,35775);
    myResult.push_back(caseQueue.getPriority(74671)); //64
    myResult.push_back(caseQueue.getPriority(83335)); //65
    caseQueue.insert(78352,78480);
    caseQueue.insert(4040,83937);
    caseQueue.insert(434,78225);
    caseQueue.updatePriority(29665, 41857);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(37294,39767);
    caseQueue.insert(48028,91451);
    caseQueue.insert(51677,76926);
    myResult.push_back(caseQueue.getPriority(65007)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    myResult.push_back(caseQueue.getPriority(38866)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(82508,62305);
    caseQueue.insert(61184,6298);
    caseQueue.updatePriority(89865, 18452);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(4917, 31451);
    caseQueue.updatePriority(86813, 65016);
    caseQueue.updatePriority(38866, 78519);
    caseQueue.updatePriority(55073, 31508);
    caseQueue.insert(13217,66115);
    caseQueue.insert(33413,17229);
    caseQueue.insert(45285,63774);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(43764,88078);
    myResult.push_back(caseQueue.getPriority(29665)); //75
    caseQueue.insert(69028,62494);
    caseQueue.updatePriority(13217, 21831);
    caseQueue.updatePriority(22556, 77747);
    myResult.push_back(caseQueue.getPriority(95965)); //76
    caseQueue.insert(45554,65711);
    caseQueue.insert(92629,62303);
    myResult.push_back(caseQueue.getPriority(40749)); //77
    caseQueue.updatePriority(56270, 54576);
    myResult.push_back(caseQueue.getPriority(83335)); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    myResult.push_back(caseQueue.getPriority(78352)); //80
    caseQueue.insert(73426,60880);
    caseQueue.insert(85676,13894);
    myResult.push_back(caseQueue.getPriority(75551)); //81
    caseQueue.insert(55174,23432);
    caseQueue.updatePriority(99933, 95109);
    static const int resultListArray[] = {39421, 60111, 60111, 12838, 62357, 8282, 7495, 15771, 80876, 99350, 45318, 27685, 60111, 78295, 83871, 43054, 30882, 60111, 88912, 85886, 44012, 56395, 59370, 10827, 95920, 64271, 48498, 62357, 56521, 58541, 32878, 82446, 59370, 12736, 97060, 3945, 9014, 85190, 43594, 48230, 9199, 75589, 82099, 78810, 46934, 95920, 83766, 92870, 44451, 95920, 72194, 90620, 62661, 10670, 95920, 54181, 40678, 99666, 44509, 36415, 60889, 47968, 44451, 33954, 95800, 3572, 16578, 40734, 89545, 65007, 82099, 93193, 61184, 33413, 41857, 64885, 78810, 95800, 89865, 78480, 47968}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(223): Basarili" << endl;
    else cout << "Case(223): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_224(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 155);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(74027, 84339);
    myResult.push_back(caseQueue.getPriority(23603)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(81081)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(7149)); //6
    caseQueue.insert(30840,34413);
    caseQueue.insert(83699,79704);
    caseQueue.insert(26947,36224);
    caseQueue.insert(12908,14952);
    caseQueue.updatePriority(83699, 11583);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(30840)); //9
    myResult.push_back(caseQueue.getPriority(26947)); //10
    caseQueue.insert(24550,24644);
    caseQueue.insert(99864,84504);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(26947, 56243);
    caseQueue.updatePriority(26947, 29147);
    caseQueue.insert(15746,27526);
    caseQueue.insert(85613,80107);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(35729,94115);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(83846,89178);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(35729)); //16
    myResult.push_back(caseQueue.getPriority(83846)); //17
    myResult.push_back(caseQueue.getPriority(35729)); //18
    caseQueue.updatePriority(99864, 21880);
    caseQueue.insert(58938,69754);
    caseQueue.updatePriority(58938, 78931);
    caseQueue.insert(7519,32655);
    myResult.push_back(caseQueue.getPriority(83846)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(98763,79983);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(58484,98472);
    caseQueue.updatePriority(83846, 24488);
    caseQueue.insert(44471,39755);
    caseQueue.insert(87934,49601);
    caseQueue.updatePriority(58484, 41692);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(58484)); //24
    myResult.push_back(caseQueue.getPriority(87934)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(87934)); //28
    caseQueue.insert(13670,62228);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(45003,59287);
    caseQueue.updatePriority(13670, 25677);
    caseQueue.insert(33816,47527);
    myResult.push_back(caseQueue.getPriority(33816)); //30
    caseQueue.updatePriority(35729, 94767);
    myResult.push_back(caseQueue.getPriority(13670)); //31
    caseQueue.insert(98439,61121);
    caseQueue.updatePriority(45003, 56613);
    myResult.push_back(caseQueue.getPriority(35729)); //32
    myResult.push_back(caseQueue.getPriority(98763)); //33
    myResult.push_back(caseQueue.getPriority(33816)); //34
    caseQueue.insert(12055,23441);
    caseQueue.insert(32866,30891);
    caseQueue.insert(63213,71301);
    myResult.push_back(caseQueue.getPriority(12055)); //35
    myResult.push_back(caseQueue.getPriority(98763)); //36
    caseQueue.updatePriority(98763, 51188);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(35729, 21975);
    caseQueue.insert(73069,51842);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(45003)); //40
    myResult.push_back(caseQueue.getPriority(33816)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(8993,81391);
    caseQueue.insert(56362,60520);
    myResult.push_back(caseQueue.getPriority(8993)); //43
    caseQueue.updatePriority(33816, 30897);
    caseQueue.insert(84044,89175);
    caseQueue.updatePriority(98763, 98854);
    caseQueue.insert(49318,8432);
    myResult.push_back(caseQueue.getPriority(63213)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(47176,11589);
    caseQueue.updatePriority(84044, 34521);
    caseQueue.insert(17172,21900);
    caseQueue.insert(31406,41738);
    myResult.push_back(caseQueue.getPriority(63213)); //46
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(62686,45604);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(21905,42063);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(36023,66620);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(31263,4682);
    caseQueue.insert(80908,49344);
    caseQueue.insert(5611,35882);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(60695,30171);
    myResult.push_back(caseQueue.getPriority(80908)); //53
    caseQueue.updatePriority(21905, 19873);
    caseQueue.insert(4140,69827);
    myResult.push_back(caseQueue.getPriority(62686)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.getPriority(56362)); //56
    caseQueue.insert(27360,1263);
    caseQueue.insert(15194,30717);
    myResult.push_back(caseQueue.getPriority(8993)); //57
    caseQueue.updatePriority(63213, 41480);
    caseQueue.insert(16371,98080);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(57497,6103);
    caseQueue.insert(44640,2432);
    caseQueue.updatePriority(36023, 97254);
    myResult.push_back(caseQueue.getPriority(73069)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(99662,53205);
    caseQueue.insert(56246,89545);
    caseQueue.updatePriority(56246, 14350);
    caseQueue.insert(17889,25955);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(16371)); //63
    caseQueue.updatePriority(80908, 70467);
    myResult.push_back(caseQueue.getPriority(4140)); //64
    myResult.push_back(caseQueue.getPriority(15194)); //65
    caseQueue.insert(22685,71828);
    caseQueue.insert(78728,97830);
    caseQueue.insert(97727,21460);
    caseQueue.insert(33992,34769);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(80908)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(15412,18300);
    myResult.push_back(caseQueue.getPriority(16371)); //69
    caseQueue.insert(26570,85400);
    caseQueue.insert(17271,44777);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(50071,27112);
    caseQueue.insert(12077,25929);
    caseQueue.insert(51464,2193);
    caseQueue.insert(31048,82128);
    caseQueue.updatePriority(26570, 77479);
    myResult.push_back(caseQueue.getPriority(12077)); //71
    caseQueue.insert(19243,69031);
    caseQueue.insert(81094,10331);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(36980,58248);
    static const int resultListArray[] = {-1, -1, -1, -1, -1, -1, 83699, 12908, 34413, 36224, 24550, 15746, 26947, 30840, 85613, 94115, 89178, 94115, 89178, 99864, 7519, 58938, 83846, 41692, 49601, 44471, 58484, 49601, 87934, 47527, 25677, 94767, 79983, 47527, 23441, 79983, 12055, 35729, 13670, 56613, 47527, 32866, 81391, 71301, 49318, 71301, 47176, 17172, 33816, 84044, 31406, 31263, 49344, 45604, 21905, 60520, 81391, 27360, 51842, 44640, 57497, 56246, 98080, 69827, 30717, 97727, 70467, 17889, 98080, 15412, 25929, 51464}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(224): Basarili" << endl;
    else cout << "Case(224): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_225(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 160);

    vector<int> myResult; 
    caseQueue.updatePriority(82903, 43041);
    myResult.push_back(caseQueue.getPriority(74589)); //1
    caseQueue.insert(10400,44520);
    caseQueue.insert(52226,40631);
    caseQueue.updatePriority(52226, 18674);
    caseQueue.updatePriority(52226, 77776);
    caseQueue.insert(28260,46691);
    caseQueue.insert(36779,69961);
    caseQueue.insert(351,97554);
    myResult.push_back(caseQueue.getPriority(351)); //2
    caseQueue.insert(69442,21454);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(2597,13210);
    caseQueue.insert(62732,60322);
    myResult.push_back(caseQueue.getPriority(62732)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(52226, 10352);
    caseQueue.updatePriority(351, 69878);
    caseQueue.insert(67562,72458);
    caseQueue.updatePriority(52226, 76771);
    caseQueue.insert(34414,76472);
    caseQueue.updatePriority(52226, 71626);
    caseQueue.updatePriority(52226, 27424);
    caseQueue.insert(24836,51803);
    caseQueue.updatePriority(67562, 57430);
    caseQueue.insert(49956,78626);
    caseQueue.updatePriority(49956, 36244);
    myResult.push_back(caseQueue.getPriority(34414)); //10
    caseQueue.updatePriority(49956, 59195);
    caseQueue.updatePriority(351, 40703);
    caseQueue.insert(11495,86095);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(34414)); //12
    caseQueue.insert(17553,7431);
    caseQueue.insert(6291,41754);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(24836, 95443);
    myResult.push_back(caseQueue.getPriority(24836)); //15
    caseQueue.insert(76287,14138);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(34250,33370);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(49956)); //19
    caseQueue.updatePriority(49956, 61130);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(55266,25713);
    myResult.push_back(caseQueue.getPriority(34414)); //21
    caseQueue.insert(57181,91199);
    caseQueue.insert(26252,46683);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(57181, 25814);
    caseQueue.updatePriority(26252, 49269);
    caseQueue.updatePriority(34414, 34187);
    caseQueue.insert(16557,65094);
    myResult.push_back(caseQueue.getPriority(24836)); //23
    myResult.push_back(caseQueue.getPriority(11495)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(26252, 26524);
    myResult.push_back(caseQueue.getPriority(34414)); //26
    caseQueue.insert(3069,56561);
    caseQueue.insert(3632,49737);
    caseQueue.insert(996,62524);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(24836, 51833);
    myResult.push_back(caseQueue.getPriority(16557)); //29
    caseQueue.insert(77621,96410);
    caseQueue.insert(61174,24421);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(88044,66839);
    myResult.push_back(caseQueue.getPriority(11495)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(47096,48029);
    caseQueue.insert(87420,1952);
    caseQueue.insert(1079,33777);
    caseQueue.insert(10964,49687);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(32441,72294);
    caseQueue.insert(91623,73248);
    caseQueue.insert(39549,85483);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(70054,18341);
    caseQueue.insert(48218,54502);
    caseQueue.insert(9138,97103);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(16557)); //36
    myResult.push_back(caseQueue.getPriority(32441)); //37
    caseQueue.insert(75334,49345);
    caseQueue.insert(39376,83081);
    myResult.push_back(caseQueue.getPriority(10964)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(42927,66334);
    myResult.push_back(caseQueue.getPriority(996)); //40
    caseQueue.insert(75880,90497);
    caseQueue.insert(62474,16916);
    myResult.push_back(caseQueue.getPriority(62474)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(45772,84494);
    caseQueue.insert(25440,69734);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(42927)); //44
    caseQueue.insert(54203,94445);
    caseQueue.insert(87373,10174);
    myResult.push_back(caseQueue.getPriority(3069)); //45
    caseQueue.insert(31287,38208);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.updatePriority(54203, 16367);
    myResult.push_back(caseQueue.getPriority(31287)); //47
    caseQueue.insert(69662,58726);
    caseQueue.updatePriority(45772, 76994);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(70142,89131);
    caseQueue.insert(56099,46582);
    caseQueue.insert(81849,97116);
    myResult.push_back(caseQueue.getPriority(24836)); //50
    caseQueue.insert(59813,17123);
    caseQueue.insert(83720,83037);
    myResult.push_back(caseQueue.getPriority(39549)); //51
    caseQueue.insert(91432,41627);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(3847,32521);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(32441, 56826);
    caseQueue.insert(3990,54171);
    myResult.push_back(caseQueue.getPriority(83720)); //55
    caseQueue.insert(61096,97623);
    caseQueue.insert(17901,62822);
    myResult.push_back(caseQueue.getPriority(56099)); //56
    caseQueue.insert(65407,39448);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(49956)); //58
    caseQueue.updatePriority(56099, 59981);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(30585,10316);
    caseQueue.insert(47298,83957);
    caseQueue.insert(75494,42348);
    myResult.push_back(caseQueue.getPriority(83720)); //60
    myResult.push_back(caseQueue.getPriority(3990)); //61
    caseQueue.insert(9765,42465);
    caseQueue.insert(93597,65528);
    caseQueue.updatePriority(24836, 30297);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(16557, 6723);
    caseQueue.insert(68469,64689);
    caseQueue.insert(14005,99506);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(42927, 13381);
    caseQueue.insert(2557,93491);
    caseQueue.insert(94895,83746);
    caseQueue.updatePriority(9138, 66421);
    myResult.push_back(caseQueue.getPriority(47298)); //65
    static const int resultListArray[] = {-1, 97554, 69442, 10400, 28260, 60322, 2597, 62732, 36779, 76472, 52226, 76472, 17553, 351, 95443, 76287, 34250, 6291, 59195, 67562, 76472, 55266, 95443, 86095, 57181, 34187, 26252, 34414, 65094, 61174, 86095, 3632, 87420, 1079, 70054, 65094, 72294, 49687, 47096, 62524, 16916, 62474, 75334, 66334, 56561, 87373, 38208, 54203, 31287, 51833, 85483, 59813, 3847, 91432, 83037, 46582, 65407, 61130, 10964, 83037, 54171, 30585, 24836, 16557, 83957}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(225): Basarili" << endl;
    else cout << "Case(225): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_226(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 188);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(31396)); //2
    myResult.push_back(caseQueue.getPriority(2207)); //3
    caseQueue.insert(87390,27913);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(60158,14138);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.updatePriority(18751, 78490);
    caseQueue.insert(48809,1431);
    myResult.push_back(caseQueue.getPriority(48809)); //6
    myResult.push_back(caseQueue.getPriority(48809)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(55717)); //9
    caseQueue.insert(75655,46604);
    myResult.push_back(caseQueue.getPriority(75655)); //10
    caseQueue.insert(75436,12424);
    myResult.push_back(caseQueue.getPriority(75436)); //11
    myResult.push_back(caseQueue.getPriority(75436)); //12
    caseQueue.insert(9334,44914);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(70474,8285);
    caseQueue.insert(90880,71663);
    myResult.push_back(caseQueue.getPriority(90880)); //14
    caseQueue.insert(89890,40542);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(9334, 863);
    caseQueue.insert(16809,35183);
    caseQueue.insert(75256,40506);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(89890, 71366);
    myResult.push_back(caseQueue.getPriority(75256)); //17
    caseQueue.updatePriority(90880, 91929);
    myResult.push_back(caseQueue.getPriority(89890)); //18
    myResult.push_back(caseQueue.getPriority(89890)); //19
    myResult.push_back(caseQueue.getPriority(75256)); //20
    myResult.push_back(caseQueue.getPriority(16809)); //21
    caseQueue.insert(77272,59398);
    caseQueue.insert(40804,54259);
    caseQueue.updatePriority(77272, 45530);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(32806,85944);
    caseQueue.insert(7653,81861);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(7868,82781);
    myResult.push_back(caseQueue.getPriority(90880)); //24
    myResult.push_back(caseQueue.getPriority(7653)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(40804, 99238);
    caseQueue.insert(76490,60062);
    myResult.push_back(caseQueue.getPriority(7653)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(76741,76247);
    caseQueue.updatePriority(7868, 27522);
    caseQueue.insert(45772,19480);
    caseQueue.updatePriority(32806, 8798);
    caseQueue.insert(65758,96904);
    caseQueue.updatePriority(40804, 68113);
    caseQueue.insert(17345,26895);
    caseQueue.insert(96772,45006);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(86328,40913);
    caseQueue.updatePriority(40804, 41148);
    caseQueue.insert(21248,45796);
    myResult.push_back(caseQueue.getPriority(90880)); //32
    myResult.push_back(caseQueue.getPriority(76741)); //33
    myResult.push_back(caseQueue.getPriority(90880)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(14733,8058);
    caseQueue.insert(3319,44503);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(76741, 61556);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(90880)); //42
    myResult.push_back(caseQueue.getPriority(96772)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(1470,20222);
    caseQueue.updatePriority(65758, 50669);
    myResult.push_back(caseQueue.getPriority(65758)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(90880)); //47
    caseQueue.insert(55176,96061);
    myResult.push_back(caseQueue.getPriority(55176)); //48
    caseQueue.updatePriority(90880, 69719);
    caseQueue.insert(34341,69220);
    caseQueue.insert(71804,90598);
    caseQueue.insert(67474,12658);
    caseQueue.insert(96713,83538);
    caseQueue.insert(76209,98140);
    caseQueue.updatePriority(65758, 38090);
    myResult.push_back(caseQueue.getPriority(67474)); //49
    caseQueue.insert(74402,22262);
    caseQueue.updatePriority(96713, 63690);
    myResult.push_back(caseQueue.getPriority(76741)); //50
    caseQueue.insert(8040,87248);
    myResult.push_back(caseQueue.getPriority(71804)); //51
    caseQueue.updatePriority(21248, 27165);
    caseQueue.updatePriority(74402, 99308);
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(21248)); //53
    caseQueue.insert(4133,95145);
    caseQueue.insert(98364,23777);
    caseQueue.insert(93558,62490);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(52333,96090);
    caseQueue.insert(64253,39937);
    myResult.push_back(caseQueue.getPriority(64253)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(52333, 9625);
    caseQueue.updatePriority(8040, 30125);
    caseQueue.insert(8584,21332);
    caseQueue.updatePriority(8584, 29583);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(47329,36280);
    caseQueue.updatePriority(55176, 41201);
    caseQueue.insert(69673,9379);
    myResult.push_back(caseQueue.getPriority(7653)); //58
    caseQueue.insert(49094,36179);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(60532,68906);
    caseQueue.updatePriority(55176, 955);
    myResult.push_back(caseQueue.getPriority(7653)); //60
    caseQueue.insert(2998,38229);
    caseQueue.insert(85737,66573);
    caseQueue.updatePriority(65758, 35587);
    caseQueue.insert(61610,62186);
    caseQueue.insert(69643,97367);
    caseQueue.updatePriority(93558, 94666);
    caseQueue.insert(96361,33252);
    caseQueue.insert(57230,76555);
    myResult.push_back(caseQueue.getPriority(85737)); //61
    caseQueue.insert(86377,47794);
    caseQueue.insert(49379,38704);
    caseQueue.insert(13018,10324);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(4133, 40807);
    caseQueue.updatePriority(74402, 97271);
    caseQueue.updatePriority(49379, 24031);
    caseQueue.insert(79998,80593);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.updatePriority(76741, 91074);
    caseQueue.updatePriority(34341, 92396);
    caseQueue.updatePriority(96361, 56870);
    myResult.push_back(caseQueue.getPriority(90880)); //64
    caseQueue.updatePriority(90880, 69594);
    myResult.push_back(caseQueue.getPriority(65758)); //65
    myResult.push_back(caseQueue.getPriority(93558)); //66
    caseQueue.insert(64464,74059);
    caseQueue.updatePriority(69643, 66465);
    caseQueue.insert(80566,43114);
    myResult.push_back(caseQueue.getPriority(74402)); //67
    caseQueue.insert(59919,52965);
    caseQueue.insert(99110,82101);
    caseQueue.updatePriority(4133, 41198);
    caseQueue.updatePriority(96361, 66030);
    caseQueue.insert(26048,64929);
    myResult.push_back(caseQueue.getPriority(4133)); //68
    myResult.push_back(caseQueue.getPriority(7653)); //69
    caseQueue.insert(2942,63124);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(60532, 21411);
    caseQueue.insert(68398,8204);
    myResult.push_back(caseQueue.getPriority(71804)); //71
    caseQueue.insert(67371,24399);
    myResult.push_back(caseQueue.getPriority(96361)); //72
    caseQueue.updatePriority(59919, 5980);
    caseQueue.insert(59609,30928);
    caseQueue.updatePriority(85737, 95144);
    caseQueue.updatePriority(69643, 19064);
    caseQueue.insert(81843,20331);
    caseQueue.updatePriority(57230, 1257);
    caseQueue.updatePriority(90880, 37057);
    caseQueue.insert(28530,90650);
    caseQueue.updatePriority(34341, 31682);
    caseQueue.insert(74102,86303);
    caseQueue.updatePriority(8584, 81814);
    caseQueue.updatePriority(69643, 67344);
    myResult.push_back(caseQueue.getPriority(96361)); //73
    caseQueue.insert(40519,2807);
    caseQueue.insert(37195,6947);
    myResult.push_back(caseQueue.getPriority(68398)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(64464, 14594);
    static const int resultListArray[] = {-1, -1, -1, 87390, 60158, 1431, 1431, 48809, -1, 46604, 12424, 12424, 75436, 71663, 70474, 9334, 40506, 71366, 71366, 40506, 35183, 16809, 75256, 91929, 81861, 77272, 75655, 81861, 76490, 89890, 32806, 91929, 76247, 91929, 45772, 17345, 7868, 86328, 40804, 14733, 3319, 91929, 45006, 96772, 50669, 1470, 91929, 96061, 12658, 61556, 90598, 67474, 27165, 98364, 39937, 21248, 52333, 81861, 69673, 81861, 66573, 55176, 13018, 69719, 35587, 94666, 97271, 41198, 81861, 49379, 90598, 66030, 66030, 8204, 57230}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(226): Basarili" << endl;
    else cout << "Case(226): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_227(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 249);

    vector<int> myResult; 
    caseQueue.updatePriority(94087, 5182);
    caseQueue.insert(43913,66651);
    myResult.push_back(caseQueue.getPriority(43913)); //1
    myResult.push_back(caseQueue.getPriority(43913)); //2
    caseQueue.insert(66991,41770);
    caseQueue.updatePriority(43913, 15126);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(5755,54695);
    caseQueue.insert(17459,59730);
    caseQueue.insert(85783,91639);
    myResult.push_back(caseQueue.getPriority(17459)); //4
    caseQueue.insert(61194,27419);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(16923,5215);
    caseQueue.updatePriority(66991, 40519);
    myResult.push_back(caseQueue.getPriority(5755)); //6
    caseQueue.updatePriority(17459, 64845);
    caseQueue.insert(58966,88324);
    myResult.push_back(caseQueue.getPriority(16923)); //7
    caseQueue.updatePriority(5755, 65422);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(17459)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(5755)); //11
    caseQueue.updatePriority(17459, 58238);
    caseQueue.insert(91705,45393);
    myResult.push_back(caseQueue.getPriority(85783)); //12
    caseQueue.insert(34906,83359);
    caseQueue.insert(59236,64538);
    myResult.push_back(caseQueue.getPriority(59236)); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(98359,31220);
    caseQueue.insert(66678,61272);
    caseQueue.updatePriority(58966, 57691);
    caseQueue.insert(38286,12359);
    caseQueue.insert(46592,85802);
    caseQueue.updatePriority(17459, 43357);
    myResult.push_back(caseQueue.getPriority(66678)); //15
    myResult.push_back(caseQueue.getPriority(58966)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(34906)); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(411,83966);
    caseQueue.updatePriority(411, 90101);
    myResult.push_back(caseQueue.getPriority(5755)); //20
    myResult.push_back(caseQueue.getPriority(17459)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(58966)); //23
    caseQueue.updatePriority(5755, 94405);
    myResult.push_back(caseQueue.getPriority(5755)); //24
    caseQueue.insert(35664,62280);
    caseQueue.insert(70504,7933);
    myResult.push_back(caseQueue.getPriority(70504)); //25
    caseQueue.insert(84845,85050);
    caseQueue.insert(69,43117);
    caseQueue.insert(6764,63881);
    caseQueue.insert(58432,95264);
    caseQueue.updatePriority(84845, 85322);
    myResult.push_back(caseQueue.getPriority(69)); //26
    caseQueue.insert(80376,65263);
    caseQueue.insert(39075,62575);
    caseQueue.updatePriority(70504, 72330);
    myResult.push_back(caseQueue.getPriority(85783)); //27
    myResult.push_back(caseQueue.getPriority(46592)); //28
    myResult.push_back(caseQueue.getPriority(58432)); //29
    myResult.push_back(caseQueue.getPriority(70504)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(34906, 219);
    caseQueue.insert(61516,58931);
    myResult.push_back(caseQueue.getPriority(59236)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(61516, 6899);
    caseQueue.insert(90513,83961);
    caseQueue.insert(24397,75611);
    caseQueue.insert(38010,32507);
    myResult.push_back(caseQueue.getPriority(84845)); //34
    caseQueue.insert(38850,54235);
    caseQueue.updatePriority(84845, 21733);
    caseQueue.updatePriority(58432, 14708);
    myResult.push_back(caseQueue.getPriority(5755)); //35
    caseQueue.insert(98741,18982);
    myResult.push_back(caseQueue.getPriority(98741)); //36
    caseQueue.updatePriority(35664, 71113);
    caseQueue.updatePriority(35664, 46068);
    caseQueue.insert(12909,40894);
    caseQueue.insert(74750,74643);
    caseQueue.insert(92675,5175);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(65346,76955);
    myResult.push_back(caseQueue.getPriority(35664)); //38
    caseQueue.updatePriority(61516, 51656);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(66678, 41720);
    caseQueue.insert(31404,76149);
    caseQueue.insert(89892,36509);
    caseQueue.insert(75461,31909);
    caseQueue.insert(71357,11265);
    myResult.push_back(caseQueue.getPriority(85783)); //40
    myResult.push_back(caseQueue.getPriority(85783)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(63454,45018);
    caseQueue.updatePriority(12909, 85627);
    caseQueue.updatePriority(5755, 33877);
    caseQueue.updatePriority(80376, 66866);
    caseQueue.insert(86585,74112);
    myResult.push_back(caseQueue.getPriority(61516)); //43
    caseQueue.insert(7695,99291);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(50808,71097);
    caseQueue.updatePriority(74750, 31543);
    myResult.push_back(caseQueue.getPriority(80376)); //45
    caseQueue.insert(74876,42137);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(80576,79315);
    caseQueue.updatePriority(80576, 46018);
    caseQueue.insert(1276,32013);
    myResult.push_back(caseQueue.getPriority(31404)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.updatePriority(90513, 14833);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.updatePriority(46592, 5112);
    caseQueue.insert(610,97352);
    caseQueue.updatePriority(59236, 75792);
    caseQueue.updatePriority(58966, 48864);
    myResult.push_back(caseQueue.getPriority(63454)); //52
    caseQueue.updatePriority(35664, 161);
    caseQueue.updatePriority(38850, 74583);
    caseQueue.insert(31136,34580);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(95554,20415);
    caseQueue.updatePriority(6764, 50123);
    caseQueue.insert(14508,7558);
    caseQueue.insert(3447,12596);
    caseQueue.insert(28442,84750);
    caseQueue.insert(53160,7529);
    caseQueue.insert(89116,49829);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(13080,97595);
    caseQueue.updatePriority(38010, 10161);
    caseQueue.insert(42949,39823);
    caseQueue.updatePriority(3447, 96175);
    caseQueue.insert(64419,2790);
    caseQueue.insert(37746,30902);
    caseQueue.updatePriority(86585, 72722);
    caseQueue.updatePriority(80576, 51189);
    caseQueue.updatePriority(95554, 76411);
    caseQueue.updatePriority(31404, 80479);
    caseQueue.updatePriority(31404, 94087);
    caseQueue.insert(25458,67733);
    caseQueue.updatePriority(5755, 42805);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    myResult.push_back(caseQueue.getPriority(63454)); //59
    caseQueue.insert(72908,97475);
    caseQueue.updatePriority(95554, 82237);
    caseQueue.updatePriority(95554, 11749);
    caseQueue.updatePriority(65346, 55618);
    caseQueue.insert(97086,59537);
    caseQueue.updatePriority(72908, 47928);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(80700,12102);
    caseQueue.updatePriority(89892, 15682);
    caseQueue.insert(46384,29471);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(34622,13008);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(64823,13088);
    myResult.push_back(caseQueue.getPriority(13080)); //64
    caseQueue.updatePriority(411, 65163);
    caseQueue.insert(10807,56347);
    caseQueue.insert(84603,45262);
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(86585)); //67
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(90557,57542);
    myResult.push_back(caseQueue.getPriority(12909)); //69
    caseQueue.insert(67239,65885);
    caseQueue.insert(69013,82009);
    caseQueue.updatePriority(80376, 58187);
    caseQueue.updatePriority(80576, 67385);
    caseQueue.updatePriority(85783, 67491);
    myResult.push_back(caseQueue.getPriority(6764)); //70
    caseQueue.updatePriority(80376, 9378);
    myResult.push_back(caseQueue.getPriority(610)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(74876)); //75
    caseQueue.insert(80868,7835);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.updatePriority(39075, 69978);
    caseQueue.updatePriority(13080, 40775);
    caseQueue.insert(82797,17487);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(610)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.getPriority(3447)); //81
    myResult.push_back(caseQueue.getPriority(86585)); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(20909,1804);
    caseQueue.insert(81940,51504);
    caseQueue.insert(89747,61645);
    caseQueue.updatePriority(39075, 82110);
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(46168,80938);
    caseQueue.updatePriority(39075, 29980);
    myResult.push_back(caseQueue.getPriority(97086)); //86
    caseQueue.insert(95956,14509);
    caseQueue.insert(3981,80678);
    myResult.push_back(caseQueue.getPriority(90557)); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.updatePriority(65346, 63948);
    myResult.push_back(caseQueue.getPriority(59236)); //90
    caseQueue.insert(9317,93572);
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.updatePriority(84603, 89251);
    myResult.push_back(caseQueue.getPriority(25458)); //92
    caseQueue.updatePriority(69013, 77883);
    caseQueue.insert(46424,78669);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(6616,64380);
    myResult.push_back(caseQueue.deleteMin()); //94
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    caseQueue.insert(6722,8925);
    myResult.push_back(caseQueue.deleteMin()); //98
    myResult.push_back(caseQueue.deleteMin()); //99
    caseQueue.insert(75342,64797);
    caseQueue.insert(67906,87242);
    caseQueue.insert(50167,53857);
    caseQueue.insert(99561,97182);
    caseQueue.insert(50338,78701);
    caseQueue.insert(86527,76625);
    myResult.push_back(caseQueue.getPriority(86527)); //100
    myResult.push_back(caseQueue.getPriority(6616)); //101
    myResult.push_back(caseQueue.getPriority(67239)); //102
    caseQueue.insert(74165,2449);
    myResult.push_back(caseQueue.getPriority(89747)); //103
    caseQueue.insert(62531,60276);
    static const int resultListArray[] = {66651, 66651, 43913, 59730, 61194, 54695, 5215, 16923, 64845, 66991, 65422, 91639, 64538, 91705, 61272, 57691, 38286, 83359, 98359, 65422, 43357, 17459, 57691, 94405, 7933, 43117, 91639, 85802, 95264, 72330, 69, 64538, 34906, 85322, 94405, 18982, 92675, 46068, 58432, 91639, 91639, 71357, 51656, 98741, 66866, 84845, 76149, 74750, 75461, 1276, 90513, 45018, 35664, 46592, 53160, 14508, 64419, 38010, 45018, 95554, 37746, 80700, 34622, 97595, 64823, 89892, 72722, 46384, 85627, 50123, 97352, 80376, 31136, 42949, 42137, 80868, 82797, 13080, 97352, 66678, 96175, 72722, 74876, 20909, 5755, 59537, 57542, 95956, 39075, 75792, 63454, 67733, 72908, 58966, 89116, 6764, 81940, 6722, 61516, 76625, 64380, 65885, 61645}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(227): Basarili" << endl;
    else cout << "Case(227): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_228(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 203);

    vector<int> myResult; 
    caseQueue.updatePriority(12511, 67748);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(52009)); //2
    myResult.push_back(caseQueue.getPriority(62393)); //3
    caseQueue.updatePriority(46416, 59376);
    caseQueue.updatePriority(61574, 46460);
    myResult.push_back(caseQueue.getPriority(89872)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(13330,6089);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(97353)); //8
    caseQueue.insert(77072,70929);
    caseQueue.insert(71495,5623);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(77072, 74254);
    myResult.push_back(caseQueue.getPriority(77072)); //10
    myResult.push_back(caseQueue.getPriority(77072)); //11
    myResult.push_back(caseQueue.getPriority(77072)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(91171)); //14
    caseQueue.insert(56555,80719);
    caseQueue.insert(23458,88313);
    caseQueue.insert(29829,90432);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(29829, 54535);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(80928)); //18
    caseQueue.insert(85878,92115);
    caseQueue.updatePriority(85878, 74306);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(93773,74163);
    caseQueue.insert(27175,27346);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(58576,63413);
    caseQueue.updatePriority(58576, 67431);
    myResult.push_back(caseQueue.getPriority(93773)); //22
    caseQueue.updatePriority(58576, 61381);
    caseQueue.updatePriority(58576, 71302);
    caseQueue.updatePriority(58576, 56256);
    caseQueue.updatePriority(58576, 52843);
    myResult.push_back(caseQueue.getPriority(93773)); //23
    caseQueue.insert(19912,93996);
    caseQueue.updatePriority(19912, 12288);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(44325,17670);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(47054,23988);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(58576, 96694);
    caseQueue.insert(5205,64947);
    caseQueue.insert(66060,23787);
    caseQueue.insert(42691,8396);
    caseQueue.insert(21053,79425);
    caseQueue.insert(7221,75957);
    caseQueue.insert(74955,17447);
    caseQueue.insert(14977,14972);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(66060, 90245);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(66060)); //30
    caseQueue.updatePriority(93773, 92343);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(58576, 97288);
    caseQueue.insert(2876,51960);
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(7221)); //33
    caseQueue.updatePriority(93773, 65653);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(21053)); //35
    caseQueue.insert(35732,77439);
    myResult.push_back(caseQueue.getPriority(66060)); //36
    caseQueue.insert(35933,70362);
    caseQueue.insert(34850,19298);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(58576, 5231);
    caseQueue.insert(94008,10303);
    caseQueue.insert(58589,20030);
    myResult.push_back(caseQueue.getPriority(7221)); //38
    caseQueue.updatePriority(35933, 64560);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(35732, 21289);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(8894,13389);
    caseQueue.insert(59372,38390);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(58589, 681);
    caseQueue.insert(54354,46180);
    caseQueue.insert(90898,89);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(21053, 72389);
    caseQueue.updatePriority(66060, 80777);
    caseQueue.insert(31656,35957);
    caseQueue.insert(20829,80145);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(66060, 5517);
    caseQueue.insert(60616,80534);
    caseQueue.insert(45270,45063);
    myResult.push_back(caseQueue.getPriority(35933)); //44
    caseQueue.insert(80876,84646);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(35933, 25766);
    caseQueue.insert(13532,57704);
    myResult.push_back(caseQueue.getPriority(60616)); //46
    myResult.push_back(caseQueue.getPriority(45270)); //47
    myResult.push_back(caseQueue.getPriority(13532)); //48
    myResult.push_back(caseQueue.getPriority(31656)); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(70963,10108);
    myResult.push_back(caseQueue.getPriority(31656)); //51
    caseQueue.insert(66055,75009);
    caseQueue.insert(89993,15410);
    caseQueue.insert(96326,53009);
    caseQueue.updatePriority(20829, 5826);
    myResult.push_back(caseQueue.getPriority(60616)); //52
    caseQueue.insert(98630,14723);
    caseQueue.updatePriority(66055, 80798);
    caseQueue.insert(73534,32385);
    caseQueue.updatePriority(73534, 82522);
    caseQueue.insert(99156,65904);
    caseQueue.insert(83884,91085);
    caseQueue.insert(87682,59730);
    myResult.push_back(caseQueue.getPriority(70963)); //53
    caseQueue.insert(69359,66584);
    caseQueue.insert(61738,42113);
    myResult.push_back(caseQueue.getPriority(35933)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(13532, 49830);
    caseQueue.insert(17938,1872);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(13532)); //58
    caseQueue.insert(92663,76872);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(87682)); //60
    caseQueue.insert(98263,41502);
    caseQueue.insert(36599,89987);
    caseQueue.insert(69625,74067);
    caseQueue.updatePriority(45270, 35526);
    caseQueue.insert(2224,192);
    myResult.push_back(caseQueue.getPriority(2224)); //61
    caseQueue.insert(8573,6801);
    myResult.push_back(caseQueue.getPriority(60616)); //62
    caseQueue.insert(29318,92130);
    myResult.push_back(caseQueue.getPriority(92663)); //63
    caseQueue.updatePriority(59372, 8329);
    caseQueue.insert(42398,33831);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(79437,64264);
    myResult.push_back(caseQueue.getPriority(61738)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(96326, 77083);
    caseQueue.insert(53604,54534);
    caseQueue.insert(79534,99407);
    caseQueue.updatePriority(60616, 84720);
    caseQueue.insert(1233,60694);
    caseQueue.insert(58773,70975);
    caseQueue.updatePriority(58773, 78211);
    caseQueue.insert(19462,29349);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(10775,76223);
    caseQueue.updatePriority(98263, 45703);
    myResult.push_back(caseQueue.getPriority(98263)); //70
    myResult.push_back(caseQueue.getPriority(60616)); //71
    caseQueue.updatePriority(98263, 71401);
    myResult.push_back(caseQueue.getPriority(29318)); //72
    caseQueue.insert(1808,2894);
    caseQueue.insert(49452,16737);
    caseQueue.updatePriority(79534, 35461);
    caseQueue.insert(67786,46811);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(42398)); //74
    caseQueue.insert(35998,66395);
    caseQueue.updatePriority(66055, 60649);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(67786, 55940);
    caseQueue.insert(40942,90999);
    caseQueue.insert(85624,86318);
    myResult.push_back(caseQueue.getPriority(66055)); //76
    myResult.push_back(caseQueue.getPriority(21053)); //77
    myResult.push_back(caseQueue.getPriority(54354)); //78
    myResult.push_back(caseQueue.getPriority(29318)); //79
    myResult.push_back(caseQueue.getPriority(98263)); //80
    myResult.push_back(caseQueue.getPriority(92663)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(99234,85638);
    caseQueue.insert(97123,86051);
    caseQueue.insert(14168,98357);
    caseQueue.updatePriority(21053, 67058);
    caseQueue.insert(67597,27941);
    caseQueue.updatePriority(97123, 78290);
    myResult.push_back(caseQueue.getPriority(67786)); //83
    myResult.push_back(caseQueue.getPriority(1233)); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    myResult.push_back(caseQueue.getPriority(92663)); //88
    caseQueue.insert(4147,97601);
    static const int resultListArray[] = {-1, -1, -1, -1, -1, 13330, -1, -1, 71495, 74254, 74254, 74254, 77072, -1, 56555, 29829, 23458, -1, 85878, -1, 27175, 74163, 74163, 19912, 44325, 47054, 42691, 14977, 74955, 90245, 5205, 2876, 75957, 93773, 79425, 90245, 34850, 75957, 58576, 94008, 8894, 90898, 58589, 64560, 66060, 80534, 45063, 57704, 35957, 35732, 35957, 80534, 10108, 25766, 20829, 17938, 70963, 49830, 98630, 59730, 192, 80534, 76872, 2224, 8573, 42113, 59372, 89993, 35933, 45703, 84720, 92130, 1808, 33831, 49452, 60649, 72389, 46180, 92130, 71401, 76872, 19462, 55940, 60694, 67597, 42398, 79534, 76872}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(228): Basarili" << endl;
    else cout << "Case(228): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_229(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 225);

    vector<int> myResult; 
    caseQueue.insert(5059,99717);
    caseQueue.insert(13326,62311);
    caseQueue.insert(19655,52405);
    caseQueue.updatePriority(13326, 62755);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(5059)); //2
    caseQueue.insert(25090,31075);
    caseQueue.insert(67385,27911);
    myResult.push_back(caseQueue.getPriority(67385)); //3
    myResult.push_back(caseQueue.getPriority(67385)); //4
    caseQueue.insert(86096,17885);
    caseQueue.insert(43831,22626);
    myResult.push_back(caseQueue.getPriority(25090)); //5
    myResult.push_back(caseQueue.getPriority(13326)); //6
    myResult.push_back(caseQueue.getPriority(86096)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(5059, 24373);
    myResult.push_back(caseQueue.getPriority(5059)); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.getPriority(67385)); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(25090)); //13
    caseQueue.insert(69912,60956);
    caseQueue.updatePriority(69912, 40585);
    caseQueue.updatePriority(25090, 46191);
    myResult.push_back(caseQueue.getPriority(25090)); //14
    myResult.push_back(caseQueue.getPriority(69912)); //15
    myResult.push_back(caseQueue.getPriority(13326)); //16
    myResult.push_back(caseQueue.getPriority(13326)); //17
    caseQueue.insert(54501,15846);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(13326)); //20
    caseQueue.insert(81552,94116);
    caseQueue.insert(2364,852);
    caseQueue.insert(80698,19855);
    myResult.push_back(caseQueue.getPriority(25090)); //21
    caseQueue.insert(43689,1556);
    myResult.push_back(caseQueue.getPriority(80698)); //22
    caseQueue.updatePriority(25090, 87758);
    caseQueue.updatePriority(80698, 58122);
    myResult.push_back(caseQueue.getPriority(81552)); //23
    caseQueue.insert(86293,37454);
    caseQueue.insert(27189,15581);
    caseQueue.insert(57469,83078);
    caseQueue.insert(21828,54054);
    caseQueue.updatePriority(25090, 64461);
    myResult.push_back(caseQueue.getPriority(43689)); //24
    caseQueue.insert(87818,82656);
    myResult.push_back(caseQueue.getPriority(80698)); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(46457,51659);
    caseQueue.insert(20638,43970);
    caseQueue.insert(73116,121);
    myResult.push_back(caseQueue.getPriority(80698)); //28
    myResult.push_back(caseQueue.getPriority(81552)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(5127,61270);
    caseQueue.updatePriority(80698, 79556);
    caseQueue.insert(67831,43836);
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(21828)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.updatePriority(46457, 42381);
    caseQueue.insert(29353,43507);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(99335,53514);
    myResult.push_back(caseQueue.getPriority(20638)); //35
    myResult.push_back(caseQueue.getPriority(46457)); //36
    myResult.push_back(caseQueue.getPriority(21828)); //37
    caseQueue.insert(42680,57369);
    myResult.push_back(caseQueue.getPriority(67831)); //38
    caseQueue.updatePriority(57469, 64836);
    caseQueue.insert(826,90417);
    caseQueue.updatePriority(67831, 24918);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(58566,43295);
    caseQueue.insert(73013,92844);
    myResult.push_back(caseQueue.getPriority(81552)); //40
    caseQueue.updatePriority(25090, 41817);
    caseQueue.insert(59540,78582);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(57469)); //42
    caseQueue.insert(4355,78649);
    caseQueue.insert(24365,88423);
    caseQueue.insert(6372,29563);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(86592,95923);
    caseQueue.updatePriority(99335, 98404);
    caseQueue.updatePriority(826, 8493);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(58566)); //46
    caseQueue.insert(91339,48625);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(57469)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(15255,24436);
    myResult.push_back(caseQueue.getPriority(59540)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.updatePriority(24365, 56534);
    caseQueue.insert(9022,56228);
    myResult.push_back(caseQueue.getPriority(9022)); //57
    caseQueue.updatePriority(13326, 29883);
    caseQueue.updatePriority(99335, 16630);
    caseQueue.insert(28939,11753);
    myResult.push_back(caseQueue.getPriority(24365)); //58
    myResult.push_back(caseQueue.getPriority(87818)); //59
    caseQueue.insert(67127,95842);
    caseQueue.updatePriority(86592, 25120);
    caseQueue.updatePriority(81552, 43889);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.updatePriority(4355, 84119);
    caseQueue.insert(95365,40168);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(99218,88397);
    caseQueue.insert(6332,63586);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(62542,82724);
    caseQueue.insert(56413,11752);
    caseQueue.insert(50796,37286);
    caseQueue.updatePriority(95365, 56907);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.getPriority(59540)); //65
    caseQueue.updatePriority(62542, 53631);
    myResult.push_back(caseQueue.deleteMin()); //66
    myResult.push_back(caseQueue.getPriority(62542)); //67
    caseQueue.updatePriority(87818, 90221);
    myResult.push_back(caseQueue.getPriority(6332)); //68
    caseQueue.insert(35199,74611);
    caseQueue.insert(91781,82493);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(80698, 40781);
    caseQueue.insert(26884,3684);
    caseQueue.insert(70509,96071);
    caseQueue.updatePriority(62542, 34645);
    myResult.push_back(caseQueue.getPriority(95365)); //70
    caseQueue.insert(1049,75727);
    caseQueue.insert(13168,3559);
    caseQueue.updatePriority(6332, 44357);
    myResult.push_back(caseQueue.getPriority(26884)); //71
    caseQueue.updatePriority(99218, 3763);
    caseQueue.insert(53436,1365);
    caseQueue.insert(3418,71094);
    caseQueue.insert(31170,29351);
    myResult.push_back(caseQueue.getPriority(70509)); //72
    caseQueue.insert(60018,622);
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(86257,87145);
    caseQueue.updatePriority(24365, 8762);
    myResult.push_back(caseQueue.getPriority(59540)); //74
    caseQueue.insert(33354,50358);
    caseQueue.updatePriority(3418, 57514);
    caseQueue.updatePriority(26884, 11683);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(28112,50927);
    caseQueue.insert(59358,57108);
    caseQueue.insert(24926,24398);
    caseQueue.insert(81964,93392);
    caseQueue.updatePriority(6332, 93398);
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(93292,84631);
    caseQueue.insert(94197,21732);
    caseQueue.insert(95574,33578);
    caseQueue.insert(92619,76208);
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.getPriority(94197)); //78
    caseQueue.updatePriority(24365, 59004);
    myResult.push_back(caseQueue.getPriority(4355)); //79
    caseQueue.insert(67674,21993);
    caseQueue.updatePriority(26884, 32070);
    caseQueue.updatePriority(28112, 78884);
    caseQueue.updatePriority(95365, 30605);
    caseQueue.updatePriority(35199, 26855);
    caseQueue.insert(76918,7867);
    caseQueue.insert(47798,19164);
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.insert(92263,99332);
    caseQueue.insert(57597,60856);
    caseQueue.updatePriority(91781, 96516);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(15840,97075);
    caseQueue.updatePriority(6332, 68553);
    myResult.push_back(caseQueue.getPriority(59358)); //83
    myResult.push_back(caseQueue.getPriority(93292)); //84
    caseQueue.insert(88248,56706);
    caseQueue.insert(71636,73269);
    myResult.push_back(caseQueue.deleteMin()); //85
    myResult.push_back(caseQueue.getPriority(33354)); //86
    caseQueue.insert(35879,62096);
    caseQueue.insert(93683,445);
    caseQueue.insert(53302,64356);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.insert(88307,80746);
    caseQueue.updatePriority(95365, 61704);
    myResult.push_back(caseQueue.getPriority(1049)); //88
    myResult.push_back(caseQueue.getPriority(91781)); //89
    caseQueue.insert(55299,64217);
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.insert(48254,41828);
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(98509,26098);
    caseQueue.insert(81872,23299);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.updatePriority(95365, 42623);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.insert(99427,79715);
    caseQueue.insert(35247,1798);
    myResult.push_back(caseQueue.deleteMin()); //94
    caseQueue.insert(90546,96412);
    myResult.push_back(caseQueue.deleteMin()); //95
    caseQueue.insert(55642,17825);
    myResult.push_back(caseQueue.getPriority(92263)); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    myResult.push_back(caseQueue.getPriority(86257)); //98
    caseQueue.insert(93639,87588);
    caseQueue.updatePriority(35879, 78459);
    static const int resultListArray[] = {19655, 99717, 27911, 27911, 31075, 62755, 17885, 86096, 24373, 43831, 27911, 5059, 31075, 46191, 40585, 62755, 62755, 54501, 67385, 62755, 46191, 19855, 94116, 1556, 58122, 2364, 43689, 58122, 94116, 73116, 27189, 54054, 86293, 69912, 43970, 42381, 54054, 43836, 67831, 94116, 25090, 64836, 6372, 46457, 826, 43295, 58566, 29353, 20638, 91339, 64836, 21828, 42680, 78582, 15255, 5127, 56228, 56534, 82656, 28939, 99335, 86592, 13326, 56413, 78582, 50796, 53631, 63586, 81552, 56907, 3684, 96071, 60018, 78582, 53436, 13168, 99218, 21732, 84119, 76918, 47798, 94197, 57108, 84631, 67674, 50358, 93683, 75727, 96516, 24926, 35199, 81872, 98509, 35247, 31170, 99332, 55642, 87145}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(229): Basarili" << endl;
    else cout << "Case(229): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_230(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 202);

    vector<int> myResult; 
    caseQueue.insert(44070,88137);
    caseQueue.insert(64929,89350);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(92430,17160);
    myResult.push_back(caseQueue.getPriority(92430)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(64929, 68013);
    caseQueue.updatePriority(64929, 33820);
    myResult.push_back(caseQueue.getPriority(64929)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(70050)); //7
    caseQueue.updatePriority(28170, 85824);
    myResult.push_back(caseQueue.getPriority(26673)); //8
    caseQueue.updatePriority(63048, 54093);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(26938)); //10
    myResult.push_back(caseQueue.getPriority(1979)); //11
    caseQueue.updatePriority(33872, 65942);
    caseQueue.insert(23754,44586);
    caseQueue.updatePriority(23754, 31762);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(98216,71310);
    myResult.push_back(caseQueue.getPriority(98216)); //13
    caseQueue.updatePriority(98216, 15142);
    caseQueue.insert(49850,48017);
    caseQueue.updatePriority(49850, 45119);
    caseQueue.insert(69467,90458);
    myResult.push_back(caseQueue.getPriority(69467)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(69467)); //16
    caseQueue.insert(50959,21545);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(76434,52525);
    myResult.push_back(caseQueue.getPriority(49850)); //18
    caseQueue.insert(89456,87212);
    caseQueue.insert(74200,89864);
    caseQueue.updatePriority(74200, 99021);
    caseQueue.insert(84725,36265);
    caseQueue.insert(52819,10944);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.getPriority(84725)); //20
    myResult.push_back(caseQueue.getPriority(89456)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(41221,66939);
    caseQueue.insert(3776,31712);
    caseQueue.insert(48075,30531);
    caseQueue.insert(58541,93748);
    caseQueue.updatePriority(89456, 57088);
    caseQueue.insert(3782,13338);
    caseQueue.insert(95055,67453);
    caseQueue.updatePriority(3776, 98058);
    caseQueue.insert(77107,88029);
    caseQueue.insert(46140,10215);
    caseQueue.insert(12350,41627);
    caseQueue.insert(16796,12538);
    caseQueue.insert(13283,36085);
    caseQueue.insert(57424,5677);
    myResult.push_back(caseQueue.getPriority(3776)); //23
    caseQueue.updatePriority(46140, 63995);
    caseQueue.insert(95755,49983);
    caseQueue.insert(91160,90990);
    myResult.push_back(caseQueue.getPriority(49850)); //24
    myResult.push_back(caseQueue.getPriority(3782)); //25
    caseQueue.updatePriority(13283, 34657);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(59172,35385);
    caseQueue.insert(81800,58730);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(77107, 16491);
    caseQueue.updatePriority(59172, 42399);
    caseQueue.insert(75094,66390);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(41221, 84760);
    caseQueue.insert(25592,40697);
    caseQueue.insert(42357,53176);
    caseQueue.insert(91458,52207);
    myResult.push_back(caseQueue.getPriority(81800)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(74200)); //32
    caseQueue.insert(76500,56393);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(81800)); //34
    caseQueue.insert(34001,32612);
    caseQueue.insert(20898,17733);
    caseQueue.insert(21701,34233);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(39779,28713);
    caseQueue.insert(95132,33762);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(21701, 43033);
    caseQueue.updatePriority(76500, 21487);
    caseQueue.insert(78845,60719);
    myResult.push_back(caseQueue.getPriority(41221)); //37
    caseQueue.insert(70476,93453);
    myResult.push_back(caseQueue.getPriority(95132)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(42790,50693);
    caseQueue.insert(48897,94017);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(33031,48633);
    caseQueue.updatePriority(91458, 77484);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(75094, 40178);
    caseQueue.updatePriority(91458, 15904);
    caseQueue.updatePriority(48897, 31013);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(78845)); //43
    myResult.push_back(caseQueue.getPriority(48897)); //44
    caseQueue.updatePriority(76434, 47232);
    myResult.push_back(caseQueue.getPriority(70476)); //45
    myResult.push_back(caseQueue.getPriority(91160)); //46
    caseQueue.insert(32962,64848);
    caseQueue.insert(60798,55993);
    caseQueue.updatePriority(58541, 50919);
    caseQueue.insert(86132,60756);
    caseQueue.insert(36517,43780);
    myResult.push_back(caseQueue.getPriority(86132)); //47
    caseQueue.insert(75039,34204);
    caseQueue.insert(55461,6030);
    caseQueue.updatePriority(58541, 97838);
    caseQueue.insert(70251,53135);
    caseQueue.insert(7950,84541);
    caseQueue.insert(92394,50298);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(86132, 88122);
    myResult.push_back(caseQueue.getPriority(32962)); //49
    caseQueue.insert(22065,77079);
    myResult.push_back(caseQueue.getPriority(70476)); //50
    caseQueue.updatePriority(95755, 83109);
    myResult.push_back(caseQueue.getPriority(86132)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(21701)); //53
    myResult.push_back(caseQueue.getPriority(69467)); //54
    caseQueue.insert(76538,38521);
    myResult.push_back(caseQueue.getPriority(70251)); //55
    caseQueue.insert(96570,47199);
    caseQueue.insert(4402,43105);
    myResult.push_back(caseQueue.getPriority(70476)); //56
    caseQueue.updatePriority(33031, 27096);
    caseQueue.insert(5713,2299);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(42790, 3289);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(13589,33199);
    caseQueue.updatePriority(46140, 19481);
    caseQueue.insert(18087,2758);
    myResult.push_back(caseQueue.getPriority(3776)); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(32457,4401);
    caseQueue.updatePriority(25592, 58354);
    myResult.push_back(caseQueue.deleteMin()); //62
    myResult.push_back(caseQueue.getPriority(46140)); //63
    caseQueue.updatePriority(69467, 57760);
    caseQueue.updatePriority(96570, 26146);
    caseQueue.insert(93202,61272);
    caseQueue.updatePriority(59172, 83085);
    myResult.push_back(caseQueue.getPriority(75094)); //64
    caseQueue.insert(78164,17086);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(886,10471);
    caseQueue.insert(90061,21730);
    caseQueue.insert(76398,6581);
    caseQueue.insert(70126,64108);
    myResult.push_back(caseQueue.getPriority(25592)); //66
    myResult.push_back(caseQueue.getPriority(70476)); //67
    caseQueue.insert(66981,39228);
    caseQueue.updatePriority(70126, 34758);
    caseQueue.insert(3392,59608);
    caseQueue.insert(7609,78936);
    myResult.push_back(caseQueue.getPriority(7950)); //68
    myResult.push_back(caseQueue.getPriority(25592)); //69
    myResult.push_back(caseQueue.getPriority(78845)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(33140,32428);
    caseQueue.insert(73653,69);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(80353,37145);
    caseQueue.insert(47548,52666);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(33140, 60484);
    caseQueue.insert(42224,60578);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.deleteMin()); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(16521,34454);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(36517, 99392);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(30851,25379);
    myResult.push_back(caseQueue.getPriority(92394)); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(40098,10603);
    caseQueue.updatePriority(70476, 97713);
    caseQueue.insert(23553,82163);
    caseQueue.insert(35659,52375);
    caseQueue.insert(73224,93245);
    caseQueue.updatePriority(70476, 61434);
    static const int resultListArray[] = {44070, 17160, 92430, 33820, 64929, -1, -1, -1, -1, -1, -1, 23754, 71310, 90458, 98216, 90458, 50959, 45119, 52819, 36265, 87212, 84725, 98058, 45119, 13338, 57424, 16796, 3782, 77107, 58730, 48075, 99021, 13283, 58730, 20898, 39779, 84760, 33762, 76500, 34001, 95132, 91458, 60719, 31013, 93453, 90990, 60756, 55461, 64848, 93453, 88122, 48897, 43033, 90458, 53135, 93453, 5713, 33031, 42790, 98058, 18087, 32457, 19481, 40178, 78164, 58354, 93453, 84541, 58354, 60719, 76398, 886, 46140, 73653, 90061, 96570, 13589, 75039, 16521, 70126, 50298, 30851}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(230): Basarili" << endl;
    else cout << "Case(230): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_231(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 147);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(27170)); //1
    caseQueue.insert(61515,587);
    caseQueue.insert(28303,8674);
    myResult.push_back(caseQueue.deleteMin()); //2
    myResult.push_back(caseQueue.getPriority(28303)); //3
    myResult.push_back(caseQueue.getPriority(28303)); //4
    myResult.push_back(caseQueue.getPriority(28303)); //5
    caseQueue.insert(30535,21628);
    caseQueue.updatePriority(28303, 32971);
    caseQueue.insert(10468,60812);
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(64929,65649);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(68237,16545);
    caseQueue.updatePriority(10468, 27875);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(27557,95626);
    caseQueue.insert(4581,37345);
    caseQueue.insert(36383,15092);
    caseQueue.insert(61685,2648);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(25145,76709);
    myResult.push_back(caseQueue.getPriority(25145)); //10
    caseQueue.insert(49538,91624);
    caseQueue.updatePriority(4581, 93178);
    myResult.push_back(caseQueue.getPriority(25145)); //11
    caseQueue.updatePriority(36383, 69432);
    caseQueue.insert(89654,62503);
    caseQueue.updatePriority(25145, 6585);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(49538, 97284);
    caseQueue.insert(41572,84471);
    caseQueue.updatePriority(41572, 74495);
    caseQueue.insert(85480,33458);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(49538, 65899);
    caseQueue.updatePriority(4581, 71527);
    caseQueue.insert(80103,92123);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(27557)); //16
    caseQueue.insert(29824,42170);
    myResult.push_back(caseQueue.getPriority(80103)); //17
    caseQueue.insert(91904,68901);
    caseQueue.insert(81931,91768);
    caseQueue.insert(731,32332);
    caseQueue.insert(49076,17541);
    caseQueue.insert(50371,31526);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(64384,98997);
    caseQueue.insert(3839,50548);
    myResult.push_back(caseQueue.getPriority(81931)); //19
    caseQueue.insert(98363,13322);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(81951,52346);
    caseQueue.updatePriority(80103, 69931);
    caseQueue.insert(37674,79337);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.getPriority(81951)); //22
    caseQueue.updatePriority(41572, 66462);
    caseQueue.insert(91577,18187);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(3839, 78063);
    caseQueue.updatePriority(41572, 96560);
    caseQueue.insert(64048,68248);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(73557,74071);
    caseQueue.insert(49382,22473);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(64048, 32716);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(80103)); //28
    caseQueue.insert(57659,72053);
    myResult.push_back(caseQueue.getPriority(64384)); //29
    caseQueue.insert(64401,99459);
    caseQueue.insert(64907,607);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(66103,58024);
    caseQueue.insert(99403,86136);
    caseQueue.insert(11952,1615);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(12784,87322);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(221,228);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(99403)); //34
    caseQueue.insert(50353,94105);
    myResult.push_back(caseQueue.getPriority(64929)); //35
    caseQueue.updatePriority(81931, 37865);
    myResult.push_back(caseQueue.getPriority(4581)); //36
    myResult.push_back(caseQueue.getPriority(27557)); //37
    caseQueue.updatePriority(49538, 48491);
    caseQueue.insert(50470,61642);
    caseQueue.insert(65128,52798);
    caseQueue.updatePriority(12784, 89061);
    myResult.push_back(caseQueue.getPriority(12784)); //38
    caseQueue.updatePriority(49538, 9884);
    caseQueue.insert(31406,75323);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(70759,97364);
    caseQueue.updatePriority(70759, 81158);
    caseQueue.insert(79408,42125);
    caseQueue.insert(95295,27464);
    myResult.push_back(caseQueue.getPriority(66103)); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(99403, 54880);
    caseQueue.insert(76578,38918);
    myResult.push_back(caseQueue.getPriority(3839)); //43
    myResult.push_back(caseQueue.getPriority(76578)); //44
    caseQueue.insert(55759,58291);
    myResult.push_back(caseQueue.getPriority(41572)); //45
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(62974,46781);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.updatePriority(73557, 24279);
    caseQueue.insert(68897,15496);
    caseQueue.insert(34092,46034);
    myResult.push_back(caseQueue.getPriority(99403)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(4581)); //50
    caseQueue.updatePriority(80103, 10302);
    caseQueue.insert(76208,77414);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(47881,43130);
    caseQueue.updatePriority(64401, 2427);
    caseQueue.updatePriority(47881, 94692);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(31406, 56908);
    caseQueue.insert(20386,35337);
    caseQueue.insert(40494,41197);
    caseQueue.updatePriority(50353, 14912);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(82827,8926);
    myResult.push_back(caseQueue.getPriority(66103)); //54
    caseQueue.insert(30296,23952);
    caseQueue.updatePriority(73557, 45257);
    myResult.push_back(caseQueue.deleteMin()); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(33709,35230);
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(88269,81975);
    myResult.push_back(caseQueue.getPriority(50470)); //58
    caseQueue.updatePriority(88269, 17933);
    caseQueue.insert(3042,45365);
    myResult.push_back(caseQueue.deleteMin()); //59
    static const int resultListArray[] = {-1, 61515, 8674, 8674, 8674, 30535, 28303, 68237, 61685, 76709, 76709, 25145, 10468, 85480, 89654, 95626, 92123, 49076, 91768, 98363, 50371, 52346, 91577, 731, 49382, 29824, 64048, 69931, 98997, 64907, 11952, 81951, 221, 86136, 65649, 71527, 95626, 89061, 49538, 58024, 95295, 81931, 78063, 38918, 96560, 76578, 79408, 54880, 68897, 71527, 80103, 64401, 50353, 58024, 82827, 30296, 33709, 61642, 88269}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(231): Basarili" << endl;
    else cout << "Case(231): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_232(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 115);

    vector<int> myResult; 
    caseQueue.updatePriority(90454, 63701);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(47097)); //2
    caseQueue.insert(56021,67467);
    caseQueue.updatePriority(56021, 42142);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(52291,23055);
    caseQueue.insert(56000,58823);
    caseQueue.insert(36346,57897);
    caseQueue.insert(76611,75416);
    myResult.push_back(caseQueue.deleteMin()); //4
    caseQueue.insert(40889,25140);
    myResult.push_back(caseQueue.getPriority(56000)); //5
    caseQueue.updatePriority(40889, 11440);
    myResult.push_back(caseQueue.getPriority(40889)); //6
    caseQueue.updatePriority(76611, 71142);
    caseQueue.insert(12965,5827);
    caseQueue.insert(40528,27062);
    caseQueue.insert(33704,39341);
    caseQueue.updatePriority(33704, 65368);
    myResult.push_back(caseQueue.getPriority(33704)); //7
    caseQueue.insert(29495,59668);
    caseQueue.insert(74358,57996);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(76611)); //10
    caseQueue.insert(68889,51076);
    caseQueue.updatePriority(36346, 77964);
    caseQueue.insert(14327,78791);
    caseQueue.insert(77373,4887);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(63789,1629);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(61935,1357);
    myResult.push_back(caseQueue.getPriority(56000)); //13
    caseQueue.insert(4248,47118);
    caseQueue.updatePriority(68889, 33083);
    caseQueue.insert(11373,15174);
    caseQueue.insert(10010,88611);
    caseQueue.insert(94864,66276);
    caseQueue.insert(81474,9168);
    myResult.push_back(caseQueue.getPriority(94864)); //14
    myResult.push_back(caseQueue.getPriority(56000)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(56000)); //17
    caseQueue.insert(35011,71532);
    caseQueue.insert(15342,24884);
    myResult.push_back(caseQueue.getPriority(74358)); //18
    caseQueue.insert(60382,28323);
    myResult.push_back(caseQueue.getPriority(94864)); //19
    caseQueue.insert(4001,23010);
    myResult.push_back(caseQueue.getPriority(15342)); //20
    caseQueue.insert(11908,61059);
    caseQueue.insert(61910,74864);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(17930,27603);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(36346, 95458);
    caseQueue.insert(23825,74180);
    caseQueue.updatePriority(11908, 24621);
    caseQueue.updatePriority(40528, 39886);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(2922,91323);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(2922, 8847);
    myResult.push_back(caseQueue.getPriority(61910)); //27
    caseQueue.insert(41833,59221);
    caseQueue.insert(9629,56284);
    caseQueue.updatePriority(40528, 71093);
    caseQueue.insert(20686,37636);
    myResult.push_back(caseQueue.getPriority(29495)); //28
    caseQueue.insert(23630,406);
    caseQueue.updatePriority(9629, 55796);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(10010)); //30
    myResult.push_back(caseQueue.getPriority(29495)); //31
    myResult.push_back(caseQueue.getPriority(56000)); //32
    myResult.push_back(caseQueue.getPriority(9629)); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(54658,94224);
    myResult.push_back(caseQueue.getPriority(54658)); //35
    caseQueue.updatePriority(10010, 14313);
    caseQueue.insert(52369,47617);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(20686, 1377);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.updatePriority(23825, 68791);
    myResult.push_back(caseQueue.getPriority(54658)); //40
    myResult.push_back(caseQueue.getPriority(9629)); //41
    caseQueue.updatePriority(52369, 628);
    caseQueue.insert(78909,44841);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(21244,55306);
    caseQueue.updatePriority(36346, 79364);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(94935,24465);
    caseQueue.insert(41597,74836);
    caseQueue.insert(75324,97111);
    caseQueue.insert(98317,6920);
    caseQueue.insert(16184,18424);
    caseQueue.insert(94038,59853);
    caseQueue.insert(96375,64910);
    caseQueue.updatePriority(74358, 87304);
    caseQueue.insert(17131,79411);
    caseQueue.insert(8943,41693);
    caseQueue.updatePriority(56000, 46099);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(43706,61752);
    caseQueue.insert(57362,61647);
    caseQueue.insert(99194,79731);
    caseQueue.insert(50165,16700);
    static const int resultListArray[] = {-1, -1, 56021, 52291, 58823, 11440, 65368, 12965, 40889, 71142, 77373, 63789, 58823, 66276, 58823, 61935, 58823, 57996, 66276, 24884, 81474, 11373, 4001, 11908, 15342, 17930, 74864, 59668, 23630, 88611, 59668, 58823, 55796, 2922, 94224, 10010, 60382, 20686, 68889, 94224, 55796, 52369, 78909, 98317}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(232): Basarili" << endl;
    else cout << "Case(232): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_233(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 123);

    vector<int> myResult; 
    caseQueue.insert(86393,7273);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(18359, 38037);
    caseQueue.updatePriority(56886, 19862);
    caseQueue.insert(91673,11841);
    caseQueue.insert(83357,85155);
    caseQueue.insert(8780,95920);
    caseQueue.updatePriority(91673, 48763);
    caseQueue.insert(99465,76215);
    caseQueue.insert(16166,43958);
    caseQueue.insert(34124,48056);
    caseQueue.insert(99477,47206);
    caseQueue.insert(34742,51758);
    caseQueue.updatePriority(91673, 97180);
    caseQueue.insert(15170,18467);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(34742, 79937);
    caseQueue.insert(6025,19609);
    caseQueue.insert(47023,44415);
    caseQueue.insert(96204,98048);
    caseQueue.updatePriority(6025, 26449);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(92900,62924);
    myResult.push_back(caseQueue.getPriority(96204)); //4
    caseQueue.insert(98033,36216);
    myResult.push_back(caseQueue.getPriority(34124)); //5
    myResult.push_back(caseQueue.getPriority(34742)); //6
    caseQueue.updatePriority(92900, 57421);
    caseQueue.insert(77652,20167);
    caseQueue.insert(20725,65211);
    caseQueue.insert(24335,6930);
    caseQueue.insert(28698,54831);
    myResult.push_back(caseQueue.getPriority(20725)); //7
    caseQueue.insert(54087,15434);
    caseQueue.updatePriority(98033, 90156);
    caseQueue.insert(52275,74491);
    caseQueue.insert(36548,51037);
    caseQueue.insert(56440,54324);
    caseQueue.insert(80223,36440);
    myResult.push_back(caseQueue.getPriority(83357)); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.updatePriority(91673, 38227);
    caseQueue.updatePriority(47023, 12813);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(28698, 96250);
    caseQueue.updatePriority(80223, 83480);
    caseQueue.updatePriority(99477, 3356);
    caseQueue.updatePriority(20725, 4489);
    caseQueue.updatePriority(98033, 46612);
    caseQueue.insert(30103,82782);
    caseQueue.insert(90121,16537);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.updatePriority(16166, 71990);
    caseQueue.insert(99201,94103);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(76417,22111);
    caseQueue.insert(56151,7596);
    caseQueue.updatePriority(8780, 81077);
    caseQueue.updatePriority(52275, 15849);
    caseQueue.insert(29356,78429);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(81709,8844);
    caseQueue.updatePriority(34742, 24140);
    caseQueue.insert(78493,36968);
    caseQueue.updatePriority(16166, 13679);
    caseQueue.insert(53028,65730);
    caseQueue.insert(25665,81178);
    caseQueue.insert(2353,71460);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(2353, 61587);
    caseQueue.insert(19996,28107);
    caseQueue.insert(60204,98691);
    myResult.push_back(caseQueue.getPriority(53028)); //18
    caseQueue.updatePriority(52275, 86850);
    caseQueue.insert(52603,90195);
    myResult.push_back(caseQueue.getPriority(28698)); //19
    myResult.push_back(caseQueue.getPriority(60204)); //20
    caseQueue.insert(45221,73832);
    myResult.push_back(caseQueue.deleteMin()); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(99624,87267);
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(32327,84340);
    caseQueue.insert(95004,39397);
    myResult.push_back(caseQueue.getPriority(96204)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.updatePriority(2353, 70257);
    caseQueue.insert(54807,49326);
    caseQueue.insert(40890,36409);
    caseQueue.insert(34040,43195);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(83357, 75403);
    caseQueue.insert(95657,7775);
    caseQueue.insert(19603,91163);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(52639,52554);
    caseQueue.updatePriority(54807, 34309);
    caseQueue.updatePriority(60204, 67238);
    caseQueue.insert(51649,48371);
    caseQueue.updatePriority(51649, 44160);
    caseQueue.insert(87247,23212);
    myResult.push_back(caseQueue.getPriority(92900)); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(60204)); //35
    caseQueue.insert(86510,50213);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(47194,13681);
    caseQueue.insert(64891,91880);
    myResult.push_back(caseQueue.getPriority(92900)); //37
    caseQueue.updatePriority(25665, 12846);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(98036,2807);
    caseQueue.updatePriority(28698, 1449);
    myResult.push_back(caseQueue.getPriority(52603)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    static const int resultListArray[] = {86393, 15170, 6025, 98048, 48056, 79937, 65211, 85155, 24335, 54087, 77652, 47023, 99477, 20725, 90121, 56151, 81709, 65730, 96250, 98691, 16166, 76417, 34742, 19996, 78493, 98048, 91673, 40890, 95004, 34040, 95657, 57421, 87247, 54807, 67238, 51649, 57421, 25665, 90195, 28698}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(233): Basarili" << endl;
    else cout << "Case(233): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_234(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 133);

    vector<int> myResult; 
    caseQueue.insert(86693,54235);
    myResult.push_back(caseQueue.getPriority(86693)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(6859, 60461);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(47630, 6974);
    myResult.push_back(caseQueue.getPriority(82205)); //8
    myResult.push_back(caseQueue.getPriority(99120)); //9
    caseQueue.updatePriority(66597, 78977);
    caseQueue.insert(90887,36868);
    caseQueue.insert(51927,70247);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(7239, 13001);
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.insert(47305,57753);
    caseQueue.insert(21690,51612);
    myResult.push_back(caseQueue.getPriority(47305)); //14
    caseQueue.insert(57142,24688);
    caseQueue.insert(68905,62795);
    caseQueue.updatePriority(68905, 93529);
    myResult.push_back(caseQueue.getPriority(21690)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(68905, 72088);
    caseQueue.insert(27387,57326);
    myResult.push_back(caseQueue.getPriority(27387)); //19
    caseQueue.updatePriority(27387, 97678);
    caseQueue.insert(73485,59037);
    caseQueue.insert(35237,77232);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(87957,44175);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(72739,69761);
    myResult.push_back(caseQueue.getPriority(72739)); //22
    myResult.push_back(caseQueue.getPriority(27387)); //23
    caseQueue.insert(59269,71631);
    caseQueue.insert(82949,66981);
    myResult.push_back(caseQueue.getPriority(82949)); //24
    caseQueue.insert(84424,65475);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(68905, 27501);
    caseQueue.updatePriority(27387, 29342);
    caseQueue.insert(89576,20652);
    caseQueue.insert(90533,36902);
    caseQueue.updatePriority(68905, 84209);
    myResult.push_back(caseQueue.getPriority(72739)); //27
    caseQueue.insert(42536,58608);
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.insert(24951,24129);
    caseQueue.insert(69796,18960);
    myResult.push_back(caseQueue.getPriority(42536)); //29
    myResult.push_back(caseQueue.getPriority(68905)); //30
    caseQueue.insert(49799,32444);
    caseQueue.updatePriority(24951, 3495);
    myResult.push_back(caseQueue.getPriority(72739)); //31
    caseQueue.insert(60331,39687);
    caseQueue.insert(19629,24455);
    caseQueue.updatePriority(72739, 42477);
    caseQueue.updatePriority(59269, 93864);
    myResult.push_back(caseQueue.getPriority(69796)); //32
    myResult.push_back(caseQueue.getPriority(72739)); //33
    caseQueue.insert(38506,31367);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(12670,68183);
    caseQueue.insert(15063,84791);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(28875,91302);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(90533)); //37
    caseQueue.insert(61199,38584);
    caseQueue.insert(56410,90195);
    caseQueue.updatePriority(60331, 37106);
    caseQueue.insert(21764,45650);
    caseQueue.updatePriority(38506, 54385);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(4650,6388);
    caseQueue.insert(73319,5184);
    caseQueue.insert(78359,27441);
    caseQueue.updatePriority(21764, 15908);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(92919,44253);
    caseQueue.insert(4306,57320);
    caseQueue.insert(34362,84502);
    myResult.push_back(caseQueue.getPriority(68905)); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(35237)); //43
    caseQueue.insert(33952,76590);
    myResult.push_back(caseQueue.getPriority(34362)); //44
    myResult.push_back(caseQueue.getPriority(21764)); //45
    caseQueue.updatePriority(34362, 49954);
    caseQueue.insert(88787,85312);
    caseQueue.updatePriority(88787, 3367);
    caseQueue.insert(25595,79154);
    caseQueue.insert(67920,42500);
    caseQueue.insert(68225,39651);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(75001,43151);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(14287,39847);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(79148,7996);
    myResult.push_back(caseQueue.getPriority(92919)); //50
    caseQueue.insert(38870,52307);
    caseQueue.updatePriority(38870, 32166);
    myResult.push_back(caseQueue.getPriority(25595)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(68372,56038);
    caseQueue.insert(28017,2304);
    caseQueue.updatePriority(59269, 79542);
    caseQueue.insert(50331,40724);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(42536)); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(38506, 60409);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(17616,90521);
    myResult.push_back(caseQueue.getPriority(33952)); //57
    caseQueue.updatePriority(68905, 17677);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(43320,54844);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.updatePriority(28875, 8988);
    caseQueue.insert(24368,77456);
    static const int resultListArray[] = {54235, 86693, -1, -1, -1, -1, -1, -1, -1, 90887, 51927, -1, -1, 57753, 51612, 57142, 21690, 47305, 57326, 73485, 87957, 69761, 97678, 66981, 84424, 82949, 69761, 89576, 58608, 84209, 69761, 18960, 42477, 24951, 69796, 19629, 36902, 27387, 49799, 73319, 84209, 4650, 77232, 84502, 15908, 88787, 21764, 78359, 90533, 44253, 79154, 79148, 28017, 58608, 38870, 60331, 76590, 68905, 61199}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(234): Basarili" << endl;
    else cout << "Case(234): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_235(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 109);

    vector<int> myResult; 
    caseQueue.insert(5099,86487);
    myResult.push_back(caseQueue.getPriority(5099)); //1
    caseQueue.insert(88630,30689);
    myResult.push_back(caseQueue.getPriority(88630)); //2
    caseQueue.updatePriority(88630, 29180);
    caseQueue.insert(35102,6664);
    caseQueue.insert(63473,45936);
    caseQueue.updatePriority(63473, 34261);
    myResult.push_back(caseQueue.getPriority(35102)); //3
    myResult.push_back(caseQueue.getPriority(35102)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(45547,74439);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(45547, 95420);
    caseQueue.insert(63650,97996);
    caseQueue.insert(5335,50544);
    myResult.push_back(caseQueue.getPriority(45547)); //8
    caseQueue.insert(65383,96374);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.getPriority(63650)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(52528,69516);
    caseQueue.insert(71202,21991);
    myResult.push_back(caseQueue.getPriority(65383)); //12
    caseQueue.insert(7989,66183);
    caseQueue.updatePriority(65383, 57981);
    caseQueue.updatePriority(52528, 40360);
    caseQueue.insert(84553,57359);
    caseQueue.updatePriority(45547, 6452);
    myResult.push_back(caseQueue.getPriority(63650)); //13
    myResult.push_back(caseQueue.getPriority(84553)); //14
    myResult.push_back(caseQueue.getPriority(65383)); //15
    caseQueue.updatePriority(71202, 67962);
    caseQueue.insert(37592,94021);
    caseQueue.insert(16872,51181);
    caseQueue.insert(90172,89901);
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.getPriority(65383)); //18
    caseQueue.updatePriority(37592, 717);
    myResult.push_back(caseQueue.getPriority(16872)); //19
    myResult.push_back(caseQueue.getPriority(7989)); //20
    myResult.push_back(caseQueue.getPriority(90172)); //21
    caseQueue.updatePriority(84553, 17626);
    caseQueue.insert(89059,30405);
    caseQueue.updatePriority(71202, 87172);
    myResult.push_back(caseQueue.getPriority(90172)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(44488,18594);
    caseQueue.insert(73260,48109);
    caseQueue.insert(17656,78245);
    caseQueue.updatePriority(16872, 5051);
    caseQueue.insert(1199,24294);
    caseQueue.insert(57190,52865);
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(90172)); //25
    caseQueue.updatePriority(63650, 6902);
    caseQueue.insert(52866,6834);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(69781,92045);
    caseQueue.insert(85312,91004);
    caseQueue.insert(37314,64739);
    myResult.push_back(caseQueue.getPriority(90172)); //27
    myResult.push_back(caseQueue.getPriority(37314)); //28
    caseQueue.insert(317,45273);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(44051,17815);
    myResult.push_back(caseQueue.getPriority(85312)); //30
    caseQueue.insert(63663,99005);
    caseQueue.updatePriority(65383, 5466);
    caseQueue.insert(602,36633);
    caseQueue.insert(1986,87783);
    caseQueue.insert(92412,79239);
    myResult.push_back(caseQueue.getPriority(90172)); //31
    caseQueue.insert(64439,13404);
    caseQueue.insert(79640,6554);
    caseQueue.insert(43721,69187);
    caseQueue.insert(51502,53318);
    caseQueue.insert(36808,46410);
    myResult.push_back(caseQueue.getPriority(317)); //32
    caseQueue.insert(63983,4507);
    myResult.push_back(caseQueue.getPriority(1986)); //33
    caseQueue.updatePriority(36808, 90246);
    caseQueue.insert(90390,81148);
    caseQueue.insert(33825,80052);
    myResult.push_back(caseQueue.getPriority(43721)); //34
    caseQueue.insert(38842,30043);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.updatePriority(57190, 87034);
    caseQueue.insert(6894,89305);
    caseQueue.updatePriority(64439, 9724);
    caseQueue.insert(38516,87315);
    myResult.push_back(caseQueue.getPriority(89059)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(317, 5120);
    caseQueue.updatePriority(44488, 9320);
    caseQueue.insert(55146,88680);
    caseQueue.insert(33368,29282);
    caseQueue.insert(2545,22338);
    caseQueue.insert(79043,29037);
    myResult.push_back(caseQueue.getPriority(6894)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(9787,81739);
    myResult.push_back(caseQueue.getPriority(1199)); //40
    myResult.push_back(caseQueue.getPriority(38516)); //41
    caseQueue.insert(77138,56212);
    myResult.push_back(caseQueue.getPriority(79043)); //42
    caseQueue.insert(63789,53506);
    static const int resultListArray[] = {86487, 30689, 6664, 6664, 35102, 88630, 63473, 95420, 5335, 97996, 5099, 96374, 97996, 57359, 57981, 45547, 52528, 57981, 51181, 66183, 89901, 89901, 37592, 16872, 89901, 52866, 89901, 64739, 63650, 91004, 89901, 45273, 87783, 69187, 63983, 30405, 65383, 89305, 317, 24294, 87315, 29037}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(235): Basarili" << endl;
    else cout << "Case(235): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_236(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 209);

    vector<int> myResult; 
    caseQueue.updatePriority(95721, 12420);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(40820,73853);
    caseQueue.insert(79039,323);
    caseQueue.insert(13010,96737);
    caseQueue.insert(7355,5492);
    caseQueue.insert(84864,69350);
    caseQueue.updatePriority(84864, 35811);
    caseQueue.insert(81220,41682);
    caseQueue.insert(57832,57752);
    caseQueue.insert(78626,61462);
    caseQueue.insert(69155,69774);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(84864, 47620);
    caseQueue.insert(78405,69733);
    caseQueue.insert(99032,11201);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(13010, 6807);
    caseQueue.insert(78131,73805);
    caseQueue.insert(53978,42945);
    caseQueue.updatePriority(13010, 91350);
    myResult.push_back(caseQueue.getPriority(99032)); //4
    caseQueue.updatePriority(69155, 65240);
    caseQueue.insert(68432,83266);
    caseQueue.updatePriority(78405, 84102);
    caseQueue.updatePriority(84864, 53525);
    caseQueue.updatePriority(53978, 65098);
    caseQueue.insert(69575,70888);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(46531,52630);
    caseQueue.insert(27698,2287);
    caseQueue.insert(83742,28922);
    caseQueue.insert(45517,9976);
    caseQueue.insert(54588,40871);
    caseQueue.insert(30335,16968);
    caseQueue.insert(10988,42453);
    caseQueue.updatePriority(53978, 82739);
    myResult.push_back(caseQueue.getPriority(45517)); //6
    caseQueue.updatePriority(78131, 8902);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(11584,16891);
    caseQueue.insert(16369,57264);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(79396,6094);
    myResult.push_back(caseQueue.getPriority(79396)); //9
    caseQueue.updatePriority(68432, 3117);
    caseQueue.insert(98505,64897);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.insert(25572,97552);
    caseQueue.insert(65158,8049);
    myResult.push_back(caseQueue.getPriority(16369)); //11
    caseQueue.insert(31787,48638);
    caseQueue.insert(69750,19606);
    myResult.push_back(caseQueue.getPriority(31787)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    caseQueue.updatePriority(16369, 85484);
    caseQueue.insert(60309,86915);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(26081,21062);
    caseQueue.insert(8909,49085);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(31787, 97558);
    caseQueue.updatePriority(25572, 15181);
    caseQueue.updatePriority(98505, 81502);
    myResult.push_back(caseQueue.getPriority(54588)); //16
    caseQueue.updatePriority(69575, 54217);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(89172,18883);
    caseQueue.updatePriority(69750, 87701);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(54588)); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(89172)); //21
    caseQueue.updatePriority(31787, 81886);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(78405, 51450);
    myResult.push_back(caseQueue.getPriority(54588)); //23
    caseQueue.updatePriority(83742, 64248);
    caseQueue.insert(3854,91938);
    caseQueue.updatePriority(81220, 53990);
    caseQueue.insert(75250,36512);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(83629,72599);
    caseQueue.insert(14744,9728);
    caseQueue.insert(940,33338);
    myResult.push_back(caseQueue.getPriority(54588)); //25
    myResult.push_back(caseQueue.getPriority(84864)); //26
    myResult.push_back(caseQueue.getPriority(83742)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.getPriority(78626)); //29
    caseQueue.updatePriority(98505, 18706);
    myResult.push_back(caseQueue.deleteMin()); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.getPriority(60309)); //32
    myResult.push_back(caseQueue.getPriority(81220)); //33
    caseQueue.insert(94821,93874);
    caseQueue.insert(86993,28282);
    myResult.push_back(caseQueue.getPriority(69155)); //34
    caseQueue.insert(4933,23306);
    myResult.push_back(caseQueue.getPriority(53978)); //35
    myResult.push_back(caseQueue.getPriority(69750)); //36
    caseQueue.insert(18003,41383);
    myResult.push_back(caseQueue.getPriority(57832)); //37
    myResult.push_back(caseQueue.getPriority(69155)); //38
    caseQueue.insert(34382,71340);
    myResult.push_back(caseQueue.getPriority(8909)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(3056,65735);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(45451,25637);
    caseQueue.insert(6422,93844);
    caseQueue.updatePriority(34382, 54881);
    caseQueue.insert(41697,28202);
    myResult.push_back(caseQueue.getPriority(18003)); //42
    myResult.push_back(caseQueue.getPriority(16369)); //43
    myResult.push_back(caseQueue.getPriority(84864)); //44
    myResult.push_back(caseQueue.getPriority(41697)); //45
    caseQueue.updatePriority(78626, 39607);
    myResult.push_back(caseQueue.getPriority(16369)); //46
    caseQueue.insert(61313,27385);
    caseQueue.insert(38617,62624);
    caseQueue.insert(37585,99507);
    caseQueue.updatePriority(38617, 91910);
    caseQueue.insert(93799,11861);
    caseQueue.insert(53418,86335);
    myResult.push_back(caseQueue.getPriority(46531)); //47
    caseQueue.updatePriority(53418, 52683);
    caseQueue.insert(39029,69723);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(77128,57836);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(71956,76468);
    myResult.push_back(caseQueue.getPriority(3056)); //50
    caseQueue.insert(4317,13005);
    myResult.push_back(caseQueue.getPriority(10988)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(9851,66406);
    caseQueue.insert(94669,39448);
    myResult.push_back(caseQueue.getPriority(60309)); //54
    caseQueue.insert(65110,47203);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(53418, 87594);
    myResult.push_back(caseQueue.getPriority(78626)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(37604,47723);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.updatePriority(8909, 93017);
    caseQueue.insert(78157,45588);
    caseQueue.updatePriority(69575, 45925);
    myResult.push_back(caseQueue.getPriority(69155)); //59
    myResult.push_back(caseQueue.getPriority(8909)); //60
    caseQueue.insert(29530,33228);
    caseQueue.insert(40154,63077);
    caseQueue.insert(36650,35424);
    caseQueue.updatePriority(34382, 88523);
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(51916,22720);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(44759,2487);
    myResult.push_back(caseQueue.getPriority(54588)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(96074,27810);
    caseQueue.insert(89683,10570);
    myResult.push_back(caseQueue.getPriority(3854)); //66
    caseQueue.updatePriority(37604, 7114);
    caseQueue.insert(57752,86672);
    caseQueue.insert(84707,66476);
    caseQueue.updatePriority(18003, 22204);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(54588, 10560);
    myResult.push_back(caseQueue.deleteMin()); //68
    caseQueue.insert(71486,64511);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(64324,37578);
    caseQueue.insert(43051,68807);
    caseQueue.updatePriority(38617, 40710);
    caseQueue.insert(83362,87602);
    caseQueue.insert(80664,99609);
    caseQueue.insert(5250,93135);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(54620,14701);
    myResult.push_back(caseQueue.getPriority(78626)); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(78405, 43318);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.getPriority(10988)); //75
    caseQueue.updatePriority(6422, 48714);
    caseQueue.insert(93001,71521);
    caseQueue.updatePriority(38617, 97046);
    myResult.push_back(caseQueue.getPriority(81220)); //76
    caseQueue.insert(53458,86894);
    myResult.push_back(caseQueue.deleteMin()); //77
    caseQueue.insert(63252,75942);
    myResult.push_back(caseQueue.deleteMin()); //78
    caseQueue.insert(26145,62255);
    myResult.push_back(caseQueue.getPriority(69575)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(61027,28480);
    caseQueue.insert(88813,21891);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.getPriority(94821)); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(69120,31998);
    myResult.push_back(caseQueue.deleteMin()); //86
    static const int resultListArray[] = {-1, 79039, 7355, 11201, 99032, 9976, 27698, 78131, 6094, 68432, 57264, 48638, 79396, 65158, 45517, 40871, 25572, 11584, 40871, 30335, 18883, 89172, 40871, 26081, 40871, 53525, 64248, 14744, 61462, 98505, 940, 86915, 53990, 65240, 82739, 87701, 57752, 65240, 49085, 4933, 86993, 41383, 85484, 53525, 28202, 85484, 52630, 93799, 45451, 65735, 42453, 4317, 61313, 86915, 41697, 39607, 75250, 94669, 65240, 93017, 29530, 51916, 40871, 44759, 36650, 91938, 37604, 54588, 89683, 18003, 96074, 39607, 54620, 64324, 42453, 53990, 78626, 10988, 45925, 78405, 88813, 61027, 78157, 93874, 69575, 69120}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(236): Basarili" << endl;
    else cout << "Case(236): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_237(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 154);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(37299)); //1
    caseQueue.updatePriority(88877, 98819);
    myResult.push_back(caseQueue.getPriority(61595)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(15499,88264);
    myResult.push_back(caseQueue.getPriority(15499)); //4
    caseQueue.updatePriority(15499, 45487);
    caseQueue.updatePriority(15499, 34294);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(49501,4509);
    caseQueue.insert(97801,36317);
    myResult.push_back(caseQueue.getPriority(49501)); //6
    myResult.push_back(caseQueue.getPriority(97801)); //7
    caseQueue.insert(84684,13846);
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(78345,55067);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.insert(59470,69649);
    caseQueue.insert(28502,26942);
    myResult.push_back(caseQueue.getPriority(78345)); //10
    caseQueue.updatePriority(59470, 46557);
    caseQueue.insert(70441,57103);
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(1605,61556);
    caseQueue.updatePriority(97801, 42473);
    caseQueue.insert(47478,11718);
    caseQueue.insert(54235,50196);
    myResult.push_back(caseQueue.getPriority(54235)); //12
    caseQueue.insert(75727,33764);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(69765,90695);
    caseQueue.updatePriority(78345, 12834);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(54235, 91346);
    caseQueue.insert(81705,74877);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(81591,36656);
    caseQueue.insert(40886,19730);
    caseQueue.updatePriority(40886, 41108);
    caseQueue.insert(68514,55234);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(41505,1127);
    myResult.push_back(caseQueue.getPriority(41505)); //20
    caseQueue.insert(27456,32662);
    caseQueue.insert(85329,22032);
    caseQueue.insert(41234,33399);
    caseQueue.updatePriority(68514, 68010);
    myResult.push_back(caseQueue.getPriority(27456)); //21
    caseQueue.insert(56883,60551);
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(79939,87247);
    caseQueue.insert(3,23641);
    caseQueue.insert(94920,52018);
    caseQueue.insert(4108,240);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(56883)); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.updatePriority(56883, 33702);
    caseQueue.insert(54134,60520);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.insert(95314,93077);
    caseQueue.updatePriority(27456, 79809);
    caseQueue.insert(81875,67514);
    caseQueue.insert(39470,63176);
    myResult.push_back(caseQueue.getPriority(81705)); //27
    myResult.push_back(caseQueue.deleteMin()); //28
    caseQueue.updatePriority(40886, 16324);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(79939, 49755);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(54235, 83227);
    caseQueue.updatePriority(95314, 77062);
    caseQueue.insert(74134,77548);
    caseQueue.updatePriority(95314, 40722);
    caseQueue.insert(31611,47101);
    caseQueue.updatePriority(69765, 70484);
    caseQueue.insert(92223,77820);
    caseQueue.updatePriority(31611, 31733);
    myResult.push_back(caseQueue.getPriority(95314)); //32
    myResult.push_back(caseQueue.getPriority(31611)); //33
    caseQueue.insert(3832,28588);
    myResult.push_back(caseQueue.getPriority(95314)); //34
    caseQueue.insert(75360,6096);
    myResult.push_back(caseQueue.getPriority(94920)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(26057,71059);
    myResult.push_back(caseQueue.getPriority(68514)); //38
    myResult.push_back(caseQueue.getPriority(81875)); //39
    caseQueue.insert(58000,67174);
    caseQueue.insert(70471,54205);
    myResult.push_back(caseQueue.getPriority(95314)); //40
    caseQueue.insert(25957,77929);
    myResult.push_back(caseQueue.getPriority(31611)); //41
    caseQueue.updatePriority(81875, 10902);
    myResult.push_back(caseQueue.getPriority(25957)); //42
    myResult.push_back(caseQueue.getPriority(31611)); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(62688,50656);
    caseQueue.updatePriority(58000, 33855);
    caseQueue.insert(64686,69214);
    caseQueue.insert(48990,49843);
    caseQueue.insert(7019,37203);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(68514, 62143);
    caseQueue.insert(98490,50185);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(92223)); //47
    caseQueue.updatePriority(27456, 67103);
    caseQueue.insert(57855,97207);
    myResult.push_back(caseQueue.getPriority(95314)); //48
    caseQueue.updatePriority(98490, 1464);
    caseQueue.insert(37744,25724);
    caseQueue.insert(6852,75793);
    myResult.push_back(caseQueue.getPriority(95314)); //49
    caseQueue.insert(1025,93461);
    caseQueue.insert(890,72428);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(50959,43705);
    caseQueue.insert(80795,60664);
    caseQueue.insert(80578,5337);
    caseQueue.insert(71048,20956);
    caseQueue.insert(38917,99833);
    caseQueue.insert(80978,43415);
    caseQueue.updatePriority(7019, 19872);
    caseQueue.insert(23957,79563);
    caseQueue.insert(11026,59329);
    caseQueue.insert(68981,53777);
    myResult.push_back(caseQueue.getPriority(25957)); //51
    caseQueue.updatePriority(11026, 4064);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(27456, 23550);
    caseQueue.insert(87148,93880);
    caseQueue.insert(22547,59514);
    caseQueue.updatePriority(74134, 31153);
    caseQueue.insert(46632,45718);
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(91195,18779);
    caseQueue.updatePriority(23957, 11872);
    caseQueue.insert(56151,10188);
    caseQueue.insert(51142,78556);
    caseQueue.updatePriority(50959, 22116);
    myResult.push_back(caseQueue.getPriority(70471)); //54
    myResult.push_back(caseQueue.getPriority(38917)); //55
    caseQueue.insert(14130,16593);
    caseQueue.updatePriority(64686, 47469);
    caseQueue.insert(24708,59340);
    myResult.push_back(caseQueue.getPriority(51142)); //56
    caseQueue.updatePriority(80978, 72996);
    caseQueue.insert(78125,74681);
    static const int resultListArray[] = {-1, -1, -1, 88264, 15499, 4509, 36317, 49501, 84684, 55067, 28502, 50196, 47478, 75727, 78345, 97801, 59470, 70441, 81591, 1127, 32662, 41505, 4108, 60551, 85329, 3, 74877, 41234, 40886, 56883, 79939, 40722, 31733, 40722, 52018, 75360, 3832, 68010, 67514, 40722, 31733, 77929, 31733, 81875, 31611, 58000, 77820, 40722, 40722, 98490, 77929, 11026, 80578, 54205, 99833, 78556}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(237): Basarili" << endl;
    else cout << "Case(237): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_238(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 133);

    vector<int> myResult; 
    caseQueue.updatePriority(1871, 59);
    caseQueue.insert(28544,41208);
    myResult.push_back(caseQueue.getPriority(28544)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(17260,13750);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(14133,975);
    caseQueue.insert(53354,38888);
    caseQueue.insert(58339,6260);
    myResult.push_back(caseQueue.getPriority(53354)); //4
    caseQueue.insert(24094,97940);
    myResult.push_back(caseQueue.getPriority(58339)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.insert(25180,2477);
    myResult.push_back(caseQueue.getPriority(58339)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(62928,74860);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(62928, 47802);
    caseQueue.insert(7328,71057);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(7328, 46255);
    caseQueue.updatePriority(24094, 83820);
    myResult.push_back(caseQueue.getPriority(62928)); //11
    caseQueue.insert(79516,37288);
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(44969,56272);
    myResult.push_back(caseQueue.getPriority(62928)); //13
    caseQueue.insert(80386,37587);
    caseQueue.updatePriority(24094, 80398);
    myResult.push_back(caseQueue.getPriority(24094)); //14
    caseQueue.updatePriority(7328, 98217);
    caseQueue.updatePriority(24094, 63448);
    caseQueue.insert(43853,68551);
    myResult.push_back(caseQueue.getPriority(62928)); //15
    caseQueue.insert(2584,72256);
    myResult.push_back(caseQueue.getPriority(62928)); //16
    caseQueue.insert(28842,69044);
    myResult.push_back(caseQueue.getPriority(43853)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(12569,11142);
    caseQueue.insert(18886,9111);
    caseQueue.insert(51401,73892);
    caseQueue.insert(57608,76271);
    caseQueue.updatePriority(18886, 55532);
    myResult.push_back(caseQueue.getPriority(12569)); //19
    myResult.push_back(caseQueue.getPriority(28842)); //20
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(17072,41609);
    caseQueue.insert(73341,74531);
    myResult.push_back(caseQueue.getPriority(73341)); //22
    myResult.push_back(caseQueue.getPriority(44969)); //23
    caseQueue.insert(38,5125);
    caseQueue.insert(14841,1828);
    caseQueue.insert(41524,5095);
    caseQueue.updatePriority(14841, 10599);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(17054,61405);
    caseQueue.updatePriority(44969, 92541);
    caseQueue.updatePriority(62928, 25354);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(28842)); //26
    myResult.push_back(caseQueue.getPriority(2584)); //27
    caseQueue.updatePriority(24094, 36842);
    caseQueue.insert(97518,62580);
    caseQueue.updatePriority(43853, 57308);
    caseQueue.insert(51414,76364);
    caseQueue.insert(5354,25136);
    caseQueue.updatePriority(18886, 97755);
    caseQueue.updatePriority(62928, 17376);
    myResult.push_back(caseQueue.getPriority(7328)); //28
    myResult.push_back(caseQueue.getPriority(44969)); //29
    caseQueue.insert(64045,39832);
    myResult.push_back(caseQueue.getPriority(17054)); //30
    myResult.push_back(caseQueue.getPriority(5354)); //31
    myResult.push_back(caseQueue.getPriority(57608)); //32
    caseQueue.insert(2151,70718);
    myResult.push_back(caseQueue.getPriority(18886)); //33
    caseQueue.insert(51175,77649);
    caseQueue.updatePriority(62928, 52418);
    caseQueue.updatePriority(5354, 83764);
    caseQueue.updatePriority(7328, 59695);
    myResult.push_back(caseQueue.deleteMin()); //34
    myResult.push_back(caseQueue.getPriority(64045)); //35
    caseQueue.insert(36550,37120);
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.updatePriority(17072, 43135);
    caseQueue.insert(58275,31977);
    caseQueue.updatePriority(51401, 39217);
    caseQueue.insert(76749,62057);
    caseQueue.updatePriority(76749, 18609);
    caseQueue.updatePriority(51414, 75551);
    caseQueue.insert(7283,25790);
    caseQueue.insert(27437,96075);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(40491,72362);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(4349,83302);
    caseQueue.updatePriority(64045, 37400);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(43708,54636);
    caseQueue.insert(83578,10454);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(18886)); //43
    myResult.push_back(caseQueue.getPriority(17072)); //44
    caseQueue.insert(69825,75708);
    caseQueue.insert(43260,76436);
    caseQueue.insert(67321,3736);
    myResult.push_back(caseQueue.getPriority(67321)); //45
    caseQueue.insert(69599,50738);
    caseQueue.updatePriority(97518, 16759);
    caseQueue.insert(60058,15388);
    caseQueue.updatePriority(17054, 20140);
    myResult.push_back(caseQueue.getPriority(2151)); //46
    caseQueue.updatePriority(51175, 56552);
    caseQueue.insert(84496,58539);
    caseQueue.insert(58042,18343);
    caseQueue.insert(8724,65817);
    caseQueue.insert(16472,56689);
    myResult.push_back(caseQueue.getPriority(51175)); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.updatePriority(44969, 70815);
    caseQueue.updatePriority(44969, 47232);
    caseQueue.insert(40709,52994);
    caseQueue.insert(69891,2074);
    caseQueue.updatePriority(51414, 94215);
    caseQueue.updatePriority(43853, 35069);
    caseQueue.insert(63008,46759);
    myResult.push_back(caseQueue.getPriority(2584)); //49
    caseQueue.insert(92581,99818);
    caseQueue.updatePriority(2151, 14690);
    static const int resultListArray[] = {41208, 28544, 17260, 38888, 6260, 14133, 6260, 25180, 58339, 53354, 47802, 79516, 47802, 80398, 47802, 47802, 68551, 80386, 11142, 69044, 12569, 74531, 56272, 41524, 38, 69044, 72256, 98217, 92541, 61405, 25136, 76271, 97755, 14841, 39832, 24094, 76749, 7283, 58275, 36550, 64045, 83578, 97755, 43135, 3736, 70718, 56552, 67321, 72256}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(238): Basarili" << endl;
    else cout << "Case(238): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_239(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 248);

    vector<int> myResult; 
    caseQueue.updatePriority(56860, 5968);
    caseQueue.updatePriority(33145, 65748);
    caseQueue.insert(77639,38344);
    caseQueue.insert(55112,11790);
    caseQueue.updatePriority(77639, 78961);
    caseQueue.insert(86369,4548);
    caseQueue.updatePriority(86369, 40749);
    caseQueue.insert(21087,83115);
    caseQueue.insert(21454,78908);
    caseQueue.insert(43003,43822);
    caseQueue.insert(26866,92140);
    caseQueue.insert(15553,62618);
    caseQueue.updatePriority(55112, 3377);
    caseQueue.insert(11415,51907);
    myResult.push_back(caseQueue.getPriority(11415)); //1
    myResult.push_back(caseQueue.getPriority(26866)); //2
    caseQueue.insert(58467,83322);
    caseQueue.insert(28154,32186);
    caseQueue.insert(41551,73377);
    caseQueue.insert(2454,84389);
    myResult.push_back(caseQueue.getPriority(11415)); //3
    caseQueue.insert(68307,16426);
    caseQueue.insert(88992,44397);
    caseQueue.insert(88109,37692);
    myResult.push_back(caseQueue.getPriority(88109)); //4
    caseQueue.insert(13373,96508);
    caseQueue.insert(49269,82865);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(62244,35841);
    caseQueue.updatePriority(26866, 84361);
    myResult.push_back(caseQueue.getPriority(86369)); //6
    caseQueue.insert(46825,16291);
    caseQueue.insert(7275,77410);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.getPriority(21087)); //8
    caseQueue.updatePriority(26866, 82338);
    caseQueue.insert(99110,19550);
    caseQueue.insert(94072,5755);
    caseQueue.updatePriority(28154, 24281);
    caseQueue.insert(91614,37368);
    myResult.push_back(caseQueue.getPriority(99110)); //9
    caseQueue.updatePriority(26866, 17676);
    caseQueue.insert(68034,87845);
    caseQueue.insert(70848,76961);
    myResult.push_back(caseQueue.getPriority(15553)); //10
    caseQueue.insert(78057,12089);
    caseQueue.insert(78668,76160);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.insert(58556,9489);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(91614)); //14
    caseQueue.updatePriority(77639, 50115);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(49269, 86434);
    myResult.push_back(caseQueue.getPriority(91614)); //16
    caseQueue.updatePriority(99110, 88360);
    myResult.push_back(caseQueue.getPriority(11415)); //17
    caseQueue.insert(40406,20649);
    caseQueue.updatePriority(21454, 61632);
    caseQueue.insert(42300,81213);
    myResult.push_back(caseQueue.getPriority(62244)); //18
    myResult.push_back(caseQueue.getPriority(86369)); //19
    caseQueue.insert(41630,23424);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(49269)); //21
    caseQueue.insert(13022,19103);
    caseQueue.insert(5558,56911);
    caseQueue.insert(79860,22648);
    caseQueue.insert(85069,6183);
    caseQueue.insert(28256,58854);
    caseQueue.insert(85664,3555);
    caseQueue.insert(83565,13969);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(75385,68826);
    caseQueue.insert(94297,98259);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(83605,90044);
    caseQueue.insert(60821,25380);
    myResult.push_back(caseQueue.getPriority(78668)); //25
    myResult.push_back(caseQueue.getPriority(13022)); //26
    caseQueue.updatePriority(79860, 89343);
    caseQueue.insert(30933,30088);
    myResult.push_back(caseQueue.getPriority(94297)); //27
    myResult.push_back(caseQueue.getPriority(15553)); //28
    caseQueue.updatePriority(21454, 87584);
    myResult.push_back(caseQueue.getPriority(58467)); //29
    myResult.push_back(caseQueue.getPriority(7275)); //30
    myResult.push_back(caseQueue.getPriority(41551)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(96917,25045);
    caseQueue.updatePriority(28256, 37911);
    caseQueue.insert(87901,61046);
    caseQueue.insert(52297,20544);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(66861,3393);
    myResult.push_back(caseQueue.getPriority(62244)); //35
    caseQueue.insert(41546,75650);
    caseQueue.updatePriority(30933, 19276);
    myResult.push_back(caseQueue.getPriority(79860)); //36
    caseQueue.updatePriority(43003, 12059);
    caseQueue.insert(91539,31655);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(13373)); //38
    caseQueue.updatePriority(41546, 66883);
    myResult.push_back(caseQueue.getPriority(49269)); //39
    caseQueue.updatePriority(99110, 82801);
    caseQueue.insert(77189,82490);
    caseQueue.updatePriority(49269, 91072);
    caseQueue.insert(50482,83836);
    caseQueue.insert(77098,67911);
    caseQueue.insert(46830,62188);
    myResult.push_back(caseQueue.getPriority(83605)); //40
    caseQueue.updatePriority(60821, 59636);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(68212,39208);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(28256, 74528);
    caseQueue.updatePriority(5558, 63348);
    caseQueue.updatePriority(62244, 25418);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(4826,41501);
    myResult.push_back(caseQueue.getPriority(21087)); //44
    caseQueue.insert(20124,11905);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(99110, 50783);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(75385)); //47
    caseQueue.insert(95275,2481);
    caseQueue.updatePriority(86369, 87799);
    caseQueue.insert(33246,71846);
    caseQueue.insert(60046,888);
    myResult.push_back(caseQueue.deleteMin()); //48
    myResult.push_back(caseQueue.getPriority(60821)); //49
    caseQueue.insert(10493,93959);
    caseQueue.updatePriority(21087, 25396);
    myResult.push_back(caseQueue.getPriority(99110)); //50
    caseQueue.insert(3370,13089);
    caseQueue.insert(4107,26246);
    caseQueue.insert(25164,50255);
    caseQueue.insert(7921,29520);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(7921)); //53
    myResult.push_back(caseQueue.getPriority(15553)); //54
    caseQueue.insert(51885,6843);
    caseQueue.updatePriority(25164, 80523);
    caseQueue.insert(55947,97900);
    caseQueue.insert(31033,15237);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.updatePriority(99110, 28355);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(4826)); //57
    caseQueue.updatePriority(42300, 44999);
    caseQueue.insert(18678,85122);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(63445,47507);
    myResult.push_back(caseQueue.deleteMin()); //59
    caseQueue.insert(48324,81622);
    myResult.push_back(caseQueue.deleteMin()); //60
    caseQueue.insert(26334,10564);
    myResult.push_back(caseQueue.getPriority(70848)); //61
    myResult.push_back(caseQueue.getPriority(2454)); //62
    myResult.push_back(caseQueue.getPriority(77639)); //63
    caseQueue.insert(4984,51753);
    caseQueue.insert(49308,89534);
    caseQueue.updatePriority(77098, 36367);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(49308, 76494);
    caseQueue.insert(32760,19936);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(34031,63111);
    myResult.push_back(caseQueue.getPriority(11415)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(72049,74203);
    caseQueue.insert(74484,14993);
    caseQueue.insert(39144,99950);
    myResult.push_back(caseQueue.getPriority(4984)); //68
    caseQueue.updatePriority(58467, 18023);
    caseQueue.updatePriority(18678, 46437);
    caseQueue.insert(73682,71249);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.getPriority(68212)); //70
    caseQueue.insert(68211,73802);
    caseQueue.updatePriority(86369, 39642);
    caseQueue.insert(84763,92914);
    myResult.push_back(caseQueue.getPriority(70848)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.updatePriority(72049, 67563);
    caseQueue.updatePriority(11415, 99145);
    caseQueue.insert(92867,39489);
    myResult.push_back(caseQueue.getPriority(75385)); //74
    caseQueue.insert(62431,56019);
    myResult.push_back(caseQueue.getPriority(10493)); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(21454)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(13373)); //79
    caseQueue.insert(37376,82732);
    caseQueue.insert(55575,89690);
    caseQueue.updatePriority(39144, 83896);
    caseQueue.insert(95000,22258);
    caseQueue.updatePriority(34031, 14439);
    caseQueue.insert(58813,44411);
    caseQueue.insert(51012,49203);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.updatePriority(4826, 37174);
    myResult.push_back(caseQueue.getPriority(77639)); //81
    caseQueue.insert(65259,25541);
    caseQueue.insert(35163,48025);
    caseQueue.insert(9411,38725);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(42529,32291);
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(99353,22702);
    myResult.push_back(caseQueue.getPriority(77098)); //85
    caseQueue.insert(9735,28255);
    caseQueue.updatePriority(15553, 44368);
    caseQueue.insert(45859,89131);
    caseQueue.insert(13450,35323);
    caseQueue.updatePriority(84763, 16916);
    caseQueue.updatePriority(48324, 94576);
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.deleteMin()); //87
    myResult.push_back(caseQueue.getPriority(75385)); //88
    caseQueue.insert(36536,50829);
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.updatePriority(50482, 64962);
    myResult.push_back(caseQueue.getPriority(5558)); //90
    caseQueue.insert(76865,78343);
    caseQueue.insert(42938,38740);
    caseQueue.insert(31725,38647);
    caseQueue.insert(39081,35358);
    caseQueue.insert(32081,94480);
    caseQueue.insert(59127,21845);
    caseQueue.updatePriority(77189, 24472);
    caseQueue.updatePriority(39144, 70574);
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(53755,0);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.insert(93790,80918);
    myResult.push_back(caseQueue.deleteMin()); //93
    caseQueue.updatePriority(83605, 69776);
    myResult.push_back(caseQueue.deleteMin()); //94
    static const int resultListArray[] = {51907, 92140, 51907, 37692, 55112, 40749, 46825, 83115, 19550, 62618, 94072, 78057, 58556, 37368, 68307, 37368, 51907, 35841, 40749, 26866, 86434, 85664, 85069, 83565, 76160, 19103, 98259, 62618, 83322, 77410, 73377, 13022, 40406, 52297, 35841, 89343, 66861, 96508, 86434, 90044, 43003, 30933, 41630, 83115, 20124, 28154, 68826, 60046, 59636, 50783, 95275, 3370, 29520, 62618, 51885, 31033, 41501, 96917, 21087, 62244, 76961, 84389, 50115, 26334, 32760, 51907, 4107, 51753, 74484, 39208, 76961, 58467, 99110, 68826, 93959, 7921, 87584, 91539, 96508, 34031, 50115, 95000, 65259, 42529, 36367, 84763, 99353, 68826, 9735, 63348, 59127, 53755, 77189, 13450}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(239): Basarili" << endl;
    else cout << "Case(239): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_240(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 167);

    vector<int> myResult; 
    caseQueue.updatePriority(79129, 34525);
    caseQueue.updatePriority(29388, 22105);
    caseQueue.insert(34596,75795);
    caseQueue.insert(78285,54292);
    caseQueue.insert(55938,47842);
    caseQueue.insert(36669,59895);
    caseQueue.insert(30276,72894);
    myResult.push_back(caseQueue.getPriority(30276)); //1
    caseQueue.updatePriority(34596, 59170);
    caseQueue.insert(17832,15321);
    caseQueue.updatePriority(55938, 96149);
    caseQueue.insert(24436,31602);
    caseQueue.insert(84788,44597);
    myResult.push_back(caseQueue.getPriority(24436)); //2
    caseQueue.insert(62102,92209);
    caseQueue.insert(28827,48042);
    myResult.push_back(caseQueue.getPriority(36669)); //3
    myResult.push_back(caseQueue.getPriority(78285)); //4
    caseQueue.updatePriority(24436, 68114);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(36669)); //6
    caseQueue.updatePriority(24436, 91678);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.insert(83625,95325);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(34596, 25516);
    caseQueue.insert(94692,4409);
    caseQueue.updatePriority(34596, 70738);
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(55938)); //12
    caseQueue.insert(35714,93247);
    caseQueue.insert(13268,39966);
    caseQueue.insert(48437,30892);
    caseQueue.updatePriority(55938, 47717);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(25275,25850);
    caseQueue.insert(60795,76553);
    caseQueue.insert(36290,80494);
    myResult.push_back(caseQueue.getPriority(34596)); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    myResult.push_back(caseQueue.getPriority(60795)); //17
    caseQueue.insert(6480,16836);
    caseQueue.insert(47709,48605);
    caseQueue.updatePriority(36290, 83253);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(36290, 60094);
    caseQueue.insert(20530,90022);
    caseQueue.updatePriority(55938, 36825);
    caseQueue.updatePriority(30276, 92086);
    caseQueue.insert(16269,26928);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(37722,41079);
    caseQueue.updatePriority(47709, 23855);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(3849,17302);
    caseQueue.insert(71440,56994);
    caseQueue.insert(84616,96444);
    myResult.push_back(caseQueue.getPriority(35714)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(34596)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.getPriority(60795)); //25
    caseQueue.insert(92928,20041);
    caseQueue.updatePriority(71440, 92);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(62102, 30002);
    caseQueue.updatePriority(30276, 30249);
    caseQueue.insert(22596,84493);
    caseQueue.updatePriority(22596, 91823);
    myResult.push_back(caseQueue.getPriority(20530)); //27
    myResult.push_back(caseQueue.getPriority(37722)); //28
    caseQueue.insert(2229,2020);
    caseQueue.insert(57983,17480);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(83625, 68565);
    caseQueue.updatePriority(35714, 11378);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(75139,87478);
    caseQueue.insert(43337,62564);
    myResult.push_back(caseQueue.getPriority(37722)); //32
    caseQueue.insert(86959,25451);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(81556,43847);
    caseQueue.insert(94141,88861);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.insert(15575,5781);
    myResult.push_back(caseQueue.getPriority(75139)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(14307,83764);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.updatePriority(75139, 89770);
    caseQueue.insert(46087,56711);
    caseQueue.insert(54276,7043);
    caseQueue.insert(30150,23288);
    caseQueue.insert(60706,32095);
    caseQueue.insert(46597,44414);
    caseQueue.insert(85967,9612);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(52134,13348);
    myResult.push_back(caseQueue.getPriority(14307)); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(74074,47822);
    caseQueue.insert(4594,70493);
    caseQueue.insert(84572,65219);
    caseQueue.updatePriority(60795, 92735);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(97575,80011);
    myResult.push_back(caseQueue.getPriority(46087)); //42
    myResult.push_back(caseQueue.getPriority(84616)); //43
    myResult.push_back(caseQueue.getPriority(34596)); //44
    caseQueue.insert(44434,10923);
    caseQueue.insert(64366,77592);
    myResult.push_back(caseQueue.getPriority(81556)); //45
    caseQueue.insert(13416,8934);
    caseQueue.insert(92547,18568);
    caseQueue.updatePriority(60706, 78056);
    myResult.push_back(caseQueue.getPriority(20530)); //46
    caseQueue.insert(32757,93136);
    myResult.push_back(caseQueue.getPriority(94141)); //47
    myResult.push_back(caseQueue.getPriority(4594)); //48
    myResult.push_back(caseQueue.getPriority(60795)); //49
    caseQueue.insert(44332,6696);
    caseQueue.updatePriority(20530, 61103);
    caseQueue.insert(7170,42626);
    myResult.push_back(caseQueue.deleteMin()); //50
    myResult.push_back(caseQueue.getPriority(84572)); //51
    caseQueue.insert(58664,35493);
    caseQueue.insert(6330,6921);
    myResult.push_back(caseQueue.getPriority(84572)); //52
    myResult.push_back(caseQueue.getPriority(60706)); //53
    myResult.push_back(caseQueue.getPriority(84616)); //54
    caseQueue.updatePriority(37722, 44930);
    caseQueue.updatePriority(13416, 482);
    myResult.push_back(caseQueue.getPriority(83625)); //55
    caseQueue.insert(51167,14299);
    caseQueue.insert(90435,64391);
    caseQueue.insert(17624,50084);
    caseQueue.insert(93150,17850);
    myResult.push_back(caseQueue.getPriority(46597)); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(36290)); //58
    caseQueue.insert(52945,10068);
    caseQueue.updatePriority(90435, 85636);
    myResult.push_back(caseQueue.getPriority(32757)); //59
    caseQueue.insert(33003,69809);
    caseQueue.insert(62562,88763);
    caseQueue.updatePriority(14307, 1217);
    caseQueue.insert(84782,63940);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(64405,85199);
    myResult.push_back(caseQueue.getPriority(17624)); //62
    caseQueue.updatePriority(7170, 44952);
    caseQueue.updatePriority(30150, 27468);
    caseQueue.insert(53820,66577);
    caseQueue.updatePriority(46597, 58048);
    myResult.push_back(caseQueue.deleteMin()); //63
    myResult.push_back(caseQueue.getPriority(7170)); //64
    caseQueue.updatePriority(36290, 77657);
    caseQueue.insert(27056,75576);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(64405, 27767);
    caseQueue.updatePriority(51167, 47027);
    static const int resultListArray[] = {72894, 31602, 59895, 54292, 17832, 59895, 84788, 28827, 78285, 94692, 36669, 96149, 48437, 13268, 70738, 25275, 76553, 6480, 16269, 47709, 93247, 3849, 70738, 55938, 76553, 71440, 90022, 41079, 2229, 57983, 35714, 41079, 92928, 86959, 87478, 15575, 62102, 54276, 83764, 85967, 52134, 56711, 96444, 70738, 43847, 90022, 88861, 70493, 92735, 44332, 65219, 65219, 78056, 96444, 68565, 44414, 13416, 60094, 93136, 14307, 6330, 50084, 52945, 44952, 44434}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(240): Basarili" << endl;
    else cout << "Case(240): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_241(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 105);

    vector<int> myResult; 
    caseQueue.insert(14870,51337);
    caseQueue.insert(64117,99726);
    caseQueue.updatePriority(64117, 88404);
    caseQueue.insert(97391,389);
    caseQueue.insert(70652,37949);
    caseQueue.insert(38976,87447);
    caseQueue.updatePriority(64117, 36052);
    caseQueue.insert(65310,98955);
    caseQueue.insert(96761,43730);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.updatePriority(96761, 39313);
    caseQueue.insert(32901,26160);
    caseQueue.updatePriority(96761, 25248);
    caseQueue.insert(81251,86841);
    myResult.push_back(caseQueue.getPriority(32901)); //2
    myResult.push_back(caseQueue.getPriority(65310)); //3
    caseQueue.insert(90658,35162);
    caseQueue.updatePriority(32901, 99324);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(14870)); //6
    caseQueue.insert(95829,71325);
    caseQueue.updatePriority(81251, 45866);
    caseQueue.insert(72242,15729);
    caseQueue.updatePriority(72242, 51422);
    caseQueue.updatePriority(81251, 95409);
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(81251, 14107);
    caseQueue.insert(62713,38696);
    myResult.push_back(caseQueue.getPriority(32901)); //8
    caseQueue.insert(36228,69486);
    caseQueue.insert(33802,16513);
    caseQueue.insert(12578,20329);
    caseQueue.insert(94045,69098);
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(94045, 20956);
    myResult.push_back(caseQueue.getPriority(36228)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(32901)); //12
    caseQueue.insert(91413,85433);
    caseQueue.insert(58770,79509);
    myResult.push_back(caseQueue.getPriority(38976)); //13
    caseQueue.insert(39792,7270);
    caseQueue.insert(10397,82124);
    caseQueue.updatePriority(12578, 48380);
    caseQueue.insert(13162,56960);
    caseQueue.updatePriority(65310, 62334);
    caseQueue.updatePriority(36228, 68189);
    caseQueue.insert(2525,1563);
    myResult.push_back(caseQueue.getPriority(94045)); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(13162)); //16
    caseQueue.insert(42623,450);
    caseQueue.insert(82670,52380);
    caseQueue.insert(80297,23153);
    caseQueue.insert(75518,98653);
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(16222,54098);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.updatePriority(38976, 29090);
    myResult.push_back(caseQueue.getPriority(13162)); //20
    myResult.push_back(caseQueue.getPriority(65310)); //21
    myResult.push_back(caseQueue.getPriority(16222)); //22
    caseQueue.insert(36444,78211);
    caseQueue.insert(58495,57106);
    caseQueue.insert(87096,8118);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(69358,73192);
    caseQueue.updatePriority(12578, 6260);
    myResult.push_back(caseQueue.getPriority(72242)); //24
    caseQueue.updatePriority(80297, 35255);
    caseQueue.updatePriority(13162, 84980);
    myResult.push_back(caseQueue.getPriority(91413)); //25
    caseQueue.updatePriority(69358, 41980);
    caseQueue.insert(9931,57380);
    caseQueue.insert(97086,5877);
    myResult.push_back(caseQueue.deleteMin()); //26
    caseQueue.updatePriority(13162, 10621);
    caseQueue.updatePriority(38976, 72234);
    caseQueue.insert(15479,83085);
    myResult.push_back(caseQueue.deleteMin()); //27
    caseQueue.insert(38741,55144);
    caseQueue.updatePriority(9931, 72288);
    caseQueue.updatePriority(95829, 78796);
    myResult.push_back(caseQueue.getPriority(62713)); //28
    myResult.push_back(caseQueue.getPriority(91413)); //29
    caseQueue.insert(11789,7387);
    caseQueue.insert(74722,53820);
    caseQueue.insert(37912,4387);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(19463,76794);
    myResult.push_back(caseQueue.getPriority(19463)); //31
    myResult.push_back(caseQueue.getPriority(58770)); //32
    caseQueue.updatePriority(38741, 34113);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(12281,10088);
    myResult.push_back(caseQueue.getPriority(12281)); //34
    caseQueue.insert(73577,70202);
    caseQueue.updatePriority(16222, 96465);
    caseQueue.updatePriority(15479, 54777);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(38113,86747);
    caseQueue.updatePriority(38741, 365);
    myResult.push_back(caseQueue.getPriority(16222)); //36
    static const int resultListArray[] = {97391, 26160, 98955, 96761, 90658, 51337, 64117, 99324, 81251, 69486, 33802, 99324, 87447, 20956, 2525, 56960, 42623, 39792, 94045, 56960, 62334, 54098, 87096, 51422, 85433, 97086, 12578, 38696, 85433, 37912, 76794, 79509, 11789, 10088, 12281, 96465}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(241): Basarili" << endl;
    else cout << "Case(241): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_242(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 231);

    vector<int> myResult; 
    caseQueue.insert(42968,27406);
    caseQueue.insert(81227,89);
    caseQueue.insert(6458,45874);
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(42968)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.insert(30587,86890);
    caseQueue.updatePriority(30587, 69867);
    caseQueue.insert(29051,54053);
    myResult.push_back(caseQueue.getPriority(6458)); //4
    caseQueue.insert(75522,46496);
    caseQueue.insert(63080,72977);
    myResult.push_back(caseQueue.deleteMin()); //5
    caseQueue.insert(62261,90661);
    caseQueue.insert(23574,40290);
    caseQueue.insert(4959,38704);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(29051)); //7
    caseQueue.insert(46039,35647);
    caseQueue.insert(80959,84325);
    caseQueue.insert(29014,25576);
    myResult.push_back(caseQueue.getPriority(29014)); //8
    caseQueue.insert(68071,86838);
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(23574, 32197);
    caseQueue.insert(4279,29752);
    myResult.push_back(caseQueue.getPriority(68071)); //11
    myResult.push_back(caseQueue.getPriority(80959)); //12
    myResult.push_back(caseQueue.getPriority(75522)); //13
    caseQueue.insert(69569,59236);
    caseQueue.insert(51563,20994);
    caseQueue.updatePriority(69569, 5869);
    caseQueue.insert(9776,37613);
    caseQueue.insert(45411,17803);
    caseQueue.insert(89625,6);
    caseQueue.insert(87173,68717);
    caseQueue.insert(6201,55696);
    caseQueue.insert(90460,54716);
    caseQueue.insert(55437,96040);
    caseQueue.insert(80781,68018);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(57955,74447);
    caseQueue.insert(84184,96075);
    caseQueue.insert(58977,62459);
    caseQueue.insert(16825,38870);
    caseQueue.insert(43005,62996);
    caseQueue.insert(70064,81976);
    caseQueue.updatePriority(63080, 13849);
    caseQueue.insert(33709,74802);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(39540,92597);
    myResult.push_back(caseQueue.getPriority(43005)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.updatePriority(57955, 2329);
    caseQueue.updatePriority(90460, 19101);
    caseQueue.insert(64310,14832);
    caseQueue.updatePriority(70064, 54509);
    caseQueue.insert(47714,89791);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(53754,53542);
    myResult.push_back(caseQueue.getPriority(62261)); //20
    myResult.push_back(caseQueue.getPriority(75522)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(53754, 4389);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.updatePriority(90460, 48776);
    caseQueue.updatePriority(68071, 41388);
    myResult.push_back(caseQueue.getPriority(30587)); //24
    myResult.push_back(caseQueue.getPriority(58977)); //25
    caseQueue.insert(64607,66393);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.getPriority(30587)); //27
    myResult.push_back(caseQueue.getPriority(90460)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(66925,59379);
    caseQueue.updatePriority(84184, 31230);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(872,48953);
    myResult.push_back(caseQueue.getPriority(30587)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(9706,16172);
    caseQueue.updatePriority(33709, 23190);
    caseQueue.updatePriority(75522, 81028);
    caseQueue.insert(84360,86413);
    myResult.push_back(caseQueue.getPriority(30587)); //33
    caseQueue.insert(14169,90561);
    caseQueue.updatePriority(58977, 5524);
    caseQueue.insert(30567,16719);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(87173, 22701);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.getPriority(55437)); //36
    myResult.push_back(caseQueue.getPriority(68071)); //37
    caseQueue.updatePriority(39540, 61554);
    caseQueue.updatePriority(66925, 23907);
    caseQueue.insert(15770,25453);
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(66925)); //39
    myResult.push_back(caseQueue.getPriority(64607)); //40
    caseQueue.insert(81773,64162);
    caseQueue.insert(45595,50819);
    caseQueue.updatePriority(80959, 56783);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(42183,24745);
    caseQueue.insert(71595,93951);
    caseQueue.updatePriority(80959, 38277);
    myResult.push_back(caseQueue.getPriority(62261)); //42
    caseQueue.updatePriority(43005, 4444);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(2233,84028);
    caseQueue.insert(86706,94690);
    caseQueue.insert(31933,35225);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(58326,53334);
    myResult.push_back(caseQueue.getPriority(84360)); //45
    myResult.push_back(caseQueue.getPriority(71595)); //46
    myResult.push_back(caseQueue.getPriority(90460)); //47
    caseQueue.updatePriority(75522, 44837);
    myResult.push_back(caseQueue.getPriority(9776)); //48
    caseQueue.updatePriority(68071, 18528);
    caseQueue.insert(77388,8124);
    caseQueue.insert(21815,57208);
    myResult.push_back(caseQueue.getPriority(81773)); //49
    caseQueue.insert(5146,9030);
    caseQueue.insert(8547,21612);
    caseQueue.insert(58124,66623);
    caseQueue.updatePriority(86706, 88587);
    caseQueue.updatePriority(47714, 47926);
    myResult.push_back(caseQueue.getPriority(80959)); //50
    caseQueue.insert(60237,55671);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(2233, 95694);
    caseQueue.updatePriority(80959, 63494);
    caseQueue.insert(72698,50716);
    caseQueue.updatePriority(47714, 91910);
    caseQueue.insert(33669,71558);
    caseQueue.updatePriority(70064, 74425);
    caseQueue.insert(97925,7608);
    caseQueue.updatePriority(71595, 18151);
    caseQueue.insert(65785,93397);
    caseQueue.insert(47427,32583);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(73608,19067);
    caseQueue.insert(76234,47702);
    caseQueue.insert(18382,2967);
    caseQueue.insert(36631,24907);
    caseQueue.insert(41364,28080);
    caseQueue.updatePriority(76234, 31758);
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(36631)); //57
    caseQueue.insert(10363,31924);
    caseQueue.updatePriority(39540, 14164);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(6850,81469);
    myResult.push_back(caseQueue.getPriority(58326)); //59
    myResult.push_back(caseQueue.getPriority(72698)); //60
    caseQueue.insert(36245,85521);
    caseQueue.insert(4144,65366);
    myResult.push_back(caseQueue.getPriority(21815)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(80781, 375);
    caseQueue.insert(4167,73145);
    caseQueue.insert(79321,57414);
    caseQueue.insert(16662,37356);
    caseQueue.updatePriority(42183, 50196);
    caseQueue.updatePriority(41364, 16566);
    caseQueue.insert(62579,37735);
    caseQueue.insert(88113,4150);
    caseQueue.insert(46272,84878);
    myResult.push_back(caseQueue.getPriority(9776)); //63
    caseQueue.insert(30497,18140);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(24790,71545);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(73608, 26489);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(50079,93100);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.updatePriority(10363, 53480);
    caseQueue.updatePriority(21815, 73646);
    caseQueue.insert(7279,78821);
    caseQueue.updatePriority(73608, 98378);
    myResult.push_back(caseQueue.deleteMin()); //68
    myResult.push_back(caseQueue.getPriority(86706)); //69
    caseQueue.insert(69150,88901);
    caseQueue.updatePriority(80959, 31193);
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.insert(47898,50582);
    caseQueue.insert(69481,10295);
    caseQueue.updatePriority(47898, 9100);
    caseQueue.insert(5751,42048);
    caseQueue.insert(15264,65361);
    myResult.push_back(caseQueue.getPriority(42183)); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(6850)); //73
    caseQueue.insert(49042,1370);
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(86496,11338);
    caseQueue.insert(81816,10699);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.getPriority(79321)); //76
    caseQueue.insert(54910,63626);
    myResult.push_back(caseQueue.getPriority(16662)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.getPriority(50079)); //79
    myResult.push_back(caseQueue.getPriority(47714)); //80
    caseQueue.insert(11380,71240);
    myResult.push_back(caseQueue.getPriority(54910)); //81
    caseQueue.insert(75854,50855);
    caseQueue.updatePriority(76234, 82568);
    caseQueue.updatePriority(75854, 15794);
    myResult.push_back(caseQueue.getPriority(62579)); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(99011,3541);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(60535,83896);
    myResult.push_back(caseQueue.getPriority(84360)); //85
    caseQueue.insert(58545,23600);
    caseQueue.updatePriority(6201, 16616);
    myResult.push_back(caseQueue.deleteMin()); //86
    caseQueue.insert(95096,70613);
    caseQueue.insert(94609,39578);
    caseQueue.insert(73199,70662);
    myResult.push_back(caseQueue.getPriority(29051)); //87
    caseQueue.insert(44363,15134);
    myResult.push_back(caseQueue.getPriority(33669)); //88
    static const int resultListArray[] = {81227, 27406, 42968, 45874, 6458, 4959, 54053, 25576, 29014, 46039, 86838, 84325, 46496, 89625, 69569, 62996, 63080, 45411, 57955, 90661, 46496, 64310, 53754, 69867, 62459, 51563, 69867, 48776, 4279, 84184, 69867, 23574, 69867, 58977, 9706, 96040, 41388, 30567, 23907, 66393, 87173, 90661, 43005, 33709, 86413, 93951, 48776, 37613, 64162, 38277, 77388, 5146, 68071, 8547, 97925, 18382, 24907, 39540, 53334, 50716, 57208, 71595, 37613, 80781, 88113, 41364, 30497, 66925, 88587, 36631, 50196, 47898, 81469, 49042, 69481, 57414, 37356, 81816, 93100, 91910, 63626, 37735, 86496, 99011, 86413, 75854, 54053, 71558}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(242): Basarili" << endl;
    else cout << "Case(242): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_243(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 157);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(64728)); //1
    caseQueue.insert(2999,28459);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.insert(58554,25791);
    caseQueue.insert(3854,41872);
    caseQueue.insert(83553,68353);
    caseQueue.insert(54795,5764);
    caseQueue.insert(83128,60299);
    caseQueue.insert(64603,34791);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(83128, 49369);
    caseQueue.insert(56344,92403);
    myResult.push_back(caseQueue.getPriority(3854)); //4
    caseQueue.insert(52314,30243);
    caseQueue.updatePriority(83553, 10757);
    caseQueue.insert(19484,49099);
    caseQueue.updatePriority(64603, 64795);
    caseQueue.updatePriority(64603, 86606);
    caseQueue.updatePriority(83128, 60049);
    caseQueue.insert(27702,22679);
    caseQueue.insert(80574,31384);
    caseQueue.insert(27999,79396);
    caseQueue.insert(43583,37933);
    caseQueue.insert(38677,28420);
    caseQueue.updatePriority(27702, 49547);
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.getPriority(27702)); //6
    caseQueue.updatePriority(83128, 54781);
    caseQueue.insert(25128,1422);
    myResult.push_back(caseQueue.getPriority(38677)); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.insert(55180,45837);
    caseQueue.insert(94705,58726);
    myResult.push_back(caseQueue.getPriority(80574)); //9
    caseQueue.insert(22436,71952);
    myResult.push_back(caseQueue.getPriority(3854)); //10
    caseQueue.updatePriority(83128, 36812);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(94705)); //12
    myResult.push_back(caseQueue.getPriority(27702)); //13
    myResult.push_back(caseQueue.getPriority(55180)); //14
    myResult.push_back(caseQueue.getPriority(3854)); //15
    caseQueue.insert(71163,99933);
    caseQueue.updatePriority(43583, 16130);
    myResult.push_back(caseQueue.getPriority(38677)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(14416,89235);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(27849,88672);
    caseQueue.insert(58177,15871);
    caseQueue.updatePriority(58177, 95952);
    myResult.push_back(caseQueue.getPriority(14416)); //19
    caseQueue.updatePriority(58177, 98035);
    caseQueue.insert(15031,75301);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(91906,33999);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(65093,95394);
    caseQueue.insert(17380,72071);
    caseQueue.updatePriority(71163, 68999);
    caseQueue.updatePriority(83128, 97462);
    caseQueue.insert(96038,34788);
    myResult.push_back(caseQueue.getPriority(65093)); //22
    caseQueue.insert(81853,82514);
    caseQueue.updatePriority(3854, 65926);
    caseQueue.insert(10379,47062);
    caseQueue.insert(53878,95158);
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.getPriority(17380)); //24
    caseQueue.updatePriority(71163, 73514);
    caseQueue.insert(17250,45114);
    myResult.push_back(caseQueue.getPriority(64603)); //25
    myResult.push_back(caseQueue.getPriority(17380)); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(14416)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(58177)); //30
    myResult.push_back(caseQueue.getPriority(3854)); //31
    caseQueue.insert(88830,20906);
    myResult.push_back(caseQueue.getPriority(81853)); //32
    caseQueue.insert(88756,99827);
    caseQueue.updatePriority(22436, 27975);
    caseQueue.updatePriority(53878, 24872);
    myResult.push_back(caseQueue.getPriority(65093)); //33
    myResult.push_back(caseQueue.getPriority(10379)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(83128)); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.getPriority(58177)); //39
    caseQueue.insert(55355,4819);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(27849, 89318);
    caseQueue.insert(61045,32931);
    caseQueue.insert(35261,8207);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(52221,45962);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.insert(86756,76121);
    caseQueue.updatePriority(15031, 83970);
    caseQueue.insert(79794,50607);
    myResult.push_back(caseQueue.getPriority(81853)); //44
    caseQueue.insert(83417,70190);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.updatePriority(88756, 67878);
    myResult.push_back(caseQueue.getPriority(58177)); //46
    caseQueue.updatePriority(88756, 59786);
    caseQueue.insert(46346,82169);
    caseQueue.insert(92523,7456);
    caseQueue.insert(89537,94889);
    caseQueue.updatePriority(83417, 51439);
    caseQueue.insert(92432,37058);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.getPriority(17380)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(82541,46748);
    myResult.push_back(caseQueue.getPriority(88756)); //50
    caseQueue.updatePriority(27702, 98398);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.getPriority(3854)); //52
    caseQueue.insert(75218,87856);
    caseQueue.insert(10470,42124);
    caseQueue.insert(87460,97645);
    caseQueue.updatePriority(94705, 73782);
    caseQueue.insert(43102,34565);
    caseQueue.updatePriority(79794, 98336);
    caseQueue.insert(99006,18073);
    caseQueue.insert(85626,79009);
    caseQueue.insert(49040,37957);
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(46561,28166);
    caseQueue.insert(12163,47718);
    caseQueue.updatePriority(3854, 94963);
    caseQueue.insert(73505,51460);
    caseQueue.updatePriority(73505, 20664);
    caseQueue.insert(3147,64030);
    myResult.push_back(caseQueue.getPriority(17380)); //56
    myResult.push_back(caseQueue.getPriority(75218)); //57
    caseQueue.insert(39336,78702);
    myResult.push_back(caseQueue.getPriority(12163)); //58
    myResult.push_back(caseQueue.getPriority(19484)); //59
    caseQueue.insert(42152,79456);
    caseQueue.insert(82773,76967);
    caseQueue.updatePriority(73505, 20976);
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(98698,57609);
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(67507,60129);
    myResult.push_back(caseQueue.getPriority(82773)); //64
    caseQueue.insert(43465,22254);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(3147, 14517);
    static const int resultListArray[] = {-1, 2999, 54795, 41872, 83553, 49547, 28420, 25128, 31384, 41872, 58554, 58726, 49547, 45837, 41872, 28420, 43583, 38677, 89235, 52314, 80574, 95394, 91906, 72071, 86606, 72071, 96038, 89235, 17250, 98035, 65926, 82514, 95394, 47062, 88830, 53878, 97462, 22436, 98035, 55355, 35261, 61045, 55180, 82514, 52221, 98035, 92523, 72071, 92432, 59786, 82541, 65926, 99006, 43102, 49040, 72071, 87856, 47718, 49099, 73505, 46561, 10470, 10379, 76967, 43465}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(243): Basarili" << endl;
    else cout << "Case(243): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_244(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 227);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(23330)); //1
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(90529, 75885);
    caseQueue.insert(84169,89733);
    caseQueue.insert(1428,10805);
    myResult.push_back(caseQueue.getPriority(84169)); //3
    myResult.push_back(caseQueue.getPriority(84169)); //4
    caseQueue.insert(42542,21040);
    myResult.push_back(caseQueue.getPriority(1428)); //5
    caseQueue.insert(89712,12043);
    caseQueue.insert(14444,80925);
    caseQueue.insert(13865,3501);
    caseQueue.insert(48800,51094);
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    caseQueue.updatePriority(48800, 68213);
    caseQueue.updatePriority(14444, 11369);
    caseQueue.insert(94359,5249);
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(42542, 93001);
    caseQueue.insert(68846,11080);
    caseQueue.insert(66892,80754);
    myResult.push_back(caseQueue.getPriority(42542)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    myResult.push_back(caseQueue.getPriority(84169)); //13
    caseQueue.insert(29664,65206);
    caseQueue.insert(65518,75682);
    caseQueue.insert(76314,50976);
    myResult.push_back(caseQueue.deleteMin()); //14
    caseQueue.insert(64865,38298);
    caseQueue.updatePriority(65518, 36906);
    caseQueue.insert(56557,60885);
    caseQueue.insert(2317,18412);
    caseQueue.insert(80339,6624);
    caseQueue.insert(94124,8460);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(94124, 29278);
    caseQueue.insert(90912,94963);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(44339,20848);
    myResult.push_back(caseQueue.getPriority(64865)); //17
    caseQueue.updatePriority(56557, 34602);
    myResult.push_back(caseQueue.getPriority(64865)); //18
    caseQueue.updatePriority(94124, 38587);
    caseQueue.insert(8390,20486);
    myResult.push_back(caseQueue.getPriority(48800)); //19
    caseQueue.updatePriority(48800, 65453);
    caseQueue.insert(87426,54282);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(1326,21286);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.updatePriority(42542, 40976);
    caseQueue.insert(24807,32228);
    myResult.push_back(caseQueue.deleteMin()); //22
    myResult.push_back(caseQueue.getPriority(24807)); //23
    caseQueue.insert(81039,65855);
    myResult.push_back(caseQueue.getPriority(65518)); //24
    caseQueue.insert(83496,12941);
    myResult.push_back(caseQueue.getPriority(48800)); //25
    caseQueue.updatePriority(48800, 28677);
    caseQueue.updatePriority(90912, 72891);
    caseQueue.updatePriority(64865, 22886);
    myResult.push_back(caseQueue.deleteMin()); //26
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(66892)); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(84169, 25617);
    caseQueue.updatePriority(81039, 57452);
    caseQueue.updatePriority(56557, 68906);
    myResult.push_back(caseQueue.getPriority(29664)); //30
    caseQueue.insert(55156,16329);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.updatePriority(66892, 34028);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(31482,20046);
    caseQueue.updatePriority(29664, 36802);
    caseQueue.insert(26049,71499);
    myResult.push_back(caseQueue.deleteMin()); //33
    myResult.push_back(caseQueue.getPriority(87426)); //34
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(53954,43350);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(90912)); //40
    caseQueue.updatePriority(42542, 21301);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(1046,24235);
    caseQueue.insert(95418,98364);
    myResult.push_back(caseQueue.getPriority(90912)); //42
    caseQueue.updatePriority(26049, 52687);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(81039, 41156);
    caseQueue.insert(29738,76161);
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(32593,41057);
    myResult.push_back(caseQueue.getPriority(26049)); //46
    caseQueue.updatePriority(26049, 53016);
    caseQueue.updatePriority(95418, 71637);
    caseQueue.updatePriority(95418, 88078);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(4512,87278);
    caseQueue.insert(51800,23319);
    myResult.push_back(caseQueue.getPriority(90912)); //48
    caseQueue.insert(48428,78459);
    caseQueue.insert(51704,57631);
    caseQueue.insert(22262,26749);
    caseQueue.insert(89071,51822);
    caseQueue.insert(89811,28298);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(29839,74782);
    myResult.push_back(caseQueue.deleteMin()); //50
    caseQueue.insert(70109,12408);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(49566,81041);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(4512, 76861);
    caseQueue.updatePriority(29738, 40332);
    myResult.push_back(caseQueue.getPriority(4512)); //53
    caseQueue.updatePriority(90912, 71166);
    caseQueue.insert(34999,18477);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.updatePriority(49566, 85790);
    caseQueue.updatePriority(4512, 21489);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(26966,67127);
    caseQueue.insert(32150,83792);
    caseQueue.insert(27044,86621);
    caseQueue.insert(81459,68667);
    caseQueue.updatePriority(27044, 65346);
    myResult.push_back(caseQueue.getPriority(48428)); //56
    caseQueue.insert(13751,11923);
    caseQueue.insert(50911,78062);
    caseQueue.insert(90387,75126);
    caseQueue.updatePriority(90387, 67128);
    caseQueue.insert(13049,25309);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(39482,7606);
    caseQueue.updatePriority(48428, 57083);
    caseQueue.updatePriority(90912, 55780);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(23928,9104);
    myResult.push_back(caseQueue.getPriority(90387)); //62
    caseQueue.updatePriority(29839, 24872);
    myResult.push_back(caseQueue.getPriority(90387)); //63
    caseQueue.insert(36441,35634);
    caseQueue.updatePriority(23928, 59113);
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(98410,27764);
    myResult.push_back(caseQueue.getPriority(90387)); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(49541,51060);
    caseQueue.insert(17226,13112);
    caseQueue.updatePriority(81459, 45224);
    caseQueue.insert(21003,15372);
    caseQueue.insert(9058,22893);
    myResult.push_back(caseQueue.getPriority(48428)); //67
    myResult.push_back(caseQueue.getPriority(49541)); //68
    caseQueue.insert(71756,78273);
    caseQueue.insert(33398,35065);
    caseQueue.updatePriority(32150, 40849);
    myResult.push_back(caseQueue.getPriority(56557)); //69
    caseQueue.updatePriority(33398, 84377);
    myResult.push_back(caseQueue.getPriority(17226)); //70
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.updatePriority(50911, 59436);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(69917,7159);
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.deleteMin()); //74
    caseQueue.insert(81064,88649);
    caseQueue.insert(89570,2506);
    myResult.push_back(caseQueue.getPriority(33398)); //75
    myResult.push_back(caseQueue.getPriority(23928)); //76
    caseQueue.insert(74031,96385);
    caseQueue.updatePriority(36441, 23276);
    caseQueue.updatePriority(32150, 3808);
    myResult.push_back(caseQueue.getPriority(90912)); //77
    myResult.push_back(caseQueue.getPriority(71756)); //78
    caseQueue.insert(25594,60124);
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(8768,7530);
    caseQueue.updatePriority(87426, 13862);
    myResult.push_back(caseQueue.getPriority(27044)); //80
    caseQueue.insert(40412,55277);
    caseQueue.insert(8835,36331);
    caseQueue.insert(99895,831);
    caseQueue.updatePriority(74031, 83153);
    myResult.push_back(caseQueue.deleteMin()); //81
    myResult.push_back(caseQueue.deleteMin()); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(30875,39451);
    myResult.push_back(caseQueue.getPriority(81459)); //85
    caseQueue.insert(94544,4594);
    myResult.push_back(caseQueue.getPriority(74031)); //86
    caseQueue.insert(75095,70122);
    caseQueue.insert(17200,16589);
    myResult.push_back(caseQueue.getPriority(27044)); //87
    caseQueue.insert(37793,70117);
    caseQueue.insert(94350,95001);
    caseQueue.insert(83515,27612);
    myResult.push_back(caseQueue.getPriority(30875)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(25516,50847);
    myResult.push_back(caseQueue.getPriority(74031)); //90
    myResult.push_back(caseQueue.getPriority(71756)); //91
    caseQueue.insert(26831,27211);
    myResult.push_back(caseQueue.deleteMin()); //92
    myResult.push_back(caseQueue.deleteMin()); //93
    myResult.push_back(caseQueue.deleteMin()); //94
    myResult.push_back(caseQueue.deleteMin()); //95
    myResult.push_back(caseQueue.deleteMin()); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    caseQueue.insert(91424,11974);
    caseQueue.updatePriority(26966, 522);
    caseQueue.updatePriority(49541, 52827);
    caseQueue.updatePriority(27044, 46307);
    caseQueue.updatePriority(94350, 66370);
    caseQueue.updatePriority(40412, 39620);
    static const int resultListArray[] = {-1, -1, 89733, 89733, 10805, 13865, 1428, 94359, 14444, 93001, 68846, 89712, 89733, 76314, 80339, 2317, 38298, 38298, 68213, 8390, 44339, 1326, 32228, 36906, 65453, 83496, 64865, 80754, 48800, 65206, 55156, 84169, 31482, 54282, 24807, 66892, 29664, 65518, 94124, 72891, 42542, 72891, 1046, 81039, 53954, 52687, 32593, 72891, 51800, 22262, 70109, 89811, 76861, 34999, 4512, 78459, 13751, 13049, 39482, 29738, 89071, 67128, 67128, 29839, 67128, 98410, 57083, 51060, 68906, 13112, 17226, 21003, 69917, 9058, 84377, 59113, 55780, 78273, 89570, 65346, 99895, 32150, 8768, 87426, 45224, 83153, 65346, 39451, 94544, 83153, 78273, 17200, 36441, 26831, 83515, 8835, 30875}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(244): Basarili" << endl;
    else cout << "Case(244): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_245(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 233);

    vector<int> myResult; 
    caseQueue.insert(64502,63060);
    caseQueue.updatePriority(64502, 10564);
    myResult.push_back(caseQueue.deleteMin()); //1
    caseQueue.insert(562,5168);
    myResult.push_back(caseQueue.deleteMin()); //2
    caseQueue.updatePriority(84269, 38548);
    caseQueue.updatePriority(192, 65434);
    caseQueue.insert(95969,4433);
    caseQueue.insert(92740,9582);
    myResult.push_back(caseQueue.getPriority(95969)); //3
    caseQueue.insert(24718,61866);
    caseQueue.insert(20800,45545);
    caseQueue.insert(51949,51828);
    caseQueue.insert(21293,66919);
    caseQueue.insert(53803,97166);
    myResult.push_back(caseQueue.getPriority(92740)); //4
    myResult.push_back(caseQueue.deleteMin()); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    myResult.push_back(caseQueue.getPriority(24718)); //7
    caseQueue.updatePriority(53803, 33860);
    caseQueue.insert(85974,74932);
    myResult.push_back(caseQueue.getPriority(21293)); //8
    caseQueue.updatePriority(24718, 70843);
    myResult.push_back(caseQueue.getPriority(53803)); //9
    caseQueue.insert(99782,50202);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(51949, 51508);
    caseQueue.updatePriority(21293, 57572);
    caseQueue.updatePriority(85974, 6204);
    myResult.push_back(caseQueue.getPriority(85974)); //11
    myResult.push_back(caseQueue.getPriority(99782)); //12
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.getPriority(21293)); //16
    caseQueue.insert(35923,43230);
    caseQueue.insert(10818,37485);
    myResult.push_back(caseQueue.getPriority(51949)); //17
    myResult.push_back(caseQueue.getPriority(51949)); //18
    caseQueue.insert(36423,16902);
    caseQueue.updatePriority(35923, 30838);
    caseQueue.insert(25166,29115);
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.insert(86359,40090);
    caseQueue.insert(21179,41999);
    caseQueue.updatePriority(86359, 26486);
    myResult.push_back(caseQueue.getPriority(24718)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.updatePriority(10818, 40646);
    caseQueue.updatePriority(10818, 62612);
    myResult.push_back(caseQueue.getPriority(21293)); //23
    caseQueue.insert(36286,71726);
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.insert(38177,70165);
    caseQueue.updatePriority(38177, 7835);
    caseQueue.insert(3981,44646);
    myResult.push_back(caseQueue.getPriority(51949)); //25
    myResult.push_back(caseQueue.getPriority(3981)); //26
    caseQueue.insert(44849,89684);
    myResult.push_back(caseQueue.deleteMin()); //27
    myResult.push_back(caseQueue.getPriority(24718)); //28
    caseQueue.updatePriority(10818, 12121);
    caseQueue.updatePriority(21179, 97873);
    myResult.push_back(caseQueue.getPriority(21293)); //29
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.insert(61446,91349);
    myResult.push_back(caseQueue.getPriority(24718)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(24718, 81032);
    caseQueue.updatePriority(61446, 52902);
    caseQueue.insert(56668,86643);
    caseQueue.insert(90499,69770);
    caseQueue.insert(55852,35099);
    caseQueue.insert(90923,44881);
    caseQueue.updatePriority(21293, 1316);
    myResult.push_back(caseQueue.getPriority(51949)); //33
    myResult.push_back(caseQueue.getPriority(90499)); //34
    myResult.push_back(caseQueue.getPriority(36286)); //35
    caseQueue.updatePriority(36286, 80027);
    myResult.push_back(caseQueue.getPriority(61446)); //36
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(44071,39980);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.updatePriority(44849, 9447);
    caseQueue.insert(11276,96954);
    caseQueue.updatePriority(11276, 17757);
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(11276)); //42
    caseQueue.insert(77807,18397);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.getPriority(24718)); //44
    myResult.push_back(caseQueue.getPriority(24718)); //45
    caseQueue.insert(85816,51793);
    myResult.push_back(caseQueue.getPriority(77807)); //46
    caseQueue.insert(11513,65479);
    myResult.push_back(caseQueue.deleteMin()); //47
    caseQueue.insert(6350,97666);
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(85618,56347);
    caseQueue.insert(56500,56202);
    caseQueue.insert(82952,77929);
    myResult.push_back(caseQueue.getPriority(21179)); //49
    myResult.push_back(caseQueue.getPriority(85816)); //50
    caseQueue.insert(11346,7735);
    caseQueue.updatePriority(90499, 11361);
    caseQueue.updatePriority(85816, 11029);
    myResult.push_back(caseQueue.getPriority(56500)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    caseQueue.insert(33790,56791);
    myResult.push_back(caseQueue.getPriority(24718)); //54
    caseQueue.insert(30494,86425);
    caseQueue.insert(17503,15751);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(1503,44117);
    myResult.push_back(caseQueue.deleteMin()); //56
    caseQueue.insert(83302,698);
    myResult.push_back(caseQueue.deleteMin()); //57
    myResult.push_back(caseQueue.getPriority(24718)); //58
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.getPriority(56500)); //60
    caseQueue.insert(37221,42862);
    myResult.push_back(caseQueue.getPriority(56500)); //61
    caseQueue.updatePriority(21179, 15907);
    caseQueue.updatePriority(24718, 52921);
    caseQueue.insert(64583,29402);
    caseQueue.insert(1727,41816);
    caseQueue.updatePriority(11513, 19374);
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.updatePriority(56500, 46672);
    caseQueue.insert(6359,87322);
    myResult.push_back(caseQueue.getPriority(56500)); //63
    caseQueue.updatePriority(37221, 98186);
    caseQueue.updatePriority(85618, 5397);
    caseQueue.updatePriority(37221, 88567);
    caseQueue.insert(77686,56433);
    myResult.push_back(caseQueue.getPriority(36286)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(33790, 65211);
    caseQueue.insert(6277,47631);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(25677,96485);
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(1727)); //68
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.updatePriority(24718, 50262);
    caseQueue.updatePriority(36286, 84899);
    myResult.push_back(caseQueue.getPriority(6350)); //70
    caseQueue.insert(43950,25328);
    caseQueue.insert(52929,3192);
    caseQueue.updatePriority(25677, 49414);
    caseQueue.updatePriority(56500, 51096);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    caseQueue.insert(75153,91363);
    myResult.push_back(caseQueue.deleteMin()); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(6359, 5346);
    myResult.push_back(caseQueue.getPriority(33790)); //76
    caseQueue.updatePriority(77686, 33330);
    caseQueue.updatePriority(56500, 46409);
    caseQueue.insert(70482,68397);
    myResult.push_back(caseQueue.getPriority(56668)); //77
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.insert(12223,31324);
    caseQueue.insert(83794,77749);
    caseQueue.insert(41016,22983);
    caseQueue.insert(21962,55238);
    caseQueue.insert(36996,92654);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(34071,37509);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(34071, 64053);
    myResult.push_back(caseQueue.getPriority(36996)); //82
    myResult.push_back(caseQueue.getPriority(37221)); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    myResult.push_back(caseQueue.deleteMin()); //85
    caseQueue.insert(95748,22426);
    myResult.push_back(caseQueue.getPriority(36996)); //86
    myResult.push_back(caseQueue.getPriority(82952)); //87
    myResult.push_back(caseQueue.deleteMin()); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    caseQueue.insert(80607,52681);
    myResult.push_back(caseQueue.getPriority(83794)); //90
    myResult.push_back(caseQueue.deleteMin()); //91
    caseQueue.insert(37992,10951);
    caseQueue.insert(68026,15522);
    caseQueue.insert(67116,77289);
    caseQueue.updatePriority(34071, 7520);
    caseQueue.updatePriority(6350, 20112);
    caseQueue.insert(60560,91834);
    caseQueue.insert(28300,62914);
    caseQueue.insert(31584,87043);
    caseQueue.insert(62065,16594);
    myResult.push_back(caseQueue.deleteMin()); //92
    caseQueue.updatePriority(68026, 54578);
    caseQueue.insert(26395,56078);
    caseQueue.insert(45755,37114);
    myResult.push_back(caseQueue.getPriority(60560)); //93
    myResult.push_back(caseQueue.deleteMin()); //94
    myResult.push_back(caseQueue.deleteMin()); //95
    caseQueue.insert(28313,76361);
    caseQueue.insert(53473,7145);
    caseQueue.insert(24788,94003);
    caseQueue.insert(18934,25773);
    myResult.push_back(caseQueue.getPriority(75153)); //96
    myResult.push_back(caseQueue.deleteMin()); //97
    myResult.push_back(caseQueue.deleteMin()); //98
    caseQueue.insert(25506,56360);
    caseQueue.insert(78810,12684);
    caseQueue.updatePriority(45755, 51771);
    caseQueue.insert(28791,26268);
    caseQueue.updatePriority(28300, 70277);
    myResult.push_back(caseQueue.deleteMin()); //99
    myResult.push_back(caseQueue.getPriority(28313)); //100
    caseQueue.insert(84129,8149);
    caseQueue.updatePriority(68026, 44302);
    myResult.push_back(caseQueue.getPriority(26395)); //101
    caseQueue.insert(14868,11671);
    caseQueue.updatePriority(36996, 78014);
    caseQueue.updatePriority(83794, 65104);
    myResult.push_back(caseQueue.deleteMin()); //102
    caseQueue.updatePriority(68026, 76386);
    caseQueue.insert(13209,40520);
    myResult.push_back(caseQueue.getPriority(37221)); //103
    myResult.push_back(caseQueue.deleteMin()); //104
    myResult.push_back(caseQueue.getPriority(75153)); //105
    myResult.push_back(caseQueue.deleteMin()); //106
    static const int resultListArray[] = {64502, 562, 4433, 9582, 95969, 92740, 61866, 66919, 33860, 53803, 6204, 50202, 85974, 20800, 99782, 57572, 51508, 51508, 36423, 25166, 70843, 86359, 57572, 35923, 51508, 44646, 38177, 70843, 57572, 10818, 70843, 3981, 51508, 69770, 71726, 52902, 21293, 55852, 44071, 90923, 44849, 17757, 11276, 81032, 81032, 18397, 77807, 51949, 97873, 51793, 56202, 11346, 85816, 81032, 90499, 17503, 83302, 81032, 1503, 56202, 56202, 21179, 46672, 80027, 85618, 11513, 64583, 41816, 1727, 97666, 52929, 43950, 6277, 25677, 24718, 65211, 86643, 6359, 77686, 41016, 12223, 92654, 88567, 56500, 61446, 92654, 77929, 95748, 21962, 77749, 80607, 34071, 91834, 37992, 62065, 91363, 53473, 6350, 78810, 76361, 56078, 84129, 88567, 14868, 91363, 18934}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(245): Basarili" << endl;
    else cout << "Case(245): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_246(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 206);

    vector<int> myResult; 
    myResult.push_back(caseQueue.deleteMin()); //1
    myResult.push_back(caseQueue.getPriority(28680)); //2
    caseQueue.insert(46063,14429);
    caseQueue.insert(67897,19599);
    caseQueue.updatePriority(46063, 91393);
    caseQueue.insert(21473,55429);
    myResult.push_back(caseQueue.deleteMin()); //3
    caseQueue.updatePriority(46063, 937);
    caseQueue.insert(60348,87390);
    caseQueue.updatePriority(46063, 27091);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(60348)); //5
    myResult.push_back(caseQueue.deleteMin()); //6
    caseQueue.updatePriority(60348, 45895);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(74928)); //9
    myResult.push_back(caseQueue.getPriority(91354)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.deleteMin()); //12
    caseQueue.updatePriority(90058, 86807);
    caseQueue.insert(18102,71127);
    caseQueue.updatePriority(18102, 25446);
    caseQueue.updatePriority(18102, 86395);
    myResult.push_back(caseQueue.getPriority(18102)); //13
    caseQueue.insert(9484,53089);
    caseQueue.insert(98708,4922);
    caseQueue.insert(85773,32136);
    myResult.push_back(caseQueue.getPriority(85773)); //14
    caseQueue.insert(86142,33861);
    caseQueue.updatePriority(85773, 71785);
    caseQueue.updatePriority(86142, 89756);
    caseQueue.insert(21427,39007);
    caseQueue.updatePriority(21427, 16810);
    caseQueue.insert(26598,57253);
    caseQueue.insert(6552,97966);
    caseQueue.insert(39535,28414);
    caseQueue.insert(32028,54131);
    myResult.push_back(caseQueue.getPriority(39535)); //15
    caseQueue.updatePriority(98708, 1944);
    caseQueue.insert(14390,8211);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.updatePriority(9484, 35942);
    caseQueue.insert(45741,85150);
    caseQueue.insert(6064,9183);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(6064, 82737);
    myResult.push_back(caseQueue.deleteMin()); //18
    caseQueue.insert(17156,61000);
    caseQueue.updatePriority(45741, 39573);
    caseQueue.updatePriority(85773, 32560);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(61472,22418);
    myResult.push_back(caseQueue.deleteMin()); //20
    myResult.push_back(caseQueue.getPriority(26598)); //21
    myResult.push_back(caseQueue.getPriority(17156)); //22
    caseQueue.insert(15909,35142);
    myResult.push_back(caseQueue.getPriority(32028)); //23
    caseQueue.insert(97946,16019);
    caseQueue.updatePriority(85773, 49984);
    myResult.push_back(caseQueue.getPriority(26598)); //24
    myResult.push_back(caseQueue.getPriority(18102)); //25
    myResult.push_back(caseQueue.getPriority(85773)); //26
    myResult.push_back(caseQueue.getPriority(45741)); //27
    myResult.push_back(caseQueue.getPriority(45741)); //28
    caseQueue.updatePriority(15909, 26985);
    myResult.push_back(caseQueue.deleteMin()); //29
    myResult.push_back(caseQueue.getPriority(26598)); //30
    myResult.push_back(caseQueue.deleteMin()); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(6064, 93761);
    caseQueue.insert(73373,52924);
    caseQueue.insert(43558,70529);
    caseQueue.insert(54368,77928);
    myResult.push_back(caseQueue.getPriority(54368)); //33
    caseQueue.insert(6020,53803);
    myResult.push_back(caseQueue.getPriority(73373)); //34
    caseQueue.updatePriority(26598, 87320);
    caseQueue.updatePriority(17156, 16242);
    caseQueue.insert(88743,78334);
    myResult.push_back(caseQueue.getPriority(45741)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(3880,78794);
    caseQueue.updatePriority(3880, 88970);
    caseQueue.insert(22115,77756);
    caseQueue.insert(67573,87718);
    caseQueue.insert(10011,83797);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(2480,83964);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(49004,70630);
    myResult.push_back(caseQueue.getPriority(10011)); //39
    caseQueue.updatePriority(3880, 77999);
    caseQueue.updatePriority(54368, 26225);
    caseQueue.insert(10014,38345);
    caseQueue.updatePriority(49004, 6367);
    caseQueue.insert(5851,59177);
    caseQueue.insert(84446,42272);
    caseQueue.insert(65665,33413);
    caseQueue.insert(58331,47271);
    myResult.push_back(caseQueue.deleteMin()); //40
    myResult.push_back(caseQueue.deleteMin()); //41
    myResult.push_back(caseQueue.getPriority(26598)); //42
    caseQueue.updatePriority(22115, 75107);
    caseQueue.updatePriority(22115, 45923);
    caseQueue.updatePriority(3880, 19461);
    caseQueue.updatePriority(26598, 53662);
    myResult.push_back(caseQueue.deleteMin()); //43
    caseQueue.updatePriority(10014, 98874);
    myResult.push_back(caseQueue.deleteMin()); //44
    caseQueue.insert(38225,60235);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(59681,78021);
    myResult.push_back(caseQueue.deleteMin()); //46
    myResult.push_back(caseQueue.getPriority(88743)); //47
    caseQueue.insert(36763,81846);
    caseQueue.insert(48716,20875);
    caseQueue.insert(96328,26942);
    caseQueue.insert(38241,60936);
    caseQueue.updatePriority(43558, 47428);
    caseQueue.insert(28261,89419);
    caseQueue.updatePriority(36763, 34958);
    caseQueue.insert(97634,17954);
    caseQueue.updatePriority(6552, 66964);
    caseQueue.insert(10756,78613);
    myResult.push_back(caseQueue.getPriority(67573)); //48
    myResult.push_back(caseQueue.deleteMin()); //49
    myResult.push_back(caseQueue.getPriority(59681)); //50
    caseQueue.updatePriority(26598, 21204);
    caseQueue.insert(16499,48780);
    caseQueue.insert(54475,43023);
    caseQueue.insert(16315,67836);
    caseQueue.insert(89939,85571);
    caseQueue.insert(97199,20532);
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.getPriority(6064)); //53
    myResult.push_back(caseQueue.getPriority(10756)); //54
    caseQueue.insert(2317,95944);
    myResult.push_back(caseQueue.deleteMin()); //55
    caseQueue.insert(68780,61874);
    caseQueue.insert(45321,43412);
    caseQueue.insert(952,15719);
    myResult.push_back(caseQueue.getPriority(10011)); //56
    caseQueue.insert(61845,68839);
    caseQueue.insert(17800,37605);
    caseQueue.insert(54327,65838);
    myResult.push_back(caseQueue.getPriority(10756)); //57
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(72727,51429);
    myResult.push_back(caseQueue.getPriority(28261)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(45321)); //62
    caseQueue.insert(64650,74637);
    myResult.push_back(caseQueue.getPriority(72727)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.updatePriority(59681, 87262);
    caseQueue.insert(56910,6813);
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.insert(5562,20089);
    caseQueue.updatePriority(10756, 90794);
    caseQueue.updatePriority(86142, 62819);
    caseQueue.insert(66478,7869);
    caseQueue.insert(46266,98993);
    caseQueue.updatePriority(54475, 73170);
    myResult.push_back(caseQueue.getPriority(61845)); //66
    caseQueue.insert(2156,42710);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(3841,27265);
    caseQueue.insert(66651,78495);
    caseQueue.updatePriority(88743, 39538);
    caseQueue.insert(71483,76412);
    caseQueue.insert(8501,786);
    caseQueue.insert(88377,75567);
    caseQueue.updatePriority(10014, 75171);
    caseQueue.updatePriority(3841, 19349);
    myResult.push_back(caseQueue.getPriority(10011)); //68
    caseQueue.insert(22897,15476);
    myResult.push_back(caseQueue.deleteMin()); //69
    myResult.push_back(caseQueue.deleteMin()); //70
    caseQueue.updatePriority(66651, 10153);
    caseQueue.insert(92238,53980);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(7224,58193);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(2916,22845);
    myResult.push_back(caseQueue.getPriority(16315)); //73
    caseQueue.insert(24398,59577);
    myResult.push_back(caseQueue.getPriority(88377)); //74
    caseQueue.updatePriority(58331, 56817);
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.updatePriority(24398, 41356);
    caseQueue.insert(82557,24999);
    myResult.push_back(caseQueue.deleteMin()); //76
    myResult.push_back(caseQueue.getPriority(88377)); //77
    caseQueue.insert(17639,46713);
    caseQueue.updatePriority(10014, 98566);
    caseQueue.insert(96726,7204);
    caseQueue.updatePriority(86142, 5060);
    myResult.push_back(caseQueue.deleteMin()); //78
    myResult.push_back(caseQueue.deleteMin()); //79
    caseQueue.updatePriority(5851, 30119);
    caseQueue.insert(68939,36428);
    myResult.push_back(caseQueue.getPriority(68780)); //80
    caseQueue.updatePriority(64650, 20768);
    static const int resultListArray[] = {-1, -1, 67897, 46063, 87390, 21473, 60348, -1, -1, -1, -1, -1, 86395, 32136, 28414, 98708, 14390, 21427, 39535, 61472, 57253, 61000, 54131, 57253, 86395, 49984, 39573, 39573, 97946, 57253, 15909, 9484, 77928, 52924, 39573, 17156, 45741, 85773, 83797, 49004, 54368, 87320, 3880, 65665, 84446, 22115, 78334, 87718, 97634, 78021, 97199, 48716, 93761, 78613, 26598, 83797, 78613, 952, 89419, 96328, 36763, 43412, 51429, 17800, 56910, 68839, 66478, 83797, 8501, 22897, 66651, 3841, 67836, 75567, 5562, 2916, 75567, 86142, 96726, 61874}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(246): Basarili" << endl;
    else cout << "Case(246): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_247(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 113);

    vector<int> myResult; 
    caseQueue.insert(23583,10147);
    myResult.push_back(caseQueue.getPriority(23583)); //1
    caseQueue.insert(98393,71970);
    caseQueue.insert(59136,1962);
    myResult.push_back(caseQueue.getPriority(59136)); //2
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(98393)); //5
    caseQueue.insert(11525,70101);
    caseQueue.insert(55156,3053);
    myResult.push_back(caseQueue.getPriority(55156)); //6
    caseQueue.updatePriority(55156, 29709);
    caseQueue.insert(23458,60630);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    myResult.push_back(caseQueue.deleteMin()); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(67545)); //12
    caseQueue.updatePriority(14405, 43092);
    caseQueue.insert(4823,10683);
    caseQueue.updatePriority(4823, 60332);
    myResult.push_back(caseQueue.getPriority(4823)); //13
    caseQueue.insert(3949,44184);
    caseQueue.insert(60482,4348);
    caseQueue.updatePriority(60482, 32240);
    caseQueue.updatePriority(3949, 66971);
    caseQueue.updatePriority(3949, 7012);
    caseQueue.updatePriority(4823, 12929);
    caseQueue.insert(31283,59138);
    myResult.push_back(caseQueue.getPriority(31283)); //14
    caseQueue.insert(29304,58686);
    caseQueue.updatePriority(60482, 44956);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.insert(10113,76224);
    caseQueue.insert(15080,50633);
    caseQueue.updatePriority(31283, 95074);
    myResult.push_back(caseQueue.getPriority(29304)); //16
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(10113, 77872);
    caseQueue.insert(22357,20169);
    caseQueue.insert(27095,81188);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(27095, 97780);
    caseQueue.insert(61323,11927);
    myResult.push_back(caseQueue.deleteMin()); //21
    caseQueue.insert(10674,61621);
    caseQueue.insert(56780,62818);
    caseQueue.insert(26085,34413);
    caseQueue.updatePriority(10674, 26227);
    caseQueue.insert(30314,82605);
    caseQueue.insert(36506,28440);
    caseQueue.insert(51967,37107);
    caseQueue.insert(16080,29678);
    caseQueue.insert(1333,12182);
    myResult.push_back(caseQueue.getPriority(16080)); //22
    caseQueue.insert(72993,58553);
    caseQueue.insert(56451,92593);
    caseQueue.insert(17358,8636);
    myResult.push_back(caseQueue.getPriority(10674)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(30314)); //26
    myResult.push_back(caseQueue.getPriority(26085)); //27
    myResult.push_back(caseQueue.getPriority(51967)); //28
    caseQueue.insert(83684,48895);
    caseQueue.insert(31558,74073);
    myResult.push_back(caseQueue.getPriority(56451)); //29
    myResult.push_back(caseQueue.getPriority(10113)); //30
    caseQueue.updatePriority(83684, 50651);
    myResult.push_back(caseQueue.getPriority(51967)); //31
    myResult.push_back(caseQueue.deleteMin()); //32
    myResult.push_back(caseQueue.getPriority(56780)); //33
    myResult.push_back(caseQueue.getPriority(72993)); //34
    caseQueue.insert(38271,71444);
    caseQueue.insert(84063,50544);
    caseQueue.updatePriority(30314, 50683);
    myResult.push_back(caseQueue.deleteMin()); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(51544,24612);
    caseQueue.insert(7240,99297);
    caseQueue.insert(94831,18178);
    caseQueue.insert(48052,24954);
    caseQueue.insert(54033,27110);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(51544)); //38
    caseQueue.insert(1980,32711);
    myResult.push_back(caseQueue.getPriority(10113)); //39
    caseQueue.insert(79959,85401);
    myResult.push_back(caseQueue.deleteMin()); //40
    caseQueue.insert(65484,51480);
    caseQueue.updatePriority(30314, 97045);
    myResult.push_back(caseQueue.getPriority(1980)); //41
    caseQueue.insert(24961,10644);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.updatePriority(56780, 22240);
    caseQueue.insert(92849,45895);
    caseQueue.insert(2977,45216);
    myResult.push_back(caseQueue.getPriority(29304)); //43
    caseQueue.updatePriority(83684, 50526);
    caseQueue.insert(98757,35278);
    caseQueue.insert(64638,17859);
    caseQueue.insert(87855,44302);
    caseQueue.insert(8399,68459);
    caseQueue.insert(53898,97546);
    myResult.push_back(caseQueue.getPriority(51967)); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(16089,33578);
    myResult.push_back(caseQueue.deleteMin()); //46
    caseQueue.insert(9594,44673);
    myResult.push_back(caseQueue.deleteMin()); //47
    static const int resultListArray[] = {10147, 1962, 59136, 23583, 71970, 3053, 55156, 23458, 11525, 98393, -1, -1, 60332, 59138, 3949, 58686, 4823, 22357, 60482, 15080, 61323, 29678, 26227, 17358, 1333, 82605, 34413, 37107, 92593, 77872, 37107, 10674, 62818, 58553, 36506, 16080, 94831, 24612, 77872, 51544, 32711, 24961, 58686, 37107, 64638, 56780, 48052}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(247): Basarili" << endl;
    else cout << "Case(247): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_248(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 240);

    vector<int> myResult; 
    myResult.push_back(caseQueue.getPriority(43829)); //1
    myResult.push_back(caseQueue.getPriority(20659)); //2
    caseQueue.insert(6401,39593);
    caseQueue.insert(2273,25712);
    myResult.push_back(caseQueue.getPriority(6401)); //3
    caseQueue.updatePriority(2273, 91197);
    myResult.push_back(caseQueue.getPriority(6401)); //4
    myResult.push_back(caseQueue.getPriority(6401)); //5
    caseQueue.insert(99845,97583);
    caseQueue.updatePriority(2273, 56844);
    myResult.push_back(caseQueue.getPriority(2273)); //6
    caseQueue.insert(62604,62152);
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    caseQueue.updatePriority(62604, 65104);
    myResult.push_back(caseQueue.getPriority(99845)); //9
    caseQueue.insert(28551,39339);
    caseQueue.insert(51753,75411);
    caseQueue.updatePriority(51753, 84188);
    caseQueue.updatePriority(51753, 73001);
    caseQueue.insert(20145,76951);
    caseQueue.insert(99398,31047);
    caseQueue.insert(92950,6342);
    caseQueue.updatePriority(99845, 27328);
    myResult.push_back(caseQueue.getPriority(62604)); //10
    myResult.push_back(caseQueue.deleteMin()); //11
    caseQueue.insert(66157,91519);
    myResult.push_back(caseQueue.getPriority(99845)); //12
    caseQueue.insert(96674,93948);
    myResult.push_back(caseQueue.deleteMin()); //13
    myResult.push_back(caseQueue.getPriority(96674)); //14
    caseQueue.insert(14645,2990);
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(62604, 18488);
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(52425,34231);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.insert(9146,44516);
    caseQueue.insert(92023,98496);
    caseQueue.insert(34771,76692);
    caseQueue.insert(96740,19692);
    caseQueue.insert(96848,25289);
    caseQueue.updatePriority(96740, 33197);
    caseQueue.insert(23719,43954);
    myResult.push_back(caseQueue.getPriority(66157)); //18
    caseQueue.insert(70369,11119);
    caseQueue.insert(87513,84598);
    caseQueue.updatePriority(87513, 53969);
    caseQueue.updatePriority(96740, 98423);
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(6457,70487);
    caseQueue.updatePriority(34771, 7248);
    caseQueue.insert(36238,52720);
    caseQueue.updatePriority(87513, 85346);
    caseQueue.updatePriority(6457, 85507);
    caseQueue.updatePriority(52425, 84485);
    caseQueue.insert(83223,50630);
    myResult.push_back(caseQueue.getPriority(96674)); //20
    caseQueue.updatePriority(92023, 98521);
    myResult.push_back(caseQueue.getPriority(92023)); //21
    caseQueue.updatePriority(52425, 34968);
    caseQueue.insert(16361,79619);
    caseQueue.insert(64180,17126);
    caseQueue.insert(71965,38649);
    myResult.push_back(caseQueue.getPriority(66157)); //22
    myResult.push_back(caseQueue.deleteMin()); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    myResult.push_back(caseQueue.deleteMin()); //25
    caseQueue.insert(80360,93403);
    myResult.push_back(caseQueue.getPriority(36238)); //26
    caseQueue.insert(88853,88813);
    caseQueue.insert(2333,60974);
    caseQueue.insert(21360,19450);
    myResult.push_back(caseQueue.getPriority(96674)); //27
    caseQueue.insert(47946,92286);
    caseQueue.insert(50380,90618);
    caseQueue.insert(56821,32883);
    caseQueue.updatePriority(96674, 29626);
    caseQueue.updatePriority(16361, 20709);
    caseQueue.insert(22335,4539);
    myResult.push_back(caseQueue.getPriority(2333)); //28
    caseQueue.insert(97786,97135);
    caseQueue.insert(77963,3519);
    caseQueue.updatePriority(83223, 7980);
    caseQueue.insert(52201,39154);
    caseQueue.insert(27188,15037);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.insert(78176,1759);
    caseQueue.insert(34282,55040);
    caseQueue.insert(8563,90482);
    caseQueue.insert(66566,48307);
    myResult.push_back(caseQueue.deleteMin()); //30
    caseQueue.updatePriority(66566, 45679);
    caseQueue.insert(32688,36701);
    caseQueue.updatePriority(22335, 72573);
    caseQueue.insert(74696,68320);
    caseQueue.insert(12348,67889);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(82593,62103);
    caseQueue.insert(29624,92815);
    caseQueue.insert(15574,44324);
    caseQueue.insert(40879,31290);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.insert(62475,47178);
    myResult.push_back(caseQueue.getPriority(74696)); //33
    caseQueue.insert(17395,28033);
    myResult.push_back(caseQueue.getPriority(52201)); //34
    caseQueue.insert(60165,60151);
    caseQueue.updatePriority(32688, 58097);
    caseQueue.insert(97825,99882);
    caseQueue.updatePriority(47946, 24310);
    myResult.push_back(caseQueue.deleteMin()); //35
    caseQueue.insert(8220,62449);
    myResult.push_back(caseQueue.getPriority(80360)); //36
    caseQueue.updatePriority(74696, 25488);
    myResult.push_back(caseQueue.deleteMin()); //37
    myResult.push_back(caseQueue.getPriority(9146)); //38
    caseQueue.updatePriority(22335, 30281);
    caseQueue.updatePriority(9146, 63065);
    myResult.push_back(caseQueue.deleteMin()); //39
    caseQueue.insert(22761,56941);
    myResult.push_back(caseQueue.getPriority(34282)); //40
    caseQueue.insert(44118,47348);
    caseQueue.insert(4923,28017);
    caseQueue.insert(92808,97870);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.updatePriority(80360, 68148);
    caseQueue.insert(18315,61741);
    caseQueue.insert(49085,73077);
    myResult.push_back(caseQueue.deleteMin()); //42
    myResult.push_back(caseQueue.getPriority(18315)); //43
    myResult.push_back(caseQueue.getPriority(52425)); //44
    caseQueue.insert(43713,27492);
    caseQueue.updatePriority(18315, 24467);
    caseQueue.insert(17411,53706);
    caseQueue.insert(30725,74547);
    caseQueue.insert(56302,22404);
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(93613,71293);
    caseQueue.insert(44392,94601);
    caseQueue.insert(61685,65033);
    caseQueue.insert(31506,56348);
    myResult.push_back(caseQueue.getPriority(23719)); //46
    myResult.push_back(caseQueue.getPriority(62475)); //47
    caseQueue.insert(32472,5604);
    myResult.push_back(caseQueue.getPriority(18315)); //48
    myResult.push_back(caseQueue.getPriority(32688)); //49
    myResult.push_back(caseQueue.getPriority(22761)); //50
    caseQueue.insert(71485,27558);
    caseQueue.updatePriority(82593, 68666);
    caseQueue.insert(49693,19966);
    myResult.push_back(caseQueue.deleteMin()); //51
    caseQueue.insert(99341,79966);
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.updatePriority(31506, 95869);
    myResult.push_back(caseQueue.getPriority(20145)); //53
    caseQueue.insert(61147,91371);
    caseQueue.insert(6419,13939);
    caseQueue.insert(41112,62011);
    myResult.push_back(caseQueue.deleteMin()); //54
    myResult.push_back(caseQueue.getPriority(66157)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(40879)); //57
    caseQueue.updatePriority(52201, 25724);
    myResult.push_back(caseQueue.getPriority(32688)); //58
    caseQueue.updatePriority(92808, 88697);
    caseQueue.insert(92722,68865);
    myResult.push_back(caseQueue.getPriority(40879)); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.deleteMin()); //61
    caseQueue.insert(91448,77393);
    caseQueue.insert(21582,84815);
    myResult.push_back(caseQueue.getPriority(93613)); //62
    myResult.push_back(caseQueue.deleteMin()); //63
    caseQueue.insert(62934,91634);
    myResult.push_back(caseQueue.deleteMin()); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.insert(44832,56063);
    caseQueue.insert(33871,33063);
    myResult.push_back(caseQueue.getPriority(9146)); //67
    caseQueue.insert(1518,64235);
    myResult.push_back(caseQueue.getPriority(66566)); //68
    caseQueue.insert(74474,89789);
    caseQueue.insert(52196,25405);
    caseQueue.insert(42507,65505);
    caseQueue.insert(71739,28380);
    caseQueue.updatePriority(66566, 41116);
    caseQueue.insert(39715,58141);
    caseQueue.updatePriority(32688, 54294);
    myResult.push_back(caseQueue.deleteMin()); //69
    caseQueue.insert(19262,66630);
    myResult.push_back(caseQueue.getPriority(17411)); //70
    caseQueue.insert(40672,18130);
    caseQueue.insert(30752,22963);
    myResult.push_back(caseQueue.deleteMin()); //71
    caseQueue.insert(40774,54144);
    caseQueue.insert(67683,14319);
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.getPriority(61685)); //73
    caseQueue.insert(11173,9642);
    myResult.push_back(caseQueue.getPriority(92808)); //74
    caseQueue.updatePriority(44118, 51726);
    caseQueue.insert(5537,14082);
    myResult.push_back(caseQueue.deleteMin()); //75
    myResult.push_back(caseQueue.deleteMin()); //76
    caseQueue.insert(15653,86768);
    caseQueue.insert(43679,36352);
    myResult.push_back(caseQueue.getPriority(33871)); //77
    myResult.push_back(caseQueue.getPriority(30725)); //78
    myResult.push_back(caseQueue.getPriority(15653)); //79
    caseQueue.updatePriority(44392, 39359);
    caseQueue.insert(61935,87336);
    caseQueue.updatePriority(29624, 46273);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.updatePriority(17411, 49219);
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(44392, 14814);
    myResult.push_back(caseQueue.getPriority(21582)); //82
    caseQueue.insert(28105,64939);
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.insert(30251,37117);
    caseQueue.updatePriority(62934, 57841);
    caseQueue.insert(93830,23645);
    caseQueue.updatePriority(12348, 73473);
    caseQueue.insert(13896,93937);
    caseQueue.updatePriority(40774, 37852);
    caseQueue.insert(80510,20900);
    myResult.push_back(caseQueue.getPriority(74474)); //84
    myResult.push_back(caseQueue.getPriority(60165)); //85
    myResult.push_back(caseQueue.deleteMin()); //86
    myResult.push_back(caseQueue.getPriority(61935)); //87
    myResult.push_back(caseQueue.getPriority(51753)); //88
    myResult.push_back(caseQueue.deleteMin()); //89
    myResult.push_back(caseQueue.deleteMin()); //90
    caseQueue.updatePriority(92722, 80107);
    caseQueue.insert(29703,15944);
    myResult.push_back(caseQueue.getPriority(30251)); //91
    caseQueue.insert(14818,70098);
    myResult.push_back(caseQueue.getPriority(50380)); //92
    static const int resultListArray[] = {-1, -1, 39593, 39593, 39593, 56844, 6401, 2273, 97583, 65104, 92950, 27328, 99845, 93948, 14645, 62604, 99398, 91519, 70369, 93948, 98521, 91519, 34771, 64180, 96848, 52720, 93948, 60974, 77963, 78176, 83223, 27188, 68320, 39154, 21360, 93403, 16361, 44516, 47946, 55040, 74696, 4923, 61741, 34968, 56302, 43954, 47178, 24467, 58097, 56941, 32472, 49693, 76951, 6419, 91519, 18315, 31290, 58097, 31290, 52201, 43713, 71293, 71485, 17395, 96674, 22335, 63065, 45679, 52196, 53706, 40672, 67683, 65033, 88697, 11173, 5537, 33063, 74547, 86768, 30752, 71739, 84815, 44392, 89789, 60151, 80510, 87336, 73001, 93830, 40879, 37117, 90618}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(248): Basarili" << endl;
    else cout << "Case(248): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_249(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 199);

    vector<int> myResult; 
    caseQueue.insert(6993,98092);
    caseQueue.insert(93974,36999);
    myResult.push_back(caseQueue.getPriority(6993)); //1
    myResult.push_back(caseQueue.getPriority(6993)); //2
    myResult.push_back(caseQueue.getPriority(6993)); //3
    caseQueue.insert(40326,92636);
    myResult.push_back(caseQueue.deleteMin()); //4
    myResult.push_back(caseQueue.getPriority(6993)); //5
    caseQueue.insert(39324,96121);
    myResult.push_back(caseQueue.getPriority(6993)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.deleteMin()); //9
    caseQueue.updatePriority(11138, 52196);
    caseQueue.insert(21668,5570);
    caseQueue.insert(72059,96494);
    caseQueue.updatePriority(21668, 65128);
    caseQueue.insert(56569,80241);
    caseQueue.insert(8336,91276);
    caseQueue.insert(60165,21425);
    caseQueue.insert(90936,62344);
    caseQueue.insert(23081,91481);
    caseQueue.insert(20826,20366);
    caseQueue.insert(9874,91604);
    myResult.push_back(caseQueue.deleteMin()); //10
    caseQueue.updatePriority(9874, 15872);
    myResult.push_back(caseQueue.deleteMin()); //11
    myResult.push_back(caseQueue.getPriority(8336)); //12
    myResult.push_back(caseQueue.getPriority(72059)); //13
    myResult.push_back(caseQueue.getPriority(72059)); //14
    caseQueue.updatePriority(60165, 89415);
    myResult.push_back(caseQueue.deleteMin()); //15
    myResult.push_back(caseQueue.deleteMin()); //16
    caseQueue.insert(93474,22641);
    caseQueue.insert(58789,59542);
    myResult.push_back(caseQueue.getPriority(8336)); //17
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.getPriority(56569)); //19
    caseQueue.insert(428,10003);
    myResult.push_back(caseQueue.getPriority(8336)); //20
    caseQueue.insert(80029,97325);
    caseQueue.insert(93637,91218);
    myResult.push_back(caseQueue.getPriority(8336)); //21
    myResult.push_back(caseQueue.deleteMin()); //22
    caseQueue.insert(16445,80253);
    caseQueue.updatePriority(16445, 57001);
    caseQueue.updatePriority(93637, 29766);
    caseQueue.updatePriority(23081, 15976);
    myResult.push_back(caseQueue.getPriority(56569)); //23
    myResult.push_back(caseQueue.deleteMin()); //24
    caseQueue.updatePriority(72059, 85331);
    caseQueue.insert(76052,6082);
    caseQueue.insert(34586,37734);
    caseQueue.updatePriority(93637, 62343);
    caseQueue.updatePriority(8336, 13403);
    caseQueue.insert(58558,70091);
    caseQueue.insert(35267,85905);
    caseQueue.updatePriority(80029, 34434);
    myResult.push_back(caseQueue.deleteMin()); //25
    myResult.push_back(caseQueue.getPriority(34586)); //26
    caseQueue.insert(86443,16053);
    myResult.push_back(caseQueue.getPriority(60165)); //27
    caseQueue.updatePriority(56569, 59919);
    caseQueue.insert(7659,32544);
    myResult.push_back(caseQueue.getPriority(56569)); //28
    caseQueue.insert(68131,92977);
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(93637, 36922);
    caseQueue.insert(67597,96281);
    caseQueue.insert(99124,20263);
    caseQueue.insert(69377,80926);
    caseQueue.updatePriority(58558, 5034);
    myResult.push_back(caseQueue.getPriority(56569)); //30
    caseQueue.insert(13653,24711);
    myResult.push_back(caseQueue.getPriority(72059)); //31
    caseQueue.updatePriority(93637, 95516);
    caseQueue.insert(79579,16938);
    myResult.push_back(caseQueue.getPriority(69377)); //32
    caseQueue.insert(28547,77417);
    myResult.push_back(caseQueue.getPriority(72059)); //33
    myResult.push_back(caseQueue.getPriority(28547)); //34
    myResult.push_back(caseQueue.getPriority(79579)); //35
    caseQueue.updatePriority(72059, 3781);
    caseQueue.insert(69760,98980);
    myResult.push_back(caseQueue.deleteMin()); //36
    myResult.push_back(caseQueue.getPriority(79579)); //37
    caseQueue.insert(65726,30254);
    caseQueue.insert(68622,11091);
    myResult.push_back(caseQueue.deleteMin()); //38
    caseQueue.insert(29251,22956);
    caseQueue.updatePriority(80029, 75729);
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(69377)); //40
    caseQueue.updatePriority(79579, 21698);
    myResult.push_back(caseQueue.deleteMin()); //41
    caseQueue.insert(32539,22186);
    caseQueue.insert(40267,33047);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(58699,17811);
    caseQueue.updatePriority(28547, 25567);
    caseQueue.insert(44256,50565);
    caseQueue.insert(9665,72413);
    myResult.push_back(caseQueue.getPriority(7659)); //43
    caseQueue.insert(91298,935);
    caseQueue.updatePriority(91298, 99338);
    caseQueue.updatePriority(7659, 47076);
    caseQueue.updatePriority(44256, 72524);
    myResult.push_back(caseQueue.getPriority(13653)); //44
    caseQueue.insert(87087,22061);
    caseQueue.insert(47342,20754);
    caseQueue.updatePriority(34586, 79745);
    caseQueue.insert(87378,75227);
    caseQueue.insert(2322,54864);
    caseQueue.updatePriority(58789, 42881);
    caseQueue.insert(52325,72547);
    myResult.push_back(caseQueue.deleteMin()); //45
    myResult.push_back(caseQueue.getPriority(58789)); //46
    myResult.push_back(caseQueue.getPriority(13653)); //47
    caseQueue.updatePriority(58789, 35956);
    caseQueue.insert(86007,36000);
    caseQueue.insert(80264,48639);
    caseQueue.updatePriority(29251, 94451);
    caseQueue.updatePriority(35267, 55462);
    myResult.push_back(caseQueue.getPriority(29251)); //48
    caseQueue.insert(63401,88096);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.insert(22481,14288);
    myResult.push_back(caseQueue.getPriority(79579)); //50
    myResult.push_back(caseQueue.deleteMin()); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    myResult.push_back(caseQueue.deleteMin()); //53
    myResult.push_back(caseQueue.getPriority(35267)); //54
    caseQueue.insert(76689,32251);
    myResult.push_back(caseQueue.getPriority(29251)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.deleteMin()); //57
    caseQueue.insert(46949,9417);
    caseQueue.updatePriority(68131, 83236);
    caseQueue.insert(21278,91537);
    myResult.push_back(caseQueue.deleteMin()); //58
    caseQueue.insert(81632,61555);
    caseQueue.insert(93896,9042);
    myResult.push_back(caseQueue.deleteMin()); //59
    myResult.push_back(caseQueue.deleteMin()); //60
    myResult.push_back(caseQueue.getPriority(93637)); //61
    myResult.push_back(caseQueue.deleteMin()); //62
    caseQueue.insert(39997,6294);
    myResult.push_back(caseQueue.getPriority(40267)); //63
    myResult.push_back(caseQueue.deleteMin()); //64
    caseQueue.insert(34438,12385);
    myResult.push_back(caseQueue.getPriority(80029)); //65
    caseQueue.insert(56038,73415);
    myResult.push_back(caseQueue.deleteMin()); //66
    caseQueue.updatePriority(91298, 21346);
    myResult.push_back(caseQueue.deleteMin()); //67
    caseQueue.insert(91123,86556);
    myResult.push_back(caseQueue.getPriority(44256)); //68
    caseQueue.insert(4250,20184);
    caseQueue.updatePriority(34586, 45888);
    myResult.push_back(caseQueue.getPriority(4250)); //69
    caseQueue.insert(3845,13551);
    myResult.push_back(caseQueue.getPriority(56569)); //70
    caseQueue.insert(58797,79469);
    caseQueue.insert(18456,33774);
    myResult.push_back(caseQueue.deleteMin()); //71
    myResult.push_back(caseQueue.deleteMin()); //72
    myResult.push_back(caseQueue.deleteMin()); //73
    myResult.push_back(caseQueue.getPriority(80264)); //74
    caseQueue.insert(72025,96127);
    caseQueue.insert(75363,24826);
    myResult.push_back(caseQueue.getPriority(93637)); //75
    myResult.push_back(caseQueue.getPriority(29251)); //76
    myResult.push_back(caseQueue.getPriority(18456)); //77
    myResult.push_back(caseQueue.getPriority(52325)); //78
    caseQueue.insert(14732,25884);
    caseQueue.updatePriority(80029, 38358);
    caseQueue.updatePriority(2322, 24130);
    myResult.push_back(caseQueue.getPriority(75363)); //79
    caseQueue.insert(55419,41220);
    caseQueue.insert(17663,63383);
    myResult.push_back(caseQueue.deleteMin()); //80
    caseQueue.insert(31024,83385);
    caseQueue.updatePriority(72025, 64722);
    caseQueue.insert(79065,15355);
    caseQueue.insert(39291,1538);
    myResult.push_back(caseQueue.getPriority(63401)); //81
    caseQueue.insert(56596,51918);
    caseQueue.updatePriority(18456, 89286);
    myResult.push_back(caseQueue.deleteMin()); //82
    caseQueue.insert(29748,79894);
    myResult.push_back(caseQueue.getPriority(81632)); //83
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.updatePriority(7659, 68885);
    caseQueue.insert(54959,11961);
    caseQueue.updatePriority(63401, 43315);
    myResult.push_back(caseQueue.getPriority(75363)); //85
    caseQueue.updatePriority(68131, 37197);
    myResult.push_back(caseQueue.getPriority(29748)); //86
    caseQueue.insert(67895,30194);
    static const int resultListArray[] = {98092, 98092, 98092, 93974, 98092, 98092, 40326, 39324, 6993, 20826, 9874, 91276, 96494, 96494, 90936, 21668, 91276, 93474, 80241, 91276, 91276, 428, 80241, 23081, 76052, 37734, 89415, 59919, 8336, 59919, 85331, 80926, 85331, 77417, 16938, 72059, 16938, 58558, 68622, 80926, 86443, 99124, 32544, 24711, 58699, 42881, 24711, 94451, 47342, 21698, 22481, 79579, 87087, 55462, 94451, 32539, 13653, 46949, 93896, 28547, 95516, 65726, 33047, 39997, 75729, 34438, 91298, 72524, 20184, 59919, 3845, 4250, 76689, 48639, 95516, 94451, 33774, 72547, 24826, 2322, 88096, 39291, 61555, 79065, 24826, 79894}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(249): Basarili" << endl;
    else cout << "Case(249): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

void case_250(){

    int ITEM_NOT_ON_QUEUE = -1;
    int QUEUE_EMPTY = -1;
    DynamicPriorityQueue<int,int> caseQueue(ITEM_NOT_ON_QUEUE,QUEUE_EMPTY, 235);

    vector<int> myResult; 
    caseQueue.insert(12849,98035);
    myResult.push_back(caseQueue.getPriority(12849)); //1
    caseQueue.updatePriority(12849, 33968);
    myResult.push_back(caseQueue.getPriority(12849)); //2
    caseQueue.insert(22957,74768);
    caseQueue.updatePriority(12849, 56676);
    caseQueue.insert(84052,93602);
    caseQueue.insert(16806,29891);
    caseQueue.insert(30676,66181);
    caseQueue.updatePriority(84052, 11432);
    myResult.push_back(caseQueue.deleteMin()); //3
    myResult.push_back(caseQueue.getPriority(16806)); //4
    myResult.push_back(caseQueue.getPriority(22957)); //5
    caseQueue.insert(9492,76509);
    caseQueue.updatePriority(30676, 57762);
    caseQueue.updatePriority(12849, 97020);
    caseQueue.insert(45155,95227);
    caseQueue.insert(73008,14116);
    caseQueue.insert(50565,78110);
    caseQueue.insert(20446,52319);
    caseQueue.updatePriority(16806, 52864);
    caseQueue.insert(75831,80556);
    caseQueue.updatePriority(9492, 2215);
    caseQueue.updatePriority(22957, 5170);
    caseQueue.insert(61258,7534);
    caseQueue.insert(79387,32150);
    caseQueue.insert(4997,44829);
    caseQueue.insert(27927,64504);
    myResult.push_back(caseQueue.getPriority(61258)); //6
    myResult.push_back(caseQueue.deleteMin()); //7
    myResult.push_back(caseQueue.deleteMin()); //8
    myResult.push_back(caseQueue.getPriority(61258)); //9
    caseQueue.updatePriority(20446, 20465);
    caseQueue.insert(82247,43636);
    caseQueue.insert(99799,647);
    caseQueue.insert(81543,9972);
    caseQueue.insert(35882,13187);
    myResult.push_back(caseQueue.getPriority(30676)); //10
    caseQueue.updatePriority(4997, 28467);
    caseQueue.insert(44117,68048);
    caseQueue.updatePriority(27927, 67384);
    caseQueue.updatePriority(50565, 64439);
    caseQueue.insert(83398,13498);
    myResult.push_back(caseQueue.getPriority(99799)); //11
    caseQueue.updatePriority(12849, 17230);
    caseQueue.updatePriority(12849, 67476);
    myResult.push_back(caseQueue.getPriority(4997)); //12
    caseQueue.insert(60313,35865);
    myResult.push_back(caseQueue.getPriority(73008)); //13
    caseQueue.insert(30644,44521);
    caseQueue.updatePriority(20446, 61127);
    myResult.push_back(caseQueue.deleteMin()); //14
    myResult.push_back(caseQueue.deleteMin()); //15
    caseQueue.updatePriority(82247, 66174);
    myResult.push_back(caseQueue.getPriority(73008)); //16
    caseQueue.insert(35512,66021);
    caseQueue.updatePriority(16806, 30757);
    caseQueue.insert(72475,7822);
    caseQueue.insert(69080,81324);
    caseQueue.insert(56254,88569);
    myResult.push_back(caseQueue.deleteMin()); //17
    caseQueue.updatePriority(20446, 58443);
    myResult.push_back(caseQueue.deleteMin()); //18
    myResult.push_back(caseQueue.deleteMin()); //19
    caseQueue.insert(97960,29867);
    caseQueue.insert(62643,85300);
    caseQueue.insert(14044,76409);
    myResult.push_back(caseQueue.deleteMin()); //20
    caseQueue.updatePriority(79387, 66247);
    caseQueue.insert(52446,72800);
    myResult.push_back(caseQueue.getPriority(12849)); //21
    myResult.push_back(caseQueue.getPriority(52446)); //22
    caseQueue.insert(41565,76000);
    caseQueue.updatePriority(14044, 72083);
    caseQueue.insert(34692,79126);
    caseQueue.insert(44118,61933);
    caseQueue.updatePriority(34692, 63274);
    caseQueue.updatePriority(30644, 12068);
    caseQueue.insert(61739,27382);
    myResult.push_back(caseQueue.deleteMin()); //23
    caseQueue.insert(76166,97100);
    caseQueue.insert(67690,32862);
    caseQueue.insert(34024,13539);
    caseQueue.insert(91261,51985);
    myResult.push_back(caseQueue.getPriority(16806)); //24
    caseQueue.insert(10328,77487);
    myResult.push_back(caseQueue.getPriority(97960)); //25
    caseQueue.insert(34034,39808);
    caseQueue.insert(1211,64920);
    myResult.push_back(caseQueue.getPriority(27927)); //26
    myResult.push_back(caseQueue.getPriority(34024)); //27
    caseQueue.updatePriority(61739, 50206);
    caseQueue.insert(40843,48840);
    caseQueue.updatePriority(82247, 55372);
    caseQueue.insert(14277,85818);
    caseQueue.insert(53353,91496);
    caseQueue.updatePriority(73008, 89432);
    caseQueue.insert(14782,90553);
    myResult.push_back(caseQueue.deleteMin()); //28
    myResult.push_back(caseQueue.deleteMin()); //29
    caseQueue.updatePriority(14782, 61307);
    caseQueue.insert(70880,97771);
    caseQueue.insert(3889,18203);
    caseQueue.insert(52063,73018);
    caseQueue.insert(1022,51171);
    myResult.push_back(caseQueue.getPriority(44117)); //30
    caseQueue.updatePriority(50565, 71349);
    caseQueue.updatePriority(27927, 9027);
    caseQueue.updatePriority(20446, 80567);
    caseQueue.insert(32035,3618);
    caseQueue.updatePriority(14782, 82090);
    myResult.push_back(caseQueue.deleteMin()); //31
    caseQueue.insert(67882,83612);
    caseQueue.insert(50632,21);
    myResult.push_back(caseQueue.deleteMin()); //32
    caseQueue.updatePriority(52446, 4870);
    caseQueue.updatePriority(34034, 89630);
    caseQueue.updatePriority(14782, 87995);
    caseQueue.insert(78381,15187);
    caseQueue.insert(96064,72414);
    myResult.push_back(caseQueue.deleteMin()); //33
    caseQueue.insert(47962,70640);
    caseQueue.insert(60838,44499);
    myResult.push_back(caseQueue.deleteMin()); //34
    caseQueue.updatePriority(75831, 6914);
    caseQueue.insert(11106,6262);
    myResult.push_back(caseQueue.getPriority(41565)); //35
    myResult.push_back(caseQueue.deleteMin()); //36
    caseQueue.insert(10584,79096);
    caseQueue.updatePriority(96064, 1907);
    myResult.push_back(caseQueue.deleteMin()); //37
    caseQueue.insert(97478,31897);
    caseQueue.insert(73090,62785);
    caseQueue.updatePriority(73008, 97729);
    myResult.push_back(caseQueue.getPriority(47962)); //38
    myResult.push_back(caseQueue.deleteMin()); //39
    myResult.push_back(caseQueue.getPriority(3889)); //40
    caseQueue.insert(78407,34956);
    myResult.push_back(caseQueue.getPriority(1211)); //41
    caseQueue.insert(73848,82894);
    myResult.push_back(caseQueue.deleteMin()); //42
    caseQueue.insert(27642,79327);
    caseQueue.insert(36445,46849);
    caseQueue.updatePriority(50565, 63615);
    myResult.push_back(caseQueue.deleteMin()); //43
    myResult.push_back(caseQueue.deleteMin()); //44
    myResult.push_back(caseQueue.deleteMin()); //45
    caseQueue.insert(24173,55464);
    myResult.push_back(caseQueue.getPriority(14044)); //46
    caseQueue.insert(25056,8822);
    myResult.push_back(caseQueue.deleteMin()); //47
    myResult.push_back(caseQueue.deleteMin()); //48
    caseQueue.insert(81543,46144);
    myResult.push_back(caseQueue.deleteMin()); //49
    caseQueue.updatePriority(30676, 51561);
    caseQueue.insert(46655,63971);
    caseQueue.insert(20144,25746);
    caseQueue.updatePriority(53353, 53954);
    caseQueue.updatePriority(76166, 29872);
    myResult.push_back(caseQueue.getPriority(12849)); //50
    caseQueue.updatePriority(10328, 42049);
    myResult.push_back(caseQueue.getPriority(61739)); //51
    myResult.push_back(caseQueue.deleteMin()); //52
    caseQueue.insert(97942,57884);
    myResult.push_back(caseQueue.getPriority(40843)); //53
    caseQueue.insert(99178,49347);
    myResult.push_back(caseQueue.deleteMin()); //54
    caseQueue.insert(73795,59916);
    myResult.push_back(caseQueue.getPriority(14044)); //55
    myResult.push_back(caseQueue.deleteMin()); //56
    myResult.push_back(caseQueue.getPriority(61739)); //57
    caseQueue.insert(72804,89203);
    myResult.push_back(caseQueue.getPriority(67882)); //58
    myResult.push_back(caseQueue.getPriority(41565)); //59
    myResult.push_back(caseQueue.getPriority(81543)); //60
    caseQueue.insert(67852,31526);
    caseQueue.insert(84417,35082);
    myResult.push_back(caseQueue.deleteMin()); //61
    myResult.push_back(caseQueue.getPriority(50565)); //62
    caseQueue.insert(55546,89933);
    myResult.push_back(caseQueue.getPriority(73090)); //63
    caseQueue.insert(91663,87727);
    caseQueue.updatePriority(45155, 54946);
    myResult.push_back(caseQueue.getPriority(46655)); //64
    myResult.push_back(caseQueue.deleteMin()); //65
    caseQueue.updatePriority(44117, 347);
    caseQueue.updatePriority(36445, 741);
    caseQueue.insert(51778,96415);
    myResult.push_back(caseQueue.getPriority(46655)); //66
    myResult.push_back(caseQueue.deleteMin()); //67
    myResult.push_back(caseQueue.getPriority(14277)); //68
    caseQueue.insert(91355,15388);
    caseQueue.updatePriority(81543, 34511);
    myResult.push_back(caseQueue.getPriority(10328)); //69
    caseQueue.updatePriority(56254, 26384);
    caseQueue.updatePriority(40843, 62151);
    caseQueue.insert(96194,39989);
    myResult.push_back(caseQueue.getPriority(14782)); //70
    myResult.push_back(caseQueue.getPriority(34034)); //71
    caseQueue.insert(73711,46254);
    caseQueue.updatePriority(79387, 33305);
    myResult.push_back(caseQueue.deleteMin()); //72
    caseQueue.insert(55112,18180);
    caseQueue.updatePriority(73711, 55025);
    caseQueue.insert(73205,13481);
    myResult.push_back(caseQueue.getPriority(96194)); //73
    myResult.push_back(caseQueue.getPriority(99178)); //74
    myResult.push_back(caseQueue.deleteMin()); //75
    caseQueue.insert(62584,44602);
    caseQueue.insert(75455,53238);
    caseQueue.insert(59284,61622);
    myResult.push_back(caseQueue.getPriority(62643)); //76
    myResult.push_back(caseQueue.getPriority(40843)); //77
    caseQueue.insert(44887,30995);
    myResult.push_back(caseQueue.getPriority(82247)); //78
    caseQueue.insert(10784,21163);
    caseQueue.insert(45936,60081);
    myResult.push_back(caseQueue.getPriority(73848)); //79
    myResult.push_back(caseQueue.deleteMin()); //80
    myResult.push_back(caseQueue.deleteMin()); //81
    caseQueue.updatePriority(20446, 44927);
    caseQueue.insert(65543,25435);
    caseQueue.updatePriority(97942, 5119);
    myResult.push_back(caseQueue.getPriority(1211)); //82
    myResult.push_back(caseQueue.deleteMin()); //83
    caseQueue.updatePriority(44118, 64695);
    myResult.push_back(caseQueue.deleteMin()); //84
    caseQueue.insert(77210,79435);
    myResult.push_back(caseQueue.getPriority(44118)); //85
    myResult.push_back(caseQueue.getPriority(61739)); //86
    caseQueue.insert(93952,11108);
    myResult.push_back(caseQueue.deleteMin()); //87
    caseQueue.updatePriority(91261, 56704);
    myResult.push_back(caseQueue.getPriority(62643)); //88
    caseQueue.insert(61289,18238);
    static const int resultListArray[] = {98035, 33968, 84052, 29891, 74768, 7534, 9492, 22957, 7534, 57762, 647, 28467, 14116, 99799, 61258, 14116, 72475, 81543, 35882, 83398, 67476, 72800, 30644, 30757, 29867, 67384, 13539, 34024, 4997, 68048, 32035, 50632, 52446, 27927, 76000, 11106, 96064, 70640, 75831, 18203, 64920, 78381, 3889, 97960, 16806, 72083, 25056, 97478, 67690, 67476, 50206, 20144, 48840, 76166, 72083, 78407, 50206, 83612, 76000, 46144, 67852, 63615, 62785, 63971, 84417, 63971, 44117, 85818, 42049, 87995, 89630, 36445, 39989, 49347, 73205, 85300, 62151, 55372, 82894, 91355, 55112, 64920, 97942, 10784, 64695, 50206, 93952, 85300}; 
    vector<int> resultList (resultListArray, resultListArray + sizeof(resultListArray) / sizeof(resultListArray[0]) );
    if(resultList == myResult) cout << "Case(250): Basarili" << endl;
    else cout << "Case(250): Hatali" << endl;
/*   int opCount = 1;
    std::vector<int>::iterator it;
    std::vector<int>::iterator it2;

    for(it = myResult.begin(), it2 = resultList.begin() ; it != myResult.end(); ++it, ++it2)
        std::cout << (*it) << " - " << (*it2) <<  " / Operation(" << opCount++ << ")" << endl;
*/
}

int main(int argc, char **argv) {
    case_1();
    case_2();
    case_3();
    case_4();
    case_5();
    case_6();
    case_7();
    case_8();
    case_9();
    case_10();
    case_11();
    case_12();
    case_13();
    case_14();
    case_15();
    case_16();
    case_17();
    case_18();
    case_19();
    case_20();
    case_21();
    case_22();
    case_23();
    case_24();
    case_25();
    case_26();
    case_27();
    case_28();
    case_29();
    case_30();
    case_31();
    case_32();
    case_33();
    case_34();
    case_35();
    case_36();
    case_37();
    case_38();
    case_39();
    case_40();
    case_41();
    case_42();
    case_43();
    case_44();
    case_45();
    case_46();
    case_47();
    case_48();
    case_49();
    case_50();
    case_51();
    case_52();
    case_53();
    case_54();
    case_55();
    case_56();
    case_57();
    case_58();
    case_59();
    case_60();
    case_61();
    case_62();
    case_63();
    case_64();
    case_65();
    case_66();
    case_67();
    case_68();
    case_69();
    case_70();
    case_71();
    case_72();
    case_73();
    case_74();
    case_75();
    case_76();
    case_77();
    case_78();
    case_79();
    case_80();
    case_81();
    case_82();
    case_83();
    case_84();
    case_85();
    case_86();
    case_87();
    case_88();
    case_89();
    case_90();
    case_91();
    case_92();
    case_93();
    case_94();
    case_95();
    case_96();
    case_97();
    case_98();
    case_99();
    case_100();
    case_101();
    case_102();
    case_103();
    case_104();
    case_105();
    case_106();
    case_107();
    case_108();
    case_109();
    case_110();
    case_111();
    case_112();
    case_113();
    case_114();
    case_115();
    case_116();
    case_117();
    case_118();
    case_119();
    case_120();
    case_121();
    case_122();
    case_123();
    case_124();
    case_125();
    case_126();
    case_127();
    case_128();
    case_129();
    case_130();
    case_131();
    case_132();
    case_133();
    case_134();
    case_135();
    case_136();
    case_137();
    case_138();
    case_139();
    case_140();
    case_141();
    case_142();
    case_143();
    case_144();
    case_145();
    case_146();
    case_147();
    case_148();
    case_149();
    case_150();
    case_151();
    case_152();
    case_153();
    case_154();
    case_155();
    case_156();
    case_157();
    case_158();
    case_159();
    case_160();
    case_161();
    case_162();
    case_163();
    case_164();
    case_165();
    case_166();
    case_167();
    case_168();
    case_169();
    case_170();
    case_171();
    case_172();
    case_173();
    case_174();
    case_175();
    case_176();
    case_177();
    case_178();
    case_179();
    case_180();
    case_181();
    case_182();
    case_183();
    case_184();
    case_185();
    case_186();
    case_187();
    case_188();
    case_189();
    case_190();
    case_191();
    case_192();
    case_193();
    case_194();
    case_195();
    case_196();
    case_197();
    case_198();
    case_199();
    case_200();
    case_201();
    case_202();
    case_203();
    case_204();
    case_205();
    case_206();
    case_207();
    case_208();
    case_209();
    case_210();
    case_211();
    case_212();
    case_213();
    case_214();
    case_215();
    case_216();
    case_217();
    case_218();
    case_219();
    case_220();
    case_221();
    case_222();
    case_223();
    case_224();
    case_225();
    case_226();
    case_227();
    case_228();
    case_229();
    case_230();
    case_231();
    case_232();
    case_233();
    case_234();
    case_235();
    case_236();
    case_237();
    case_238();
    case_239();
    case_240();
    case_241();
    case_242();
    case_243();
    case_244();
    case_245();
    case_246();
    case_247();
    case_248();
    case_249();
    case_250();
}
